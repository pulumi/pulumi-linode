// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNetworkingIps(ctx *pulumi.Context, args *GetNetworkingIpsArgs, opts ...pulumi.InvokeOption) (*GetNetworkingIpsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetworkingIpsResult
	err := ctx.Invoke("linode:index/getNetworkingIps:getNetworkingIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkingIps.
type GetNetworkingIpsArgs struct {
	Filters     []GetNetworkingIpsFilter    `pulumi:"filters"`
	IpAddresses []GetNetworkingIpsIpAddress `pulumi:"ipAddresses"`
	Order       *string                     `pulumi:"order"`
	OrderBy     *string                     `pulumi:"orderBy"`
}

// A collection of values returned by getNetworkingIps.
type GetNetworkingIpsResult struct {
	Filters     []GetNetworkingIpsFilter    `pulumi:"filters"`
	Id          string                      `pulumi:"id"`
	IpAddresses []GetNetworkingIpsIpAddress `pulumi:"ipAddresses"`
	Order       *string                     `pulumi:"order"`
	OrderBy     *string                     `pulumi:"orderBy"`
}

func GetNetworkingIpsOutput(ctx *pulumi.Context, args GetNetworkingIpsOutputArgs, opts ...pulumi.InvokeOption) GetNetworkingIpsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNetworkingIpsResultOutput, error) {
			args := v.(GetNetworkingIpsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("linode:index/getNetworkingIps:getNetworkingIps", args, GetNetworkingIpsResultOutput{}, options).(GetNetworkingIpsResultOutput), nil
		}).(GetNetworkingIpsResultOutput)
}

// A collection of arguments for invoking getNetworkingIps.
type GetNetworkingIpsOutputArgs struct {
	Filters     GetNetworkingIpsFilterArrayInput    `pulumi:"filters"`
	IpAddresses GetNetworkingIpsIpAddressArrayInput `pulumi:"ipAddresses"`
	Order       pulumi.StringPtrInput               `pulumi:"order"`
	OrderBy     pulumi.StringPtrInput               `pulumi:"orderBy"`
}

func (GetNetworkingIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkingIpsArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkingIps.
type GetNetworkingIpsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkingIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkingIpsResult)(nil)).Elem()
}

func (o GetNetworkingIpsResultOutput) ToGetNetworkingIpsResultOutput() GetNetworkingIpsResultOutput {
	return o
}

func (o GetNetworkingIpsResultOutput) ToGetNetworkingIpsResultOutputWithContext(ctx context.Context) GetNetworkingIpsResultOutput {
	return o
}

func (o GetNetworkingIpsResultOutput) Filters() GetNetworkingIpsFilterArrayOutput {
	return o.ApplyT(func(v GetNetworkingIpsResult) []GetNetworkingIpsFilter { return v.Filters }).(GetNetworkingIpsFilterArrayOutput)
}

func (o GetNetworkingIpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkingIpsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetworkingIpsResultOutput) IpAddresses() GetNetworkingIpsIpAddressArrayOutput {
	return o.ApplyT(func(v GetNetworkingIpsResult) []GetNetworkingIpsIpAddress { return v.IpAddresses }).(GetNetworkingIpsIpAddressArrayOutput)
}

func (o GetNetworkingIpsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkingIpsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o GetNetworkingIpsResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkingIpsResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkingIpsResultOutput{})
}
