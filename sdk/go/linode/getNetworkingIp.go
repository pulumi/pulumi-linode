// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information about a Linode Networking IP Address
// 
// ## Attributes
// 
// The Linode Network IP Address resource exports the following attributes:
// 
// * `address` - The IP address.
// 
// * `gateway` - The default gateway for this address.
// 
// * `subnet_mask` - The mask that separates host bits from network bits for this address.
// 
// * `prefix` - The number of bits set in the subnet mask.
// 
// * `type` - The type of address this is (ipv4, ipv6, ipv6/pool, ipv6/range).
// 
// * `public` - Whether this is a public or private IP address.
// 
// * `rdns` - The reverse DNS assigned to this address. For public IPv4 addresses, this will be set to a default value provided by Linode if not explicitly set.
// 
// * `linode_id` - The ID of the Linode this address currently belongs to.
// 
// * `region` - The Region this IP address resides in.
func LookupNetworkingIp(ctx *pulumi.Context, args *GetNetworkingIpArgs) (*GetNetworkingIpResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["address"] = args.Address
	}
	outputs, err := ctx.Invoke("linode:index/getNetworkingIp:getNetworkingIp", inputs)
	if err != nil {
		return nil, err
	}
	return &GetNetworkingIpResult{
		Address: outputs["address"],
		Gateway: outputs["gateway"],
		LinodeId: outputs["linodeId"],
		Prefix: outputs["prefix"],
		Public: outputs["public"],
		Rdns: outputs["rdns"],
		Region: outputs["region"],
		SubnetMask: outputs["subnetMask"],
		Type: outputs["type"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getNetworkingIp.
type GetNetworkingIpArgs struct {
	// The IP Address to access.  The address must be associated with the account and a resource that the user has access to view.
	Address interface{}
}

// A collection of values returned by getNetworkingIp.
type GetNetworkingIpResult struct {
	Address interface{}
	Gateway interface{}
	LinodeId interface{}
	Prefix interface{}
	Public interface{}
	Rdns interface{}
	Region interface{}
	SubnetMask interface{}
	Type interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
