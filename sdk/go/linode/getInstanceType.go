// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information about a Linode instance type
// 
// ## Attributes
// 
// The Linode Instance Type resource exports the following attributes:
// 
// * `id` - The ID representing the Linode Type
// 
// * `label` - The Linode Type's label is for display purposes only
// 
// * `class` - The class of the Linode Type
// 
// * `disk` - The Disk size, in MB, of the Linode Type
// 
// * `price.0.hourly` -  Cost (in US dollars) per hour.
// 
// * `price.0.monthly` - Cost (in US dollars) per month.
// 
// * `addons.0.backups.0.price.0.hourly` - The cost (in US dollars) per hour to add Backups service.
// 
// * `addons.0.backups.0.price.0.monthly` - The cost (in US dollars) per month to add Backups service.
func LookupInstanceType(ctx *pulumi.Context, args *GetInstanceTypeArgs) (*GetInstanceTypeResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["id"] = args.Id
		inputs["label"] = args.Label
	}
	outputs, err := ctx.Invoke("linode:index/getInstanceType:getInstanceType", inputs)
	if err != nil {
		return nil, err
	}
	return &GetInstanceTypeResult{
		Addons: outputs["addons"],
		Class: outputs["class"],
		Disk: outputs["disk"],
		Id: outputs["id"],
		Label: outputs["label"],
		Memory: outputs["memory"],
		NetworkOut: outputs["networkOut"],
		Price: outputs["price"],
		Transfer: outputs["transfer"],
		Vcpus: outputs["vcpus"],
	}, nil
}

// A collection of arguments for invoking getInstanceType.
type GetInstanceTypeArgs struct {
	// Label used to identify instance type
	Id interface{}
	Label interface{}
}

// A collection of values returned by getInstanceType.
type GetInstanceTypeResult struct {
	Addons interface{}
	Class interface{}
	Disk interface{}
	Id interface{}
	Label interface{}
	Memory interface{}
	NetworkOut interface{}
	Price interface{}
	Transfer interface{}
	Vcpus interface{}
}
