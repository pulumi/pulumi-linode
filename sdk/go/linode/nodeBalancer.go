// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package linode

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type NodeBalancer struct {
	pulumi.CustomResourceState

	// Throttle connections per second (0-20). Set to 0 (default) to disable throttling.
	ClientConnThrottle pulumi.IntPtrOutput `pulumi:"clientConnThrottle"`
	Created            pulumi.StringOutput `pulumi:"created"`
	// This NodeBalancer's hostname, ending with .nodebalancer.linode.com
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// The Public IPv4 Address of this NodeBalancer
	Ipv4 pulumi.StringOutput `pulumi:"ipv4"`
	// The Public IPv6 Address of this NodeBalancer
	Ipv6 pulumi.StringOutput `pulumi:"ipv6"`
	// The label of the Linode NodeBalancer
	Label pulumi.StringPtrOutput `pulumi:"label"`
	// The region where this NodeBalancer will be deployed.  Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.
	Region pulumi.StringOutput `pulumi:"region"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags     pulumi.StringArrayOutput   `pulumi:"tags"`
	Transfer NodeBalancerTransferOutput `pulumi:"transfer"`
	Updated  pulumi.StringOutput        `pulumi:"updated"`
}

// NewNodeBalancer registers a new resource with the given unique name, arguments, and options.
func NewNodeBalancer(ctx *pulumi.Context,
	name string, args *NodeBalancerArgs, opts ...pulumi.ResourceOption) (*NodeBalancer, error) {
	if args == nil || args.Region == nil {
		return nil, errors.New("missing required argument 'Region'")
	}
	if args == nil {
		args = &NodeBalancerArgs{}
	}
	var resource NodeBalancer
	err := ctx.RegisterResource("linode:index/nodeBalancer:NodeBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodeBalancer gets an existing NodeBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodeBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeBalancerState, opts ...pulumi.ResourceOption) (*NodeBalancer, error) {
	var resource NodeBalancer
	err := ctx.ReadResource("linode:index/nodeBalancer:NodeBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodeBalancer resources.
type nodeBalancerState struct {
	// Throttle connections per second (0-20). Set to 0 (default) to disable throttling.
	ClientConnThrottle *int    `pulumi:"clientConnThrottle"`
	Created            *string `pulumi:"created"`
	// This NodeBalancer's hostname, ending with .nodebalancer.linode.com
	Hostname *string `pulumi:"hostname"`
	// The Public IPv4 Address of this NodeBalancer
	Ipv4 *string `pulumi:"ipv4"`
	// The Public IPv6 Address of this NodeBalancer
	Ipv6 *string `pulumi:"ipv6"`
	// The label of the Linode NodeBalancer
	Label *string `pulumi:"label"`
	// The region where this NodeBalancer will be deployed.  Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.
	Region *string `pulumi:"region"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags     []string              `pulumi:"tags"`
	Transfer *NodeBalancerTransfer `pulumi:"transfer"`
	Updated  *string               `pulumi:"updated"`
}

type NodeBalancerState struct {
	// Throttle connections per second (0-20). Set to 0 (default) to disable throttling.
	ClientConnThrottle pulumi.IntPtrInput
	Created            pulumi.StringPtrInput
	// This NodeBalancer's hostname, ending with .nodebalancer.linode.com
	Hostname pulumi.StringPtrInput
	// The Public IPv4 Address of this NodeBalancer
	Ipv4 pulumi.StringPtrInput
	// The Public IPv6 Address of this NodeBalancer
	Ipv6 pulumi.StringPtrInput
	// The label of the Linode NodeBalancer
	Label pulumi.StringPtrInput
	// The region where this NodeBalancer will be deployed.  Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.
	Region pulumi.StringPtrInput
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags     pulumi.StringArrayInput
	Transfer NodeBalancerTransferPtrInput
	Updated  pulumi.StringPtrInput
}

func (NodeBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeBalancerState)(nil)).Elem()
}

type nodeBalancerArgs struct {
	// Throttle connections per second (0-20). Set to 0 (default) to disable throttling.
	ClientConnThrottle *int `pulumi:"clientConnThrottle"`
	// The label of the Linode NodeBalancer
	Label *string `pulumi:"label"`
	// The region where this NodeBalancer will be deployed.  Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.
	Region string `pulumi:"region"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a NodeBalancer resource.
type NodeBalancerArgs struct {
	// Throttle connections per second (0-20). Set to 0 (default) to disable throttling.
	ClientConnThrottle pulumi.IntPtrInput
	// The label of the Linode NodeBalancer
	Label pulumi.StringPtrInput
	// The region where this NodeBalancer will be deployed.  Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.
	Region pulumi.StringInput
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags pulumi.StringArrayInput
}

func (NodeBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeBalancerArgs)(nil)).Elem()
}
