// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallDeviceType struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId *int `pulumi:"entityId"`
	// The ID of the Firewall Device.
	Id *int `pulumi:"id"`
	// Used to identify this rule. For display purposes only.
	Label *string `pulumi:"label"`
	// The type of Firewall Device.
	Type *string `pulumi:"type"`
	Url  *string `pulumi:"url"`
}

// FirewallDeviceTypeInput is an input type that accepts FirewallDeviceTypeArgs and FirewallDeviceTypeOutput values.
// You can construct a concrete instance of `FirewallDeviceTypeInput` via:
//
//          FirewallDeviceTypeArgs{...}
type FirewallDeviceTypeInput interface {
	pulumi.Input

	ToFirewallDeviceTypeOutput() FirewallDeviceTypeOutput
	ToFirewallDeviceTypeOutputWithContext(context.Context) FirewallDeviceTypeOutput
}

type FirewallDeviceTypeArgs struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId pulumi.IntPtrInput `pulumi:"entityId"`
	// The ID of the Firewall Device.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Used to identify this rule. For display purposes only.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The type of Firewall Device.
	Type pulumi.StringPtrInput `pulumi:"type"`
	Url  pulumi.StringPtrInput `pulumi:"url"`
}

func (FirewallDeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDeviceType)(nil)).Elem()
}

func (i FirewallDeviceTypeArgs) ToFirewallDeviceTypeOutput() FirewallDeviceTypeOutput {
	return i.ToFirewallDeviceTypeOutputWithContext(context.Background())
}

func (i FirewallDeviceTypeArgs) ToFirewallDeviceTypeOutputWithContext(ctx context.Context) FirewallDeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDeviceTypeOutput)
}

// FirewallDeviceTypeArrayInput is an input type that accepts FirewallDeviceTypeArray and FirewallDeviceTypeArrayOutput values.
// You can construct a concrete instance of `FirewallDeviceTypeArrayInput` via:
//
//          FirewallDeviceTypeArray{ FirewallDeviceTypeArgs{...} }
type FirewallDeviceTypeArrayInput interface {
	pulumi.Input

	ToFirewallDeviceTypeArrayOutput() FirewallDeviceTypeArrayOutput
	ToFirewallDeviceTypeArrayOutputWithContext(context.Context) FirewallDeviceTypeArrayOutput
}

type FirewallDeviceTypeArray []FirewallDeviceTypeInput

func (FirewallDeviceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDeviceType)(nil)).Elem()
}

func (i FirewallDeviceTypeArray) ToFirewallDeviceTypeArrayOutput() FirewallDeviceTypeArrayOutput {
	return i.ToFirewallDeviceTypeArrayOutputWithContext(context.Background())
}

func (i FirewallDeviceTypeArray) ToFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) FirewallDeviceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDeviceTypeArrayOutput)
}

type FirewallDeviceTypeOutput struct{ *pulumi.OutputState }

func (FirewallDeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDeviceType)(nil)).Elem()
}

func (o FirewallDeviceTypeOutput) ToFirewallDeviceTypeOutput() FirewallDeviceTypeOutput {
	return o
}

func (o FirewallDeviceTypeOutput) ToFirewallDeviceTypeOutputWithContext(ctx context.Context) FirewallDeviceTypeOutput {
	return o
}

// The ID of the underlying entity this device references (i.e. the Linode's ID).
func (o FirewallDeviceTypeOutput) EntityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *int { return v.EntityId }).(pulumi.IntPtrOutput)
}

// The ID of the Firewall Device.
func (o FirewallDeviceTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Used to identify this rule. For display purposes only.
func (o FirewallDeviceTypeOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of Firewall Device.
func (o FirewallDeviceTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o FirewallDeviceTypeOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type FirewallDeviceTypeArrayOutput struct{ *pulumi.OutputState }

func (FirewallDeviceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDeviceType)(nil)).Elem()
}

func (o FirewallDeviceTypeArrayOutput) ToFirewallDeviceTypeArrayOutput() FirewallDeviceTypeArrayOutput {
	return o
}

func (o FirewallDeviceTypeArrayOutput) ToFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) FirewallDeviceTypeArrayOutput {
	return o
}

func (o FirewallDeviceTypeArrayOutput) Index(i pulumi.IntInput) FirewallDeviceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDeviceType {
		return vs[0].([]FirewallDeviceType)[vs[1].(int)]
	}).(FirewallDeviceTypeOutput)
}

type FirewallInbound struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s []string `pulumi:"ipv6s"`
	// Used to identify this rule. For display purposes only.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports *string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// FirewallInboundInput is an input type that accepts FirewallInboundArgs and FirewallInboundOutput values.
// You can construct a concrete instance of `FirewallInboundInput` via:
//
//          FirewallInboundArgs{...}
type FirewallInboundInput interface {
	pulumi.Input

	ToFirewallInboundOutput() FirewallInboundOutput
	ToFirewallInboundOutputWithContext(context.Context) FirewallInboundOutput
}

type FirewallInboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// Used to identify this rule. For display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (FirewallInboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInbound)(nil)).Elem()
}

func (i FirewallInboundArgs) ToFirewallInboundOutput() FirewallInboundOutput {
	return i.ToFirewallInboundOutputWithContext(context.Background())
}

func (i FirewallInboundArgs) ToFirewallInboundOutputWithContext(ctx context.Context) FirewallInboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundOutput)
}

// FirewallInboundArrayInput is an input type that accepts FirewallInboundArray and FirewallInboundArrayOutput values.
// You can construct a concrete instance of `FirewallInboundArrayInput` via:
//
//          FirewallInboundArray{ FirewallInboundArgs{...} }
type FirewallInboundArrayInput interface {
	pulumi.Input

	ToFirewallInboundArrayOutput() FirewallInboundArrayOutput
	ToFirewallInboundArrayOutputWithContext(context.Context) FirewallInboundArrayOutput
}

type FirewallInboundArray []FirewallInboundInput

func (FirewallInboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInbound)(nil)).Elem()
}

func (i FirewallInboundArray) ToFirewallInboundArrayOutput() FirewallInboundArrayOutput {
	return i.ToFirewallInboundArrayOutputWithContext(context.Background())
}

func (i FirewallInboundArray) ToFirewallInboundArrayOutputWithContext(ctx context.Context) FirewallInboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundArrayOutput)
}

type FirewallInboundOutput struct{ *pulumi.OutputState }

func (FirewallInboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInbound)(nil)).Elem()
}

func (o FirewallInboundOutput) ToFirewallInboundOutput() FirewallInboundOutput {
	return o
}

func (o FirewallInboundOutput) ToFirewallInboundOutputWithContext(ctx context.Context) FirewallInboundOutput {
	return o
}

// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o FirewallInboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask format.
func (o FirewallInboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask format.
func (o FirewallInboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// Used to identify this rule. For display purposes only.
func (o FirewallInboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o FirewallInboundOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInbound) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o FirewallInboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type FirewallInboundArrayOutput struct{ *pulumi.OutputState }

func (FirewallInboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInbound)(nil)).Elem()
}

func (o FirewallInboundArrayOutput) ToFirewallInboundArrayOutput() FirewallInboundArrayOutput {
	return o
}

func (o FirewallInboundArrayOutput) ToFirewallInboundArrayOutputWithContext(ctx context.Context) FirewallInboundArrayOutput {
	return o
}

func (o FirewallInboundArrayOutput) Index(i pulumi.IntInput) FirewallInboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInbound {
		return vs[0].([]FirewallInbound)[vs[1].(int)]
	}).(FirewallInboundOutput)
}

type FirewallOutbound struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s []string `pulumi:"ipv6s"`
	// Used to identify this rule. For display purposes only.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports *string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// FirewallOutboundInput is an input type that accepts FirewallOutboundArgs and FirewallOutboundOutput values.
// You can construct a concrete instance of `FirewallOutboundInput` via:
//
//          FirewallOutboundArgs{...}
type FirewallOutboundInput interface {
	pulumi.Input

	ToFirewallOutboundOutput() FirewallOutboundOutput
	ToFirewallOutboundOutputWithContext(context.Context) FirewallOutboundOutput
}

type FirewallOutboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// Used to identify this rule. For display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (FirewallOutboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutbound)(nil)).Elem()
}

func (i FirewallOutboundArgs) ToFirewallOutboundOutput() FirewallOutboundOutput {
	return i.ToFirewallOutboundOutputWithContext(context.Background())
}

func (i FirewallOutboundArgs) ToFirewallOutboundOutputWithContext(ctx context.Context) FirewallOutboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundOutput)
}

// FirewallOutboundArrayInput is an input type that accepts FirewallOutboundArray and FirewallOutboundArrayOutput values.
// You can construct a concrete instance of `FirewallOutboundArrayInput` via:
//
//          FirewallOutboundArray{ FirewallOutboundArgs{...} }
type FirewallOutboundArrayInput interface {
	pulumi.Input

	ToFirewallOutboundArrayOutput() FirewallOutboundArrayOutput
	ToFirewallOutboundArrayOutputWithContext(context.Context) FirewallOutboundArrayOutput
}

type FirewallOutboundArray []FirewallOutboundInput

func (FirewallOutboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutbound)(nil)).Elem()
}

func (i FirewallOutboundArray) ToFirewallOutboundArrayOutput() FirewallOutboundArrayOutput {
	return i.ToFirewallOutboundArrayOutputWithContext(context.Background())
}

func (i FirewallOutboundArray) ToFirewallOutboundArrayOutputWithContext(ctx context.Context) FirewallOutboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundArrayOutput)
}

type FirewallOutboundOutput struct{ *pulumi.OutputState }

func (FirewallOutboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutbound)(nil)).Elem()
}

func (o FirewallOutboundOutput) ToFirewallOutboundOutput() FirewallOutboundOutput {
	return o
}

func (o FirewallOutboundOutput) ToFirewallOutboundOutputWithContext(ctx context.Context) FirewallOutboundOutput {
	return o
}

// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o FirewallOutboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask format.
func (o FirewallOutboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask format.
func (o FirewallOutboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// Used to identify this rule. For display purposes only.
func (o FirewallOutboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o FirewallOutboundOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallOutbound) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o FirewallOutboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type FirewallOutboundArrayOutput struct{ *pulumi.OutputState }

func (FirewallOutboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutbound)(nil)).Elem()
}

func (o FirewallOutboundArrayOutput) ToFirewallOutboundArrayOutput() FirewallOutboundArrayOutput {
	return o
}

func (o FirewallOutboundArrayOutput) ToFirewallOutboundArrayOutputWithContext(ctx context.Context) FirewallOutboundArrayOutput {
	return o
}

func (o FirewallOutboundArrayOutput) Index(i pulumi.IntInput) FirewallOutboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallOutbound {
		return vs[0].([]FirewallOutbound)[vs[1].(int)]
	}).(FirewallOutboundOutput)
}

type InstanceAlerts struct {
	Cpu           *int `pulumi:"cpu"`
	Io            *int `pulumi:"io"`
	NetworkIn     *int `pulumi:"networkIn"`
	NetworkOut    *int `pulumi:"networkOut"`
	TransferQuota *int `pulumi:"transferQuota"`
}

// InstanceAlertsInput is an input type that accepts InstanceAlertsArgs and InstanceAlertsOutput values.
// You can construct a concrete instance of `InstanceAlertsInput` via:
//
//          InstanceAlertsArgs{...}
type InstanceAlertsInput interface {
	pulumi.Input

	ToInstanceAlertsOutput() InstanceAlertsOutput
	ToInstanceAlertsOutputWithContext(context.Context) InstanceAlertsOutput
}

type InstanceAlertsArgs struct {
	Cpu           pulumi.IntPtrInput `pulumi:"cpu"`
	Io            pulumi.IntPtrInput `pulumi:"io"`
	NetworkIn     pulumi.IntPtrInput `pulumi:"networkIn"`
	NetworkOut    pulumi.IntPtrInput `pulumi:"networkOut"`
	TransferQuota pulumi.IntPtrInput `pulumi:"transferQuota"`
}

func (InstanceAlertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAlerts)(nil)).Elem()
}

func (i InstanceAlertsArgs) ToInstanceAlertsOutput() InstanceAlertsOutput {
	return i.ToInstanceAlertsOutputWithContext(context.Background())
}

func (i InstanceAlertsArgs) ToInstanceAlertsOutputWithContext(ctx context.Context) InstanceAlertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAlertsOutput)
}

func (i InstanceAlertsArgs) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return i.ToInstanceAlertsPtrOutputWithContext(context.Background())
}

func (i InstanceAlertsArgs) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAlertsOutput).ToInstanceAlertsPtrOutputWithContext(ctx)
}

// InstanceAlertsPtrInput is an input type that accepts InstanceAlertsArgs, InstanceAlertsPtr and InstanceAlertsPtrOutput values.
// You can construct a concrete instance of `InstanceAlertsPtrInput` via:
//
//          InstanceAlertsArgs{...}
//
//  or:
//
//          nil
type InstanceAlertsPtrInput interface {
	pulumi.Input

	ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput
	ToInstanceAlertsPtrOutputWithContext(context.Context) InstanceAlertsPtrOutput
}

type instanceAlertsPtrType InstanceAlertsArgs

func InstanceAlertsPtr(v *InstanceAlertsArgs) InstanceAlertsPtrInput {
	return (*instanceAlertsPtrType)(v)
}

func (*instanceAlertsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAlerts)(nil)).Elem()
}

func (i *instanceAlertsPtrType) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return i.ToInstanceAlertsPtrOutputWithContext(context.Background())
}

func (i *instanceAlertsPtrType) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAlertsPtrOutput)
}

type InstanceAlertsOutput struct{ *pulumi.OutputState }

func (InstanceAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAlerts)(nil)).Elem()
}

func (o InstanceAlertsOutput) ToInstanceAlertsOutput() InstanceAlertsOutput {
	return o
}

func (o InstanceAlertsOutput) ToInstanceAlertsOutputWithContext(ctx context.Context) InstanceAlertsOutput {
	return o
}

func (o InstanceAlertsOutput) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return o.ToInstanceAlertsPtrOutputWithContext(context.Background())
}

func (o InstanceAlertsOutput) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAlerts) *InstanceAlerts {
		return &v
	}).(InstanceAlertsPtrOutput)
}

func (o InstanceAlertsOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) Io() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.Io }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) NetworkIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.NetworkIn }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) NetworkOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.NetworkOut }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) TransferQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.TransferQuota }).(pulumi.IntPtrOutput)
}

type InstanceAlertsPtrOutput struct{ *pulumi.OutputState }

func (InstanceAlertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAlerts)(nil)).Elem()
}

func (o InstanceAlertsPtrOutput) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return o
}

func (o InstanceAlertsPtrOutput) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return o
}

func (o InstanceAlertsPtrOutput) Elem() InstanceAlertsOutput {
	return o.ApplyT(func(v *InstanceAlerts) InstanceAlerts {
		if v != nil {
			return *v
		}
		var ret InstanceAlerts
		return ret
	}).(InstanceAlertsOutput)
}

func (o InstanceAlertsPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) Io() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.Io
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) NetworkIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.NetworkIn
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) NetworkOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.NetworkOut
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) TransferQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.TransferQuota
	}).(pulumi.IntPtrOutput)
}

type InstanceBackups struct {
	Enabled  *bool                    `pulumi:"enabled"`
	Schedule *InstanceBackupsSchedule `pulumi:"schedule"`
}

// InstanceBackupsInput is an input type that accepts InstanceBackupsArgs and InstanceBackupsOutput values.
// You can construct a concrete instance of `InstanceBackupsInput` via:
//
//          InstanceBackupsArgs{...}
type InstanceBackupsInput interface {
	pulumi.Input

	ToInstanceBackupsOutput() InstanceBackupsOutput
	ToInstanceBackupsOutputWithContext(context.Context) InstanceBackupsOutput
}

type InstanceBackupsArgs struct {
	Enabled  pulumi.BoolPtrInput             `pulumi:"enabled"`
	Schedule InstanceBackupsSchedulePtrInput `pulumi:"schedule"`
}

func (InstanceBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackups)(nil)).Elem()
}

func (i InstanceBackupsArgs) ToInstanceBackupsOutput() InstanceBackupsOutput {
	return i.ToInstanceBackupsOutputWithContext(context.Background())
}

func (i InstanceBackupsArgs) ToInstanceBackupsOutputWithContext(ctx context.Context) InstanceBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsOutput)
}

func (i InstanceBackupsArgs) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return i.ToInstanceBackupsPtrOutputWithContext(context.Background())
}

func (i InstanceBackupsArgs) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsOutput).ToInstanceBackupsPtrOutputWithContext(ctx)
}

// InstanceBackupsPtrInput is an input type that accepts InstanceBackupsArgs, InstanceBackupsPtr and InstanceBackupsPtrOutput values.
// You can construct a concrete instance of `InstanceBackupsPtrInput` via:
//
//          InstanceBackupsArgs{...}
//
//  or:
//
//          nil
type InstanceBackupsPtrInput interface {
	pulumi.Input

	ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput
	ToInstanceBackupsPtrOutputWithContext(context.Context) InstanceBackupsPtrOutput
}

type instanceBackupsPtrType InstanceBackupsArgs

func InstanceBackupsPtr(v *InstanceBackupsArgs) InstanceBackupsPtrInput {
	return (*instanceBackupsPtrType)(v)
}

func (*instanceBackupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackups)(nil)).Elem()
}

func (i *instanceBackupsPtrType) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return i.ToInstanceBackupsPtrOutputWithContext(context.Background())
}

func (i *instanceBackupsPtrType) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsPtrOutput)
}

type InstanceBackupsOutput struct{ *pulumi.OutputState }

func (InstanceBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackups)(nil)).Elem()
}

func (o InstanceBackupsOutput) ToInstanceBackupsOutput() InstanceBackupsOutput {
	return o
}

func (o InstanceBackupsOutput) ToInstanceBackupsOutputWithContext(ctx context.Context) InstanceBackupsOutput {
	return o
}

func (o InstanceBackupsOutput) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return o.ToInstanceBackupsPtrOutputWithContext(context.Background())
}

func (o InstanceBackupsOutput) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackups) *InstanceBackups {
		return &v
	}).(InstanceBackupsPtrOutput)
}

func (o InstanceBackupsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceBackups) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceBackupsOutput) Schedule() InstanceBackupsSchedulePtrOutput {
	return o.ApplyT(func(v InstanceBackups) *InstanceBackupsSchedule { return v.Schedule }).(InstanceBackupsSchedulePtrOutput)
}

type InstanceBackupsPtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackups)(nil)).Elem()
}

func (o InstanceBackupsPtrOutput) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return o
}

func (o InstanceBackupsPtrOutput) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return o
}

func (o InstanceBackupsPtrOutput) Elem() InstanceBackupsOutput {
	return o.ApplyT(func(v *InstanceBackups) InstanceBackups {
		if v != nil {
			return *v
		}
		var ret InstanceBackups
		return ret
	}).(InstanceBackupsOutput)
}

func (o InstanceBackupsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceBackups) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceBackupsPtrOutput) Schedule() InstanceBackupsSchedulePtrOutput {
	return o.ApplyT(func(v *InstanceBackups) *InstanceBackupsSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(InstanceBackupsSchedulePtrOutput)
}

type InstanceBackupsSchedule struct {
	Day    *string `pulumi:"day"`
	Window *string `pulumi:"window"`
}

// InstanceBackupsScheduleInput is an input type that accepts InstanceBackupsScheduleArgs and InstanceBackupsScheduleOutput values.
// You can construct a concrete instance of `InstanceBackupsScheduleInput` via:
//
//          InstanceBackupsScheduleArgs{...}
type InstanceBackupsScheduleInput interface {
	pulumi.Input

	ToInstanceBackupsScheduleOutput() InstanceBackupsScheduleOutput
	ToInstanceBackupsScheduleOutputWithContext(context.Context) InstanceBackupsScheduleOutput
}

type InstanceBackupsScheduleArgs struct {
	Day    pulumi.StringPtrInput `pulumi:"day"`
	Window pulumi.StringPtrInput `pulumi:"window"`
}

func (InstanceBackupsScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupsSchedule)(nil)).Elem()
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsScheduleOutput() InstanceBackupsScheduleOutput {
	return i.ToInstanceBackupsScheduleOutputWithContext(context.Background())
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsScheduleOutputWithContext(ctx context.Context) InstanceBackupsScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsScheduleOutput)
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return i.ToInstanceBackupsSchedulePtrOutputWithContext(context.Background())
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsScheduleOutput).ToInstanceBackupsSchedulePtrOutputWithContext(ctx)
}

// InstanceBackupsSchedulePtrInput is an input type that accepts InstanceBackupsScheduleArgs, InstanceBackupsSchedulePtr and InstanceBackupsSchedulePtrOutput values.
// You can construct a concrete instance of `InstanceBackupsSchedulePtrInput` via:
//
//          InstanceBackupsScheduleArgs{...}
//
//  or:
//
//          nil
type InstanceBackupsSchedulePtrInput interface {
	pulumi.Input

	ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput
	ToInstanceBackupsSchedulePtrOutputWithContext(context.Context) InstanceBackupsSchedulePtrOutput
}

type instanceBackupsSchedulePtrType InstanceBackupsScheduleArgs

func InstanceBackupsSchedulePtr(v *InstanceBackupsScheduleArgs) InstanceBackupsSchedulePtrInput {
	return (*instanceBackupsSchedulePtrType)(v)
}

func (*instanceBackupsSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupsSchedule)(nil)).Elem()
}

func (i *instanceBackupsSchedulePtrType) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return i.ToInstanceBackupsSchedulePtrOutputWithContext(context.Background())
}

func (i *instanceBackupsSchedulePtrType) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsSchedulePtrOutput)
}

type InstanceBackupsScheduleOutput struct{ *pulumi.OutputState }

func (InstanceBackupsScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupsSchedule)(nil)).Elem()
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsScheduleOutput() InstanceBackupsScheduleOutput {
	return o
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsScheduleOutputWithContext(ctx context.Context) InstanceBackupsScheduleOutput {
	return o
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return o.ToInstanceBackupsSchedulePtrOutputWithContext(context.Background())
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackupsSchedule) *InstanceBackupsSchedule {
		return &v
	}).(InstanceBackupsSchedulePtrOutput)
}

func (o InstanceBackupsScheduleOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupsSchedule) *string { return v.Day }).(pulumi.StringPtrOutput)
}

func (o InstanceBackupsScheduleOutput) Window() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupsSchedule) *string { return v.Window }).(pulumi.StringPtrOutput)
}

type InstanceBackupsSchedulePtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupsSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupsSchedule)(nil)).Elem()
}

func (o InstanceBackupsSchedulePtrOutput) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return o
}

func (o InstanceBackupsSchedulePtrOutput) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return o
}

func (o InstanceBackupsSchedulePtrOutput) Elem() InstanceBackupsScheduleOutput {
	return o.ApplyT(func(v *InstanceBackupsSchedule) InstanceBackupsSchedule {
		if v != nil {
			return *v
		}
		var ret InstanceBackupsSchedule
		return ret
	}).(InstanceBackupsScheduleOutput)
}

func (o InstanceBackupsSchedulePtrOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupsSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.StringPtrOutput)
}

func (o InstanceBackupsSchedulePtrOutput) Window() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupsSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.StringPtrOutput)
}

type InstanceConfig struct {
	// - Arbitrary user comments about this `config`.
	Comments *string `pulumi:"comments"`
	// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
	Devices *InstanceConfigDevices `pulumi:"devices"`
	// Helpers enabled when booting to this Linode Config.
	Helpers    *InstanceConfigHelpers    `pulumi:"helpers"`
	Interfaces []InstanceConfigInterface `pulumi:"interfaces"`
	// - A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
	Kernel *string `pulumi:"kernel"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label string `pulumi:"label"`
	// - Defaults to the total RAM of the Linode
	MemoryLimit *int `pulumi:"memoryLimit"`
	// - The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
	RootDevice *string `pulumi:"rootDevice"`
	// - Defines the state of your Linode after booting. Defaults to `"default"`.
	RunLevel *string `pulumi:"runLevel"`
	// - Controls the virtualization mode. Defaults to `"paravirt"`.
	VirtMode *string `pulumi:"virtMode"`
}

// InstanceConfigInput is an input type that accepts InstanceConfigArgs and InstanceConfigOutput values.
// You can construct a concrete instance of `InstanceConfigInput` via:
//
//          InstanceConfigArgs{...}
type InstanceConfigInput interface {
	pulumi.Input

	ToInstanceConfigOutput() InstanceConfigOutput
	ToInstanceConfigOutputWithContext(context.Context) InstanceConfigOutput
}

type InstanceConfigArgs struct {
	// - Arbitrary user comments about this `config`.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
	Devices InstanceConfigDevicesPtrInput `pulumi:"devices"`
	// Helpers enabled when booting to this Linode Config.
	Helpers    InstanceConfigHelpersPtrInput     `pulumi:"helpers"`
	Interfaces InstanceConfigInterfaceArrayInput `pulumi:"interfaces"`
	// - A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
	Kernel pulumi.StringPtrInput `pulumi:"kernel"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label pulumi.StringInput `pulumi:"label"`
	// - Defaults to the total RAM of the Linode
	MemoryLimit pulumi.IntPtrInput `pulumi:"memoryLimit"`
	// - The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
	RootDevice pulumi.StringPtrInput `pulumi:"rootDevice"`
	// - Defines the state of your Linode after booting. Defaults to `"default"`.
	RunLevel pulumi.StringPtrInput `pulumi:"runLevel"`
	// - Controls the virtualization mode. Defaults to `"paravirt"`.
	VirtMode pulumi.StringPtrInput `pulumi:"virtMode"`
}

func (InstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArgs) ToInstanceConfigOutput() InstanceConfigOutput {
	return i.ToInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput)
}

// InstanceConfigArrayInput is an input type that accepts InstanceConfigArray and InstanceConfigArrayOutput values.
// You can construct a concrete instance of `InstanceConfigArrayInput` via:
//
//          InstanceConfigArray{ InstanceConfigArgs{...} }
type InstanceConfigArrayInput interface {
	pulumi.Input

	ToInstanceConfigArrayOutput() InstanceConfigArrayOutput
	ToInstanceConfigArrayOutputWithContext(context.Context) InstanceConfigArrayOutput
}

type InstanceConfigArray []InstanceConfigInput

func (InstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArray) ToInstanceConfigArrayOutput() InstanceConfigArrayOutput {
	return i.ToInstanceConfigArrayOutputWithContext(context.Background())
}

func (i InstanceConfigArray) ToInstanceConfigArrayOutputWithContext(ctx context.Context) InstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigArrayOutput)
}

type InstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigOutput) ToInstanceConfigOutput() InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return o
}

// - Arbitrary user comments about this `config`.
func (o InstanceConfigOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
func (o InstanceConfigOutput) Devices() InstanceConfigDevicesPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *InstanceConfigDevices { return v.Devices }).(InstanceConfigDevicesPtrOutput)
}

// Helpers enabled when booting to this Linode Config.
func (o InstanceConfigOutput) Helpers() InstanceConfigHelpersPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *InstanceConfigHelpers { return v.Helpers }).(InstanceConfigHelpersPtrOutput)
}

func (o InstanceConfigOutput) Interfaces() InstanceConfigInterfaceArrayOutput {
	return o.ApplyT(func(v InstanceConfig) []InstanceConfigInterface { return v.Interfaces }).(InstanceConfigInterfaceArrayOutput)
}

// - A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
func (o InstanceConfigOutput) Kernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.Kernel }).(pulumi.StringPtrOutput)
}

// The name of this interface. If the interface is a VLAN, a label is required.
func (o InstanceConfigOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceConfig) string { return v.Label }).(pulumi.StringOutput)
}

// - Defaults to the total RAM of the Linode
func (o InstanceConfigOutput) MemoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *int { return v.MemoryLimit }).(pulumi.IntPtrOutput)
}

// - The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
func (o InstanceConfigOutput) RootDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.RootDevice }).(pulumi.StringPtrOutput)
}

// - Defines the state of your Linode after booting. Defaults to `"default"`.
func (o InstanceConfigOutput) RunLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.RunLevel }).(pulumi.StringPtrOutput)
}

// - Controls the virtualization mode. Defaults to `"paravirt"`.
func (o InstanceConfigOutput) VirtMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.VirtMode }).(pulumi.StringPtrOutput)
}

type InstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigArrayOutput) ToInstanceConfigArrayOutput() InstanceConfigArrayOutput {
	return o
}

func (o InstanceConfigArrayOutput) ToInstanceConfigArrayOutputWithContext(ctx context.Context) InstanceConfigArrayOutput {
	return o
}

func (o InstanceConfigArrayOutput) Index(i pulumi.IntInput) InstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceConfig {
		return vs[0].([]InstanceConfig)[vs[1].(int)]
	}).(InstanceConfigOutput)
}

type InstanceConfigDevices struct {
	// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
	Sda *InstanceConfigDevicesSda `pulumi:"sda"`
	Sdb *InstanceConfigDevicesSdb `pulumi:"sdb"`
	Sdc *InstanceConfigDevicesSdc `pulumi:"sdc"`
	Sdd *InstanceConfigDevicesSdd `pulumi:"sdd"`
	Sde *InstanceConfigDevicesSde `pulumi:"sde"`
	Sdf *InstanceConfigDevicesSdf `pulumi:"sdf"`
	Sdg *InstanceConfigDevicesSdg `pulumi:"sdg"`
	Sdh *InstanceConfigDevicesSdh `pulumi:"sdh"`
}

// InstanceConfigDevicesInput is an input type that accepts InstanceConfigDevicesArgs and InstanceConfigDevicesOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesInput` via:
//
//          InstanceConfigDevicesArgs{...}
type InstanceConfigDevicesInput interface {
	pulumi.Input

	ToInstanceConfigDevicesOutput() InstanceConfigDevicesOutput
	ToInstanceConfigDevicesOutputWithContext(context.Context) InstanceConfigDevicesOutput
}

type InstanceConfigDevicesArgs struct {
	// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
	Sda InstanceConfigDevicesSdaPtrInput `pulumi:"sda"`
	Sdb InstanceConfigDevicesSdbPtrInput `pulumi:"sdb"`
	Sdc InstanceConfigDevicesSdcPtrInput `pulumi:"sdc"`
	Sdd InstanceConfigDevicesSddPtrInput `pulumi:"sdd"`
	Sde InstanceConfigDevicesSdePtrInput `pulumi:"sde"`
	Sdf InstanceConfigDevicesSdfPtrInput `pulumi:"sdf"`
	Sdg InstanceConfigDevicesSdgPtrInput `pulumi:"sdg"`
	Sdh InstanceConfigDevicesSdhPtrInput `pulumi:"sdh"`
}

func (InstanceConfigDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevices)(nil)).Elem()
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesOutput() InstanceConfigDevicesOutput {
	return i.ToInstanceConfigDevicesOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesOutputWithContext(ctx context.Context) InstanceConfigDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesOutput)
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return i.ToInstanceConfigDevicesPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesOutput).ToInstanceConfigDevicesPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesPtrInput is an input type that accepts InstanceConfigDevicesArgs, InstanceConfigDevicesPtr and InstanceConfigDevicesPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesPtrInput` via:
//
//          InstanceConfigDevicesArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput
	ToInstanceConfigDevicesPtrOutputWithContext(context.Context) InstanceConfigDevicesPtrOutput
}

type instanceConfigDevicesPtrType InstanceConfigDevicesArgs

func InstanceConfigDevicesPtr(v *InstanceConfigDevicesArgs) InstanceConfigDevicesPtrInput {
	return (*instanceConfigDevicesPtrType)(v)
}

func (*instanceConfigDevicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevices)(nil)).Elem()
}

func (i *instanceConfigDevicesPtrType) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return i.ToInstanceConfigDevicesPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesPtrType) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesPtrOutput)
}

type InstanceConfigDevicesOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevices)(nil)).Elem()
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesOutput() InstanceConfigDevicesOutput {
	return o
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesOutputWithContext(ctx context.Context) InstanceConfigDevicesOutput {
	return o
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return o.ToInstanceConfigDevicesPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevices) *InstanceConfigDevices {
		return &v
	}).(InstanceConfigDevicesPtrOutput)
}

// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
func (o InstanceConfigDevicesOutput) Sda() InstanceConfigDevicesSdaPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSda { return v.Sda }).(InstanceConfigDevicesSdaPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdb() InstanceConfigDevicesSdbPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdb { return v.Sdb }).(InstanceConfigDevicesSdbPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdc() InstanceConfigDevicesSdcPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdc { return v.Sdc }).(InstanceConfigDevicesSdcPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdd() InstanceConfigDevicesSddPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdd { return v.Sdd }).(InstanceConfigDevicesSddPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sde() InstanceConfigDevicesSdePtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSde { return v.Sde }).(InstanceConfigDevicesSdePtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdf() InstanceConfigDevicesSdfPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdf { return v.Sdf }).(InstanceConfigDevicesSdfPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdg() InstanceConfigDevicesSdgPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdg { return v.Sdg }).(InstanceConfigDevicesSdgPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdh() InstanceConfigDevicesSdhPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdh { return v.Sdh }).(InstanceConfigDevicesSdhPtrOutput)
}

type InstanceConfigDevicesPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevices)(nil)).Elem()
}

func (o InstanceConfigDevicesPtrOutput) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return o
}

func (o InstanceConfigDevicesPtrOutput) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return o
}

func (o InstanceConfigDevicesPtrOutput) Elem() InstanceConfigDevicesOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) InstanceConfigDevices {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevices
		return ret
	}).(InstanceConfigDevicesOutput)
}

// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
func (o InstanceConfigDevicesPtrOutput) Sda() InstanceConfigDevicesSdaPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSda {
		if v == nil {
			return nil
		}
		return v.Sda
	}).(InstanceConfigDevicesSdaPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdb() InstanceConfigDevicesSdbPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdb {
		if v == nil {
			return nil
		}
		return v.Sdb
	}).(InstanceConfigDevicesSdbPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdc() InstanceConfigDevicesSdcPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdc {
		if v == nil {
			return nil
		}
		return v.Sdc
	}).(InstanceConfigDevicesSdcPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdd() InstanceConfigDevicesSddPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdd {
		if v == nil {
			return nil
		}
		return v.Sdd
	}).(InstanceConfigDevicesSddPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sde() InstanceConfigDevicesSdePtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSde {
		if v == nil {
			return nil
		}
		return v.Sde
	}).(InstanceConfigDevicesSdePtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdf() InstanceConfigDevicesSdfPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdf {
		if v == nil {
			return nil
		}
		return v.Sdf
	}).(InstanceConfigDevicesSdfPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdg() InstanceConfigDevicesSdgPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdg {
		if v == nil {
			return nil
		}
		return v.Sdg
	}).(InstanceConfigDevicesSdgPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdh() InstanceConfigDevicesSdhPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdh {
		if v == nil {
			return nil
		}
		return v.Sdh
	}).(InstanceConfigDevicesSdhPtrOutput)
}

type InstanceConfigDevicesSda struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdaInput is an input type that accepts InstanceConfigDevicesSdaArgs and InstanceConfigDevicesSdaOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdaInput` via:
//
//          InstanceConfigDevicesSdaArgs{...}
type InstanceConfigDevicesSdaInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdaOutput() InstanceConfigDevicesSdaOutput
	ToInstanceConfigDevicesSdaOutputWithContext(context.Context) InstanceConfigDevicesSdaOutput
}

type InstanceConfigDevicesSdaArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSda)(nil)).Elem()
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaOutput() InstanceConfigDevicesSdaOutput {
	return i.ToInstanceConfigDevicesSdaOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdaOutput)
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return i.ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdaOutput).ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdaPtrInput is an input type that accepts InstanceConfigDevicesSdaArgs, InstanceConfigDevicesSdaPtr and InstanceConfigDevicesSdaPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdaPtrInput` via:
//
//          InstanceConfigDevicesSdaArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdaPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput
	ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Context) InstanceConfigDevicesSdaPtrOutput
}

type instanceConfigDevicesSdaPtrType InstanceConfigDevicesSdaArgs

func InstanceConfigDevicesSdaPtr(v *InstanceConfigDevicesSdaArgs) InstanceConfigDevicesSdaPtrInput {
	return (*instanceConfigDevicesSdaPtrType)(v)
}

func (*instanceConfigDevicesSdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSda)(nil)).Elem()
}

func (i *instanceConfigDevicesSdaPtrType) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return i.ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdaPtrType) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdaPtrOutput)
}

type InstanceConfigDevicesSdaOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSda)(nil)).Elem()
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaOutput() InstanceConfigDevicesSdaOutput {
	return o
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaOutput {
	return o
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return o.ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSda) *InstanceConfigDevicesSda {
		return &v
	}).(InstanceConfigDevicesSdaPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdaOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSda) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdaOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSda) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdaOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSda) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdaPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSda)(nil)).Elem()
}

func (o InstanceConfigDevicesSdaPtrOutput) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdaPtrOutput) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdaPtrOutput) Elem() InstanceConfigDevicesSdaOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) InstanceConfigDevicesSda {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSda
		return ret
	}).(InstanceConfigDevicesSdaOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdaPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdaPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdaPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdb struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdbInput is an input type that accepts InstanceConfigDevicesSdbArgs and InstanceConfigDevicesSdbOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdbInput` via:
//
//          InstanceConfigDevicesSdbArgs{...}
type InstanceConfigDevicesSdbInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdbOutput() InstanceConfigDevicesSdbOutput
	ToInstanceConfigDevicesSdbOutputWithContext(context.Context) InstanceConfigDevicesSdbOutput
}

type InstanceConfigDevicesSdbArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdb)(nil)).Elem()
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbOutput() InstanceConfigDevicesSdbOutput {
	return i.ToInstanceConfigDevicesSdbOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdbOutput)
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return i.ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdbOutput).ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdbPtrInput is an input type that accepts InstanceConfigDevicesSdbArgs, InstanceConfigDevicesSdbPtr and InstanceConfigDevicesSdbPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdbPtrInput` via:
//
//          InstanceConfigDevicesSdbArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdbPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput
	ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Context) InstanceConfigDevicesSdbPtrOutput
}

type instanceConfigDevicesSdbPtrType InstanceConfigDevicesSdbArgs

func InstanceConfigDevicesSdbPtr(v *InstanceConfigDevicesSdbArgs) InstanceConfigDevicesSdbPtrInput {
	return (*instanceConfigDevicesSdbPtrType)(v)
}

func (*instanceConfigDevicesSdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdb)(nil)).Elem()
}

func (i *instanceConfigDevicesSdbPtrType) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return i.ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdbPtrType) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdbPtrOutput)
}

type InstanceConfigDevicesSdbOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdb)(nil)).Elem()
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbOutput() InstanceConfigDevicesSdbOutput {
	return o
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbOutput {
	return o
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return o.ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdb) *InstanceConfigDevicesSdb {
		return &v
	}).(InstanceConfigDevicesSdbPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdbOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdb) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdbOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdb) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdbOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdb) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdbPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdb)(nil)).Elem()
}

func (o InstanceConfigDevicesSdbPtrOutput) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdbPtrOutput) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdbPtrOutput) Elem() InstanceConfigDevicesSdbOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) InstanceConfigDevicesSdb {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdb
		return ret
	}).(InstanceConfigDevicesSdbOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdbPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdbPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdbPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdc struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdcInput is an input type that accepts InstanceConfigDevicesSdcArgs and InstanceConfigDevicesSdcOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdcInput` via:
//
//          InstanceConfigDevicesSdcArgs{...}
type InstanceConfigDevicesSdcInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdcOutput() InstanceConfigDevicesSdcOutput
	ToInstanceConfigDevicesSdcOutputWithContext(context.Context) InstanceConfigDevicesSdcOutput
}

type InstanceConfigDevicesSdcArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdc)(nil)).Elem()
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcOutput() InstanceConfigDevicesSdcOutput {
	return i.ToInstanceConfigDevicesSdcOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdcOutput)
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return i.ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdcOutput).ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdcPtrInput is an input type that accepts InstanceConfigDevicesSdcArgs, InstanceConfigDevicesSdcPtr and InstanceConfigDevicesSdcPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdcPtrInput` via:
//
//          InstanceConfigDevicesSdcArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdcPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput
	ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Context) InstanceConfigDevicesSdcPtrOutput
}

type instanceConfigDevicesSdcPtrType InstanceConfigDevicesSdcArgs

func InstanceConfigDevicesSdcPtr(v *InstanceConfigDevicesSdcArgs) InstanceConfigDevicesSdcPtrInput {
	return (*instanceConfigDevicesSdcPtrType)(v)
}

func (*instanceConfigDevicesSdcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdc)(nil)).Elem()
}

func (i *instanceConfigDevicesSdcPtrType) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return i.ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdcPtrType) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdcPtrOutput)
}

type InstanceConfigDevicesSdcOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdc)(nil)).Elem()
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcOutput() InstanceConfigDevicesSdcOutput {
	return o
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcOutput {
	return o
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return o.ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdc) *InstanceConfigDevicesSdc {
		return &v
	}).(InstanceConfigDevicesSdcPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdcOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdc) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdcOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdc) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdcOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdc) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdcPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdc)(nil)).Elem()
}

func (o InstanceConfigDevicesSdcPtrOutput) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdcPtrOutput) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdcPtrOutput) Elem() InstanceConfigDevicesSdcOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) InstanceConfigDevicesSdc {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdc
		return ret
	}).(InstanceConfigDevicesSdcOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdcPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdcPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdcPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdd struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSddInput is an input type that accepts InstanceConfigDevicesSddArgs and InstanceConfigDevicesSddOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSddInput` via:
//
//          InstanceConfigDevicesSddArgs{...}
type InstanceConfigDevicesSddInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSddOutput() InstanceConfigDevicesSddOutput
	ToInstanceConfigDevicesSddOutputWithContext(context.Context) InstanceConfigDevicesSddOutput
}

type InstanceConfigDevicesSddArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSddArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdd)(nil)).Elem()
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddOutput() InstanceConfigDevicesSddOutput {
	return i.ToInstanceConfigDevicesSddOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddOutputWithContext(ctx context.Context) InstanceConfigDevicesSddOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSddOutput)
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return i.ToInstanceConfigDevicesSddPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSddOutput).ToInstanceConfigDevicesSddPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSddPtrInput is an input type that accepts InstanceConfigDevicesSddArgs, InstanceConfigDevicesSddPtr and InstanceConfigDevicesSddPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSddPtrInput` via:
//
//          InstanceConfigDevicesSddArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSddPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput
	ToInstanceConfigDevicesSddPtrOutputWithContext(context.Context) InstanceConfigDevicesSddPtrOutput
}

type instanceConfigDevicesSddPtrType InstanceConfigDevicesSddArgs

func InstanceConfigDevicesSddPtr(v *InstanceConfigDevicesSddArgs) InstanceConfigDevicesSddPtrInput {
	return (*instanceConfigDevicesSddPtrType)(v)
}

func (*instanceConfigDevicesSddPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdd)(nil)).Elem()
}

func (i *instanceConfigDevicesSddPtrType) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return i.ToInstanceConfigDevicesSddPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSddPtrType) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSddPtrOutput)
}

type InstanceConfigDevicesSddOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSddOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdd)(nil)).Elem()
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddOutput() InstanceConfigDevicesSddOutput {
	return o
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddOutputWithContext(ctx context.Context) InstanceConfigDevicesSddOutput {
	return o
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return o.ToInstanceConfigDevicesSddPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdd) *InstanceConfigDevicesSdd {
		return &v
	}).(InstanceConfigDevicesSddPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSddOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdd) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSddOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdd) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSddOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdd) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSddPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSddPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdd)(nil)).Elem()
}

func (o InstanceConfigDevicesSddPtrOutput) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return o
}

func (o InstanceConfigDevicesSddPtrOutput) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return o
}

func (o InstanceConfigDevicesSddPtrOutput) Elem() InstanceConfigDevicesSddOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) InstanceConfigDevicesSdd {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdd
		return ret
	}).(InstanceConfigDevicesSddOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSddPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSddPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSddPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSde struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdeInput is an input type that accepts InstanceConfigDevicesSdeArgs and InstanceConfigDevicesSdeOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdeInput` via:
//
//          InstanceConfigDevicesSdeArgs{...}
type InstanceConfigDevicesSdeInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdeOutput() InstanceConfigDevicesSdeOutput
	ToInstanceConfigDevicesSdeOutputWithContext(context.Context) InstanceConfigDevicesSdeOutput
}

type InstanceConfigDevicesSdeArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSde)(nil)).Elem()
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdeOutput() InstanceConfigDevicesSdeOutput {
	return i.ToInstanceConfigDevicesSdeOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdeOutputWithContext(ctx context.Context) InstanceConfigDevicesSdeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdeOutput)
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return i.ToInstanceConfigDevicesSdePtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdeOutput).ToInstanceConfigDevicesSdePtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdePtrInput is an input type that accepts InstanceConfigDevicesSdeArgs, InstanceConfigDevicesSdePtr and InstanceConfigDevicesSdePtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdePtrInput` via:
//
//          InstanceConfigDevicesSdeArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdePtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput
	ToInstanceConfigDevicesSdePtrOutputWithContext(context.Context) InstanceConfigDevicesSdePtrOutput
}

type instanceConfigDevicesSdePtrType InstanceConfigDevicesSdeArgs

func InstanceConfigDevicesSdePtr(v *InstanceConfigDevicesSdeArgs) InstanceConfigDevicesSdePtrInput {
	return (*instanceConfigDevicesSdePtrType)(v)
}

func (*instanceConfigDevicesSdePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSde)(nil)).Elem()
}

func (i *instanceConfigDevicesSdePtrType) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return i.ToInstanceConfigDevicesSdePtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdePtrType) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdePtrOutput)
}

type InstanceConfigDevicesSdeOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSde)(nil)).Elem()
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdeOutput() InstanceConfigDevicesSdeOutput {
	return o
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdeOutputWithContext(ctx context.Context) InstanceConfigDevicesSdeOutput {
	return o
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return o.ToInstanceConfigDevicesSdePtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSde) *InstanceConfigDevicesSde {
		return &v
	}).(InstanceConfigDevicesSdePtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdeOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSde) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdeOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSde) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdeOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSde) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdePtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSde)(nil)).Elem()
}

func (o InstanceConfigDevicesSdePtrOutput) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return o
}

func (o InstanceConfigDevicesSdePtrOutput) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return o
}

func (o InstanceConfigDevicesSdePtrOutput) Elem() InstanceConfigDevicesSdeOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) InstanceConfigDevicesSde {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSde
		return ret
	}).(InstanceConfigDevicesSdeOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdePtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdePtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdePtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdf struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdfInput is an input type that accepts InstanceConfigDevicesSdfArgs and InstanceConfigDevicesSdfOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdfInput` via:
//
//          InstanceConfigDevicesSdfArgs{...}
type InstanceConfigDevicesSdfInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdfOutput() InstanceConfigDevicesSdfOutput
	ToInstanceConfigDevicesSdfOutputWithContext(context.Context) InstanceConfigDevicesSdfOutput
}

type InstanceConfigDevicesSdfArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdf)(nil)).Elem()
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfOutput() InstanceConfigDevicesSdfOutput {
	return i.ToInstanceConfigDevicesSdfOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdfOutput)
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return i.ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdfOutput).ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdfPtrInput is an input type that accepts InstanceConfigDevicesSdfArgs, InstanceConfigDevicesSdfPtr and InstanceConfigDevicesSdfPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdfPtrInput` via:
//
//          InstanceConfigDevicesSdfArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdfPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput
	ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Context) InstanceConfigDevicesSdfPtrOutput
}

type instanceConfigDevicesSdfPtrType InstanceConfigDevicesSdfArgs

func InstanceConfigDevicesSdfPtr(v *InstanceConfigDevicesSdfArgs) InstanceConfigDevicesSdfPtrInput {
	return (*instanceConfigDevicesSdfPtrType)(v)
}

func (*instanceConfigDevicesSdfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdf)(nil)).Elem()
}

func (i *instanceConfigDevicesSdfPtrType) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return i.ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdfPtrType) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdfPtrOutput)
}

type InstanceConfigDevicesSdfOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdf)(nil)).Elem()
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfOutput() InstanceConfigDevicesSdfOutput {
	return o
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfOutput {
	return o
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return o.ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdf) *InstanceConfigDevicesSdf {
		return &v
	}).(InstanceConfigDevicesSdfPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdfOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdf) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdfOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdf) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdfOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdf) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdfPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdf)(nil)).Elem()
}

func (o InstanceConfigDevicesSdfPtrOutput) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdfPtrOutput) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdfPtrOutput) Elem() InstanceConfigDevicesSdfOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) InstanceConfigDevicesSdf {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdf
		return ret
	}).(InstanceConfigDevicesSdfOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdfPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdfPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdfPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdg struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdgInput is an input type that accepts InstanceConfigDevicesSdgArgs and InstanceConfigDevicesSdgOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdgInput` via:
//
//          InstanceConfigDevicesSdgArgs{...}
type InstanceConfigDevicesSdgInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdgOutput() InstanceConfigDevicesSdgOutput
	ToInstanceConfigDevicesSdgOutputWithContext(context.Context) InstanceConfigDevicesSdgOutput
}

type InstanceConfigDevicesSdgArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdg)(nil)).Elem()
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgOutput() InstanceConfigDevicesSdgOutput {
	return i.ToInstanceConfigDevicesSdgOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdgOutput)
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return i.ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdgOutput).ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdgPtrInput is an input type that accepts InstanceConfigDevicesSdgArgs, InstanceConfigDevicesSdgPtr and InstanceConfigDevicesSdgPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdgPtrInput` via:
//
//          InstanceConfigDevicesSdgArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdgPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput
	ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Context) InstanceConfigDevicesSdgPtrOutput
}

type instanceConfigDevicesSdgPtrType InstanceConfigDevicesSdgArgs

func InstanceConfigDevicesSdgPtr(v *InstanceConfigDevicesSdgArgs) InstanceConfigDevicesSdgPtrInput {
	return (*instanceConfigDevicesSdgPtrType)(v)
}

func (*instanceConfigDevicesSdgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdg)(nil)).Elem()
}

func (i *instanceConfigDevicesSdgPtrType) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return i.ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdgPtrType) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdgPtrOutput)
}

type InstanceConfigDevicesSdgOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdg)(nil)).Elem()
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgOutput() InstanceConfigDevicesSdgOutput {
	return o
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgOutput {
	return o
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return o.ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdg) *InstanceConfigDevicesSdg {
		return &v
	}).(InstanceConfigDevicesSdgPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdgOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdg) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdgOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdg) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdgOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdg) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdgPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdg)(nil)).Elem()
}

func (o InstanceConfigDevicesSdgPtrOutput) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdgPtrOutput) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdgPtrOutput) Elem() InstanceConfigDevicesSdgOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) InstanceConfigDevicesSdg {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdg
		return ret
	}).(InstanceConfigDevicesSdgOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdgPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdgPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdgPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdh struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdhInput is an input type that accepts InstanceConfigDevicesSdhArgs and InstanceConfigDevicesSdhOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdhInput` via:
//
//          InstanceConfigDevicesSdhArgs{...}
type InstanceConfigDevicesSdhInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdhOutput() InstanceConfigDevicesSdhOutput
	ToInstanceConfigDevicesSdhOutputWithContext(context.Context) InstanceConfigDevicesSdhOutput
}

type InstanceConfigDevicesSdhArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdhArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdh)(nil)).Elem()
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhOutput() InstanceConfigDevicesSdhOutput {
	return i.ToInstanceConfigDevicesSdhOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdhOutput)
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return i.ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdhOutput).ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdhPtrInput is an input type that accepts InstanceConfigDevicesSdhArgs, InstanceConfigDevicesSdhPtr and InstanceConfigDevicesSdhPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdhPtrInput` via:
//
//          InstanceConfigDevicesSdhArgs{...}
//
//  or:
//
//          nil
type InstanceConfigDevicesSdhPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput
	ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Context) InstanceConfigDevicesSdhPtrOutput
}

type instanceConfigDevicesSdhPtrType InstanceConfigDevicesSdhArgs

func InstanceConfigDevicesSdhPtr(v *InstanceConfigDevicesSdhArgs) InstanceConfigDevicesSdhPtrInput {
	return (*instanceConfigDevicesSdhPtrType)(v)
}

func (*instanceConfigDevicesSdhPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdh)(nil)).Elem()
}

func (i *instanceConfigDevicesSdhPtrType) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return i.ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdhPtrType) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdhPtrOutput)
}

type InstanceConfigDevicesSdhOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdhOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdh)(nil)).Elem()
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhOutput() InstanceConfigDevicesSdhOutput {
	return o
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhOutput {
	return o
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return o.ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdh) *InstanceConfigDevicesSdh {
		return &v
	}).(InstanceConfigDevicesSdhPtrOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdhOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdh) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdhOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdh) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdhOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdh) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdhPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdhPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdh)(nil)).Elem()
}

func (o InstanceConfigDevicesSdhPtrOutput) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdhPtrOutput) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdhPtrOutput) Elem() InstanceConfigDevicesSdhOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) InstanceConfigDevicesSdh {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdh
		return ret
	}).(InstanceConfigDevicesSdhOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdhPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdhPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdhPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigHelpers struct {
	DevtmpfsAutomount *bool `pulumi:"devtmpfsAutomount"`
	// Controls the behavior of the Linode Config's Distribution Helper setting.
	Distro *bool `pulumi:"distro"`
	// Creates a modules dependency file for the Kernel you run.
	ModulesDep *bool `pulumi:"modulesDep"`
	// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
	Network *bool `pulumi:"network"`
	// Disables updatedb cron job to avoid disk thrashing.
	UpdatedbDisabled *bool `pulumi:"updatedbDisabled"`
}

// InstanceConfigHelpersInput is an input type that accepts InstanceConfigHelpersArgs and InstanceConfigHelpersOutput values.
// You can construct a concrete instance of `InstanceConfigHelpersInput` via:
//
//          InstanceConfigHelpersArgs{...}
type InstanceConfigHelpersInput interface {
	pulumi.Input

	ToInstanceConfigHelpersOutput() InstanceConfigHelpersOutput
	ToInstanceConfigHelpersOutputWithContext(context.Context) InstanceConfigHelpersOutput
}

type InstanceConfigHelpersArgs struct {
	DevtmpfsAutomount pulumi.BoolPtrInput `pulumi:"devtmpfsAutomount"`
	// Controls the behavior of the Linode Config's Distribution Helper setting.
	Distro pulumi.BoolPtrInput `pulumi:"distro"`
	// Creates a modules dependency file for the Kernel you run.
	ModulesDep pulumi.BoolPtrInput `pulumi:"modulesDep"`
	// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
	Network pulumi.BoolPtrInput `pulumi:"network"`
	// Disables updatedb cron job to avoid disk thrashing.
	UpdatedbDisabled pulumi.BoolPtrInput `pulumi:"updatedbDisabled"`
}

func (InstanceConfigHelpersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigHelpers)(nil)).Elem()
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersOutput() InstanceConfigHelpersOutput {
	return i.ToInstanceConfigHelpersOutputWithContext(context.Background())
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersOutputWithContext(ctx context.Context) InstanceConfigHelpersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigHelpersOutput)
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return i.ToInstanceConfigHelpersPtrOutputWithContext(context.Background())
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigHelpersOutput).ToInstanceConfigHelpersPtrOutputWithContext(ctx)
}

// InstanceConfigHelpersPtrInput is an input type that accepts InstanceConfigHelpersArgs, InstanceConfigHelpersPtr and InstanceConfigHelpersPtrOutput values.
// You can construct a concrete instance of `InstanceConfigHelpersPtrInput` via:
//
//          InstanceConfigHelpersArgs{...}
//
//  or:
//
//          nil
type InstanceConfigHelpersPtrInput interface {
	pulumi.Input

	ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput
	ToInstanceConfigHelpersPtrOutputWithContext(context.Context) InstanceConfigHelpersPtrOutput
}

type instanceConfigHelpersPtrType InstanceConfigHelpersArgs

func InstanceConfigHelpersPtr(v *InstanceConfigHelpersArgs) InstanceConfigHelpersPtrInput {
	return (*instanceConfigHelpersPtrType)(v)
}

func (*instanceConfigHelpersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigHelpers)(nil)).Elem()
}

func (i *instanceConfigHelpersPtrType) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return i.ToInstanceConfigHelpersPtrOutputWithContext(context.Background())
}

func (i *instanceConfigHelpersPtrType) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigHelpersPtrOutput)
}

type InstanceConfigHelpersOutput struct{ *pulumi.OutputState }

func (InstanceConfigHelpersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigHelpers)(nil)).Elem()
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersOutput() InstanceConfigHelpersOutput {
	return o
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersOutputWithContext(ctx context.Context) InstanceConfigHelpersOutput {
	return o
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return o.ToInstanceConfigHelpersPtrOutputWithContext(context.Background())
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigHelpers) *InstanceConfigHelpers {
		return &v
	}).(InstanceConfigHelpersPtrOutput)
}

func (o InstanceConfigHelpersOutput) DevtmpfsAutomount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.DevtmpfsAutomount }).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Distribution Helper setting.
func (o InstanceConfigHelpersOutput) Distro() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.Distro }).(pulumi.BoolPtrOutput)
}

// Creates a modules dependency file for the Kernel you run.
func (o InstanceConfigHelpersOutput) ModulesDep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.ModulesDep }).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
func (o InstanceConfigHelpersOutput) Network() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.Network }).(pulumi.BoolPtrOutput)
}

// Disables updatedb cron job to avoid disk thrashing.
func (o InstanceConfigHelpersOutput) UpdatedbDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.UpdatedbDisabled }).(pulumi.BoolPtrOutput)
}

type InstanceConfigHelpersPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigHelpersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigHelpers)(nil)).Elem()
}

func (o InstanceConfigHelpersPtrOutput) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return o
}

func (o InstanceConfigHelpersPtrOutput) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return o
}

func (o InstanceConfigHelpersPtrOutput) Elem() InstanceConfigHelpersOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) InstanceConfigHelpers {
		if v != nil {
			return *v
		}
		var ret InstanceConfigHelpers
		return ret
	}).(InstanceConfigHelpersOutput)
}

func (o InstanceConfigHelpersPtrOutput) DevtmpfsAutomount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.DevtmpfsAutomount
	}).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Distribution Helper setting.
func (o InstanceConfigHelpersPtrOutput) Distro() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.Distro
	}).(pulumi.BoolPtrOutput)
}

// Creates a modules dependency file for the Kernel you run.
func (o InstanceConfigHelpersPtrOutput) ModulesDep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.ModulesDep
	}).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
func (o InstanceConfigHelpersPtrOutput) Network() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.BoolPtrOutput)
}

// Disables updatedb cron job to avoid disk thrashing.
func (o InstanceConfigHelpersPtrOutput) UpdatedbDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.UpdatedbDisabled
	}).(pulumi.BoolPtrOutput)
}

type InstanceConfigInterface struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress *string `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label *string `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose *string `pulumi:"purpose"`
}

// InstanceConfigInterfaceInput is an input type that accepts InstanceConfigInterfaceArgs and InstanceConfigInterfaceOutput values.
// You can construct a concrete instance of `InstanceConfigInterfaceInput` via:
//
//          InstanceConfigInterfaceArgs{...}
type InstanceConfigInterfaceInput interface {
	pulumi.Input

	ToInstanceConfigInterfaceOutput() InstanceConfigInterfaceOutput
	ToInstanceConfigInterfaceOutputWithContext(context.Context) InstanceConfigInterfaceOutput
}

type InstanceConfigInterfaceArgs struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress pulumi.StringPtrInput `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose pulumi.StringPtrInput `pulumi:"purpose"`
}

func (InstanceConfigInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigInterface)(nil)).Elem()
}

func (i InstanceConfigInterfaceArgs) ToInstanceConfigInterfaceOutput() InstanceConfigInterfaceOutput {
	return i.ToInstanceConfigInterfaceOutputWithContext(context.Background())
}

func (i InstanceConfigInterfaceArgs) ToInstanceConfigInterfaceOutputWithContext(ctx context.Context) InstanceConfigInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigInterfaceOutput)
}

// InstanceConfigInterfaceArrayInput is an input type that accepts InstanceConfigInterfaceArray and InstanceConfigInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceConfigInterfaceArrayInput` via:
//
//          InstanceConfigInterfaceArray{ InstanceConfigInterfaceArgs{...} }
type InstanceConfigInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceConfigInterfaceArrayOutput() InstanceConfigInterfaceArrayOutput
	ToInstanceConfigInterfaceArrayOutputWithContext(context.Context) InstanceConfigInterfaceArrayOutput
}

type InstanceConfigInterfaceArray []InstanceConfigInterfaceInput

func (InstanceConfigInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigInterface)(nil)).Elem()
}

func (i InstanceConfigInterfaceArray) ToInstanceConfigInterfaceArrayOutput() InstanceConfigInterfaceArrayOutput {
	return i.ToInstanceConfigInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceConfigInterfaceArray) ToInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) InstanceConfigInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigInterfaceArrayOutput)
}

type InstanceConfigInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceConfigInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigInterface)(nil)).Elem()
}

func (o InstanceConfigInterfaceOutput) ToInstanceConfigInterfaceOutput() InstanceConfigInterfaceOutput {
	return o
}

func (o InstanceConfigInterfaceOutput) ToInstanceConfigInterfaceOutputWithContext(ctx context.Context) InstanceConfigInterfaceOutput {
	return o
}

// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
func (o InstanceConfigInterfaceOutput) IpamAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigInterface) *string { return v.IpamAddress }).(pulumi.StringPtrOutput)
}

// The name of this interface. If the interface is a VLAN, a label is required.
func (o InstanceConfigInterfaceOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigInterface) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of interface. (`public`, `vlan`)
func (o InstanceConfigInterfaceOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigInterface) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

type InstanceConfigInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceConfigInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigInterface)(nil)).Elem()
}

func (o InstanceConfigInterfaceArrayOutput) ToInstanceConfigInterfaceArrayOutput() InstanceConfigInterfaceArrayOutput {
	return o
}

func (o InstanceConfigInterfaceArrayOutput) ToInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) InstanceConfigInterfaceArrayOutput {
	return o
}

func (o InstanceConfigInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceConfigInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceConfigInterface {
		return vs[0].([]InstanceConfigInterface)[vs[1].(int)]
	}).(InstanceConfigInterfaceOutput)
}

type InstanceDisk struct {
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys []string `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers []string `pulumi:"authorizedUsers"`
	// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
	Filesystem *string `pulumi:"filesystem"`
	// The ID of the disk in the Linode API.
	Id *int `pulumi:"id"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*
	Image *string `pulumi:"image"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label string `pulumi:"label"`
	// If true, this Disk is read-only.
	ReadOnly *bool `pulumi:"readOnly"`
	// The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in state.*
	RootPass *string `pulumi:"rootPass"`
	// The size of the Disk in MB.
	Size int `pulumi:"size"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData map[string]interface{} `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId *int `pulumi:"stackscriptId"`
}

// InstanceDiskInput is an input type that accepts InstanceDiskArgs and InstanceDiskOutput values.
// You can construct a concrete instance of `InstanceDiskInput` via:
//
//          InstanceDiskArgs{...}
type InstanceDiskInput interface {
	pulumi.Input

	ToInstanceDiskOutput() InstanceDiskOutput
	ToInstanceDiskOutputWithContext(context.Context) InstanceDiskOutput
}

type InstanceDiskArgs struct {
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys pulumi.StringArrayInput `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers pulumi.StringArrayInput `pulumi:"authorizedUsers"`
	// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
	Filesystem pulumi.StringPtrInput `pulumi:"filesystem"`
	// The ID of the disk in the Linode API.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*
	Image pulumi.StringPtrInput `pulumi:"image"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label pulumi.StringInput `pulumi:"label"`
	// If true, this Disk is read-only.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in state.*
	RootPass pulumi.StringPtrInput `pulumi:"rootPass"`
	// The size of the Disk in MB.
	Size pulumi.IntInput `pulumi:"size"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData pulumi.MapInput `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId pulumi.IntPtrInput `pulumi:"stackscriptId"`
}

func (InstanceDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDisk)(nil)).Elem()
}

func (i InstanceDiskArgs) ToInstanceDiskOutput() InstanceDiskOutput {
	return i.ToInstanceDiskOutputWithContext(context.Background())
}

func (i InstanceDiskArgs) ToInstanceDiskOutputWithContext(ctx context.Context) InstanceDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskOutput)
}

// InstanceDiskArrayInput is an input type that accepts InstanceDiskArray and InstanceDiskArrayOutput values.
// You can construct a concrete instance of `InstanceDiskArrayInput` via:
//
//          InstanceDiskArray{ InstanceDiskArgs{...} }
type InstanceDiskArrayInput interface {
	pulumi.Input

	ToInstanceDiskArrayOutput() InstanceDiskArrayOutput
	ToInstanceDiskArrayOutputWithContext(context.Context) InstanceDiskArrayOutput
}

type InstanceDiskArray []InstanceDiskInput

func (InstanceDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDisk)(nil)).Elem()
}

func (i InstanceDiskArray) ToInstanceDiskArrayOutput() InstanceDiskArrayOutput {
	return i.ToInstanceDiskArrayOutputWithContext(context.Background())
}

func (i InstanceDiskArray) ToInstanceDiskArrayOutputWithContext(ctx context.Context) InstanceDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskArrayOutput)
}

type InstanceDiskOutput struct{ *pulumi.OutputState }

func (InstanceDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDisk)(nil)).Elem()
}

func (o InstanceDiskOutput) ToInstanceDiskOutput() InstanceDiskOutput {
	return o
}

func (o InstanceDiskOutput) ToInstanceDiskOutputWithContext(ctx context.Context) InstanceDiskOutput {
	return o
}

// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
func (o InstanceDiskOutput) AuthorizedKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceDisk) []string { return v.AuthorizedKeys }).(pulumi.StringArrayOutput)
}

// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
func (o InstanceDiskOutput) AuthorizedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceDisk) []string { return v.AuthorizedUsers }).(pulumi.StringArrayOutput)
}

// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
func (o InstanceDiskOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *string { return v.Filesystem }).(pulumi.StringPtrOutput)
}

// The ID of the disk in the Linode API.
func (o InstanceDiskOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*
func (o InstanceDiskOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// The name of this interface. If the interface is a VLAN, a label is required.
func (o InstanceDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDisk) string { return v.Label }).(pulumi.StringOutput)
}

// If true, this Disk is read-only.
func (o InstanceDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in state.*
func (o InstanceDiskOutput) RootPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *string { return v.RootPass }).(pulumi.StringPtrOutput)
}

// The size of the Disk in MB.
func (o InstanceDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceDisk) int { return v.Size }).(pulumi.IntOutput)
}

// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
func (o InstanceDiskOutput) StackscriptData() pulumi.MapOutput {
	return o.ApplyT(func(v InstanceDisk) map[string]interface{} { return v.StackscriptData }).(pulumi.MapOutput)
}

// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
func (o InstanceDiskOutput) StackscriptId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *int { return v.StackscriptId }).(pulumi.IntPtrOutput)
}

type InstanceDiskArrayOutput struct{ *pulumi.OutputState }

func (InstanceDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDisk)(nil)).Elem()
}

func (o InstanceDiskArrayOutput) ToInstanceDiskArrayOutput() InstanceDiskArrayOutput {
	return o
}

func (o InstanceDiskArrayOutput) ToInstanceDiskArrayOutputWithContext(ctx context.Context) InstanceDiskArrayOutput {
	return o
}

func (o InstanceDiskArrayOutput) Index(i pulumi.IntInput) InstanceDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDisk {
		return vs[0].([]InstanceDisk)[vs[1].(int)]
	}).(InstanceDiskOutput)
}

type InstanceInterface struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress *string `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label *string `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose *string `pulumi:"purpose"`
}

// InstanceInterfaceInput is an input type that accepts InstanceInterfaceArgs and InstanceInterfaceOutput values.
// You can construct a concrete instance of `InstanceInterfaceInput` via:
//
//          InstanceInterfaceArgs{...}
type InstanceInterfaceInput interface {
	pulumi.Input

	ToInstanceInterfaceOutput() InstanceInterfaceOutput
	ToInstanceInterfaceOutputWithContext(context.Context) InstanceInterfaceOutput
}

type InstanceInterfaceArgs struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress pulumi.StringPtrInput `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose pulumi.StringPtrInput `pulumi:"purpose"`
}

func (InstanceInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInterface)(nil)).Elem()
}

func (i InstanceInterfaceArgs) ToInstanceInterfaceOutput() InstanceInterfaceOutput {
	return i.ToInstanceInterfaceOutputWithContext(context.Background())
}

func (i InstanceInterfaceArgs) ToInstanceInterfaceOutputWithContext(ctx context.Context) InstanceInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceInterfaceOutput)
}

// InstanceInterfaceArrayInput is an input type that accepts InstanceInterfaceArray and InstanceInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceInterfaceArrayInput` via:
//
//          InstanceInterfaceArray{ InstanceInterfaceArgs{...} }
type InstanceInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceInterfaceArrayOutput() InstanceInterfaceArrayOutput
	ToInstanceInterfaceArrayOutputWithContext(context.Context) InstanceInterfaceArrayOutput
}

type InstanceInterfaceArray []InstanceInterfaceInput

func (InstanceInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceInterface)(nil)).Elem()
}

func (i InstanceInterfaceArray) ToInstanceInterfaceArrayOutput() InstanceInterfaceArrayOutput {
	return i.ToInstanceInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceInterfaceArray) ToInstanceInterfaceArrayOutputWithContext(ctx context.Context) InstanceInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceInterfaceArrayOutput)
}

type InstanceInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInterface)(nil)).Elem()
}

func (o InstanceInterfaceOutput) ToInstanceInterfaceOutput() InstanceInterfaceOutput {
	return o
}

func (o InstanceInterfaceOutput) ToInstanceInterfaceOutputWithContext(ctx context.Context) InstanceInterfaceOutput {
	return o
}

// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
func (o InstanceInterfaceOutput) IpamAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceInterface) *string { return v.IpamAddress }).(pulumi.StringPtrOutput)
}

// The name of this interface. If the interface is a VLAN, a label is required.
func (o InstanceInterfaceOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceInterface) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of interface. (`public`, `vlan`)
func (o InstanceInterfaceOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceInterface) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

type InstanceInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceInterface)(nil)).Elem()
}

func (o InstanceInterfaceArrayOutput) ToInstanceInterfaceArrayOutput() InstanceInterfaceArrayOutput {
	return o
}

func (o InstanceInterfaceArrayOutput) ToInstanceInterfaceArrayOutputWithContext(ctx context.Context) InstanceInterfaceArrayOutput {
	return o
}

func (o InstanceInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceInterface {
		return vs[0].([]InstanceInterface)[vs[1].(int)]
	}).(InstanceInterfaceOutput)
}

type InstanceSpecs struct {
	Disk     *int `pulumi:"disk"`
	Memory   *int `pulumi:"memory"`
	Transfer *int `pulumi:"transfer"`
	Vcpus    *int `pulumi:"vcpus"`
}

// InstanceSpecsInput is an input type that accepts InstanceSpecsArgs and InstanceSpecsOutput values.
// You can construct a concrete instance of `InstanceSpecsInput` via:
//
//          InstanceSpecsArgs{...}
type InstanceSpecsInput interface {
	pulumi.Input

	ToInstanceSpecsOutput() InstanceSpecsOutput
	ToInstanceSpecsOutputWithContext(context.Context) InstanceSpecsOutput
}

type InstanceSpecsArgs struct {
	Disk     pulumi.IntPtrInput `pulumi:"disk"`
	Memory   pulumi.IntPtrInput `pulumi:"memory"`
	Transfer pulumi.IntPtrInput `pulumi:"transfer"`
	Vcpus    pulumi.IntPtrInput `pulumi:"vcpus"`
}

func (InstanceSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecs)(nil)).Elem()
}

func (i InstanceSpecsArgs) ToInstanceSpecsOutput() InstanceSpecsOutput {
	return i.ToInstanceSpecsOutputWithContext(context.Background())
}

func (i InstanceSpecsArgs) ToInstanceSpecsOutputWithContext(ctx context.Context) InstanceSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsOutput)
}

func (i InstanceSpecsArgs) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return i.ToInstanceSpecsPtrOutputWithContext(context.Background())
}

func (i InstanceSpecsArgs) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsOutput).ToInstanceSpecsPtrOutputWithContext(ctx)
}

// InstanceSpecsPtrInput is an input type that accepts InstanceSpecsArgs, InstanceSpecsPtr and InstanceSpecsPtrOutput values.
// You can construct a concrete instance of `InstanceSpecsPtrInput` via:
//
//          InstanceSpecsArgs{...}
//
//  or:
//
//          nil
type InstanceSpecsPtrInput interface {
	pulumi.Input

	ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput
	ToInstanceSpecsPtrOutputWithContext(context.Context) InstanceSpecsPtrOutput
}

type instanceSpecsPtrType InstanceSpecsArgs

func InstanceSpecsPtr(v *InstanceSpecsArgs) InstanceSpecsPtrInput {
	return (*instanceSpecsPtrType)(v)
}

func (*instanceSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSpecs)(nil)).Elem()
}

func (i *instanceSpecsPtrType) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return i.ToInstanceSpecsPtrOutputWithContext(context.Background())
}

func (i *instanceSpecsPtrType) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsPtrOutput)
}

type InstanceSpecsOutput struct{ *pulumi.OutputState }

func (InstanceSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecs)(nil)).Elem()
}

func (o InstanceSpecsOutput) ToInstanceSpecsOutput() InstanceSpecsOutput {
	return o
}

func (o InstanceSpecsOutput) ToInstanceSpecsOutputWithContext(ctx context.Context) InstanceSpecsOutput {
	return o
}

func (o InstanceSpecsOutput) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return o.ToInstanceSpecsPtrOutputWithContext(context.Background())
}

func (o InstanceSpecsOutput) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceSpecs) *InstanceSpecs {
		return &v
	}).(InstanceSpecsPtrOutput)
}

func (o InstanceSpecsOutput) Disk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Disk }).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsOutput) Transfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Transfer }).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Vcpus }).(pulumi.IntPtrOutput)
}

type InstanceSpecsPtrOutput struct{ *pulumi.OutputState }

func (InstanceSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSpecs)(nil)).Elem()
}

func (o InstanceSpecsPtrOutput) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return o
}

func (o InstanceSpecsPtrOutput) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return o
}

func (o InstanceSpecsPtrOutput) Elem() InstanceSpecsOutput {
	return o.ApplyT(func(v *InstanceSpecs) InstanceSpecs {
		if v != nil {
			return *v
		}
		var ret InstanceSpecs
		return ret
	}).(InstanceSpecsOutput)
}

func (o InstanceSpecsPtrOutput) Disk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsPtrOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsPtrOutput) Transfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Transfer
	}).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsPtrOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Vcpus
	}).(pulumi.IntPtrOutput)
}

type LkeClusterControlPlane struct {
	HighAvailability *bool `pulumi:"highAvailability"`
}

// LkeClusterControlPlaneInput is an input type that accepts LkeClusterControlPlaneArgs and LkeClusterControlPlaneOutput values.
// You can construct a concrete instance of `LkeClusterControlPlaneInput` via:
//
//          LkeClusterControlPlaneArgs{...}
type LkeClusterControlPlaneInput interface {
	pulumi.Input

	ToLkeClusterControlPlaneOutput() LkeClusterControlPlaneOutput
	ToLkeClusterControlPlaneOutputWithContext(context.Context) LkeClusterControlPlaneOutput
}

type LkeClusterControlPlaneArgs struct {
	HighAvailability pulumi.BoolPtrInput `pulumi:"highAvailability"`
}

func (LkeClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterControlPlane)(nil)).Elem()
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlaneOutput() LkeClusterControlPlaneOutput {
	return i.ToLkeClusterControlPlaneOutputWithContext(context.Background())
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlaneOutputWithContext(ctx context.Context) LkeClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterControlPlaneOutput)
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return i.ToLkeClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterControlPlaneOutput).ToLkeClusterControlPlanePtrOutputWithContext(ctx)
}

// LkeClusterControlPlanePtrInput is an input type that accepts LkeClusterControlPlaneArgs, LkeClusterControlPlanePtr and LkeClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `LkeClusterControlPlanePtrInput` via:
//
//          LkeClusterControlPlaneArgs{...}
//
//  or:
//
//          nil
type LkeClusterControlPlanePtrInput interface {
	pulumi.Input

	ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput
	ToLkeClusterControlPlanePtrOutputWithContext(context.Context) LkeClusterControlPlanePtrOutput
}

type lkeClusterControlPlanePtrType LkeClusterControlPlaneArgs

func LkeClusterControlPlanePtr(v *LkeClusterControlPlaneArgs) LkeClusterControlPlanePtrInput {
	return (*lkeClusterControlPlanePtrType)(v)
}

func (*lkeClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterControlPlane)(nil)).Elem()
}

func (i *lkeClusterControlPlanePtrType) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return i.ToLkeClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *lkeClusterControlPlanePtrType) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterControlPlanePtrOutput)
}

type LkeClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (LkeClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterControlPlane)(nil)).Elem()
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlaneOutput() LkeClusterControlPlaneOutput {
	return o
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlaneOutputWithContext(ctx context.Context) LkeClusterControlPlaneOutput {
	return o
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return o.ToLkeClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LkeClusterControlPlane) *LkeClusterControlPlane {
		return &v
	}).(LkeClusterControlPlanePtrOutput)
}

func (o LkeClusterControlPlaneOutput) HighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LkeClusterControlPlane) *bool { return v.HighAvailability }).(pulumi.BoolPtrOutput)
}

type LkeClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (LkeClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterControlPlane)(nil)).Elem()
}

func (o LkeClusterControlPlanePtrOutput) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return o
}

func (o LkeClusterControlPlanePtrOutput) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return o
}

func (o LkeClusterControlPlanePtrOutput) Elem() LkeClusterControlPlaneOutput {
	return o.ApplyT(func(v *LkeClusterControlPlane) LkeClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret LkeClusterControlPlane
		return ret
	}).(LkeClusterControlPlaneOutput)
}

func (o LkeClusterControlPlanePtrOutput) HighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LkeClusterControlPlane) *bool {
		if v == nil {
			return nil
		}
		return v.HighAvailability
	}).(pulumi.BoolPtrOutput)
}

type LkeClusterPool struct {
	Autoscaler *LkeClusterPoolAutoscaler `pulumi:"autoscaler"`
	// The number of nodes in the Node Pool.
	Count int `pulumi:"count"`
	// The ID of the node.
	Id    *int                 `pulumi:"id"`
	Nodes []LkeClusterPoolNode `pulumi:"nodes"`
	// A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type string `pulumi:"type"`
}

// LkeClusterPoolInput is an input type that accepts LkeClusterPoolArgs and LkeClusterPoolOutput values.
// You can construct a concrete instance of `LkeClusterPoolInput` via:
//
//          LkeClusterPoolArgs{...}
type LkeClusterPoolInput interface {
	pulumi.Input

	ToLkeClusterPoolOutput() LkeClusterPoolOutput
	ToLkeClusterPoolOutputWithContext(context.Context) LkeClusterPoolOutput
}

type LkeClusterPoolArgs struct {
	Autoscaler LkeClusterPoolAutoscalerPtrInput `pulumi:"autoscaler"`
	// The number of nodes in the Node Pool.
	Count pulumi.IntInput `pulumi:"count"`
	// The ID of the node.
	Id    pulumi.IntPtrInput           `pulumi:"id"`
	Nodes LkeClusterPoolNodeArrayInput `pulumi:"nodes"`
	// A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type pulumi.StringInput `pulumi:"type"`
}

func (LkeClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPool)(nil)).Elem()
}

func (i LkeClusterPoolArgs) ToLkeClusterPoolOutput() LkeClusterPoolOutput {
	return i.ToLkeClusterPoolOutputWithContext(context.Background())
}

func (i LkeClusterPoolArgs) ToLkeClusterPoolOutputWithContext(ctx context.Context) LkeClusterPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolOutput)
}

// LkeClusterPoolArrayInput is an input type that accepts LkeClusterPoolArray and LkeClusterPoolArrayOutput values.
// You can construct a concrete instance of `LkeClusterPoolArrayInput` via:
//
//          LkeClusterPoolArray{ LkeClusterPoolArgs{...} }
type LkeClusterPoolArrayInput interface {
	pulumi.Input

	ToLkeClusterPoolArrayOutput() LkeClusterPoolArrayOutput
	ToLkeClusterPoolArrayOutputWithContext(context.Context) LkeClusterPoolArrayOutput
}

type LkeClusterPoolArray []LkeClusterPoolInput

func (LkeClusterPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPool)(nil)).Elem()
}

func (i LkeClusterPoolArray) ToLkeClusterPoolArrayOutput() LkeClusterPoolArrayOutput {
	return i.ToLkeClusterPoolArrayOutputWithContext(context.Background())
}

func (i LkeClusterPoolArray) ToLkeClusterPoolArrayOutputWithContext(ctx context.Context) LkeClusterPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolArrayOutput)
}

type LkeClusterPoolOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPool)(nil)).Elem()
}

func (o LkeClusterPoolOutput) ToLkeClusterPoolOutput() LkeClusterPoolOutput {
	return o
}

func (o LkeClusterPoolOutput) ToLkeClusterPoolOutputWithContext(ctx context.Context) LkeClusterPoolOutput {
	return o
}

func (o LkeClusterPoolOutput) Autoscaler() LkeClusterPoolAutoscalerPtrOutput {
	return o.ApplyT(func(v LkeClusterPool) *LkeClusterPoolAutoscaler { return v.Autoscaler }).(LkeClusterPoolAutoscalerPtrOutput)
}

// The number of nodes in the Node Pool.
func (o LkeClusterPoolOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v LkeClusterPool) int { return v.Count }).(pulumi.IntOutput)
}

// The ID of the node.
func (o LkeClusterPoolOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LkeClusterPool) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LkeClusterPoolOutput) Nodes() LkeClusterPoolNodeArrayOutput {
	return o.ApplyT(func(v LkeClusterPool) []LkeClusterPoolNode { return v.Nodes }).(LkeClusterPoolNodeArrayOutput)
}

// A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
func (o LkeClusterPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LkeClusterPool) string { return v.Type }).(pulumi.StringOutput)
}

type LkeClusterPoolArrayOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPool)(nil)).Elem()
}

func (o LkeClusterPoolArrayOutput) ToLkeClusterPoolArrayOutput() LkeClusterPoolArrayOutput {
	return o
}

func (o LkeClusterPoolArrayOutput) ToLkeClusterPoolArrayOutputWithContext(ctx context.Context) LkeClusterPoolArrayOutput {
	return o
}

func (o LkeClusterPoolArrayOutput) Index(i pulumi.IntInput) LkeClusterPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LkeClusterPool {
		return vs[0].([]LkeClusterPool)[vs[1].(int)]
	}).(LkeClusterPoolOutput)
}

type LkeClusterPoolAutoscaler struct {
	// The maximum number of nodes to autoscale to.
	Max int `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min int `pulumi:"min"`
}

// LkeClusterPoolAutoscalerInput is an input type that accepts LkeClusterPoolAutoscalerArgs and LkeClusterPoolAutoscalerOutput values.
// You can construct a concrete instance of `LkeClusterPoolAutoscalerInput` via:
//
//          LkeClusterPoolAutoscalerArgs{...}
type LkeClusterPoolAutoscalerInput interface {
	pulumi.Input

	ToLkeClusterPoolAutoscalerOutput() LkeClusterPoolAutoscalerOutput
	ToLkeClusterPoolAutoscalerOutputWithContext(context.Context) LkeClusterPoolAutoscalerOutput
}

type LkeClusterPoolAutoscalerArgs struct {
	// The maximum number of nodes to autoscale to.
	Max pulumi.IntInput `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min pulumi.IntInput `pulumi:"min"`
}

func (LkeClusterPoolAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerOutput() LkeClusterPoolAutoscalerOutput {
	return i.ToLkeClusterPoolAutoscalerOutputWithContext(context.Background())
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolAutoscalerOutput)
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return i.ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Background())
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolAutoscalerOutput).ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx)
}

// LkeClusterPoolAutoscalerPtrInput is an input type that accepts LkeClusterPoolAutoscalerArgs, LkeClusterPoolAutoscalerPtr and LkeClusterPoolAutoscalerPtrOutput values.
// You can construct a concrete instance of `LkeClusterPoolAutoscalerPtrInput` via:
//
//          LkeClusterPoolAutoscalerArgs{...}
//
//  or:
//
//          nil
type LkeClusterPoolAutoscalerPtrInput interface {
	pulumi.Input

	ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput
	ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Context) LkeClusterPoolAutoscalerPtrOutput
}

type lkeClusterPoolAutoscalerPtrType LkeClusterPoolAutoscalerArgs

func LkeClusterPoolAutoscalerPtr(v *LkeClusterPoolAutoscalerArgs) LkeClusterPoolAutoscalerPtrInput {
	return (*lkeClusterPoolAutoscalerPtrType)(v)
}

func (*lkeClusterPoolAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i *lkeClusterPoolAutoscalerPtrType) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return i.ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Background())
}

func (i *lkeClusterPoolAutoscalerPtrType) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolAutoscalerPtrOutput)
}

type LkeClusterPoolAutoscalerOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerOutput() LkeClusterPoolAutoscalerOutput {
	return o
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerOutput {
	return o
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return o.ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Background())
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LkeClusterPoolAutoscaler) *LkeClusterPoolAutoscaler {
		return &v
	}).(LkeClusterPoolAutoscalerPtrOutput)
}

// The maximum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v LkeClusterPoolAutoscaler) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v LkeClusterPoolAutoscaler) int { return v.Min }).(pulumi.IntOutput)
}

type LkeClusterPoolAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o LkeClusterPoolAutoscalerPtrOutput) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return o
}

func (o LkeClusterPoolAutoscalerPtrOutput) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return o
}

func (o LkeClusterPoolAutoscalerPtrOutput) Elem() LkeClusterPoolAutoscalerOutput {
	return o.ApplyT(func(v *LkeClusterPoolAutoscaler) LkeClusterPoolAutoscaler {
		if v != nil {
			return *v
		}
		var ret LkeClusterPoolAutoscaler
		return ret
	}).(LkeClusterPoolAutoscalerOutput)
}

// The maximum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LkeClusterPoolAutoscaler) *int {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LkeClusterPoolAutoscaler) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type LkeClusterPoolNode struct {
	// The ID of the node.
	Id *string `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId *int `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status *string `pulumi:"status"`
}

// LkeClusterPoolNodeInput is an input type that accepts LkeClusterPoolNodeArgs and LkeClusterPoolNodeOutput values.
// You can construct a concrete instance of `LkeClusterPoolNodeInput` via:
//
//          LkeClusterPoolNodeArgs{...}
type LkeClusterPoolNodeInput interface {
	pulumi.Input

	ToLkeClusterPoolNodeOutput() LkeClusterPoolNodeOutput
	ToLkeClusterPoolNodeOutputWithContext(context.Context) LkeClusterPoolNodeOutput
}

type LkeClusterPoolNodeArgs struct {
	// The ID of the node.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId pulumi.IntPtrInput `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LkeClusterPoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolNode)(nil)).Elem()
}

func (i LkeClusterPoolNodeArgs) ToLkeClusterPoolNodeOutput() LkeClusterPoolNodeOutput {
	return i.ToLkeClusterPoolNodeOutputWithContext(context.Background())
}

func (i LkeClusterPoolNodeArgs) ToLkeClusterPoolNodeOutputWithContext(ctx context.Context) LkeClusterPoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolNodeOutput)
}

// LkeClusterPoolNodeArrayInput is an input type that accepts LkeClusterPoolNodeArray and LkeClusterPoolNodeArrayOutput values.
// You can construct a concrete instance of `LkeClusterPoolNodeArrayInput` via:
//
//          LkeClusterPoolNodeArray{ LkeClusterPoolNodeArgs{...} }
type LkeClusterPoolNodeArrayInput interface {
	pulumi.Input

	ToLkeClusterPoolNodeArrayOutput() LkeClusterPoolNodeArrayOutput
	ToLkeClusterPoolNodeArrayOutputWithContext(context.Context) LkeClusterPoolNodeArrayOutput
}

type LkeClusterPoolNodeArray []LkeClusterPoolNodeInput

func (LkeClusterPoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPoolNode)(nil)).Elem()
}

func (i LkeClusterPoolNodeArray) ToLkeClusterPoolNodeArrayOutput() LkeClusterPoolNodeArrayOutput {
	return i.ToLkeClusterPoolNodeArrayOutputWithContext(context.Background())
}

func (i LkeClusterPoolNodeArray) ToLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) LkeClusterPoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolNodeArrayOutput)
}

type LkeClusterPoolNodeOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolNode)(nil)).Elem()
}

func (o LkeClusterPoolNodeOutput) ToLkeClusterPoolNodeOutput() LkeClusterPoolNodeOutput {
	return o
}

func (o LkeClusterPoolNodeOutput) ToLkeClusterPoolNodeOutputWithContext(ctx context.Context) LkeClusterPoolNodeOutput {
	return o
}

// The ID of the node.
func (o LkeClusterPoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LkeClusterPoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ID of the underlying Linode instance.
func (o LkeClusterPoolNodeOutput) InstanceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LkeClusterPoolNode) *int { return v.InstanceId }).(pulumi.IntPtrOutput)
}

// The status of the node. (`ready`, `notReady`)
func (o LkeClusterPoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LkeClusterPoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type LkeClusterPoolNodeArrayOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPoolNode)(nil)).Elem()
}

func (o LkeClusterPoolNodeArrayOutput) ToLkeClusterPoolNodeArrayOutput() LkeClusterPoolNodeArrayOutput {
	return o
}

func (o LkeClusterPoolNodeArrayOutput) ToLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) LkeClusterPoolNodeArrayOutput {
	return o
}

func (o LkeClusterPoolNodeArrayOutput) Index(i pulumi.IntInput) LkeClusterPoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LkeClusterPoolNode {
		return vs[0].([]LkeClusterPoolNode)[vs[1].(int)]
	}).(LkeClusterPoolNodeOutput)
}

type NodeBalancerConfigNodeStatus struct {
	Down *int `pulumi:"down"`
	Up   *int `pulumi:"up"`
}

// NodeBalancerConfigNodeStatusInput is an input type that accepts NodeBalancerConfigNodeStatusArgs and NodeBalancerConfigNodeStatusOutput values.
// You can construct a concrete instance of `NodeBalancerConfigNodeStatusInput` via:
//
//          NodeBalancerConfigNodeStatusArgs{...}
type NodeBalancerConfigNodeStatusInput interface {
	pulumi.Input

	ToNodeBalancerConfigNodeStatusOutput() NodeBalancerConfigNodeStatusOutput
	ToNodeBalancerConfigNodeStatusOutputWithContext(context.Context) NodeBalancerConfigNodeStatusOutput
}

type NodeBalancerConfigNodeStatusArgs struct {
	Down pulumi.IntPtrInput `pulumi:"down"`
	Up   pulumi.IntPtrInput `pulumi:"up"`
}

func (NodeBalancerConfigNodeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i NodeBalancerConfigNodeStatusArgs) ToNodeBalancerConfigNodeStatusOutput() NodeBalancerConfigNodeStatusOutput {
	return i.ToNodeBalancerConfigNodeStatusOutputWithContext(context.Background())
}

func (i NodeBalancerConfigNodeStatusArgs) ToNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerConfigNodeStatusOutput)
}

// NodeBalancerConfigNodeStatusArrayInput is an input type that accepts NodeBalancerConfigNodeStatusArray and NodeBalancerConfigNodeStatusArrayOutput values.
// You can construct a concrete instance of `NodeBalancerConfigNodeStatusArrayInput` via:
//
//          NodeBalancerConfigNodeStatusArray{ NodeBalancerConfigNodeStatusArgs{...} }
type NodeBalancerConfigNodeStatusArrayInput interface {
	pulumi.Input

	ToNodeBalancerConfigNodeStatusArrayOutput() NodeBalancerConfigNodeStatusArrayOutput
	ToNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Context) NodeBalancerConfigNodeStatusArrayOutput
}

type NodeBalancerConfigNodeStatusArray []NodeBalancerConfigNodeStatusInput

func (NodeBalancerConfigNodeStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i NodeBalancerConfigNodeStatusArray) ToNodeBalancerConfigNodeStatusArrayOutput() NodeBalancerConfigNodeStatusArrayOutput {
	return i.ToNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Background())
}

func (i NodeBalancerConfigNodeStatusArray) ToNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerConfigNodeStatusArrayOutput)
}

type NodeBalancerConfigNodeStatusOutput struct{ *pulumi.OutputState }

func (NodeBalancerConfigNodeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o NodeBalancerConfigNodeStatusOutput) ToNodeBalancerConfigNodeStatusOutput() NodeBalancerConfigNodeStatusOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusOutput) ToNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusOutput) Down() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeBalancerConfigNodeStatus) *int { return v.Down }).(pulumi.IntPtrOutput)
}

func (o NodeBalancerConfigNodeStatusOutput) Up() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeBalancerConfigNodeStatus) *int { return v.Up }).(pulumi.IntPtrOutput)
}

type NodeBalancerConfigNodeStatusArrayOutput struct{ *pulumi.OutputState }

func (NodeBalancerConfigNodeStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o NodeBalancerConfigNodeStatusArrayOutput) ToNodeBalancerConfigNodeStatusArrayOutput() NodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusArrayOutput) ToNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusArrayOutput) Index(i pulumi.IntInput) NodeBalancerConfigNodeStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeBalancerConfigNodeStatus {
		return vs[0].([]NodeBalancerConfigNodeStatus)[vs[1].(int)]
	}).(NodeBalancerConfigNodeStatusOutput)
}

type NodeBalancerTransfer struct {
	In    *float64 `pulumi:"in"`
	Out   *float64 `pulumi:"out"`
	Total *float64 `pulumi:"total"`
}

// NodeBalancerTransferInput is an input type that accepts NodeBalancerTransferArgs and NodeBalancerTransferOutput values.
// You can construct a concrete instance of `NodeBalancerTransferInput` via:
//
//          NodeBalancerTransferArgs{...}
type NodeBalancerTransferInput interface {
	pulumi.Input

	ToNodeBalancerTransferOutput() NodeBalancerTransferOutput
	ToNodeBalancerTransferOutputWithContext(context.Context) NodeBalancerTransferOutput
}

type NodeBalancerTransferArgs struct {
	In    pulumi.Float64PtrInput `pulumi:"in"`
	Out   pulumi.Float64PtrInput `pulumi:"out"`
	Total pulumi.Float64PtrInput `pulumi:"total"`
}

func (NodeBalancerTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerTransfer)(nil)).Elem()
}

func (i NodeBalancerTransferArgs) ToNodeBalancerTransferOutput() NodeBalancerTransferOutput {
	return i.ToNodeBalancerTransferOutputWithContext(context.Background())
}

func (i NodeBalancerTransferArgs) ToNodeBalancerTransferOutputWithContext(ctx context.Context) NodeBalancerTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerTransferOutput)
}

// NodeBalancerTransferArrayInput is an input type that accepts NodeBalancerTransferArray and NodeBalancerTransferArrayOutput values.
// You can construct a concrete instance of `NodeBalancerTransferArrayInput` via:
//
//          NodeBalancerTransferArray{ NodeBalancerTransferArgs{...} }
type NodeBalancerTransferArrayInput interface {
	pulumi.Input

	ToNodeBalancerTransferArrayOutput() NodeBalancerTransferArrayOutput
	ToNodeBalancerTransferArrayOutputWithContext(context.Context) NodeBalancerTransferArrayOutput
}

type NodeBalancerTransferArray []NodeBalancerTransferInput

func (NodeBalancerTransferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerTransfer)(nil)).Elem()
}

func (i NodeBalancerTransferArray) ToNodeBalancerTransferArrayOutput() NodeBalancerTransferArrayOutput {
	return i.ToNodeBalancerTransferArrayOutputWithContext(context.Background())
}

func (i NodeBalancerTransferArray) ToNodeBalancerTransferArrayOutputWithContext(ctx context.Context) NodeBalancerTransferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerTransferArrayOutput)
}

type NodeBalancerTransferOutput struct{ *pulumi.OutputState }

func (NodeBalancerTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerTransfer)(nil)).Elem()
}

func (o NodeBalancerTransferOutput) ToNodeBalancerTransferOutput() NodeBalancerTransferOutput {
	return o
}

func (o NodeBalancerTransferOutput) ToNodeBalancerTransferOutputWithContext(ctx context.Context) NodeBalancerTransferOutput {
	return o
}

func (o NodeBalancerTransferOutput) In() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeBalancerTransfer) *float64 { return v.In }).(pulumi.Float64PtrOutput)
}

func (o NodeBalancerTransferOutput) Out() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeBalancerTransfer) *float64 { return v.Out }).(pulumi.Float64PtrOutput)
}

func (o NodeBalancerTransferOutput) Total() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeBalancerTransfer) *float64 { return v.Total }).(pulumi.Float64PtrOutput)
}

type NodeBalancerTransferArrayOutput struct{ *pulumi.OutputState }

func (NodeBalancerTransferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerTransfer)(nil)).Elem()
}

func (o NodeBalancerTransferArrayOutput) ToNodeBalancerTransferArrayOutput() NodeBalancerTransferArrayOutput {
	return o
}

func (o NodeBalancerTransferArrayOutput) ToNodeBalancerTransferArrayOutputWithContext(ctx context.Context) NodeBalancerTransferArrayOutput {
	return o
}

func (o NodeBalancerTransferArrayOutput) Index(i pulumi.IntInput) NodeBalancerTransferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeBalancerTransfer {
		return vs[0].([]NodeBalancerTransfer)[vs[1].(int)]
	}).(NodeBalancerTransferOutput)
}

type ObjectStorageBucketCert struct {
	// The Base64 encoded and PEM formatted SSL certificate.
	Certificate string `pulumi:"certificate"`
	// The private key associated with the TLS/SSL certificate.
	PrivateKey string `pulumi:"privateKey"`
}

// ObjectStorageBucketCertInput is an input type that accepts ObjectStorageBucketCertArgs and ObjectStorageBucketCertOutput values.
// You can construct a concrete instance of `ObjectStorageBucketCertInput` via:
//
//          ObjectStorageBucketCertArgs{...}
type ObjectStorageBucketCertInput interface {
	pulumi.Input

	ToObjectStorageBucketCertOutput() ObjectStorageBucketCertOutput
	ToObjectStorageBucketCertOutputWithContext(context.Context) ObjectStorageBucketCertOutput
}

type ObjectStorageBucketCertArgs struct {
	// The Base64 encoded and PEM formatted SSL certificate.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// The private key associated with the TLS/SSL certificate.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (ObjectStorageBucketCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketCert)(nil)).Elem()
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertOutput() ObjectStorageBucketCertOutput {
	return i.ToObjectStorageBucketCertOutputWithContext(context.Background())
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertOutputWithContext(ctx context.Context) ObjectStorageBucketCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketCertOutput)
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return i.ToObjectStorageBucketCertPtrOutputWithContext(context.Background())
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketCertOutput).ToObjectStorageBucketCertPtrOutputWithContext(ctx)
}

// ObjectStorageBucketCertPtrInput is an input type that accepts ObjectStorageBucketCertArgs, ObjectStorageBucketCertPtr and ObjectStorageBucketCertPtrOutput values.
// You can construct a concrete instance of `ObjectStorageBucketCertPtrInput` via:
//
//          ObjectStorageBucketCertArgs{...}
//
//  or:
//
//          nil
type ObjectStorageBucketCertPtrInput interface {
	pulumi.Input

	ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput
	ToObjectStorageBucketCertPtrOutputWithContext(context.Context) ObjectStorageBucketCertPtrOutput
}

type objectStorageBucketCertPtrType ObjectStorageBucketCertArgs

func ObjectStorageBucketCertPtr(v *ObjectStorageBucketCertArgs) ObjectStorageBucketCertPtrInput {
	return (*objectStorageBucketCertPtrType)(v)
}

func (*objectStorageBucketCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketCert)(nil)).Elem()
}

func (i *objectStorageBucketCertPtrType) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return i.ToObjectStorageBucketCertPtrOutputWithContext(context.Background())
}

func (i *objectStorageBucketCertPtrType) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketCertPtrOutput)
}

type ObjectStorageBucketCertOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketCert)(nil)).Elem()
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertOutput() ObjectStorageBucketCertOutput {
	return o
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertOutputWithContext(ctx context.Context) ObjectStorageBucketCertOutput {
	return o
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return o.ToObjectStorageBucketCertPtrOutputWithContext(context.Background())
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectStorageBucketCert) *ObjectStorageBucketCert {
		return &v
	}).(ObjectStorageBucketCertPtrOutput)
}

// The Base64 encoded and PEM formatted SSL certificate.
func (o ObjectStorageBucketCertOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageBucketCert) string { return v.Certificate }).(pulumi.StringOutput)
}

// The private key associated with the TLS/SSL certificate.
func (o ObjectStorageBucketCertOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageBucketCert) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type ObjectStorageBucketCertPtrOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketCert)(nil)).Elem()
}

func (o ObjectStorageBucketCertPtrOutput) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return o
}

func (o ObjectStorageBucketCertPtrOutput) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return o
}

func (o ObjectStorageBucketCertPtrOutput) Elem() ObjectStorageBucketCertOutput {
	return o.ApplyT(func(v *ObjectStorageBucketCert) ObjectStorageBucketCert {
		if v != nil {
			return *v
		}
		var ret ObjectStorageBucketCert
		return ret
	}).(ObjectStorageBucketCertOutput)
}

// The Base64 encoded and PEM formatted SSL certificate.
func (o ObjectStorageBucketCertPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketCert) *string {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The private key associated with the TLS/SSL certificate.
func (o ObjectStorageBucketCertPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketCert) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type ObjectStorageBucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	AbortIncompleteMultipartUploadDays *int `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies whether the lifecycle rule is active.
	Enabled    bool                                        `pulumi:"enabled"`
	Expiration *ObjectStorageBucketLifecycleRuleExpiration `pulumi:"expiration"`
	// The unique identifier for the rule.
	Id                          *string                                                      `pulumi:"id"`
	NoncurrentVersionExpiration *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// The object key prefix identifying one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
}

// ObjectStorageBucketLifecycleRuleInput is an input type that accepts ObjectStorageBucketLifecycleRuleArgs and ObjectStorageBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleInput` via:
//
//          ObjectStorageBucketLifecycleRuleArgs{...}
type ObjectStorageBucketLifecycleRuleInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleOutput() ObjectStorageBucketLifecycleRuleOutput
	ToObjectStorageBucketLifecycleRuleOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleOutput
}

type ObjectStorageBucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	AbortIncompleteMultipartUploadDays pulumi.IntPtrInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies whether the lifecycle rule is active.
	Enabled    pulumi.BoolInput                                   `pulumi:"enabled"`
	Expiration ObjectStorageBucketLifecycleRuleExpirationPtrInput `pulumi:"expiration"`
	// The unique identifier for the rule.
	Id                          pulumi.StringPtrInput                                               `pulumi:"id"`
	NoncurrentVersionExpiration ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// The object key prefix identifying one or more objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ObjectStorageBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleArgs) ToObjectStorageBucketLifecycleRuleOutput() ObjectStorageBucketLifecycleRuleOutput {
	return i.ToObjectStorageBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleArgs) ToObjectStorageBucketLifecycleRuleOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleOutput)
}

// ObjectStorageBucketLifecycleRuleArrayInput is an input type that accepts ObjectStorageBucketLifecycleRuleArray and ObjectStorageBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleArrayInput` via:
//
//          ObjectStorageBucketLifecycleRuleArray{ ObjectStorageBucketLifecycleRuleArgs{...} }
type ObjectStorageBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleArrayOutput() ObjectStorageBucketLifecycleRuleArrayOutput
	ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleArrayOutput
}

type ObjectStorageBucketLifecycleRuleArray []ObjectStorageBucketLifecycleRuleInput

func (ObjectStorageBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleArray) ToObjectStorageBucketLifecycleRuleArrayOutput() ObjectStorageBucketLifecycleRuleArrayOutput {
	return i.ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleArray) ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleArrayOutput)
}

type ObjectStorageBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleOutput) ToObjectStorageBucketLifecycleRuleOutput() ObjectStorageBucketLifecycleRuleOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleOutput) ToObjectStorageBucketLifecycleRuleOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleOutput {
	return o
}

// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
func (o ObjectStorageBucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntPtrOutput)
}

// Specifies whether the lifecycle rule is active.
func (o ObjectStorageBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ObjectStorageBucketLifecycleRuleOutput) Expiration() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *ObjectStorageBucketLifecycleRuleExpiration {
		return v.Expiration
	}).(ObjectStorageBucketLifecycleRuleExpirationPtrOutput)
}

// The unique identifier for the rule.
func (o ObjectStorageBucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ObjectStorageBucketLifecycleRuleOutput) NoncurrentVersionExpiration() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return v.NoncurrentVersionExpiration
	}).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// The object key prefix identifying one or more objects to which the rule applies.
func (o ObjectStorageBucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ObjectStorageBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) ToObjectStorageBucketLifecycleRuleArrayOutput() ObjectStorageBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) ObjectStorageBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStorageBucketLifecycleRule {
		return vs[0].([]ObjectStorageBucketLifecycleRule)[vs[1].(int)]
	}).(ObjectStorageBucketLifecycleRuleOutput)
}

type ObjectStorageBucketLifecycleRuleExpiration struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date *string `pulumi:"date"`
	// Specifies the number of days non-current object versions expire.
	Days *int `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

// ObjectStorageBucketLifecycleRuleExpirationInput is an input type that accepts ObjectStorageBucketLifecycleRuleExpirationArgs and ObjectStorageBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleExpirationInput` via:
//
//          ObjectStorageBucketLifecycleRuleExpirationArgs{...}
type ObjectStorageBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleExpirationOutput() ObjectStorageBucketLifecycleRuleExpirationOutput
	ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleExpirationOutput
}

type ObjectStorageBucketLifecycleRuleExpirationArgs struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Specifies the number of days non-current object versions expire.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
}

func (ObjectStorageBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationOutput() ObjectStorageBucketLifecycleRuleExpirationOutput {
	return i.ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleExpirationOutput)
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleExpirationOutput).ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

// ObjectStorageBucketLifecycleRuleExpirationPtrInput is an input type that accepts ObjectStorageBucketLifecycleRuleExpirationArgs, ObjectStorageBucketLifecycleRuleExpirationPtr and ObjectStorageBucketLifecycleRuleExpirationPtrOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleExpirationPtrInput` via:
//
//          ObjectStorageBucketLifecycleRuleExpirationArgs{...}
//
//  or:
//
//          nil
type ObjectStorageBucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput
	ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput
}

type objectStorageBucketLifecycleRuleExpirationPtrType ObjectStorageBucketLifecycleRuleExpirationArgs

func ObjectStorageBucketLifecycleRuleExpirationPtr(v *ObjectStorageBucketLifecycleRuleExpirationArgs) ObjectStorageBucketLifecycleRuleExpirationPtrInput {
	return (*objectStorageBucketLifecycleRuleExpirationPtrType)(v)
}

func (*objectStorageBucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *objectStorageBucketLifecycleRuleExpirationPtrType) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *objectStorageBucketLifecycleRuleExpirationPtrType) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleExpirationPtrOutput)
}

type ObjectStorageBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationOutput() ObjectStorageBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectStorageBucketLifecycleRuleExpiration) *ObjectStorageBucketLifecycleRuleExpiration {
		return &v
	}).(ObjectStorageBucketLifecycleRuleExpirationPtrOutput)
}

// Specifies the date after which you want the corresponding action to take effect.
func (o ObjectStorageBucketLifecycleRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Specifies the number of days non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type ObjectStorageBucketLifecycleRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) Elem() ObjectStorageBucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) ObjectStorageBucketLifecycleRuleExpiration {
		if v != nil {
			return *v
		}
		var ret ObjectStorageBucketLifecycleRuleExpiration
		return ret
	}).(ObjectStorageBucketLifecycleRuleExpirationOutput)
}

// Specifies the date after which you want the corresponding action to take effect.
func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) *bool {
		if v == nil {
			return nil
		}
		return v.ExpiredObjectDeleteMarker
	}).(pulumi.BoolPtrOutput)
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration struct {
	// Specifies the number of days non-current object versions expire.
	Days int `pulumi:"days"`
}

// ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput is an input type that accepts ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs and ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput` via:
//
//          ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	// Specifies the number of days non-current object versions expire.
	Days pulumi.IntInput `pulumi:"days"`
}

func (ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput).ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

// ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput is an input type that accepts ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs, ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtr and ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput` via:
//
//          ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
//
//  or:
//
//          nil
type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
}

type objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs

func ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtr(v *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput {
	return (*objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType)(v)
}

func (*objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i *objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return &v
	}).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// Specifies the number of days non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Elem() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
		if v != nil {
			return *v
		}
		var ret ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration
		return ret
	}).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// Specifies the number of days non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return &v.Days
	}).(pulumi.IntPtrOutput)
}

type ObjectStorageKeyBucketAccess struct {
	// The unique label of the bucket to which the key will grant limited access.
	BucketName string `pulumi:"bucketName"`
	// The Object Storage cluster where a bucket to which the key is granting access is hosted.
	Cluster string `pulumi:"cluster"`
	// This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
	Permissions string `pulumi:"permissions"`
}

// ObjectStorageKeyBucketAccessInput is an input type that accepts ObjectStorageKeyBucketAccessArgs and ObjectStorageKeyBucketAccessOutput values.
// You can construct a concrete instance of `ObjectStorageKeyBucketAccessInput` via:
//
//          ObjectStorageKeyBucketAccessArgs{...}
type ObjectStorageKeyBucketAccessInput interface {
	pulumi.Input

	ToObjectStorageKeyBucketAccessOutput() ObjectStorageKeyBucketAccessOutput
	ToObjectStorageKeyBucketAccessOutputWithContext(context.Context) ObjectStorageKeyBucketAccessOutput
}

type ObjectStorageKeyBucketAccessArgs struct {
	// The unique label of the bucket to which the key will grant limited access.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The Object Storage cluster where a bucket to which the key is granting access is hosted.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (ObjectStorageKeyBucketAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (i ObjectStorageKeyBucketAccessArgs) ToObjectStorageKeyBucketAccessOutput() ObjectStorageKeyBucketAccessOutput {
	return i.ToObjectStorageKeyBucketAccessOutputWithContext(context.Background())
}

func (i ObjectStorageKeyBucketAccessArgs) ToObjectStorageKeyBucketAccessOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageKeyBucketAccessOutput)
}

// ObjectStorageKeyBucketAccessArrayInput is an input type that accepts ObjectStorageKeyBucketAccessArray and ObjectStorageKeyBucketAccessArrayOutput values.
// You can construct a concrete instance of `ObjectStorageKeyBucketAccessArrayInput` via:
//
//          ObjectStorageKeyBucketAccessArray{ ObjectStorageKeyBucketAccessArgs{...} }
type ObjectStorageKeyBucketAccessArrayInput interface {
	pulumi.Input

	ToObjectStorageKeyBucketAccessArrayOutput() ObjectStorageKeyBucketAccessArrayOutput
	ToObjectStorageKeyBucketAccessArrayOutputWithContext(context.Context) ObjectStorageKeyBucketAccessArrayOutput
}

type ObjectStorageKeyBucketAccessArray []ObjectStorageKeyBucketAccessInput

func (ObjectStorageKeyBucketAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (i ObjectStorageKeyBucketAccessArray) ToObjectStorageKeyBucketAccessArrayOutput() ObjectStorageKeyBucketAccessArrayOutput {
	return i.ToObjectStorageKeyBucketAccessArrayOutputWithContext(context.Background())
}

func (i ObjectStorageKeyBucketAccessArray) ToObjectStorageKeyBucketAccessArrayOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageKeyBucketAccessArrayOutput)
}

type ObjectStorageKeyBucketAccessOutput struct{ *pulumi.OutputState }

func (ObjectStorageKeyBucketAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (o ObjectStorageKeyBucketAccessOutput) ToObjectStorageKeyBucketAccessOutput() ObjectStorageKeyBucketAccessOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessOutput) ToObjectStorageKeyBucketAccessOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessOutput {
	return o
}

// The unique label of the bucket to which the key will grant limited access.
func (o ObjectStorageKeyBucketAccessOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageKeyBucketAccess) string { return v.BucketName }).(pulumi.StringOutput)
}

// The Object Storage cluster where a bucket to which the key is granting access is hosted.
func (o ObjectStorageKeyBucketAccessOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageKeyBucketAccess) string { return v.Cluster }).(pulumi.StringOutput)
}

// This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
func (o ObjectStorageKeyBucketAccessOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageKeyBucketAccess) string { return v.Permissions }).(pulumi.StringOutput)
}

type ObjectStorageKeyBucketAccessArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageKeyBucketAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (o ObjectStorageKeyBucketAccessArrayOutput) ToObjectStorageKeyBucketAccessArrayOutput() ObjectStorageKeyBucketAccessArrayOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessArrayOutput) ToObjectStorageKeyBucketAccessArrayOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessArrayOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessArrayOutput) Index(i pulumi.IntInput) ObjectStorageKeyBucketAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStorageKeyBucketAccess {
		return vs[0].([]ObjectStorageKeyBucketAccess)[vs[1].(int)]
	}).(ObjectStorageKeyBucketAccessOutput)
}

type StackScriptUserDefinedField struct {
	Default *string `pulumi:"default"`
	Example *string `pulumi:"example"`
	// The StackScript's label is for display purposes only.
	Label  *string `pulumi:"label"`
	ManyOf *string `pulumi:"manyOf"`
	Name   *string `pulumi:"name"`
	OneOf  *string `pulumi:"oneOf"`
}

// StackScriptUserDefinedFieldInput is an input type that accepts StackScriptUserDefinedFieldArgs and StackScriptUserDefinedFieldOutput values.
// You can construct a concrete instance of `StackScriptUserDefinedFieldInput` via:
//
//          StackScriptUserDefinedFieldArgs{...}
type StackScriptUserDefinedFieldInput interface {
	pulumi.Input

	ToStackScriptUserDefinedFieldOutput() StackScriptUserDefinedFieldOutput
	ToStackScriptUserDefinedFieldOutputWithContext(context.Context) StackScriptUserDefinedFieldOutput
}

type StackScriptUserDefinedFieldArgs struct {
	Default pulumi.StringPtrInput `pulumi:"default"`
	Example pulumi.StringPtrInput `pulumi:"example"`
	// The StackScript's label is for display purposes only.
	Label  pulumi.StringPtrInput `pulumi:"label"`
	ManyOf pulumi.StringPtrInput `pulumi:"manyOf"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
	OneOf  pulumi.StringPtrInput `pulumi:"oneOf"`
}

func (StackScriptUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackScriptUserDefinedField)(nil)).Elem()
}

func (i StackScriptUserDefinedFieldArgs) ToStackScriptUserDefinedFieldOutput() StackScriptUserDefinedFieldOutput {
	return i.ToStackScriptUserDefinedFieldOutputWithContext(context.Background())
}

func (i StackScriptUserDefinedFieldArgs) ToStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackScriptUserDefinedFieldOutput)
}

// StackScriptUserDefinedFieldArrayInput is an input type that accepts StackScriptUserDefinedFieldArray and StackScriptUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `StackScriptUserDefinedFieldArrayInput` via:
//
//          StackScriptUserDefinedFieldArray{ StackScriptUserDefinedFieldArgs{...} }
type StackScriptUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToStackScriptUserDefinedFieldArrayOutput() StackScriptUserDefinedFieldArrayOutput
	ToStackScriptUserDefinedFieldArrayOutputWithContext(context.Context) StackScriptUserDefinedFieldArrayOutput
}

type StackScriptUserDefinedFieldArray []StackScriptUserDefinedFieldInput

func (StackScriptUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackScriptUserDefinedField)(nil)).Elem()
}

func (i StackScriptUserDefinedFieldArray) ToStackScriptUserDefinedFieldArrayOutput() StackScriptUserDefinedFieldArrayOutput {
	return i.ToStackScriptUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i StackScriptUserDefinedFieldArray) ToStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackScriptUserDefinedFieldArrayOutput)
}

type StackScriptUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (StackScriptUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackScriptUserDefinedField)(nil)).Elem()
}

func (o StackScriptUserDefinedFieldOutput) ToStackScriptUserDefinedFieldOutput() StackScriptUserDefinedFieldOutput {
	return o
}

func (o StackScriptUserDefinedFieldOutput) ToStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldOutput {
	return o
}

func (o StackScriptUserDefinedFieldOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o StackScriptUserDefinedFieldOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// The StackScript's label is for display purposes only.
func (o StackScriptUserDefinedFieldOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o StackScriptUserDefinedFieldOutput) ManyOf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) *string { return v.ManyOf }).(pulumi.StringPtrOutput)
}

func (o StackScriptUserDefinedFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StackScriptUserDefinedFieldOutput) OneOf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) *string { return v.OneOf }).(pulumi.StringPtrOutput)
}

type StackScriptUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (StackScriptUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackScriptUserDefinedField)(nil)).Elem()
}

func (o StackScriptUserDefinedFieldArrayOutput) ToStackScriptUserDefinedFieldArrayOutput() StackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o StackScriptUserDefinedFieldArrayOutput) ToStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o StackScriptUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) StackScriptUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackScriptUserDefinedField {
		return vs[0].([]StackScriptUserDefinedField)[vs[1].(int)]
	}).(StackScriptUserDefinedFieldOutput)
}

type UserDomainGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserDomainGrantInput is an input type that accepts UserDomainGrantArgs and UserDomainGrantOutput values.
// You can construct a concrete instance of `UserDomainGrantInput` via:
//
//          UserDomainGrantArgs{...}
type UserDomainGrantInput interface {
	pulumi.Input

	ToUserDomainGrantOutput() UserDomainGrantOutput
	ToUserDomainGrantOutputWithContext(context.Context) UserDomainGrantOutput
}

type UserDomainGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserDomainGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDomainGrant)(nil)).Elem()
}

func (i UserDomainGrantArgs) ToUserDomainGrantOutput() UserDomainGrantOutput {
	return i.ToUserDomainGrantOutputWithContext(context.Background())
}

func (i UserDomainGrantArgs) ToUserDomainGrantOutputWithContext(ctx context.Context) UserDomainGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDomainGrantOutput)
}

// UserDomainGrantArrayInput is an input type that accepts UserDomainGrantArray and UserDomainGrantArrayOutput values.
// You can construct a concrete instance of `UserDomainGrantArrayInput` via:
//
//          UserDomainGrantArray{ UserDomainGrantArgs{...} }
type UserDomainGrantArrayInput interface {
	pulumi.Input

	ToUserDomainGrantArrayOutput() UserDomainGrantArrayOutput
	ToUserDomainGrantArrayOutputWithContext(context.Context) UserDomainGrantArrayOutput
}

type UserDomainGrantArray []UserDomainGrantInput

func (UserDomainGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDomainGrant)(nil)).Elem()
}

func (i UserDomainGrantArray) ToUserDomainGrantArrayOutput() UserDomainGrantArrayOutput {
	return i.ToUserDomainGrantArrayOutputWithContext(context.Background())
}

func (i UserDomainGrantArray) ToUserDomainGrantArrayOutputWithContext(ctx context.Context) UserDomainGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDomainGrantArrayOutput)
}

type UserDomainGrantOutput struct{ *pulumi.OutputState }

func (UserDomainGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDomainGrant)(nil)).Elem()
}

func (o UserDomainGrantOutput) ToUserDomainGrantOutput() UserDomainGrantOutput {
	return o
}

func (o UserDomainGrantOutput) ToUserDomainGrantOutputWithContext(ctx context.Context) UserDomainGrantOutput {
	return o
}

func (o UserDomainGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserDomainGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserDomainGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserDomainGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserDomainGrantArrayOutput struct{ *pulumi.OutputState }

func (UserDomainGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDomainGrant)(nil)).Elem()
}

func (o UserDomainGrantArrayOutput) ToUserDomainGrantArrayOutput() UserDomainGrantArrayOutput {
	return o
}

func (o UserDomainGrantArrayOutput) ToUserDomainGrantArrayOutputWithContext(ctx context.Context) UserDomainGrantArrayOutput {
	return o
}

func (o UserDomainGrantArrayOutput) Index(i pulumi.IntInput) UserDomainGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDomainGrant {
		return vs[0].([]UserDomainGrant)[vs[1].(int)]
	}).(UserDomainGrantOutput)
}

type UserFirewallGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserFirewallGrantInput is an input type that accepts UserFirewallGrantArgs and UserFirewallGrantOutput values.
// You can construct a concrete instance of `UserFirewallGrantInput` via:
//
//          UserFirewallGrantArgs{...}
type UserFirewallGrantInput interface {
	pulumi.Input

	ToUserFirewallGrantOutput() UserFirewallGrantOutput
	ToUserFirewallGrantOutputWithContext(context.Context) UserFirewallGrantOutput
}

type UserFirewallGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserFirewallGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFirewallGrant)(nil)).Elem()
}

func (i UserFirewallGrantArgs) ToUserFirewallGrantOutput() UserFirewallGrantOutput {
	return i.ToUserFirewallGrantOutputWithContext(context.Background())
}

func (i UserFirewallGrantArgs) ToUserFirewallGrantOutputWithContext(ctx context.Context) UserFirewallGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFirewallGrantOutput)
}

// UserFirewallGrantArrayInput is an input type that accepts UserFirewallGrantArray and UserFirewallGrantArrayOutput values.
// You can construct a concrete instance of `UserFirewallGrantArrayInput` via:
//
//          UserFirewallGrantArray{ UserFirewallGrantArgs{...} }
type UserFirewallGrantArrayInput interface {
	pulumi.Input

	ToUserFirewallGrantArrayOutput() UserFirewallGrantArrayOutput
	ToUserFirewallGrantArrayOutputWithContext(context.Context) UserFirewallGrantArrayOutput
}

type UserFirewallGrantArray []UserFirewallGrantInput

func (UserFirewallGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFirewallGrant)(nil)).Elem()
}

func (i UserFirewallGrantArray) ToUserFirewallGrantArrayOutput() UserFirewallGrantArrayOutput {
	return i.ToUserFirewallGrantArrayOutputWithContext(context.Background())
}

func (i UserFirewallGrantArray) ToUserFirewallGrantArrayOutputWithContext(ctx context.Context) UserFirewallGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFirewallGrantArrayOutput)
}

type UserFirewallGrantOutput struct{ *pulumi.OutputState }

func (UserFirewallGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFirewallGrant)(nil)).Elem()
}

func (o UserFirewallGrantOutput) ToUserFirewallGrantOutput() UserFirewallGrantOutput {
	return o
}

func (o UserFirewallGrantOutput) ToUserFirewallGrantOutputWithContext(ctx context.Context) UserFirewallGrantOutput {
	return o
}

func (o UserFirewallGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserFirewallGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserFirewallGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserFirewallGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserFirewallGrantArrayOutput struct{ *pulumi.OutputState }

func (UserFirewallGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFirewallGrant)(nil)).Elem()
}

func (o UserFirewallGrantArrayOutput) ToUserFirewallGrantArrayOutput() UserFirewallGrantArrayOutput {
	return o
}

func (o UserFirewallGrantArrayOutput) ToUserFirewallGrantArrayOutputWithContext(ctx context.Context) UserFirewallGrantArrayOutput {
	return o
}

func (o UserFirewallGrantArrayOutput) Index(i pulumi.IntInput) UserFirewallGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserFirewallGrant {
		return vs[0].([]UserFirewallGrant)[vs[1].(int)]
	}).(UserFirewallGrantOutput)
}

type UserGlobalGrants struct {
	AccountAccess        *string `pulumi:"accountAccess"`
	AddDomains           *bool   `pulumi:"addDomains"`
	AddFirewalls         *bool   `pulumi:"addFirewalls"`
	AddImages            *bool   `pulumi:"addImages"`
	AddLinodes           *bool   `pulumi:"addLinodes"`
	AddLongview          *bool   `pulumi:"addLongview"`
	AddNodebalancers     *bool   `pulumi:"addNodebalancers"`
	AddStackscripts      *bool   `pulumi:"addStackscripts"`
	AddVolumes           *bool   `pulumi:"addVolumes"`
	CancelAccount        *bool   `pulumi:"cancelAccount"`
	LongviewSubscription *bool   `pulumi:"longviewSubscription"`
}

// UserGlobalGrantsInput is an input type that accepts UserGlobalGrantsArgs and UserGlobalGrantsOutput values.
// You can construct a concrete instance of `UserGlobalGrantsInput` via:
//
//          UserGlobalGrantsArgs{...}
type UserGlobalGrantsInput interface {
	pulumi.Input

	ToUserGlobalGrantsOutput() UserGlobalGrantsOutput
	ToUserGlobalGrantsOutputWithContext(context.Context) UserGlobalGrantsOutput
}

type UserGlobalGrantsArgs struct {
	AccountAccess        pulumi.StringPtrInput `pulumi:"accountAccess"`
	AddDomains           pulumi.BoolPtrInput   `pulumi:"addDomains"`
	AddFirewalls         pulumi.BoolPtrInput   `pulumi:"addFirewalls"`
	AddImages            pulumi.BoolPtrInput   `pulumi:"addImages"`
	AddLinodes           pulumi.BoolPtrInput   `pulumi:"addLinodes"`
	AddLongview          pulumi.BoolPtrInput   `pulumi:"addLongview"`
	AddNodebalancers     pulumi.BoolPtrInput   `pulumi:"addNodebalancers"`
	AddStackscripts      pulumi.BoolPtrInput   `pulumi:"addStackscripts"`
	AddVolumes           pulumi.BoolPtrInput   `pulumi:"addVolumes"`
	CancelAccount        pulumi.BoolPtrInput   `pulumi:"cancelAccount"`
	LongviewSubscription pulumi.BoolPtrInput   `pulumi:"longviewSubscription"`
}

func (UserGlobalGrantsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGlobalGrants)(nil)).Elem()
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsOutput() UserGlobalGrantsOutput {
	return i.ToUserGlobalGrantsOutputWithContext(context.Background())
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsOutputWithContext(ctx context.Context) UserGlobalGrantsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGlobalGrantsOutput)
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return i.ToUserGlobalGrantsPtrOutputWithContext(context.Background())
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGlobalGrantsOutput).ToUserGlobalGrantsPtrOutputWithContext(ctx)
}

// UserGlobalGrantsPtrInput is an input type that accepts UserGlobalGrantsArgs, UserGlobalGrantsPtr and UserGlobalGrantsPtrOutput values.
// You can construct a concrete instance of `UserGlobalGrantsPtrInput` via:
//
//          UserGlobalGrantsArgs{...}
//
//  or:
//
//          nil
type UserGlobalGrantsPtrInput interface {
	pulumi.Input

	ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput
	ToUserGlobalGrantsPtrOutputWithContext(context.Context) UserGlobalGrantsPtrOutput
}

type userGlobalGrantsPtrType UserGlobalGrantsArgs

func UserGlobalGrantsPtr(v *UserGlobalGrantsArgs) UserGlobalGrantsPtrInput {
	return (*userGlobalGrantsPtrType)(v)
}

func (*userGlobalGrantsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGlobalGrants)(nil)).Elem()
}

func (i *userGlobalGrantsPtrType) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return i.ToUserGlobalGrantsPtrOutputWithContext(context.Background())
}

func (i *userGlobalGrantsPtrType) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGlobalGrantsPtrOutput)
}

type UserGlobalGrantsOutput struct{ *pulumi.OutputState }

func (UserGlobalGrantsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGlobalGrants)(nil)).Elem()
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsOutput() UserGlobalGrantsOutput {
	return o
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsOutputWithContext(ctx context.Context) UserGlobalGrantsOutput {
	return o
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return o.ToUserGlobalGrantsPtrOutputWithContext(context.Background())
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserGlobalGrants) *UserGlobalGrants {
		return &v
	}).(UserGlobalGrantsPtrOutput)
}

func (o UserGlobalGrantsOutput) AccountAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *string { return v.AccountAccess }).(pulumi.StringPtrOutput)
}

func (o UserGlobalGrantsOutput) AddDomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddDomains }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddFirewalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddFirewalls }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddImages }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddLinodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddLinodes }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddLongview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddLongview }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddNodebalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddNodebalancers }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddStackscripts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddStackscripts }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddVolumes }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) CancelAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.CancelAccount }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) LongviewSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.LongviewSubscription }).(pulumi.BoolPtrOutput)
}

type UserGlobalGrantsPtrOutput struct{ *pulumi.OutputState }

func (UserGlobalGrantsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGlobalGrants)(nil)).Elem()
}

func (o UserGlobalGrantsPtrOutput) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return o
}

func (o UserGlobalGrantsPtrOutput) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return o
}

func (o UserGlobalGrantsPtrOutput) Elem() UserGlobalGrantsOutput {
	return o.ApplyT(func(v *UserGlobalGrants) UserGlobalGrants {
		if v != nil {
			return *v
		}
		var ret UserGlobalGrants
		return ret
	}).(UserGlobalGrantsOutput)
}

func (o UserGlobalGrantsPtrOutput) AccountAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *string {
		if v == nil {
			return nil
		}
		return v.AccountAccess
	}).(pulumi.StringPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddDomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddDomains
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddFirewalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddFirewalls
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddImages
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddLinodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddLinodes
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddLongview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddLongview
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddNodebalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddNodebalancers
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddStackscripts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddStackscripts
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddVolumes
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) CancelAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.CancelAccount
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) LongviewSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.LongviewSubscription
	}).(pulumi.BoolPtrOutput)
}

type UserImageGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserImageGrantInput is an input type that accepts UserImageGrantArgs and UserImageGrantOutput values.
// You can construct a concrete instance of `UserImageGrantInput` via:
//
//          UserImageGrantArgs{...}
type UserImageGrantInput interface {
	pulumi.Input

	ToUserImageGrantOutput() UserImageGrantOutput
	ToUserImageGrantOutputWithContext(context.Context) UserImageGrantOutput
}

type UserImageGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserImageGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserImageGrant)(nil)).Elem()
}

func (i UserImageGrantArgs) ToUserImageGrantOutput() UserImageGrantOutput {
	return i.ToUserImageGrantOutputWithContext(context.Background())
}

func (i UserImageGrantArgs) ToUserImageGrantOutputWithContext(ctx context.Context) UserImageGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserImageGrantOutput)
}

// UserImageGrantArrayInput is an input type that accepts UserImageGrantArray and UserImageGrantArrayOutput values.
// You can construct a concrete instance of `UserImageGrantArrayInput` via:
//
//          UserImageGrantArray{ UserImageGrantArgs{...} }
type UserImageGrantArrayInput interface {
	pulumi.Input

	ToUserImageGrantArrayOutput() UserImageGrantArrayOutput
	ToUserImageGrantArrayOutputWithContext(context.Context) UserImageGrantArrayOutput
}

type UserImageGrantArray []UserImageGrantInput

func (UserImageGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserImageGrant)(nil)).Elem()
}

func (i UserImageGrantArray) ToUserImageGrantArrayOutput() UserImageGrantArrayOutput {
	return i.ToUserImageGrantArrayOutputWithContext(context.Background())
}

func (i UserImageGrantArray) ToUserImageGrantArrayOutputWithContext(ctx context.Context) UserImageGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserImageGrantArrayOutput)
}

type UserImageGrantOutput struct{ *pulumi.OutputState }

func (UserImageGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserImageGrant)(nil)).Elem()
}

func (o UserImageGrantOutput) ToUserImageGrantOutput() UserImageGrantOutput {
	return o
}

func (o UserImageGrantOutput) ToUserImageGrantOutputWithContext(ctx context.Context) UserImageGrantOutput {
	return o
}

func (o UserImageGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserImageGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserImageGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserImageGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserImageGrantArrayOutput struct{ *pulumi.OutputState }

func (UserImageGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserImageGrant)(nil)).Elem()
}

func (o UserImageGrantArrayOutput) ToUserImageGrantArrayOutput() UserImageGrantArrayOutput {
	return o
}

func (o UserImageGrantArrayOutput) ToUserImageGrantArrayOutputWithContext(ctx context.Context) UserImageGrantArrayOutput {
	return o
}

func (o UserImageGrantArrayOutput) Index(i pulumi.IntInput) UserImageGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserImageGrant {
		return vs[0].([]UserImageGrant)[vs[1].(int)]
	}).(UserImageGrantOutput)
}

type UserLinodeGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserLinodeGrantInput is an input type that accepts UserLinodeGrantArgs and UserLinodeGrantOutput values.
// You can construct a concrete instance of `UserLinodeGrantInput` via:
//
//          UserLinodeGrantArgs{...}
type UserLinodeGrantInput interface {
	pulumi.Input

	ToUserLinodeGrantOutput() UserLinodeGrantOutput
	ToUserLinodeGrantOutputWithContext(context.Context) UserLinodeGrantOutput
}

type UserLinodeGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserLinodeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLinodeGrant)(nil)).Elem()
}

func (i UserLinodeGrantArgs) ToUserLinodeGrantOutput() UserLinodeGrantOutput {
	return i.ToUserLinodeGrantOutputWithContext(context.Background())
}

func (i UserLinodeGrantArgs) ToUserLinodeGrantOutputWithContext(ctx context.Context) UserLinodeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLinodeGrantOutput)
}

// UserLinodeGrantArrayInput is an input type that accepts UserLinodeGrantArray and UserLinodeGrantArrayOutput values.
// You can construct a concrete instance of `UserLinodeGrantArrayInput` via:
//
//          UserLinodeGrantArray{ UserLinodeGrantArgs{...} }
type UserLinodeGrantArrayInput interface {
	pulumi.Input

	ToUserLinodeGrantArrayOutput() UserLinodeGrantArrayOutput
	ToUserLinodeGrantArrayOutputWithContext(context.Context) UserLinodeGrantArrayOutput
}

type UserLinodeGrantArray []UserLinodeGrantInput

func (UserLinodeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLinodeGrant)(nil)).Elem()
}

func (i UserLinodeGrantArray) ToUserLinodeGrantArrayOutput() UserLinodeGrantArrayOutput {
	return i.ToUserLinodeGrantArrayOutputWithContext(context.Background())
}

func (i UserLinodeGrantArray) ToUserLinodeGrantArrayOutputWithContext(ctx context.Context) UserLinodeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLinodeGrantArrayOutput)
}

type UserLinodeGrantOutput struct{ *pulumi.OutputState }

func (UserLinodeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLinodeGrant)(nil)).Elem()
}

func (o UserLinodeGrantOutput) ToUserLinodeGrantOutput() UserLinodeGrantOutput {
	return o
}

func (o UserLinodeGrantOutput) ToUserLinodeGrantOutputWithContext(ctx context.Context) UserLinodeGrantOutput {
	return o
}

func (o UserLinodeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserLinodeGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserLinodeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserLinodeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserLinodeGrantArrayOutput struct{ *pulumi.OutputState }

func (UserLinodeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLinodeGrant)(nil)).Elem()
}

func (o UserLinodeGrantArrayOutput) ToUserLinodeGrantArrayOutput() UserLinodeGrantArrayOutput {
	return o
}

func (o UserLinodeGrantArrayOutput) ToUserLinodeGrantArrayOutputWithContext(ctx context.Context) UserLinodeGrantArrayOutput {
	return o
}

func (o UserLinodeGrantArrayOutput) Index(i pulumi.IntInput) UserLinodeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserLinodeGrant {
		return vs[0].([]UserLinodeGrant)[vs[1].(int)]
	}).(UserLinodeGrantOutput)
}

type UserLongviewGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserLongviewGrantInput is an input type that accepts UserLongviewGrantArgs and UserLongviewGrantOutput values.
// You can construct a concrete instance of `UserLongviewGrantInput` via:
//
//          UserLongviewGrantArgs{...}
type UserLongviewGrantInput interface {
	pulumi.Input

	ToUserLongviewGrantOutput() UserLongviewGrantOutput
	ToUserLongviewGrantOutputWithContext(context.Context) UserLongviewGrantOutput
}

type UserLongviewGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserLongviewGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLongviewGrant)(nil)).Elem()
}

func (i UserLongviewGrantArgs) ToUserLongviewGrantOutput() UserLongviewGrantOutput {
	return i.ToUserLongviewGrantOutputWithContext(context.Background())
}

func (i UserLongviewGrantArgs) ToUserLongviewGrantOutputWithContext(ctx context.Context) UserLongviewGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLongviewGrantOutput)
}

// UserLongviewGrantArrayInput is an input type that accepts UserLongviewGrantArray and UserLongviewGrantArrayOutput values.
// You can construct a concrete instance of `UserLongviewGrantArrayInput` via:
//
//          UserLongviewGrantArray{ UserLongviewGrantArgs{...} }
type UserLongviewGrantArrayInput interface {
	pulumi.Input

	ToUserLongviewGrantArrayOutput() UserLongviewGrantArrayOutput
	ToUserLongviewGrantArrayOutputWithContext(context.Context) UserLongviewGrantArrayOutput
}

type UserLongviewGrantArray []UserLongviewGrantInput

func (UserLongviewGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLongviewGrant)(nil)).Elem()
}

func (i UserLongviewGrantArray) ToUserLongviewGrantArrayOutput() UserLongviewGrantArrayOutput {
	return i.ToUserLongviewGrantArrayOutputWithContext(context.Background())
}

func (i UserLongviewGrantArray) ToUserLongviewGrantArrayOutputWithContext(ctx context.Context) UserLongviewGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLongviewGrantArrayOutput)
}

type UserLongviewGrantOutput struct{ *pulumi.OutputState }

func (UserLongviewGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLongviewGrant)(nil)).Elem()
}

func (o UserLongviewGrantOutput) ToUserLongviewGrantOutput() UserLongviewGrantOutput {
	return o
}

func (o UserLongviewGrantOutput) ToUserLongviewGrantOutputWithContext(ctx context.Context) UserLongviewGrantOutput {
	return o
}

func (o UserLongviewGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserLongviewGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserLongviewGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserLongviewGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserLongviewGrantArrayOutput struct{ *pulumi.OutputState }

func (UserLongviewGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLongviewGrant)(nil)).Elem()
}

func (o UserLongviewGrantArrayOutput) ToUserLongviewGrantArrayOutput() UserLongviewGrantArrayOutput {
	return o
}

func (o UserLongviewGrantArrayOutput) ToUserLongviewGrantArrayOutputWithContext(ctx context.Context) UserLongviewGrantArrayOutput {
	return o
}

func (o UserLongviewGrantArrayOutput) Index(i pulumi.IntInput) UserLongviewGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserLongviewGrant {
		return vs[0].([]UserLongviewGrant)[vs[1].(int)]
	}).(UserLongviewGrantOutput)
}

type UserNodebalancerGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserNodebalancerGrantInput is an input type that accepts UserNodebalancerGrantArgs and UserNodebalancerGrantOutput values.
// You can construct a concrete instance of `UserNodebalancerGrantInput` via:
//
//          UserNodebalancerGrantArgs{...}
type UserNodebalancerGrantInput interface {
	pulumi.Input

	ToUserNodebalancerGrantOutput() UserNodebalancerGrantOutput
	ToUserNodebalancerGrantOutputWithContext(context.Context) UserNodebalancerGrantOutput
}

type UserNodebalancerGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserNodebalancerGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNodebalancerGrant)(nil)).Elem()
}

func (i UserNodebalancerGrantArgs) ToUserNodebalancerGrantOutput() UserNodebalancerGrantOutput {
	return i.ToUserNodebalancerGrantOutputWithContext(context.Background())
}

func (i UserNodebalancerGrantArgs) ToUserNodebalancerGrantOutputWithContext(ctx context.Context) UserNodebalancerGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNodebalancerGrantOutput)
}

// UserNodebalancerGrantArrayInput is an input type that accepts UserNodebalancerGrantArray and UserNodebalancerGrantArrayOutput values.
// You can construct a concrete instance of `UserNodebalancerGrantArrayInput` via:
//
//          UserNodebalancerGrantArray{ UserNodebalancerGrantArgs{...} }
type UserNodebalancerGrantArrayInput interface {
	pulumi.Input

	ToUserNodebalancerGrantArrayOutput() UserNodebalancerGrantArrayOutput
	ToUserNodebalancerGrantArrayOutputWithContext(context.Context) UserNodebalancerGrantArrayOutput
}

type UserNodebalancerGrantArray []UserNodebalancerGrantInput

func (UserNodebalancerGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNodebalancerGrant)(nil)).Elem()
}

func (i UserNodebalancerGrantArray) ToUserNodebalancerGrantArrayOutput() UserNodebalancerGrantArrayOutput {
	return i.ToUserNodebalancerGrantArrayOutputWithContext(context.Background())
}

func (i UserNodebalancerGrantArray) ToUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) UserNodebalancerGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNodebalancerGrantArrayOutput)
}

type UserNodebalancerGrantOutput struct{ *pulumi.OutputState }

func (UserNodebalancerGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNodebalancerGrant)(nil)).Elem()
}

func (o UserNodebalancerGrantOutput) ToUserNodebalancerGrantOutput() UserNodebalancerGrantOutput {
	return o
}

func (o UserNodebalancerGrantOutput) ToUserNodebalancerGrantOutputWithContext(ctx context.Context) UserNodebalancerGrantOutput {
	return o
}

func (o UserNodebalancerGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserNodebalancerGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserNodebalancerGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserNodebalancerGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserNodebalancerGrantArrayOutput struct{ *pulumi.OutputState }

func (UserNodebalancerGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNodebalancerGrant)(nil)).Elem()
}

func (o UserNodebalancerGrantArrayOutput) ToUserNodebalancerGrantArrayOutput() UserNodebalancerGrantArrayOutput {
	return o
}

func (o UserNodebalancerGrantArrayOutput) ToUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) UserNodebalancerGrantArrayOutput {
	return o
}

func (o UserNodebalancerGrantArrayOutput) Index(i pulumi.IntInput) UserNodebalancerGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserNodebalancerGrant {
		return vs[0].([]UserNodebalancerGrant)[vs[1].(int)]
	}).(UserNodebalancerGrantOutput)
}

type UserStackscriptGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserStackscriptGrantInput is an input type that accepts UserStackscriptGrantArgs and UserStackscriptGrantOutput values.
// You can construct a concrete instance of `UserStackscriptGrantInput` via:
//
//          UserStackscriptGrantArgs{...}
type UserStackscriptGrantInput interface {
	pulumi.Input

	ToUserStackscriptGrantOutput() UserStackscriptGrantOutput
	ToUserStackscriptGrantOutputWithContext(context.Context) UserStackscriptGrantOutput
}

type UserStackscriptGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserStackscriptGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserStackscriptGrant)(nil)).Elem()
}

func (i UserStackscriptGrantArgs) ToUserStackscriptGrantOutput() UserStackscriptGrantOutput {
	return i.ToUserStackscriptGrantOutputWithContext(context.Background())
}

func (i UserStackscriptGrantArgs) ToUserStackscriptGrantOutputWithContext(ctx context.Context) UserStackscriptGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserStackscriptGrantOutput)
}

// UserStackscriptGrantArrayInput is an input type that accepts UserStackscriptGrantArray and UserStackscriptGrantArrayOutput values.
// You can construct a concrete instance of `UserStackscriptGrantArrayInput` via:
//
//          UserStackscriptGrantArray{ UserStackscriptGrantArgs{...} }
type UserStackscriptGrantArrayInput interface {
	pulumi.Input

	ToUserStackscriptGrantArrayOutput() UserStackscriptGrantArrayOutput
	ToUserStackscriptGrantArrayOutputWithContext(context.Context) UserStackscriptGrantArrayOutput
}

type UserStackscriptGrantArray []UserStackscriptGrantInput

func (UserStackscriptGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserStackscriptGrant)(nil)).Elem()
}

func (i UserStackscriptGrantArray) ToUserStackscriptGrantArrayOutput() UserStackscriptGrantArrayOutput {
	return i.ToUserStackscriptGrantArrayOutputWithContext(context.Background())
}

func (i UserStackscriptGrantArray) ToUserStackscriptGrantArrayOutputWithContext(ctx context.Context) UserStackscriptGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserStackscriptGrantArrayOutput)
}

type UserStackscriptGrantOutput struct{ *pulumi.OutputState }

func (UserStackscriptGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserStackscriptGrant)(nil)).Elem()
}

func (o UserStackscriptGrantOutput) ToUserStackscriptGrantOutput() UserStackscriptGrantOutput {
	return o
}

func (o UserStackscriptGrantOutput) ToUserStackscriptGrantOutputWithContext(ctx context.Context) UserStackscriptGrantOutput {
	return o
}

func (o UserStackscriptGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserStackscriptGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserStackscriptGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserStackscriptGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserStackscriptGrantArrayOutput struct{ *pulumi.OutputState }

func (UserStackscriptGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserStackscriptGrant)(nil)).Elem()
}

func (o UserStackscriptGrantArrayOutput) ToUserStackscriptGrantArrayOutput() UserStackscriptGrantArrayOutput {
	return o
}

func (o UserStackscriptGrantArrayOutput) ToUserStackscriptGrantArrayOutputWithContext(ctx context.Context) UserStackscriptGrantArrayOutput {
	return o
}

func (o UserStackscriptGrantArrayOutput) Index(i pulumi.IntInput) UserStackscriptGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserStackscriptGrant {
		return vs[0].([]UserStackscriptGrant)[vs[1].(int)]
	}).(UserStackscriptGrantOutput)
}

type UserVolumeGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserVolumeGrantInput is an input type that accepts UserVolumeGrantArgs and UserVolumeGrantOutput values.
// You can construct a concrete instance of `UserVolumeGrantInput` via:
//
//          UserVolumeGrantArgs{...}
type UserVolumeGrantInput interface {
	pulumi.Input

	ToUserVolumeGrantOutput() UserVolumeGrantOutput
	ToUserVolumeGrantOutputWithContext(context.Context) UserVolumeGrantOutput
}

type UserVolumeGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserVolumeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserVolumeGrant)(nil)).Elem()
}

func (i UserVolumeGrantArgs) ToUserVolumeGrantOutput() UserVolumeGrantOutput {
	return i.ToUserVolumeGrantOutputWithContext(context.Background())
}

func (i UserVolumeGrantArgs) ToUserVolumeGrantOutputWithContext(ctx context.Context) UserVolumeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserVolumeGrantOutput)
}

// UserVolumeGrantArrayInput is an input type that accepts UserVolumeGrantArray and UserVolumeGrantArrayOutput values.
// You can construct a concrete instance of `UserVolumeGrantArrayInput` via:
//
//          UserVolumeGrantArray{ UserVolumeGrantArgs{...} }
type UserVolumeGrantArrayInput interface {
	pulumi.Input

	ToUserVolumeGrantArrayOutput() UserVolumeGrantArrayOutput
	ToUserVolumeGrantArrayOutputWithContext(context.Context) UserVolumeGrantArrayOutput
}

type UserVolumeGrantArray []UserVolumeGrantInput

func (UserVolumeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserVolumeGrant)(nil)).Elem()
}

func (i UserVolumeGrantArray) ToUserVolumeGrantArrayOutput() UserVolumeGrantArrayOutput {
	return i.ToUserVolumeGrantArrayOutputWithContext(context.Background())
}

func (i UserVolumeGrantArray) ToUserVolumeGrantArrayOutputWithContext(ctx context.Context) UserVolumeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserVolumeGrantArrayOutput)
}

type UserVolumeGrantOutput struct{ *pulumi.OutputState }

func (UserVolumeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserVolumeGrant)(nil)).Elem()
}

func (o UserVolumeGrantOutput) ToUserVolumeGrantOutput() UserVolumeGrantOutput {
	return o
}

func (o UserVolumeGrantOutput) ToUserVolumeGrantOutputWithContext(ctx context.Context) UserVolumeGrantOutput {
	return o
}

func (o UserVolumeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserVolumeGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserVolumeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserVolumeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserVolumeGrantArrayOutput struct{ *pulumi.OutputState }

func (UserVolumeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserVolumeGrant)(nil)).Elem()
}

func (o UserVolumeGrantArrayOutput) ToUserVolumeGrantArrayOutput() UserVolumeGrantArrayOutput {
	return o
}

func (o UserVolumeGrantArrayOutput) ToUserVolumeGrantArrayOutputWithContext(ctx context.Context) UserVolumeGrantArrayOutput {
	return o
}

func (o UserVolumeGrantArrayOutput) Index(i pulumi.IntInput) UserVolumeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserVolumeGrant {
		return vs[0].([]UserVolumeGrant)[vs[1].(int)]
	}).(UserVolumeGrantOutput)
}

type GetFirewallDeviceType struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId int `pulumi:"entityId"`
	// The Firewall's ID.
	Id int `pulumi:"id"`
	// The label of the underlying entity this device references.
	Label string `pulumi:"label"`
	// The type of Firewall Device.
	Type string `pulumi:"type"`
	Url  string `pulumi:"url"`
}

// GetFirewallDeviceTypeInput is an input type that accepts GetFirewallDeviceTypeArgs and GetFirewallDeviceTypeOutput values.
// You can construct a concrete instance of `GetFirewallDeviceTypeInput` via:
//
//          GetFirewallDeviceTypeArgs{...}
type GetFirewallDeviceTypeInput interface {
	pulumi.Input

	ToGetFirewallDeviceTypeOutput() GetFirewallDeviceTypeOutput
	ToGetFirewallDeviceTypeOutputWithContext(context.Context) GetFirewallDeviceTypeOutput
}

type GetFirewallDeviceTypeArgs struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId pulumi.IntInput `pulumi:"entityId"`
	// The Firewall's ID.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of the underlying entity this device references.
	Label pulumi.StringInput `pulumi:"label"`
	// The type of Firewall Device.
	Type pulumi.StringInput `pulumi:"type"`
	Url  pulumi.StringInput `pulumi:"url"`
}

func (GetFirewallDeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDeviceType)(nil)).Elem()
}

func (i GetFirewallDeviceTypeArgs) ToGetFirewallDeviceTypeOutput() GetFirewallDeviceTypeOutput {
	return i.ToGetFirewallDeviceTypeOutputWithContext(context.Background())
}

func (i GetFirewallDeviceTypeArgs) ToGetFirewallDeviceTypeOutputWithContext(ctx context.Context) GetFirewallDeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDeviceTypeOutput)
}

// GetFirewallDeviceTypeArrayInput is an input type that accepts GetFirewallDeviceTypeArray and GetFirewallDeviceTypeArrayOutput values.
// You can construct a concrete instance of `GetFirewallDeviceTypeArrayInput` via:
//
//          GetFirewallDeviceTypeArray{ GetFirewallDeviceTypeArgs{...} }
type GetFirewallDeviceTypeArrayInput interface {
	pulumi.Input

	ToGetFirewallDeviceTypeArrayOutput() GetFirewallDeviceTypeArrayOutput
	ToGetFirewallDeviceTypeArrayOutputWithContext(context.Context) GetFirewallDeviceTypeArrayOutput
}

type GetFirewallDeviceTypeArray []GetFirewallDeviceTypeInput

func (GetFirewallDeviceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDeviceType)(nil)).Elem()
}

func (i GetFirewallDeviceTypeArray) ToGetFirewallDeviceTypeArrayOutput() GetFirewallDeviceTypeArrayOutput {
	return i.ToGetFirewallDeviceTypeArrayOutputWithContext(context.Background())
}

func (i GetFirewallDeviceTypeArray) ToGetFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) GetFirewallDeviceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDeviceTypeArrayOutput)
}

type GetFirewallDeviceTypeOutput struct{ *pulumi.OutputState }

func (GetFirewallDeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDeviceType)(nil)).Elem()
}

func (o GetFirewallDeviceTypeOutput) ToGetFirewallDeviceTypeOutput() GetFirewallDeviceTypeOutput {
	return o
}

func (o GetFirewallDeviceTypeOutput) ToGetFirewallDeviceTypeOutputWithContext(ctx context.Context) GetFirewallDeviceTypeOutput {
	return o
}

// The ID of the underlying entity this device references (i.e. the Linode's ID).
func (o GetFirewallDeviceTypeOutput) EntityId() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) int { return v.EntityId }).(pulumi.IntOutput)
}

// The Firewall's ID.
func (o GetFirewallDeviceTypeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) int { return v.Id }).(pulumi.IntOutput)
}

// The label of the underlying entity this device references.
func (o GetFirewallDeviceTypeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) string { return v.Label }).(pulumi.StringOutput)
}

// The type of Firewall Device.
func (o GetFirewallDeviceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetFirewallDeviceTypeOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) string { return v.Url }).(pulumi.StringOutput)
}

type GetFirewallDeviceTypeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDeviceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDeviceType)(nil)).Elem()
}

func (o GetFirewallDeviceTypeArrayOutput) ToGetFirewallDeviceTypeArrayOutput() GetFirewallDeviceTypeArrayOutput {
	return o
}

func (o GetFirewallDeviceTypeArrayOutput) ToGetFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) GetFirewallDeviceTypeArrayOutput {
	return o
}

func (o GetFirewallDeviceTypeArrayOutput) Index(i pulumi.IntInput) GetFirewallDeviceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDeviceType {
		return vs[0].([]GetFirewallDeviceType)[vs[1].(int)]
	}).(GetFirewallDeviceTypeOutput)
}

type GetFirewallInbound struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s []string `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// GetFirewallInboundInput is an input type that accepts GetFirewallInboundArgs and GetFirewallInboundOutput values.
// You can construct a concrete instance of `GetFirewallInboundInput` via:
//
//          GetFirewallInboundArgs{...}
type GetFirewallInboundInput interface {
	pulumi.Input

	ToGetFirewallInboundOutput() GetFirewallInboundOutput
	ToGetFirewallInboundOutputWithContext(context.Context) GetFirewallInboundOutput
}

type GetFirewallInboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallInboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInbound)(nil)).Elem()
}

func (i GetFirewallInboundArgs) ToGetFirewallInboundOutput() GetFirewallInboundOutput {
	return i.ToGetFirewallInboundOutputWithContext(context.Background())
}

func (i GetFirewallInboundArgs) ToGetFirewallInboundOutputWithContext(ctx context.Context) GetFirewallInboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInboundOutput)
}

// GetFirewallInboundArrayInput is an input type that accepts GetFirewallInboundArray and GetFirewallInboundArrayOutput values.
// You can construct a concrete instance of `GetFirewallInboundArrayInput` via:
//
//          GetFirewallInboundArray{ GetFirewallInboundArgs{...} }
type GetFirewallInboundArrayInput interface {
	pulumi.Input

	ToGetFirewallInboundArrayOutput() GetFirewallInboundArrayOutput
	ToGetFirewallInboundArrayOutputWithContext(context.Context) GetFirewallInboundArrayOutput
}

type GetFirewallInboundArray []GetFirewallInboundInput

func (GetFirewallInboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInbound)(nil)).Elem()
}

func (i GetFirewallInboundArray) ToGetFirewallInboundArrayOutput() GetFirewallInboundArrayOutput {
	return i.ToGetFirewallInboundArrayOutputWithContext(context.Background())
}

func (i GetFirewallInboundArray) ToGetFirewallInboundArrayOutputWithContext(ctx context.Context) GetFirewallInboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInboundArrayOutput)
}

type GetFirewallInboundOutput struct{ *pulumi.OutputState }

func (GetFirewallInboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInbound)(nil)).Elem()
}

func (o GetFirewallInboundOutput) ToGetFirewallInboundOutput() GetFirewallInboundOutput {
	return o
}

func (o GetFirewallInboundOutput) ToGetFirewallInboundOutputWithContext(ctx context.Context) GetFirewallInboundOutput {
	return o
}

// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o GetFirewallInboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask format.
func (o GetFirewallInboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask format.
func (o GetFirewallInboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// The label of the underlying entity this device references.
func (o GetFirewallInboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o GetFirewallInboundOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Ports }).(pulumi.StringOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o GetFirewallInboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallInboundArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInbound)(nil)).Elem()
}

func (o GetFirewallInboundArrayOutput) ToGetFirewallInboundArrayOutput() GetFirewallInboundArrayOutput {
	return o
}

func (o GetFirewallInboundArrayOutput) ToGetFirewallInboundArrayOutputWithContext(ctx context.Context) GetFirewallInboundArrayOutput {
	return o
}

func (o GetFirewallInboundArrayOutput) Index(i pulumi.IntInput) GetFirewallInboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInbound {
		return vs[0].([]GetFirewallInbound)[vs[1].(int)]
	}).(GetFirewallInboundOutput)
}

type GetFirewallOutbound struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s []string `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// GetFirewallOutboundInput is an input type that accepts GetFirewallOutboundArgs and GetFirewallOutboundOutput values.
// You can construct a concrete instance of `GetFirewallOutboundInput` via:
//
//          GetFirewallOutboundArgs{...}
type GetFirewallOutboundInput interface {
	pulumi.Input

	ToGetFirewallOutboundOutput() GetFirewallOutboundOutput
	ToGetFirewallOutboundOutputWithContext(context.Context) GetFirewallOutboundOutput
}

type GetFirewallOutboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallOutboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallOutbound)(nil)).Elem()
}

func (i GetFirewallOutboundArgs) ToGetFirewallOutboundOutput() GetFirewallOutboundOutput {
	return i.ToGetFirewallOutboundOutputWithContext(context.Background())
}

func (i GetFirewallOutboundArgs) ToGetFirewallOutboundOutputWithContext(ctx context.Context) GetFirewallOutboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallOutboundOutput)
}

// GetFirewallOutboundArrayInput is an input type that accepts GetFirewallOutboundArray and GetFirewallOutboundArrayOutput values.
// You can construct a concrete instance of `GetFirewallOutboundArrayInput` via:
//
//          GetFirewallOutboundArray{ GetFirewallOutboundArgs{...} }
type GetFirewallOutboundArrayInput interface {
	pulumi.Input

	ToGetFirewallOutboundArrayOutput() GetFirewallOutboundArrayOutput
	ToGetFirewallOutboundArrayOutputWithContext(context.Context) GetFirewallOutboundArrayOutput
}

type GetFirewallOutboundArray []GetFirewallOutboundInput

func (GetFirewallOutboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallOutbound)(nil)).Elem()
}

func (i GetFirewallOutboundArray) ToGetFirewallOutboundArrayOutput() GetFirewallOutboundArrayOutput {
	return i.ToGetFirewallOutboundArrayOutputWithContext(context.Background())
}

func (i GetFirewallOutboundArray) ToGetFirewallOutboundArrayOutputWithContext(ctx context.Context) GetFirewallOutboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallOutboundArrayOutput)
}

type GetFirewallOutboundOutput struct{ *pulumi.OutputState }

func (GetFirewallOutboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallOutbound)(nil)).Elem()
}

func (o GetFirewallOutboundOutput) ToGetFirewallOutboundOutput() GetFirewallOutboundOutput {
	return o
}

func (o GetFirewallOutboundOutput) ToGetFirewallOutboundOutputWithContext(ctx context.Context) GetFirewallOutboundOutput {
	return o
}

// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o GetFirewallOutboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask format.
func (o GetFirewallOutboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask format.
func (o GetFirewallOutboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// The label of the underlying entity this device references.
func (o GetFirewallOutboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o GetFirewallOutboundOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Ports }).(pulumi.StringOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o GetFirewallOutboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallOutboundArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallOutboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallOutbound)(nil)).Elem()
}

func (o GetFirewallOutboundArrayOutput) ToGetFirewallOutboundArrayOutput() GetFirewallOutboundArrayOutput {
	return o
}

func (o GetFirewallOutboundArrayOutput) ToGetFirewallOutboundArrayOutputWithContext(ctx context.Context) GetFirewallOutboundArrayOutput {
	return o
}

func (o GetFirewallOutboundArrayOutput) Index(i pulumi.IntInput) GetFirewallOutboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallOutbound {
		return vs[0].([]GetFirewallOutbound)[vs[1].(int)]
	}).(GetFirewallOutboundOutput)
}

type GetImagesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetImagesFilterInput is an input type that accepts GetImagesFilterArgs and GetImagesFilterOutput values.
// You can construct a concrete instance of `GetImagesFilterInput` via:
//
//          GetImagesFilterArgs{...}
type GetImagesFilterInput interface {
	pulumi.Input

	ToGetImagesFilterOutput() GetImagesFilterOutput
	ToGetImagesFilterOutputWithContext(context.Context) GetImagesFilterOutput
}

type GetImagesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return i.ToGetImagesFilterOutputWithContext(context.Background())
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterOutput)
}

// GetImagesFilterArrayInput is an input type that accepts GetImagesFilterArray and GetImagesFilterArrayOutput values.
// You can construct a concrete instance of `GetImagesFilterArrayInput` via:
//
//          GetImagesFilterArray{ GetImagesFilterArgs{...} }
type GetImagesFilterArrayInput interface {
	pulumi.Input

	ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput
	ToGetImagesFilterArrayOutputWithContext(context.Context) GetImagesFilterArrayOutput
}

type GetImagesFilterArray []GetImagesFilterInput

func (GetImagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return i.ToGetImagesFilterArrayOutputWithContext(context.Background())
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterArrayOutput)
}

type GetImagesFilterOutput struct{ *pulumi.OutputState }

func (GetImagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return o
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetImagesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetImagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetImagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) Index(i pulumi.IntInput) GetImagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesFilter {
		return vs[0].([]GetImagesFilter)[vs[1].(int)]
	}).(GetImagesFilterOutput)
}

type GetImagesImage struct {
	Created     string `pulumi:"created"`
	CreatedBy   string `pulumi:"createdBy"`
	Deprecated  bool   `pulumi:"deprecated"`
	Description string `pulumi:"description"`
	Expiry      string `pulumi:"expiry"`
	Id          string `pulumi:"id"`
	IsPublic    bool   `pulumi:"isPublic"`
	Label       string `pulumi:"label"`
	Size        int    `pulumi:"size"`
	Status      string `pulumi:"status"`
	Type        string `pulumi:"type"`
	Vendor      string `pulumi:"vendor"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//          GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	Created     pulumi.StringInput `pulumi:"created"`
	CreatedBy   pulumi.StringInput `pulumi:"createdBy"`
	Deprecated  pulumi.BoolInput   `pulumi:"deprecated"`
	Description pulumi.StringInput `pulumi:"description"`
	Expiry      pulumi.StringInput `pulumi:"expiry"`
	Id          pulumi.StringInput `pulumi:"id"`
	IsPublic    pulumi.BoolInput   `pulumi:"isPublic"`
	Label       pulumi.StringInput `pulumi:"label"`
	Size        pulumi.IntInput    `pulumi:"size"`
	Status      pulumi.StringInput `pulumi:"status"`
	Type        pulumi.StringInput `pulumi:"type"`
	Vendor      pulumi.StringInput `pulumi:"vendor"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//          GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreatedBy }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Deprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.Deprecated }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Expiry }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Vendor }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetInstanceBackupsAutomatic struct {
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs []string `pulumi:"configs"`
	// The date the Backup was taken.
	Created string                            `pulumi:"created"`
	Disks   []GetInstanceBackupsAutomaticDisk `pulumi:"disks"`
	// The date the Backup completed.
	Finished string `pulumi:"finished"`
	// The unique ID of this Backup.
	Id int `pulumi:"id"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status string `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type string `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated string `pulumi:"updated"`
}

// GetInstanceBackupsAutomaticInput is an input type that accepts GetInstanceBackupsAutomaticArgs and GetInstanceBackupsAutomaticOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticInput` via:
//
//          GetInstanceBackupsAutomaticArgs{...}
type GetInstanceBackupsAutomaticInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticOutput() GetInstanceBackupsAutomaticOutput
	ToGetInstanceBackupsAutomaticOutputWithContext(context.Context) GetInstanceBackupsAutomaticOutput
}

type GetInstanceBackupsAutomaticArgs struct {
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs pulumi.StringArrayInput `pulumi:"configs"`
	// The date the Backup was taken.
	Created pulumi.StringInput                        `pulumi:"created"`
	Disks   GetInstanceBackupsAutomaticDiskArrayInput `pulumi:"disks"`
	// The date the Backup completed.
	Finished pulumi.StringInput `pulumi:"finished"`
	// The unique ID of this Backup.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status pulumi.StringInput `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type pulumi.StringInput `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetInstanceBackupsAutomaticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticArgs) ToGetInstanceBackupsAutomaticOutput() GetInstanceBackupsAutomaticOutput {
	return i.ToGetInstanceBackupsAutomaticOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticArgs) ToGetInstanceBackupsAutomaticOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticOutput)
}

// GetInstanceBackupsAutomaticArrayInput is an input type that accepts GetInstanceBackupsAutomaticArray and GetInstanceBackupsAutomaticArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticArrayInput` via:
//
//          GetInstanceBackupsAutomaticArray{ GetInstanceBackupsAutomaticArgs{...} }
type GetInstanceBackupsAutomaticArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticArrayOutput() GetInstanceBackupsAutomaticArrayOutput
	ToGetInstanceBackupsAutomaticArrayOutputWithContext(context.Context) GetInstanceBackupsAutomaticArrayOutput
}

type GetInstanceBackupsAutomaticArray []GetInstanceBackupsAutomaticInput

func (GetInstanceBackupsAutomaticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticArray) ToGetInstanceBackupsAutomaticArrayOutput() GetInstanceBackupsAutomaticArrayOutput {
	return i.ToGetInstanceBackupsAutomaticArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticArray) ToGetInstanceBackupsAutomaticArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticArrayOutput)
}

type GetInstanceBackupsAutomaticOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticOutput) ToGetInstanceBackupsAutomaticOutput() GetInstanceBackupsAutomaticOutput {
	return o
}

func (o GetInstanceBackupsAutomaticOutput) ToGetInstanceBackupsAutomaticOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticOutput {
	return o
}

// A list of the labels of the Configuration profiles that are part of the Backup.
func (o GetInstanceBackupsAutomaticOutput) Configs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) []string { return v.Configs }).(pulumi.StringArrayOutput)
}

// The date the Backup was taken.
func (o GetInstanceBackupsAutomaticOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetInstanceBackupsAutomaticOutput) Disks() GetInstanceBackupsAutomaticDiskArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) []GetInstanceBackupsAutomaticDisk { return v.Disks }).(GetInstanceBackupsAutomaticDiskArrayOutput)
}

// The date the Backup completed.
func (o GetInstanceBackupsAutomaticOutput) Finished() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Finished }).(pulumi.StringOutput)
}

// The unique ID of this Backup.
func (o GetInstanceBackupsAutomaticOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) int { return v.Id }).(pulumi.IntOutput)
}

// The label of this disk.
func (o GetInstanceBackupsAutomaticOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Label }).(pulumi.StringOutput)
}

// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
func (o GetInstanceBackupsAutomaticOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Status }).(pulumi.StringOutput)
}

// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
func (o GetInstanceBackupsAutomaticOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Type }).(pulumi.StringOutput)
}

// The date the Backup was most recently updated.
func (o GetInstanceBackupsAutomaticOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Updated }).(pulumi.StringOutput)
}

type GetInstanceBackupsAutomaticArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticArrayOutput) ToGetInstanceBackupsAutomaticArrayOutput() GetInstanceBackupsAutomaticArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticArrayOutput) ToGetInstanceBackupsAutomaticArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsAutomaticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsAutomatic {
		return vs[0].([]GetInstanceBackupsAutomatic)[vs[1].(int)]
	}).(GetInstanceBackupsAutomaticOutput)
}

type GetInstanceBackupsAutomaticDisk struct {
	// The filesystem of this disk.
	Filesystem string `pulumi:"filesystem"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The size of this disk.
	Size int `pulumi:"size"`
}

// GetInstanceBackupsAutomaticDiskInput is an input type that accepts GetInstanceBackupsAutomaticDiskArgs and GetInstanceBackupsAutomaticDiskOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticDiskInput` via:
//
//          GetInstanceBackupsAutomaticDiskArgs{...}
type GetInstanceBackupsAutomaticDiskInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticDiskOutput() GetInstanceBackupsAutomaticDiskOutput
	ToGetInstanceBackupsAutomaticDiskOutputWithContext(context.Context) GetInstanceBackupsAutomaticDiskOutput
}

type GetInstanceBackupsAutomaticDiskArgs struct {
	// The filesystem of this disk.
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of this disk.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstanceBackupsAutomaticDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticDiskArgs) ToGetInstanceBackupsAutomaticDiskOutput() GetInstanceBackupsAutomaticDiskOutput {
	return i.ToGetInstanceBackupsAutomaticDiskOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticDiskArgs) ToGetInstanceBackupsAutomaticDiskOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticDiskOutput)
}

// GetInstanceBackupsAutomaticDiskArrayInput is an input type that accepts GetInstanceBackupsAutomaticDiskArray and GetInstanceBackupsAutomaticDiskArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticDiskArrayInput` via:
//
//          GetInstanceBackupsAutomaticDiskArray{ GetInstanceBackupsAutomaticDiskArgs{...} }
type GetInstanceBackupsAutomaticDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticDiskArrayOutput() GetInstanceBackupsAutomaticDiskArrayOutput
	ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(context.Context) GetInstanceBackupsAutomaticDiskArrayOutput
}

type GetInstanceBackupsAutomaticDiskArray []GetInstanceBackupsAutomaticDiskInput

func (GetInstanceBackupsAutomaticDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticDiskArray) ToGetInstanceBackupsAutomaticDiskArrayOutput() GetInstanceBackupsAutomaticDiskArrayOutput {
	return i.ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticDiskArray) ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticDiskArrayOutput)
}

type GetInstanceBackupsAutomaticDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticDiskOutput) ToGetInstanceBackupsAutomaticDiskOutput() GetInstanceBackupsAutomaticDiskOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskOutput) ToGetInstanceBackupsAutomaticDiskOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskOutput {
	return o
}

// The filesystem of this disk.
func (o GetInstanceBackupsAutomaticDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomaticDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The label of this disk.
func (o GetInstanceBackupsAutomaticDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomaticDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of this disk.
func (o GetInstanceBackupsAutomaticDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomaticDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstanceBackupsAutomaticDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) ToGetInstanceBackupsAutomaticDiskArrayOutput() GetInstanceBackupsAutomaticDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsAutomaticDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsAutomaticDisk {
		return vs[0].([]GetInstanceBackupsAutomaticDisk)[vs[1].(int)]
	}).(GetInstanceBackupsAutomaticDiskOutput)
}

type GetInstanceBackupsCurrent struct {
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs []string `pulumi:"configs"`
	// The date the Backup was taken.
	Created string                          `pulumi:"created"`
	Disks   []GetInstanceBackupsCurrentDisk `pulumi:"disks"`
	// The date the Backup completed.
	Finished string `pulumi:"finished"`
	// The unique ID of this Backup.
	Id int `pulumi:"id"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status string `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type string `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated string `pulumi:"updated"`
}

// GetInstanceBackupsCurrentInput is an input type that accepts GetInstanceBackupsCurrentArgs and GetInstanceBackupsCurrentOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentInput` via:
//
//          GetInstanceBackupsCurrentArgs{...}
type GetInstanceBackupsCurrentInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentOutput() GetInstanceBackupsCurrentOutput
	ToGetInstanceBackupsCurrentOutputWithContext(context.Context) GetInstanceBackupsCurrentOutput
}

type GetInstanceBackupsCurrentArgs struct {
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs pulumi.StringArrayInput `pulumi:"configs"`
	// The date the Backup was taken.
	Created pulumi.StringInput                      `pulumi:"created"`
	Disks   GetInstanceBackupsCurrentDiskArrayInput `pulumi:"disks"`
	// The date the Backup completed.
	Finished pulumi.StringInput `pulumi:"finished"`
	// The unique ID of this Backup.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status pulumi.StringInput `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type pulumi.StringInput `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetInstanceBackupsCurrentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrent)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentArgs) ToGetInstanceBackupsCurrentOutput() GetInstanceBackupsCurrentOutput {
	return i.ToGetInstanceBackupsCurrentOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentArgs) ToGetInstanceBackupsCurrentOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentOutput)
}

// GetInstanceBackupsCurrentArrayInput is an input type that accepts GetInstanceBackupsCurrentArray and GetInstanceBackupsCurrentArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentArrayInput` via:
//
//          GetInstanceBackupsCurrentArray{ GetInstanceBackupsCurrentArgs{...} }
type GetInstanceBackupsCurrentArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentArrayOutput() GetInstanceBackupsCurrentArrayOutput
	ToGetInstanceBackupsCurrentArrayOutputWithContext(context.Context) GetInstanceBackupsCurrentArrayOutput
}

type GetInstanceBackupsCurrentArray []GetInstanceBackupsCurrentInput

func (GetInstanceBackupsCurrentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrent)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentArray) ToGetInstanceBackupsCurrentArrayOutput() GetInstanceBackupsCurrentArrayOutput {
	return i.ToGetInstanceBackupsCurrentArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentArray) ToGetInstanceBackupsCurrentArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentArrayOutput)
}

type GetInstanceBackupsCurrentOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrent)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentOutput) ToGetInstanceBackupsCurrentOutput() GetInstanceBackupsCurrentOutput {
	return o
}

func (o GetInstanceBackupsCurrentOutput) ToGetInstanceBackupsCurrentOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentOutput {
	return o
}

// A list of the labels of the Configuration profiles that are part of the Backup.
func (o GetInstanceBackupsCurrentOutput) Configs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) []string { return v.Configs }).(pulumi.StringArrayOutput)
}

// The date the Backup was taken.
func (o GetInstanceBackupsCurrentOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetInstanceBackupsCurrentOutput) Disks() GetInstanceBackupsCurrentDiskArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) []GetInstanceBackupsCurrentDisk { return v.Disks }).(GetInstanceBackupsCurrentDiskArrayOutput)
}

// The date the Backup completed.
func (o GetInstanceBackupsCurrentOutput) Finished() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Finished }).(pulumi.StringOutput)
}

// The unique ID of this Backup.
func (o GetInstanceBackupsCurrentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) int { return v.Id }).(pulumi.IntOutput)
}

// The label of this disk.
func (o GetInstanceBackupsCurrentOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Label }).(pulumi.StringOutput)
}

// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
func (o GetInstanceBackupsCurrentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Status }).(pulumi.StringOutput)
}

// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
func (o GetInstanceBackupsCurrentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Type }).(pulumi.StringOutput)
}

// The date the Backup was most recently updated.
func (o GetInstanceBackupsCurrentOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Updated }).(pulumi.StringOutput)
}

type GetInstanceBackupsCurrentArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrent)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentArrayOutput) ToGetInstanceBackupsCurrentArrayOutput() GetInstanceBackupsCurrentArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentArrayOutput) ToGetInstanceBackupsCurrentArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsCurrentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsCurrent {
		return vs[0].([]GetInstanceBackupsCurrent)[vs[1].(int)]
	}).(GetInstanceBackupsCurrentOutput)
}

type GetInstanceBackupsCurrentDisk struct {
	// The filesystem of this disk.
	Filesystem string `pulumi:"filesystem"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The size of this disk.
	Size int `pulumi:"size"`
}

// GetInstanceBackupsCurrentDiskInput is an input type that accepts GetInstanceBackupsCurrentDiskArgs and GetInstanceBackupsCurrentDiskOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentDiskInput` via:
//
//          GetInstanceBackupsCurrentDiskArgs{...}
type GetInstanceBackupsCurrentDiskInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentDiskOutput() GetInstanceBackupsCurrentDiskOutput
	ToGetInstanceBackupsCurrentDiskOutputWithContext(context.Context) GetInstanceBackupsCurrentDiskOutput
}

type GetInstanceBackupsCurrentDiskArgs struct {
	// The filesystem of this disk.
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of this disk.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstanceBackupsCurrentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentDiskArgs) ToGetInstanceBackupsCurrentDiskOutput() GetInstanceBackupsCurrentDiskOutput {
	return i.ToGetInstanceBackupsCurrentDiskOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentDiskArgs) ToGetInstanceBackupsCurrentDiskOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentDiskOutput)
}

// GetInstanceBackupsCurrentDiskArrayInput is an input type that accepts GetInstanceBackupsCurrentDiskArray and GetInstanceBackupsCurrentDiskArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentDiskArrayInput` via:
//
//          GetInstanceBackupsCurrentDiskArray{ GetInstanceBackupsCurrentDiskArgs{...} }
type GetInstanceBackupsCurrentDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentDiskArrayOutput() GetInstanceBackupsCurrentDiskArrayOutput
	ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(context.Context) GetInstanceBackupsCurrentDiskArrayOutput
}

type GetInstanceBackupsCurrentDiskArray []GetInstanceBackupsCurrentDiskInput

func (GetInstanceBackupsCurrentDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentDiskArray) ToGetInstanceBackupsCurrentDiskArrayOutput() GetInstanceBackupsCurrentDiskArrayOutput {
	return i.ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentDiskArray) ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentDiskArrayOutput)
}

type GetInstanceBackupsCurrentDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentDiskOutput) ToGetInstanceBackupsCurrentDiskOutput() GetInstanceBackupsCurrentDiskOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskOutput) ToGetInstanceBackupsCurrentDiskOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskOutput {
	return o
}

// The filesystem of this disk.
func (o GetInstanceBackupsCurrentDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrentDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The label of this disk.
func (o GetInstanceBackupsCurrentDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrentDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of this disk.
func (o GetInstanceBackupsCurrentDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrentDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstanceBackupsCurrentDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) ToGetInstanceBackupsCurrentDiskArrayOutput() GetInstanceBackupsCurrentDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsCurrentDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsCurrentDisk {
		return vs[0].([]GetInstanceBackupsCurrentDisk)[vs[1].(int)]
	}).(GetInstanceBackupsCurrentDiskOutput)
}

type GetInstanceBackupsInProgress struct {
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs []string `pulumi:"configs"`
	// The date the Backup was taken.
	Created string                             `pulumi:"created"`
	Disks   []GetInstanceBackupsInProgressDisk `pulumi:"disks"`
	// The date the Backup completed.
	Finished string `pulumi:"finished"`
	// The unique ID of this Backup.
	Id int `pulumi:"id"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status string `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type string `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated string `pulumi:"updated"`
}

// GetInstanceBackupsInProgressInput is an input type that accepts GetInstanceBackupsInProgressArgs and GetInstanceBackupsInProgressOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressInput` via:
//
//          GetInstanceBackupsInProgressArgs{...}
type GetInstanceBackupsInProgressInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressOutput() GetInstanceBackupsInProgressOutput
	ToGetInstanceBackupsInProgressOutputWithContext(context.Context) GetInstanceBackupsInProgressOutput
}

type GetInstanceBackupsInProgressArgs struct {
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs pulumi.StringArrayInput `pulumi:"configs"`
	// The date the Backup was taken.
	Created pulumi.StringInput                         `pulumi:"created"`
	Disks   GetInstanceBackupsInProgressDiskArrayInput `pulumi:"disks"`
	// The date the Backup completed.
	Finished pulumi.StringInput `pulumi:"finished"`
	// The unique ID of this Backup.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status pulumi.StringInput `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type pulumi.StringInput `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetInstanceBackupsInProgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgress)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressArgs) ToGetInstanceBackupsInProgressOutput() GetInstanceBackupsInProgressOutput {
	return i.ToGetInstanceBackupsInProgressOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressArgs) ToGetInstanceBackupsInProgressOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressOutput)
}

// GetInstanceBackupsInProgressArrayInput is an input type that accepts GetInstanceBackupsInProgressArray and GetInstanceBackupsInProgressArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressArrayInput` via:
//
//          GetInstanceBackupsInProgressArray{ GetInstanceBackupsInProgressArgs{...} }
type GetInstanceBackupsInProgressArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressArrayOutput() GetInstanceBackupsInProgressArrayOutput
	ToGetInstanceBackupsInProgressArrayOutputWithContext(context.Context) GetInstanceBackupsInProgressArrayOutput
}

type GetInstanceBackupsInProgressArray []GetInstanceBackupsInProgressInput

func (GetInstanceBackupsInProgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgress)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressArray) ToGetInstanceBackupsInProgressArrayOutput() GetInstanceBackupsInProgressArrayOutput {
	return i.ToGetInstanceBackupsInProgressArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressArray) ToGetInstanceBackupsInProgressArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressArrayOutput)
}

type GetInstanceBackupsInProgressOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgress)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressOutput) ToGetInstanceBackupsInProgressOutput() GetInstanceBackupsInProgressOutput {
	return o
}

func (o GetInstanceBackupsInProgressOutput) ToGetInstanceBackupsInProgressOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressOutput {
	return o
}

// A list of the labels of the Configuration profiles that are part of the Backup.
func (o GetInstanceBackupsInProgressOutput) Configs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) []string { return v.Configs }).(pulumi.StringArrayOutput)
}

// The date the Backup was taken.
func (o GetInstanceBackupsInProgressOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetInstanceBackupsInProgressOutput) Disks() GetInstanceBackupsInProgressDiskArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) []GetInstanceBackupsInProgressDisk { return v.Disks }).(GetInstanceBackupsInProgressDiskArrayOutput)
}

// The date the Backup completed.
func (o GetInstanceBackupsInProgressOutput) Finished() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Finished }).(pulumi.StringOutput)
}

// The unique ID of this Backup.
func (o GetInstanceBackupsInProgressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) int { return v.Id }).(pulumi.IntOutput)
}

// The label of this disk.
func (o GetInstanceBackupsInProgressOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Label }).(pulumi.StringOutput)
}

// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
func (o GetInstanceBackupsInProgressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Status }).(pulumi.StringOutput)
}

// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
func (o GetInstanceBackupsInProgressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Type }).(pulumi.StringOutput)
}

// The date the Backup was most recently updated.
func (o GetInstanceBackupsInProgressOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Updated }).(pulumi.StringOutput)
}

type GetInstanceBackupsInProgressArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgress)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressArrayOutput) ToGetInstanceBackupsInProgressArrayOutput() GetInstanceBackupsInProgressArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressArrayOutput) ToGetInstanceBackupsInProgressArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsInProgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsInProgress {
		return vs[0].([]GetInstanceBackupsInProgress)[vs[1].(int)]
	}).(GetInstanceBackupsInProgressOutput)
}

type GetInstanceBackupsInProgressDisk struct {
	// The filesystem of this disk.
	Filesystem string `pulumi:"filesystem"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The size of this disk.
	Size int `pulumi:"size"`
}

// GetInstanceBackupsInProgressDiskInput is an input type that accepts GetInstanceBackupsInProgressDiskArgs and GetInstanceBackupsInProgressDiskOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressDiskInput` via:
//
//          GetInstanceBackupsInProgressDiskArgs{...}
type GetInstanceBackupsInProgressDiskInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressDiskOutput() GetInstanceBackupsInProgressDiskOutput
	ToGetInstanceBackupsInProgressDiskOutputWithContext(context.Context) GetInstanceBackupsInProgressDiskOutput
}

type GetInstanceBackupsInProgressDiskArgs struct {
	// The filesystem of this disk.
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of this disk.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstanceBackupsInProgressDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressDiskArgs) ToGetInstanceBackupsInProgressDiskOutput() GetInstanceBackupsInProgressDiskOutput {
	return i.ToGetInstanceBackupsInProgressDiskOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressDiskArgs) ToGetInstanceBackupsInProgressDiskOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressDiskOutput)
}

// GetInstanceBackupsInProgressDiskArrayInput is an input type that accepts GetInstanceBackupsInProgressDiskArray and GetInstanceBackupsInProgressDiskArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressDiskArrayInput` via:
//
//          GetInstanceBackupsInProgressDiskArray{ GetInstanceBackupsInProgressDiskArgs{...} }
type GetInstanceBackupsInProgressDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressDiskArrayOutput() GetInstanceBackupsInProgressDiskArrayOutput
	ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(context.Context) GetInstanceBackupsInProgressDiskArrayOutput
}

type GetInstanceBackupsInProgressDiskArray []GetInstanceBackupsInProgressDiskInput

func (GetInstanceBackupsInProgressDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressDiskArray) ToGetInstanceBackupsInProgressDiskArrayOutput() GetInstanceBackupsInProgressDiskArrayOutput {
	return i.ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressDiskArray) ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressDiskArrayOutput)
}

type GetInstanceBackupsInProgressDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressDiskOutput) ToGetInstanceBackupsInProgressDiskOutput() GetInstanceBackupsInProgressDiskOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskOutput) ToGetInstanceBackupsInProgressDiskOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskOutput {
	return o
}

// The filesystem of this disk.
func (o GetInstanceBackupsInProgressDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgressDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The label of this disk.
func (o GetInstanceBackupsInProgressDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgressDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of this disk.
func (o GetInstanceBackupsInProgressDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgressDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstanceBackupsInProgressDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) ToGetInstanceBackupsInProgressDiskArrayOutput() GetInstanceBackupsInProgressDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsInProgressDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsInProgressDisk {
		return vs[0].([]GetInstanceBackupsInProgressDisk)[vs[1].(int)]
	}).(GetInstanceBackupsInProgressDiskOutput)
}

type GetInstanceTypeAddons struct {
	Backups GetInstanceTypeAddonsBackups `pulumi:"backups"`
}

// GetInstanceTypeAddonsInput is an input type that accepts GetInstanceTypeAddonsArgs and GetInstanceTypeAddonsOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsInput` via:
//
//          GetInstanceTypeAddonsArgs{...}
type GetInstanceTypeAddonsInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsOutput() GetInstanceTypeAddonsOutput
	ToGetInstanceTypeAddonsOutputWithContext(context.Context) GetInstanceTypeAddonsOutput
}

type GetInstanceTypeAddonsArgs struct {
	Backups GetInstanceTypeAddonsBackupsInput `pulumi:"backups"`
}

func (GetInstanceTypeAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddons)(nil)).Elem()
}

func (i GetInstanceTypeAddonsArgs) ToGetInstanceTypeAddonsOutput() GetInstanceTypeAddonsOutput {
	return i.ToGetInstanceTypeAddonsOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsArgs) ToGetInstanceTypeAddonsOutputWithContext(ctx context.Context) GetInstanceTypeAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsOutput)
}

type GetInstanceTypeAddonsOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddons)(nil)).Elem()
}

func (o GetInstanceTypeAddonsOutput) ToGetInstanceTypeAddonsOutput() GetInstanceTypeAddonsOutput {
	return o
}

func (o GetInstanceTypeAddonsOutput) ToGetInstanceTypeAddonsOutputWithContext(ctx context.Context) GetInstanceTypeAddonsOutput {
	return o
}

func (o GetInstanceTypeAddonsOutput) Backups() GetInstanceTypeAddonsBackupsOutput {
	return o.ApplyT(func(v GetInstanceTypeAddons) GetInstanceTypeAddonsBackups { return v.Backups }).(GetInstanceTypeAddonsBackupsOutput)
}

type GetInstanceTypeAddonsBackups struct {
	Price GetInstanceTypeAddonsBackupsPrice `pulumi:"price"`
}

// GetInstanceTypeAddonsBackupsInput is an input type that accepts GetInstanceTypeAddonsBackupsArgs and GetInstanceTypeAddonsBackupsOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupsInput` via:
//
//          GetInstanceTypeAddonsBackupsArgs{...}
type GetInstanceTypeAddonsBackupsInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupsOutput() GetInstanceTypeAddonsBackupsOutput
	ToGetInstanceTypeAddonsBackupsOutputWithContext(context.Context) GetInstanceTypeAddonsBackupsOutput
}

type GetInstanceTypeAddonsBackupsArgs struct {
	Price GetInstanceTypeAddonsBackupsPriceInput `pulumi:"price"`
}

func (GetInstanceTypeAddonsBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackups)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupsArgs) ToGetInstanceTypeAddonsBackupsOutput() GetInstanceTypeAddonsBackupsOutput {
	return i.ToGetInstanceTypeAddonsBackupsOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupsArgs) ToGetInstanceTypeAddonsBackupsOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupsOutput)
}

type GetInstanceTypeAddonsBackupsOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackups)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupsOutput) ToGetInstanceTypeAddonsBackupsOutput() GetInstanceTypeAddonsBackupsOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupsOutput) ToGetInstanceTypeAddonsBackupsOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupsOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupsOutput) Price() GetInstanceTypeAddonsBackupsPriceOutput {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackups) GetInstanceTypeAddonsBackupsPrice { return v.Price }).(GetInstanceTypeAddonsBackupsPriceOutput)
}

type GetInstanceTypeAddonsBackupsPrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypeAddonsBackupsPriceInput is an input type that accepts GetInstanceTypeAddonsBackupsPriceArgs and GetInstanceTypeAddonsBackupsPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupsPriceInput` via:
//
//          GetInstanceTypeAddonsBackupsPriceArgs{...}
type GetInstanceTypeAddonsBackupsPriceInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupsPriceOutput() GetInstanceTypeAddonsBackupsPriceOutput
	ToGetInstanceTypeAddonsBackupsPriceOutputWithContext(context.Context) GetInstanceTypeAddonsBackupsPriceOutput
}

type GetInstanceTypeAddonsBackupsPriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypeAddonsBackupsPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackupsPrice)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupsPriceArgs) ToGetInstanceTypeAddonsBackupsPriceOutput() GetInstanceTypeAddonsBackupsPriceOutput {
	return i.ToGetInstanceTypeAddonsBackupsPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupsPriceArgs) ToGetInstanceTypeAddonsBackupsPriceOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupsPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupsPriceOutput)
}

type GetInstanceTypeAddonsBackupsPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupsPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackupsPrice)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupsPriceOutput) ToGetInstanceTypeAddonsBackupsPriceOutput() GetInstanceTypeAddonsBackupsPriceOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupsPriceOutput) ToGetInstanceTypeAddonsBackupsPriceOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupsPriceOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupsPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupsPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypeAddonsBackupsPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupsPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypePrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypePriceInput is an input type that accepts GetInstanceTypePriceArgs and GetInstanceTypePriceOutput values.
// You can construct a concrete instance of `GetInstanceTypePriceInput` via:
//
//          GetInstanceTypePriceArgs{...}
type GetInstanceTypePriceInput interface {
	pulumi.Input

	ToGetInstanceTypePriceOutput() GetInstanceTypePriceOutput
	ToGetInstanceTypePriceOutputWithContext(context.Context) GetInstanceTypePriceOutput
}

type GetInstanceTypePriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypePrice)(nil)).Elem()
}

func (i GetInstanceTypePriceArgs) ToGetInstanceTypePriceOutput() GetInstanceTypePriceOutput {
	return i.ToGetInstanceTypePriceOutputWithContext(context.Background())
}

func (i GetInstanceTypePriceArgs) ToGetInstanceTypePriceOutputWithContext(ctx context.Context) GetInstanceTypePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypePriceOutput)
}

type GetInstanceTypePriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypePrice)(nil)).Elem()
}

func (o GetInstanceTypePriceOutput) ToGetInstanceTypePriceOutput() GetInstanceTypePriceOutput {
	return o
}

func (o GetInstanceTypePriceOutput) ToGetInstanceTypePriceOutputWithContext(ctx context.Context) GetInstanceTypePriceOutput {
	return o
}

func (o GetInstanceTypePriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypePrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypePriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypePrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetInstanceTypesFilterInput is an input type that accepts GetInstanceTypesFilterArgs and GetInstanceTypesFilterOutput values.
// You can construct a concrete instance of `GetInstanceTypesFilterInput` via:
//
//          GetInstanceTypesFilterArgs{...}
type GetInstanceTypesFilterInput interface {
	pulumi.Input

	ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput
	ToGetInstanceTypesFilterOutputWithContext(context.Context) GetInstanceTypesFilterOutput
}

type GetInstanceTypesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesFilter)(nil)).Elem()
}

func (i GetInstanceTypesFilterArgs) ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput {
	return i.ToGetInstanceTypesFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypesFilterArgs) ToGetInstanceTypesFilterOutputWithContext(ctx context.Context) GetInstanceTypesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesFilterOutput)
}

// GetInstanceTypesFilterArrayInput is an input type that accepts GetInstanceTypesFilterArray and GetInstanceTypesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesFilterArrayInput` via:
//
//          GetInstanceTypesFilterArray{ GetInstanceTypesFilterArgs{...} }
type GetInstanceTypesFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesFilterArrayOutput() GetInstanceTypesFilterArrayOutput
	ToGetInstanceTypesFilterArrayOutputWithContext(context.Context) GetInstanceTypesFilterArrayOutput
}

type GetInstanceTypesFilterArray []GetInstanceTypesFilterInput

func (GetInstanceTypesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesFilter)(nil)).Elem()
}

func (i GetInstanceTypesFilterArray) ToGetInstanceTypesFilterArrayOutput() GetInstanceTypesFilterArrayOutput {
	return i.ToGetInstanceTypesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesFilterArray) ToGetInstanceTypesFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesFilterArrayOutput)
}

type GetInstanceTypesFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesFilter)(nil)).Elem()
}

func (o GetInstanceTypesFilterOutput) ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput {
	return o
}

func (o GetInstanceTypesFilterOutput) ToGetInstanceTypesFilterOutputWithContext(ctx context.Context) GetInstanceTypesFilterOutput {
	return o
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetInstanceTypesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTypesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetInstanceTypesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetInstanceTypesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesFilter)(nil)).Elem()
}

func (o GetInstanceTypesFilterArrayOutput) ToGetInstanceTypesFilterArrayOutput() GetInstanceTypesFilterArrayOutput {
	return o
}

func (o GetInstanceTypesFilterArrayOutput) ToGetInstanceTypesFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypesFilterArrayOutput {
	return o
}

func (o GetInstanceTypesFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesFilter {
		return vs[0].([]GetInstanceTypesFilter)[vs[1].(int)]
	}).(GetInstanceTypesFilterOutput)
}

type GetInstanceTypesType struct {
	Addons     []GetInstanceTypesTypeAddon `pulumi:"addons"`
	Class      string                      `pulumi:"class"`
	Disk       int                         `pulumi:"disk"`
	Id         string                      `pulumi:"id"`
	Label      string                      `pulumi:"label"`
	Memory     int                         `pulumi:"memory"`
	NetworkOut int                         `pulumi:"networkOut"`
	Prices     []GetInstanceTypesTypePrice `pulumi:"prices"`
	Transfer   int                         `pulumi:"transfer"`
	Vcpus      int                         `pulumi:"vcpus"`
}

// GetInstanceTypesTypeInput is an input type that accepts GetInstanceTypesTypeArgs and GetInstanceTypesTypeOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeInput` via:
//
//          GetInstanceTypesTypeArgs{...}
type GetInstanceTypesTypeInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput
	ToGetInstanceTypesTypeOutputWithContext(context.Context) GetInstanceTypesTypeOutput
}

type GetInstanceTypesTypeArgs struct {
	Addons     GetInstanceTypesTypeAddonArrayInput `pulumi:"addons"`
	Class      pulumi.StringInput                  `pulumi:"class"`
	Disk       pulumi.IntInput                     `pulumi:"disk"`
	Id         pulumi.StringInput                  `pulumi:"id"`
	Label      pulumi.StringInput                  `pulumi:"label"`
	Memory     pulumi.IntInput                     `pulumi:"memory"`
	NetworkOut pulumi.IntInput                     `pulumi:"networkOut"`
	Prices     GetInstanceTypesTypePriceArrayInput `pulumi:"prices"`
	Transfer   pulumi.IntInput                     `pulumi:"transfer"`
	Vcpus      pulumi.IntInput                     `pulumi:"vcpus"`
}

func (GetInstanceTypesTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesType)(nil)).Elem()
}

func (i GetInstanceTypesTypeArgs) ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput {
	return i.ToGetInstanceTypesTypeOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeArgs) ToGetInstanceTypesTypeOutputWithContext(ctx context.Context) GetInstanceTypesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeOutput)
}

// GetInstanceTypesTypeArrayInput is an input type that accepts GetInstanceTypesTypeArray and GetInstanceTypesTypeArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeArrayInput` via:
//
//          GetInstanceTypesTypeArray{ GetInstanceTypesTypeArgs{...} }
type GetInstanceTypesTypeArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput
	ToGetInstanceTypesTypeArrayOutputWithContext(context.Context) GetInstanceTypesTypeArrayOutput
}

type GetInstanceTypesTypeArray []GetInstanceTypesTypeInput

func (GetInstanceTypesTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesType)(nil)).Elem()
}

func (i GetInstanceTypesTypeArray) ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput {
	return i.ToGetInstanceTypesTypeArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeArray) ToGetInstanceTypesTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeArrayOutput)
}

type GetInstanceTypesTypeOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesType)(nil)).Elem()
}

func (o GetInstanceTypesTypeOutput) ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput {
	return o
}

func (o GetInstanceTypesTypeOutput) ToGetInstanceTypesTypeOutputWithContext(ctx context.Context) GetInstanceTypesTypeOutput {
	return o
}

func (o GetInstanceTypesTypeOutput) Addons() GetInstanceTypesTypeAddonArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesType) []GetInstanceTypesTypeAddon { return v.Addons }).(GetInstanceTypesTypeAddonArrayOutput)
}

func (o GetInstanceTypesTypeOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Class }).(pulumi.StringOutput)
}

func (o GetInstanceTypesTypeOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetInstanceTypesTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceTypesTypeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetInstanceTypesTypeOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetInstanceTypesTypeOutput) NetworkOut() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.NetworkOut }).(pulumi.IntOutput)
}

func (o GetInstanceTypesTypeOutput) Prices() GetInstanceTypesTypePriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesType) []GetInstanceTypesTypePrice { return v.Prices }).(GetInstanceTypesTypePriceArrayOutput)
}

func (o GetInstanceTypesTypeOutput) Transfer() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Transfer }).(pulumi.IntOutput)
}

func (o GetInstanceTypesTypeOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetInstanceTypesTypeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesType)(nil)).Elem()
}

func (o GetInstanceTypesTypeArrayOutput) ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput {
	return o
}

func (o GetInstanceTypesTypeArrayOutput) ToGetInstanceTypesTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeArrayOutput {
	return o
}

func (o GetInstanceTypesTypeArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesType {
		return vs[0].([]GetInstanceTypesType)[vs[1].(int)]
	}).(GetInstanceTypesTypeOutput)
}

type GetInstanceTypesTypeAddon struct {
	Backups []GetInstanceTypesTypeAddonBackup `pulumi:"backups"`
}

// GetInstanceTypesTypeAddonInput is an input type that accepts GetInstanceTypesTypeAddonArgs and GetInstanceTypesTypeAddonOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonInput` via:
//
//          GetInstanceTypesTypeAddonArgs{...}
type GetInstanceTypesTypeAddonInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonOutput() GetInstanceTypesTypeAddonOutput
	ToGetInstanceTypesTypeAddonOutputWithContext(context.Context) GetInstanceTypesTypeAddonOutput
}

type GetInstanceTypesTypeAddonArgs struct {
	Backups GetInstanceTypesTypeAddonBackupArrayInput `pulumi:"backups"`
}

func (GetInstanceTypesTypeAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonArgs) ToGetInstanceTypesTypeAddonOutput() GetInstanceTypesTypeAddonOutput {
	return i.ToGetInstanceTypesTypeAddonOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonArgs) ToGetInstanceTypesTypeAddonOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonOutput)
}

// GetInstanceTypesTypeAddonArrayInput is an input type that accepts GetInstanceTypesTypeAddonArray and GetInstanceTypesTypeAddonArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonArrayInput` via:
//
//          GetInstanceTypesTypeAddonArray{ GetInstanceTypesTypeAddonArgs{...} }
type GetInstanceTypesTypeAddonArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonArrayOutput() GetInstanceTypesTypeAddonArrayOutput
	ToGetInstanceTypesTypeAddonArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonArrayOutput
}

type GetInstanceTypesTypeAddonArray []GetInstanceTypesTypeAddonInput

func (GetInstanceTypesTypeAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonArray) ToGetInstanceTypesTypeAddonArrayOutput() GetInstanceTypesTypeAddonArrayOutput {
	return i.ToGetInstanceTypesTypeAddonArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonArray) ToGetInstanceTypesTypeAddonArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonArrayOutput)
}

type GetInstanceTypesTypeAddonOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonOutput) ToGetInstanceTypesTypeAddonOutput() GetInstanceTypesTypeAddonOutput {
	return o
}

func (o GetInstanceTypesTypeAddonOutput) ToGetInstanceTypesTypeAddonOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonOutput {
	return o
}

func (o GetInstanceTypesTypeAddonOutput) Backups() GetInstanceTypesTypeAddonBackupArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeAddon) []GetInstanceTypesTypeAddonBackup { return v.Backups }).(GetInstanceTypesTypeAddonBackupArrayOutput)
}

type GetInstanceTypesTypeAddonArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonArrayOutput) ToGetInstanceTypesTypeAddonArrayOutput() GetInstanceTypesTypeAddonArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonArrayOutput) ToGetInstanceTypesTypeAddonArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddon {
		return vs[0].([]GetInstanceTypesTypeAddon)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonOutput)
}

type GetInstanceTypesTypeAddonBackup struct {
	Prices []GetInstanceTypesTypeAddonBackupPrice `pulumi:"prices"`
}

// GetInstanceTypesTypeAddonBackupInput is an input type that accepts GetInstanceTypesTypeAddonBackupArgs and GetInstanceTypesTypeAddonBackupOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupInput` via:
//
//          GetInstanceTypesTypeAddonBackupArgs{...}
type GetInstanceTypesTypeAddonBackupInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupOutput() GetInstanceTypesTypeAddonBackupOutput
	ToGetInstanceTypesTypeAddonBackupOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupOutput
}

type GetInstanceTypesTypeAddonBackupArgs struct {
	Prices GetInstanceTypesTypeAddonBackupPriceArrayInput `pulumi:"prices"`
}

func (GetInstanceTypesTypeAddonBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupArgs) ToGetInstanceTypesTypeAddonBackupOutput() GetInstanceTypesTypeAddonBackupOutput {
	return i.ToGetInstanceTypesTypeAddonBackupOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupArgs) ToGetInstanceTypesTypeAddonBackupOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupOutput)
}

// GetInstanceTypesTypeAddonBackupArrayInput is an input type that accepts GetInstanceTypesTypeAddonBackupArray and GetInstanceTypesTypeAddonBackupArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupArrayInput` via:
//
//          GetInstanceTypesTypeAddonBackupArray{ GetInstanceTypesTypeAddonBackupArgs{...} }
type GetInstanceTypesTypeAddonBackupArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupArrayOutput() GetInstanceTypesTypeAddonBackupArrayOutput
	ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupArrayOutput
}

type GetInstanceTypesTypeAddonBackupArray []GetInstanceTypesTypeAddonBackupInput

func (GetInstanceTypesTypeAddonBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupArray) ToGetInstanceTypesTypeAddonBackupArrayOutput() GetInstanceTypesTypeAddonBackupArrayOutput {
	return i.ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupArray) ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupArrayOutput)
}

type GetInstanceTypesTypeAddonBackupOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupOutput) ToGetInstanceTypesTypeAddonBackupOutput() GetInstanceTypesTypeAddonBackupOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupOutput) ToGetInstanceTypesTypeAddonBackupOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupOutput) Prices() GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackup) []GetInstanceTypesTypeAddonBackupPrice { return v.Prices }).(GetInstanceTypesTypeAddonBackupPriceArrayOutput)
}

type GetInstanceTypesTypeAddonBackupArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) ToGetInstanceTypesTypeAddonBackupArrayOutput() GetInstanceTypesTypeAddonBackupArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddonBackup {
		return vs[0].([]GetInstanceTypesTypeAddonBackup)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonBackupOutput)
}

type GetInstanceTypesTypeAddonBackupPrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypesTypeAddonBackupPriceInput is an input type that accepts GetInstanceTypesTypeAddonBackupPriceArgs and GetInstanceTypesTypeAddonBackupPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupPriceInput` via:
//
//          GetInstanceTypesTypeAddonBackupPriceArgs{...}
type GetInstanceTypesTypeAddonBackupPriceInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupPriceOutput() GetInstanceTypesTypeAddonBackupPriceOutput
	ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupPriceOutput
}

type GetInstanceTypesTypeAddonBackupPriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypesTypeAddonBackupPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupPriceArgs) ToGetInstanceTypesTypeAddonBackupPriceOutput() GetInstanceTypesTypeAddonBackupPriceOutput {
	return i.ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupPriceArgs) ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupPriceOutput)
}

// GetInstanceTypesTypeAddonBackupPriceArrayInput is an input type that accepts GetInstanceTypesTypeAddonBackupPriceArray and GetInstanceTypesTypeAddonBackupPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupPriceArrayInput` via:
//
//          GetInstanceTypesTypeAddonBackupPriceArray{ GetInstanceTypesTypeAddonBackupPriceArgs{...} }
type GetInstanceTypesTypeAddonBackupPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupPriceArrayOutput() GetInstanceTypesTypeAddonBackupPriceArrayOutput
	ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupPriceArrayOutput
}

type GetInstanceTypesTypeAddonBackupPriceArray []GetInstanceTypesTypeAddonBackupPriceInput

func (GetInstanceTypesTypeAddonBackupPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupPriceArray) ToGetInstanceTypesTypeAddonBackupPriceArrayOutput() GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return i.ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupPriceArray) ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupPriceArrayOutput)
}

type GetInstanceTypesTypeAddonBackupPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) ToGetInstanceTypesTypeAddonBackupPriceOutput() GetInstanceTypesTypeAddonBackupPriceOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesTypeAddonBackupPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) ToGetInstanceTypesTypeAddonBackupPriceArrayOutput() GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonBackupPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddonBackupPrice {
		return vs[0].([]GetInstanceTypesTypeAddonBackupPrice)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonBackupPriceOutput)
}

type GetInstanceTypesTypePrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypesTypePriceInput is an input type that accepts GetInstanceTypesTypePriceArgs and GetInstanceTypesTypePriceOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypePriceInput` via:
//
//          GetInstanceTypesTypePriceArgs{...}
type GetInstanceTypesTypePriceInput interface {
	pulumi.Input

	ToGetInstanceTypesTypePriceOutput() GetInstanceTypesTypePriceOutput
	ToGetInstanceTypesTypePriceOutputWithContext(context.Context) GetInstanceTypesTypePriceOutput
}

type GetInstanceTypesTypePriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypesTypePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypePrice)(nil)).Elem()
}

func (i GetInstanceTypesTypePriceArgs) ToGetInstanceTypesTypePriceOutput() GetInstanceTypesTypePriceOutput {
	return i.ToGetInstanceTypesTypePriceOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypePriceArgs) ToGetInstanceTypesTypePriceOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypePriceOutput)
}

// GetInstanceTypesTypePriceArrayInput is an input type that accepts GetInstanceTypesTypePriceArray and GetInstanceTypesTypePriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypePriceArrayInput` via:
//
//          GetInstanceTypesTypePriceArray{ GetInstanceTypesTypePriceArgs{...} }
type GetInstanceTypesTypePriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypePriceArrayOutput() GetInstanceTypesTypePriceArrayOutput
	ToGetInstanceTypesTypePriceArrayOutputWithContext(context.Context) GetInstanceTypesTypePriceArrayOutput
}

type GetInstanceTypesTypePriceArray []GetInstanceTypesTypePriceInput

func (GetInstanceTypesTypePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypePrice)(nil)).Elem()
}

func (i GetInstanceTypesTypePriceArray) ToGetInstanceTypesTypePriceArrayOutput() GetInstanceTypesTypePriceArrayOutput {
	return i.ToGetInstanceTypesTypePriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypePriceArray) ToGetInstanceTypesTypePriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypePriceArrayOutput)
}

type GetInstanceTypesTypePriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypePrice)(nil)).Elem()
}

func (o GetInstanceTypesTypePriceOutput) ToGetInstanceTypesTypePriceOutput() GetInstanceTypesTypePriceOutput {
	return o
}

func (o GetInstanceTypesTypePriceOutput) ToGetInstanceTypesTypePriceOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceOutput {
	return o
}

func (o GetInstanceTypesTypePriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypePrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypesTypePriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypePrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesTypePriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypePrice)(nil)).Elem()
}

func (o GetInstanceTypesTypePriceArrayOutput) ToGetInstanceTypesTypePriceArrayOutput() GetInstanceTypesTypePriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypePriceArrayOutput) ToGetInstanceTypesTypePriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypePriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypePrice {
		return vs[0].([]GetInstanceTypesTypePrice)[vs[1].(int)]
	}).(GetInstanceTypesTypePriceOutput)
}

type GetInstancesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//          GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//          GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetInstancesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesInstance struct {
	Alerts           GetInstancesInstanceAlerts   `pulumi:"alerts"`
	Backups          []GetInstancesInstanceBackup `pulumi:"backups"`
	BootConfigLabel  string                       `pulumi:"bootConfigLabel"`
	Configs          []GetInstancesInstanceConfig `pulumi:"configs"`
	Disks            []GetInstancesInstanceDisk   `pulumi:"disks"`
	Group            string                       `pulumi:"group"`
	Id               int                          `pulumi:"id"`
	Image            string                       `pulumi:"image"`
	IpAddress        string                       `pulumi:"ipAddress"`
	Ipv4s            []string                     `pulumi:"ipv4s"`
	Ipv6             string                       `pulumi:"ipv6"`
	Label            string                       `pulumi:"label"`
	PrivateIpAddress string                       `pulumi:"privateIpAddress"`
	Region           string                       `pulumi:"region"`
	Specs            []GetInstancesInstanceSpec   `pulumi:"specs"`
	Status           string                       `pulumi:"status"`
	SwapSize         int                          `pulumi:"swapSize"`
	Tags             []string                     `pulumi:"tags"`
	Type             string                       `pulumi:"type"`
	WatchdogEnabled  bool                         `pulumi:"watchdogEnabled"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	Alerts           GetInstancesInstanceAlertsInput      `pulumi:"alerts"`
	Backups          GetInstancesInstanceBackupArrayInput `pulumi:"backups"`
	BootConfigLabel  pulumi.StringInput                   `pulumi:"bootConfigLabel"`
	Configs          GetInstancesInstanceConfigArrayInput `pulumi:"configs"`
	Disks            GetInstancesInstanceDiskArrayInput   `pulumi:"disks"`
	Group            pulumi.StringInput                   `pulumi:"group"`
	Id               pulumi.IntInput                      `pulumi:"id"`
	Image            pulumi.StringInput                   `pulumi:"image"`
	IpAddress        pulumi.StringInput                   `pulumi:"ipAddress"`
	Ipv4s            pulumi.StringArrayInput              `pulumi:"ipv4s"`
	Ipv6             pulumi.StringInput                   `pulumi:"ipv6"`
	Label            pulumi.StringInput                   `pulumi:"label"`
	PrivateIpAddress pulumi.StringInput                   `pulumi:"privateIpAddress"`
	Region           pulumi.StringInput                   `pulumi:"region"`
	Specs            GetInstancesInstanceSpecArrayInput   `pulumi:"specs"`
	Status           pulumi.StringInput                   `pulumi:"status"`
	SwapSize         pulumi.IntInput                      `pulumi:"swapSize"`
	Tags             pulumi.StringArrayInput              `pulumi:"tags"`
	Type             pulumi.StringInput                   `pulumi:"type"`
	WatchdogEnabled  pulumi.BoolInput                     `pulumi:"watchdogEnabled"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) Alerts() GetInstancesInstanceAlertsOutput {
	return o.ApplyT(func(v GetInstancesInstance) GetInstancesInstanceAlerts { return v.Alerts }).(GetInstancesInstanceAlertsOutput)
}

func (o GetInstancesInstanceOutput) Backups() GetInstancesInstanceBackupArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceBackup { return v.Backups }).(GetInstancesInstanceBackupArrayOutput)
}

func (o GetInstancesInstanceOutput) BootConfigLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.BootConfigLabel }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Configs() GetInstancesInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceConfig { return v.Configs }).(GetInstancesInstanceConfigArrayOutput)
}

func (o GetInstancesInstanceOutput) Disks() GetInstancesInstanceDiskArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceDisk { return v.Disks }).(GetInstancesInstanceDiskArrayOutput)
}

func (o GetInstancesInstanceOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Group }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Image }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

func (o GetInstancesInstanceOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Ipv6 }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Specs() GetInstancesInstanceSpecArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceSpec { return v.Specs }).(GetInstancesInstanceSpecArrayOutput)
}

func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) SwapSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.SwapSize }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetInstancesInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) WatchdogEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.WatchdogEnabled }).(pulumi.BoolOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceAlerts struct {
	Cpu           int `pulumi:"cpu"`
	Io            int `pulumi:"io"`
	NetworkIn     int `pulumi:"networkIn"`
	NetworkOut    int `pulumi:"networkOut"`
	TransferQuota int `pulumi:"transferQuota"`
}

// GetInstancesInstanceAlertsInput is an input type that accepts GetInstancesInstanceAlertsArgs and GetInstancesInstanceAlertsOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAlertsInput` via:
//
//          GetInstancesInstanceAlertsArgs{...}
type GetInstancesInstanceAlertsInput interface {
	pulumi.Input

	ToGetInstancesInstanceAlertsOutput() GetInstancesInstanceAlertsOutput
	ToGetInstancesInstanceAlertsOutputWithContext(context.Context) GetInstancesInstanceAlertsOutput
}

type GetInstancesInstanceAlertsArgs struct {
	Cpu           pulumi.IntInput `pulumi:"cpu"`
	Io            pulumi.IntInput `pulumi:"io"`
	NetworkIn     pulumi.IntInput `pulumi:"networkIn"`
	NetworkOut    pulumi.IntInput `pulumi:"networkOut"`
	TransferQuota pulumi.IntInput `pulumi:"transferQuota"`
}

func (GetInstancesInstanceAlertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAlerts)(nil)).Elem()
}

func (i GetInstancesInstanceAlertsArgs) ToGetInstancesInstanceAlertsOutput() GetInstancesInstanceAlertsOutput {
	return i.ToGetInstancesInstanceAlertsOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAlertsArgs) ToGetInstancesInstanceAlertsOutputWithContext(ctx context.Context) GetInstancesInstanceAlertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAlertsOutput)
}

type GetInstancesInstanceAlertsOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAlerts)(nil)).Elem()
}

func (o GetInstancesInstanceAlertsOutput) ToGetInstancesInstanceAlertsOutput() GetInstancesInstanceAlertsOutput {
	return o
}

func (o GetInstancesInstanceAlertsOutput) ToGetInstancesInstanceAlertsOutputWithContext(ctx context.Context) GetInstancesInstanceAlertsOutput {
	return o
}

func (o GetInstancesInstanceAlertsOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) Io() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.Io }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) NetworkIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.NetworkIn }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) NetworkOut() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.NetworkOut }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) TransferQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.TransferQuota }).(pulumi.IntOutput)
}

type GetInstancesInstanceBackup struct {
	Enabled   bool                                 `pulumi:"enabled"`
	Schedules []GetInstancesInstanceBackupSchedule `pulumi:"schedules"`
}

// GetInstancesInstanceBackupInput is an input type that accepts GetInstancesInstanceBackupArgs and GetInstancesInstanceBackupOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupInput` via:
//
//          GetInstancesInstanceBackupArgs{...}
type GetInstancesInstanceBackupInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupOutput() GetInstancesInstanceBackupOutput
	ToGetInstancesInstanceBackupOutputWithContext(context.Context) GetInstancesInstanceBackupOutput
}

type GetInstancesInstanceBackupArgs struct {
	Enabled   pulumi.BoolInput                             `pulumi:"enabled"`
	Schedules GetInstancesInstanceBackupScheduleArrayInput `pulumi:"schedules"`
}

func (GetInstancesInstanceBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackup)(nil)).Elem()
}

func (i GetInstancesInstanceBackupArgs) ToGetInstancesInstanceBackupOutput() GetInstancesInstanceBackupOutput {
	return i.ToGetInstancesInstanceBackupOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupArgs) ToGetInstancesInstanceBackupOutputWithContext(ctx context.Context) GetInstancesInstanceBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupOutput)
}

// GetInstancesInstanceBackupArrayInput is an input type that accepts GetInstancesInstanceBackupArray and GetInstancesInstanceBackupArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupArrayInput` via:
//
//          GetInstancesInstanceBackupArray{ GetInstancesInstanceBackupArgs{...} }
type GetInstancesInstanceBackupArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupArrayOutput() GetInstancesInstanceBackupArrayOutput
	ToGetInstancesInstanceBackupArrayOutputWithContext(context.Context) GetInstancesInstanceBackupArrayOutput
}

type GetInstancesInstanceBackupArray []GetInstancesInstanceBackupInput

func (GetInstancesInstanceBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackup)(nil)).Elem()
}

func (i GetInstancesInstanceBackupArray) ToGetInstancesInstanceBackupArrayOutput() GetInstancesInstanceBackupArrayOutput {
	return i.ToGetInstancesInstanceBackupArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupArray) ToGetInstancesInstanceBackupArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupArrayOutput)
}

type GetInstancesInstanceBackupOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackup)(nil)).Elem()
}

func (o GetInstancesInstanceBackupOutput) ToGetInstancesInstanceBackupOutput() GetInstancesInstanceBackupOutput {
	return o
}

func (o GetInstancesInstanceBackupOutput) ToGetInstancesInstanceBackupOutputWithContext(ctx context.Context) GetInstancesInstanceBackupOutput {
	return o
}

func (o GetInstancesInstanceBackupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceBackupOutput) Schedules() GetInstancesInstanceBackupScheduleArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackup) []GetInstancesInstanceBackupSchedule { return v.Schedules }).(GetInstancesInstanceBackupScheduleArrayOutput)
}

type GetInstancesInstanceBackupArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackup)(nil)).Elem()
}

func (o GetInstancesInstanceBackupArrayOutput) ToGetInstancesInstanceBackupArrayOutput() GetInstancesInstanceBackupArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupArrayOutput) ToGetInstancesInstanceBackupArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceBackup {
		return vs[0].([]GetInstancesInstanceBackup)[vs[1].(int)]
	}).(GetInstancesInstanceBackupOutput)
}

type GetInstancesInstanceBackupSchedule struct {
	Day    string `pulumi:"day"`
	Window string `pulumi:"window"`
}

// GetInstancesInstanceBackupScheduleInput is an input type that accepts GetInstancesInstanceBackupScheduleArgs and GetInstancesInstanceBackupScheduleOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupScheduleInput` via:
//
//          GetInstancesInstanceBackupScheduleArgs{...}
type GetInstancesInstanceBackupScheduleInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupScheduleOutput() GetInstancesInstanceBackupScheduleOutput
	ToGetInstancesInstanceBackupScheduleOutputWithContext(context.Context) GetInstancesInstanceBackupScheduleOutput
}

type GetInstancesInstanceBackupScheduleArgs struct {
	Day    pulumi.StringInput `pulumi:"day"`
	Window pulumi.StringInput `pulumi:"window"`
}

func (GetInstancesInstanceBackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (i GetInstancesInstanceBackupScheduleArgs) ToGetInstancesInstanceBackupScheduleOutput() GetInstancesInstanceBackupScheduleOutput {
	return i.ToGetInstancesInstanceBackupScheduleOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupScheduleArgs) ToGetInstancesInstanceBackupScheduleOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupScheduleOutput)
}

// GetInstancesInstanceBackupScheduleArrayInput is an input type that accepts GetInstancesInstanceBackupScheduleArray and GetInstancesInstanceBackupScheduleArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupScheduleArrayInput` via:
//
//          GetInstancesInstanceBackupScheduleArray{ GetInstancesInstanceBackupScheduleArgs{...} }
type GetInstancesInstanceBackupScheduleArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupScheduleArrayOutput() GetInstancesInstanceBackupScheduleArrayOutput
	ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(context.Context) GetInstancesInstanceBackupScheduleArrayOutput
}

type GetInstancesInstanceBackupScheduleArray []GetInstancesInstanceBackupScheduleInput

func (GetInstancesInstanceBackupScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (i GetInstancesInstanceBackupScheduleArray) ToGetInstancesInstanceBackupScheduleArrayOutput() GetInstancesInstanceBackupScheduleArrayOutput {
	return i.ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupScheduleArray) ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupScheduleArrayOutput)
}

type GetInstancesInstanceBackupScheduleOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (o GetInstancesInstanceBackupScheduleOutput) ToGetInstancesInstanceBackupScheduleOutput() GetInstancesInstanceBackupScheduleOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleOutput) ToGetInstancesInstanceBackupScheduleOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupSchedule) string { return v.Day }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceBackupScheduleOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupSchedule) string { return v.Window }).(pulumi.StringOutput)
}

type GetInstancesInstanceBackupScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) ToGetInstancesInstanceBackupScheduleArrayOutput() GetInstancesInstanceBackupScheduleArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceBackupScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceBackupSchedule {
		return vs[0].([]GetInstancesInstanceBackupSchedule)[vs[1].(int)]
	}).(GetInstancesInstanceBackupScheduleOutput)
}

type GetInstancesInstanceConfig struct {
	Comments    string                                `pulumi:"comments"`
	Devices     []GetInstancesInstanceConfigDevice    `pulumi:"devices"`
	Helpers     []GetInstancesInstanceConfigHelper    `pulumi:"helpers"`
	Interfaces  []GetInstancesInstanceConfigInterface `pulumi:"interfaces"`
	Kernel      string                                `pulumi:"kernel"`
	Label       string                                `pulumi:"label"`
	MemoryLimit int                                   `pulumi:"memoryLimit"`
	RootDevice  string                                `pulumi:"rootDevice"`
	RunLevel    string                                `pulumi:"runLevel"`
	VirtMode    string                                `pulumi:"virtMode"`
}

// GetInstancesInstanceConfigInput is an input type that accepts GetInstancesInstanceConfigArgs and GetInstancesInstanceConfigOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigInput` via:
//
//          GetInstancesInstanceConfigArgs{...}
type GetInstancesInstanceConfigInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigOutput() GetInstancesInstanceConfigOutput
	ToGetInstancesInstanceConfigOutputWithContext(context.Context) GetInstancesInstanceConfigOutput
}

type GetInstancesInstanceConfigArgs struct {
	Comments    pulumi.StringInput                            `pulumi:"comments"`
	Devices     GetInstancesInstanceConfigDeviceArrayInput    `pulumi:"devices"`
	Helpers     GetInstancesInstanceConfigHelperArrayInput    `pulumi:"helpers"`
	Interfaces  GetInstancesInstanceConfigInterfaceArrayInput `pulumi:"interfaces"`
	Kernel      pulumi.StringInput                            `pulumi:"kernel"`
	Label       pulumi.StringInput                            `pulumi:"label"`
	MemoryLimit pulumi.IntInput                               `pulumi:"memoryLimit"`
	RootDevice  pulumi.StringInput                            `pulumi:"rootDevice"`
	RunLevel    pulumi.StringInput                            `pulumi:"runLevel"`
	VirtMode    pulumi.StringInput                            `pulumi:"virtMode"`
}

func (GetInstancesInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfig)(nil)).Elem()
}

func (i GetInstancesInstanceConfigArgs) ToGetInstancesInstanceConfigOutput() GetInstancesInstanceConfigOutput {
	return i.ToGetInstancesInstanceConfigOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigArgs) ToGetInstancesInstanceConfigOutputWithContext(ctx context.Context) GetInstancesInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigOutput)
}

// GetInstancesInstanceConfigArrayInput is an input type that accepts GetInstancesInstanceConfigArray and GetInstancesInstanceConfigArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigArrayInput` via:
//
//          GetInstancesInstanceConfigArray{ GetInstancesInstanceConfigArgs{...} }
type GetInstancesInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigArrayOutput() GetInstancesInstanceConfigArrayOutput
	ToGetInstancesInstanceConfigArrayOutputWithContext(context.Context) GetInstancesInstanceConfigArrayOutput
}

type GetInstancesInstanceConfigArray []GetInstancesInstanceConfigInput

func (GetInstancesInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfig)(nil)).Elem()
}

func (i GetInstancesInstanceConfigArray) ToGetInstancesInstanceConfigArrayOutput() GetInstancesInstanceConfigArrayOutput {
	return i.ToGetInstancesInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigArray) ToGetInstancesInstanceConfigArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigArrayOutput)
}

type GetInstancesInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfig)(nil)).Elem()
}

func (o GetInstancesInstanceConfigOutput) ToGetInstancesInstanceConfigOutput() GetInstancesInstanceConfigOutput {
	return o
}

func (o GetInstancesInstanceConfigOutput) ToGetInstancesInstanceConfigOutputWithContext(ctx context.Context) GetInstancesInstanceConfigOutput {
	return o
}

func (o GetInstancesInstanceConfigOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceConfigOutput) Devices() GetInstancesInstanceConfigDeviceArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) []GetInstancesInstanceConfigDevice { return v.Devices }).(GetInstancesInstanceConfigDeviceArrayOutput)
}

func (o GetInstancesInstanceConfigOutput) Helpers() GetInstancesInstanceConfigHelperArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) []GetInstancesInstanceConfigHelper { return v.Helpers }).(GetInstancesInstanceConfigHelperArrayOutput)
}

func (o GetInstancesInstanceConfigOutput) Interfaces() GetInstancesInstanceConfigInterfaceArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) []GetInstancesInstanceConfigInterface { return v.Interfaces }).(GetInstancesInstanceConfigInterfaceArrayOutput)
}

func (o GetInstancesInstanceConfigOutput) Kernel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.Kernel }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceConfigOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceConfigOutput) MemoryLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) int { return v.MemoryLimit }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigOutput) RootDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.RootDevice }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceConfigOutput) RunLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.RunLevel }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceConfigOutput) VirtMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.VirtMode }).(pulumi.StringOutput)
}

type GetInstancesInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfig)(nil)).Elem()
}

func (o GetInstancesInstanceConfigArrayOutput) ToGetInstancesInstanceConfigArrayOutput() GetInstancesInstanceConfigArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigArrayOutput) ToGetInstancesInstanceConfigArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfig {
		return vs[0].([]GetInstancesInstanceConfig)[vs[1].(int)]
	}).(GetInstancesInstanceConfigOutput)
}

type GetInstancesInstanceConfigDevice struct {
	Sdas []GetInstancesInstanceConfigDeviceSda `pulumi:"sdas"`
	Sdbs []GetInstancesInstanceConfigDeviceSdb `pulumi:"sdbs"`
	Sdcs []GetInstancesInstanceConfigDeviceSdc `pulumi:"sdcs"`
	Sdds []GetInstancesInstanceConfigDeviceSdd `pulumi:"sdds"`
	Sdes []GetInstancesInstanceConfigDeviceSde `pulumi:"sdes"`
	Sdfs []GetInstancesInstanceConfigDeviceSdf `pulumi:"sdfs"`
	Sdgs []GetInstancesInstanceConfigDeviceSdg `pulumi:"sdgs"`
	Sdhs []GetInstancesInstanceConfigDeviceSdh `pulumi:"sdhs"`
}

// GetInstancesInstanceConfigDeviceInput is an input type that accepts GetInstancesInstanceConfigDeviceArgs and GetInstancesInstanceConfigDeviceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceInput` via:
//
//          GetInstancesInstanceConfigDeviceArgs{...}
type GetInstancesInstanceConfigDeviceInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceOutput() GetInstancesInstanceConfigDeviceOutput
	ToGetInstancesInstanceConfigDeviceOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceOutput
}

type GetInstancesInstanceConfigDeviceArgs struct {
	Sdas GetInstancesInstanceConfigDeviceSdaArrayInput `pulumi:"sdas"`
	Sdbs GetInstancesInstanceConfigDeviceSdbArrayInput `pulumi:"sdbs"`
	Sdcs GetInstancesInstanceConfigDeviceSdcArrayInput `pulumi:"sdcs"`
	Sdds GetInstancesInstanceConfigDeviceSddArrayInput `pulumi:"sdds"`
	Sdes GetInstancesInstanceConfigDeviceSdeArrayInput `pulumi:"sdes"`
	Sdfs GetInstancesInstanceConfigDeviceSdfArrayInput `pulumi:"sdfs"`
	Sdgs GetInstancesInstanceConfigDeviceSdgArrayInput `pulumi:"sdgs"`
	Sdhs GetInstancesInstanceConfigDeviceSdhArrayInput `pulumi:"sdhs"`
}

func (GetInstancesInstanceConfigDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceArgs) ToGetInstancesInstanceConfigDeviceOutput() GetInstancesInstanceConfigDeviceOutput {
	return i.ToGetInstancesInstanceConfigDeviceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceArgs) ToGetInstancesInstanceConfigDeviceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceOutput)
}

// GetInstancesInstanceConfigDeviceArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceArray and GetInstancesInstanceConfigDeviceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceArray{ GetInstancesInstanceConfigDeviceArgs{...} }
type GetInstancesInstanceConfigDeviceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceArrayOutput() GetInstancesInstanceConfigDeviceArrayOutput
	ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceArrayOutput
}

type GetInstancesInstanceConfigDeviceArray []GetInstancesInstanceConfigDeviceInput

func (GetInstancesInstanceConfigDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceArray) ToGetInstancesInstanceConfigDeviceArrayOutput() GetInstancesInstanceConfigDeviceArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceArray) ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceArrayOutput)
}

type GetInstancesInstanceConfigDeviceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceOutput) ToGetInstancesInstanceConfigDeviceOutput() GetInstancesInstanceConfigDeviceOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceOutput) ToGetInstancesInstanceConfigDeviceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdas() GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSda { return v.Sdas }).(GetInstancesInstanceConfigDeviceSdaArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdbs() GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdb { return v.Sdbs }).(GetInstancesInstanceConfigDeviceSdbArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdcs() GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdc { return v.Sdcs }).(GetInstancesInstanceConfigDeviceSdcArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdds() GetInstancesInstanceConfigDeviceSddArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdd { return v.Sdds }).(GetInstancesInstanceConfigDeviceSddArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdes() GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSde { return v.Sdes }).(GetInstancesInstanceConfigDeviceSdeArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdfs() GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdf { return v.Sdfs }).(GetInstancesInstanceConfigDeviceSdfArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdgs() GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdg { return v.Sdgs }).(GetInstancesInstanceConfigDeviceSdgArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdhs() GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdh { return v.Sdhs }).(GetInstancesInstanceConfigDeviceSdhArrayOutput)
}

type GetInstancesInstanceConfigDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) ToGetInstancesInstanceConfigDeviceArrayOutput() GetInstancesInstanceConfigDeviceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDevice {
		return vs[0].([]GetInstancesInstanceConfigDevice)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceOutput)
}

type GetInstancesInstanceConfigDeviceSda struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdaInput is an input type that accepts GetInstancesInstanceConfigDeviceSdaArgs and GetInstancesInstanceConfigDeviceSdaOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdaInput` via:
//
//          GetInstancesInstanceConfigDeviceSdaArgs{...}
type GetInstancesInstanceConfigDeviceSdaInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdaOutput() GetInstancesInstanceConfigDeviceSdaOutput
	ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdaOutput
}

type GetInstancesInstanceConfigDeviceSdaArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdaArgs) ToGetInstancesInstanceConfigDeviceSdaOutput() GetInstancesInstanceConfigDeviceSdaOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdaArgs) ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdaOutput)
}

// GetInstancesInstanceConfigDeviceSdaArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdaArray and GetInstancesInstanceConfigDeviceSdaArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdaArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdaArray{ GetInstancesInstanceConfigDeviceSdaArgs{...} }
type GetInstancesInstanceConfigDeviceSdaArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdaArrayOutput() GetInstancesInstanceConfigDeviceSdaArrayOutput
	ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdaArrayOutput
}

type GetInstancesInstanceConfigDeviceSdaArray []GetInstancesInstanceConfigDeviceSdaInput

func (GetInstancesInstanceConfigDeviceSdaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdaArray) ToGetInstancesInstanceConfigDeviceSdaArrayOutput() GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdaArray) ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdaArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdaOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) ToGetInstancesInstanceConfigDeviceSdaOutput() GetInstancesInstanceConfigDeviceSdaOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSda) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSda) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSda) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdaArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) ToGetInstancesInstanceConfigDeviceSdaArrayOutput() GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSda {
		return vs[0].([]GetInstancesInstanceConfigDeviceSda)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdaOutput)
}

type GetInstancesInstanceConfigDeviceSdb struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdbInput is an input type that accepts GetInstancesInstanceConfigDeviceSdbArgs and GetInstancesInstanceConfigDeviceSdbOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdbInput` via:
//
//          GetInstancesInstanceConfigDeviceSdbArgs{...}
type GetInstancesInstanceConfigDeviceSdbInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdbOutput() GetInstancesInstanceConfigDeviceSdbOutput
	ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdbOutput
}

type GetInstancesInstanceConfigDeviceSdbArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdbArgs) ToGetInstancesInstanceConfigDeviceSdbOutput() GetInstancesInstanceConfigDeviceSdbOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdbArgs) ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdbOutput)
}

// GetInstancesInstanceConfigDeviceSdbArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdbArray and GetInstancesInstanceConfigDeviceSdbArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdbArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdbArray{ GetInstancesInstanceConfigDeviceSdbArgs{...} }
type GetInstancesInstanceConfigDeviceSdbArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdbArrayOutput() GetInstancesInstanceConfigDeviceSdbArrayOutput
	ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdbArrayOutput
}

type GetInstancesInstanceConfigDeviceSdbArray []GetInstancesInstanceConfigDeviceSdbInput

func (GetInstancesInstanceConfigDeviceSdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdbArray) ToGetInstancesInstanceConfigDeviceSdbArrayOutput() GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdbArray) ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdbArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdbOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) ToGetInstancesInstanceConfigDeviceSdbOutput() GetInstancesInstanceConfigDeviceSdbOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdb) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdb) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdb) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdbArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) ToGetInstancesInstanceConfigDeviceSdbArrayOutput() GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdb {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdb)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdbOutput)
}

type GetInstancesInstanceConfigDeviceSdc struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdcInput is an input type that accepts GetInstancesInstanceConfigDeviceSdcArgs and GetInstancesInstanceConfigDeviceSdcOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdcInput` via:
//
//          GetInstancesInstanceConfigDeviceSdcArgs{...}
type GetInstancesInstanceConfigDeviceSdcInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdcOutput() GetInstancesInstanceConfigDeviceSdcOutput
	ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdcOutput
}

type GetInstancesInstanceConfigDeviceSdcArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdcArgs) ToGetInstancesInstanceConfigDeviceSdcOutput() GetInstancesInstanceConfigDeviceSdcOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdcArgs) ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdcOutput)
}

// GetInstancesInstanceConfigDeviceSdcArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdcArray and GetInstancesInstanceConfigDeviceSdcArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdcArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdcArray{ GetInstancesInstanceConfigDeviceSdcArgs{...} }
type GetInstancesInstanceConfigDeviceSdcArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdcArrayOutput() GetInstancesInstanceConfigDeviceSdcArrayOutput
	ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdcArrayOutput
}

type GetInstancesInstanceConfigDeviceSdcArray []GetInstancesInstanceConfigDeviceSdcInput

func (GetInstancesInstanceConfigDeviceSdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdcArray) ToGetInstancesInstanceConfigDeviceSdcArrayOutput() GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdcArray) ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdcArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdcOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) ToGetInstancesInstanceConfigDeviceSdcOutput() GetInstancesInstanceConfigDeviceSdcOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdc) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdc) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdc) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdcArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) ToGetInstancesInstanceConfigDeviceSdcArrayOutput() GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdc {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdc)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdcOutput)
}

type GetInstancesInstanceConfigDeviceSdd struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSddInput is an input type that accepts GetInstancesInstanceConfigDeviceSddArgs and GetInstancesInstanceConfigDeviceSddOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSddInput` via:
//
//          GetInstancesInstanceConfigDeviceSddArgs{...}
type GetInstancesInstanceConfigDeviceSddInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSddOutput() GetInstancesInstanceConfigDeviceSddOutput
	ToGetInstancesInstanceConfigDeviceSddOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSddOutput
}

type GetInstancesInstanceConfigDeviceSddArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSddArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSddArgs) ToGetInstancesInstanceConfigDeviceSddOutput() GetInstancesInstanceConfigDeviceSddOutput {
	return i.ToGetInstancesInstanceConfigDeviceSddOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSddArgs) ToGetInstancesInstanceConfigDeviceSddOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSddOutput)
}

// GetInstancesInstanceConfigDeviceSddArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSddArray and GetInstancesInstanceConfigDeviceSddArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSddArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSddArray{ GetInstancesInstanceConfigDeviceSddArgs{...} }
type GetInstancesInstanceConfigDeviceSddArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSddArrayOutput() GetInstancesInstanceConfigDeviceSddArrayOutput
	ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSddArrayOutput
}

type GetInstancesInstanceConfigDeviceSddArray []GetInstancesInstanceConfigDeviceSddInput

func (GetInstancesInstanceConfigDeviceSddArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSddArray) ToGetInstancesInstanceConfigDeviceSddArrayOutput() GetInstancesInstanceConfigDeviceSddArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSddArray) ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSddArrayOutput)
}

type GetInstancesInstanceConfigDeviceSddOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSddOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSddOutput) ToGetInstancesInstanceConfigDeviceSddOutput() GetInstancesInstanceConfigDeviceSddOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddOutput) ToGetInstancesInstanceConfigDeviceSddOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdd) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSddOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdd) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSddOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdd) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSddArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSddArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) ToGetInstancesInstanceConfigDeviceSddArrayOutput() GetInstancesInstanceConfigDeviceSddArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSddOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdd {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdd)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSddOutput)
}

type GetInstancesInstanceConfigDeviceSde struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdeInput is an input type that accepts GetInstancesInstanceConfigDeviceSdeArgs and GetInstancesInstanceConfigDeviceSdeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdeInput` via:
//
//          GetInstancesInstanceConfigDeviceSdeArgs{...}
type GetInstancesInstanceConfigDeviceSdeInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdeOutput() GetInstancesInstanceConfigDeviceSdeOutput
	ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdeOutput
}

type GetInstancesInstanceConfigDeviceSdeArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdeArgs) ToGetInstancesInstanceConfigDeviceSdeOutput() GetInstancesInstanceConfigDeviceSdeOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdeArgs) ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdeOutput)
}

// GetInstancesInstanceConfigDeviceSdeArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdeArray and GetInstancesInstanceConfigDeviceSdeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdeArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdeArray{ GetInstancesInstanceConfigDeviceSdeArgs{...} }
type GetInstancesInstanceConfigDeviceSdeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdeArrayOutput() GetInstancesInstanceConfigDeviceSdeArrayOutput
	ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdeArrayOutput
}

type GetInstancesInstanceConfigDeviceSdeArray []GetInstancesInstanceConfigDeviceSdeInput

func (GetInstancesInstanceConfigDeviceSdeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdeArray) ToGetInstancesInstanceConfigDeviceSdeArrayOutput() GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdeArray) ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdeArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) ToGetInstancesInstanceConfigDeviceSdeOutput() GetInstancesInstanceConfigDeviceSdeOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSde) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSde) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSde) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) ToGetInstancesInstanceConfigDeviceSdeArrayOutput() GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSde {
		return vs[0].([]GetInstancesInstanceConfigDeviceSde)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdeOutput)
}

type GetInstancesInstanceConfigDeviceSdf struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdfInput is an input type that accepts GetInstancesInstanceConfigDeviceSdfArgs and GetInstancesInstanceConfigDeviceSdfOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdfInput` via:
//
//          GetInstancesInstanceConfigDeviceSdfArgs{...}
type GetInstancesInstanceConfigDeviceSdfInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdfOutput() GetInstancesInstanceConfigDeviceSdfOutput
	ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdfOutput
}

type GetInstancesInstanceConfigDeviceSdfArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdfArgs) ToGetInstancesInstanceConfigDeviceSdfOutput() GetInstancesInstanceConfigDeviceSdfOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdfArgs) ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdfOutput)
}

// GetInstancesInstanceConfigDeviceSdfArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdfArray and GetInstancesInstanceConfigDeviceSdfArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdfArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdfArray{ GetInstancesInstanceConfigDeviceSdfArgs{...} }
type GetInstancesInstanceConfigDeviceSdfArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdfArrayOutput() GetInstancesInstanceConfigDeviceSdfArrayOutput
	ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdfArrayOutput
}

type GetInstancesInstanceConfigDeviceSdfArray []GetInstancesInstanceConfigDeviceSdfInput

func (GetInstancesInstanceConfigDeviceSdfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdfArray) ToGetInstancesInstanceConfigDeviceSdfArrayOutput() GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdfArray) ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdfArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdfOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) ToGetInstancesInstanceConfigDeviceSdfOutput() GetInstancesInstanceConfigDeviceSdfOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdf) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdf) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdf) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdfArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) ToGetInstancesInstanceConfigDeviceSdfArrayOutput() GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdf {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdf)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdfOutput)
}

type GetInstancesInstanceConfigDeviceSdg struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdgInput is an input type that accepts GetInstancesInstanceConfigDeviceSdgArgs and GetInstancesInstanceConfigDeviceSdgOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdgInput` via:
//
//          GetInstancesInstanceConfigDeviceSdgArgs{...}
type GetInstancesInstanceConfigDeviceSdgInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdgOutput() GetInstancesInstanceConfigDeviceSdgOutput
	ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdgOutput
}

type GetInstancesInstanceConfigDeviceSdgArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdgArgs) ToGetInstancesInstanceConfigDeviceSdgOutput() GetInstancesInstanceConfigDeviceSdgOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdgArgs) ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdgOutput)
}

// GetInstancesInstanceConfigDeviceSdgArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdgArray and GetInstancesInstanceConfigDeviceSdgArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdgArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdgArray{ GetInstancesInstanceConfigDeviceSdgArgs{...} }
type GetInstancesInstanceConfigDeviceSdgArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdgArrayOutput() GetInstancesInstanceConfigDeviceSdgArrayOutput
	ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdgArrayOutput
}

type GetInstancesInstanceConfigDeviceSdgArray []GetInstancesInstanceConfigDeviceSdgInput

func (GetInstancesInstanceConfigDeviceSdgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdgArray) ToGetInstancesInstanceConfigDeviceSdgArrayOutput() GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdgArray) ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdgArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdgOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) ToGetInstancesInstanceConfigDeviceSdgOutput() GetInstancesInstanceConfigDeviceSdgOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdg) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdg) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdg) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdgArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) ToGetInstancesInstanceConfigDeviceSdgArrayOutput() GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdg {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdg)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdgOutput)
}

type GetInstancesInstanceConfigDeviceSdh struct {
	DiskId    int     `pulumi:"diskId"`
	DiskLabel *string `pulumi:"diskLabel"`
	VolumeId  *int    `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdhInput is an input type that accepts GetInstancesInstanceConfigDeviceSdhArgs and GetInstancesInstanceConfigDeviceSdhOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdhInput` via:
//
//          GetInstancesInstanceConfigDeviceSdhArgs{...}
type GetInstancesInstanceConfigDeviceSdhInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdhOutput() GetInstancesInstanceConfigDeviceSdhOutput
	ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdhOutput
}

type GetInstancesInstanceConfigDeviceSdhArgs struct {
	DiskId    pulumi.IntInput       `pulumi:"diskId"`
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	VolumeId  pulumi.IntPtrInput    `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdhArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdhArgs) ToGetInstancesInstanceConfigDeviceSdhOutput() GetInstancesInstanceConfigDeviceSdhOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdhArgs) ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdhOutput)
}

// GetInstancesInstanceConfigDeviceSdhArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdhArray and GetInstancesInstanceConfigDeviceSdhArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdhArrayInput` via:
//
//          GetInstancesInstanceConfigDeviceSdhArray{ GetInstancesInstanceConfigDeviceSdhArgs{...} }
type GetInstancesInstanceConfigDeviceSdhArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdhArrayOutput() GetInstancesInstanceConfigDeviceSdhArrayOutput
	ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdhArrayOutput
}

type GetInstancesInstanceConfigDeviceSdhArray []GetInstancesInstanceConfigDeviceSdhInput

func (GetInstancesInstanceConfigDeviceSdhArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdhArray) ToGetInstancesInstanceConfigDeviceSdhArrayOutput() GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdhArray) ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdhArrayOutput)
}

type GetInstancesInstanceConfigDeviceSdhOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdhOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) ToGetInstancesInstanceConfigDeviceSdhOutput() GetInstancesInstanceConfigDeviceSdhOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdh) int { return v.DiskId }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdh) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdh) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdhArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdhArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) ToGetInstancesInstanceConfigDeviceSdhArrayOutput() GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdhOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdh {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdh)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdhOutput)
}

type GetInstancesInstanceConfigHelper struct {
	DevtmpfsAutomount bool `pulumi:"devtmpfsAutomount"`
	Distro            bool `pulumi:"distro"`
	ModulesDep        bool `pulumi:"modulesDep"`
	Network           bool `pulumi:"network"`
	UpdatedbDisabled  bool `pulumi:"updatedbDisabled"`
}

// GetInstancesInstanceConfigHelperInput is an input type that accepts GetInstancesInstanceConfigHelperArgs and GetInstancesInstanceConfigHelperOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigHelperInput` via:
//
//          GetInstancesInstanceConfigHelperArgs{...}
type GetInstancesInstanceConfigHelperInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigHelperOutput() GetInstancesInstanceConfigHelperOutput
	ToGetInstancesInstanceConfigHelperOutputWithContext(context.Context) GetInstancesInstanceConfigHelperOutput
}

type GetInstancesInstanceConfigHelperArgs struct {
	DevtmpfsAutomount pulumi.BoolInput `pulumi:"devtmpfsAutomount"`
	Distro            pulumi.BoolInput `pulumi:"distro"`
	ModulesDep        pulumi.BoolInput `pulumi:"modulesDep"`
	Network           pulumi.BoolInput `pulumi:"network"`
	UpdatedbDisabled  pulumi.BoolInput `pulumi:"updatedbDisabled"`
}

func (GetInstancesInstanceConfigHelperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (i GetInstancesInstanceConfigHelperArgs) ToGetInstancesInstanceConfigHelperOutput() GetInstancesInstanceConfigHelperOutput {
	return i.ToGetInstancesInstanceConfigHelperOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigHelperArgs) ToGetInstancesInstanceConfigHelperOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigHelperOutput)
}

// GetInstancesInstanceConfigHelperArrayInput is an input type that accepts GetInstancesInstanceConfigHelperArray and GetInstancesInstanceConfigHelperArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigHelperArrayInput` via:
//
//          GetInstancesInstanceConfigHelperArray{ GetInstancesInstanceConfigHelperArgs{...} }
type GetInstancesInstanceConfigHelperArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigHelperArrayOutput() GetInstancesInstanceConfigHelperArrayOutput
	ToGetInstancesInstanceConfigHelperArrayOutputWithContext(context.Context) GetInstancesInstanceConfigHelperArrayOutput
}

type GetInstancesInstanceConfigHelperArray []GetInstancesInstanceConfigHelperInput

func (GetInstancesInstanceConfigHelperArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (i GetInstancesInstanceConfigHelperArray) ToGetInstancesInstanceConfigHelperArrayOutput() GetInstancesInstanceConfigHelperArrayOutput {
	return i.ToGetInstancesInstanceConfigHelperArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigHelperArray) ToGetInstancesInstanceConfigHelperArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigHelperArrayOutput)
}

type GetInstancesInstanceConfigHelperOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigHelperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (o GetInstancesInstanceConfigHelperOutput) ToGetInstancesInstanceConfigHelperOutput() GetInstancesInstanceConfigHelperOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperOutput) ToGetInstancesInstanceConfigHelperOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperOutput) DevtmpfsAutomount() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.DevtmpfsAutomount }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceConfigHelperOutput) Distro() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.Distro }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceConfigHelperOutput) ModulesDep() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.ModulesDep }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceConfigHelperOutput) Network() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.Network }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceConfigHelperOutput) UpdatedbDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.UpdatedbDisabled }).(pulumi.BoolOutput)
}

type GetInstancesInstanceConfigHelperArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigHelperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (o GetInstancesInstanceConfigHelperArrayOutput) ToGetInstancesInstanceConfigHelperArrayOutput() GetInstancesInstanceConfigHelperArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperArrayOutput) ToGetInstancesInstanceConfigHelperArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigHelperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigHelper {
		return vs[0].([]GetInstancesInstanceConfigHelper)[vs[1].(int)]
	}).(GetInstancesInstanceConfigHelperOutput)
}

type GetInstancesInstanceConfigInterface struct {
	IpamAddress *string `pulumi:"ipamAddress"`
	Label       *string `pulumi:"label"`
	Purpose     *string `pulumi:"purpose"`
}

// GetInstancesInstanceConfigInterfaceInput is an input type that accepts GetInstancesInstanceConfigInterfaceArgs and GetInstancesInstanceConfigInterfaceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigInterfaceInput` via:
//
//          GetInstancesInstanceConfigInterfaceArgs{...}
type GetInstancesInstanceConfigInterfaceInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigInterfaceOutput() GetInstancesInstanceConfigInterfaceOutput
	ToGetInstancesInstanceConfigInterfaceOutputWithContext(context.Context) GetInstancesInstanceConfigInterfaceOutput
}

type GetInstancesInstanceConfigInterfaceArgs struct {
	IpamAddress pulumi.StringPtrInput `pulumi:"ipamAddress"`
	Label       pulumi.StringPtrInput `pulumi:"label"`
	Purpose     pulumi.StringPtrInput `pulumi:"purpose"`
}

func (GetInstancesInstanceConfigInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (i GetInstancesInstanceConfigInterfaceArgs) ToGetInstancesInstanceConfigInterfaceOutput() GetInstancesInstanceConfigInterfaceOutput {
	return i.ToGetInstancesInstanceConfigInterfaceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigInterfaceArgs) ToGetInstancesInstanceConfigInterfaceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigInterfaceOutput)
}

// GetInstancesInstanceConfigInterfaceArrayInput is an input type that accepts GetInstancesInstanceConfigInterfaceArray and GetInstancesInstanceConfigInterfaceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigInterfaceArrayInput` via:
//
//          GetInstancesInstanceConfigInterfaceArray{ GetInstancesInstanceConfigInterfaceArgs{...} }
type GetInstancesInstanceConfigInterfaceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigInterfaceArrayOutput() GetInstancesInstanceConfigInterfaceArrayOutput
	ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(context.Context) GetInstancesInstanceConfigInterfaceArrayOutput
}

type GetInstancesInstanceConfigInterfaceArray []GetInstancesInstanceConfigInterfaceInput

func (GetInstancesInstanceConfigInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (i GetInstancesInstanceConfigInterfaceArray) ToGetInstancesInstanceConfigInterfaceArrayOutput() GetInstancesInstanceConfigInterfaceArrayOutput {
	return i.ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigInterfaceArray) ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigInterfaceArrayOutput)
}

type GetInstancesInstanceConfigInterfaceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (o GetInstancesInstanceConfigInterfaceOutput) ToGetInstancesInstanceConfigInterfaceOutput() GetInstancesInstanceConfigInterfaceOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceOutput) ToGetInstancesInstanceConfigInterfaceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceOutput) IpamAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigInterface) *string { return v.IpamAddress }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigInterfaceOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigInterface) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstanceConfigInterfaceOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigInterface) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

type GetInstancesInstanceConfigInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) ToGetInstancesInstanceConfigInterfaceArrayOutput() GetInstancesInstanceConfigInterfaceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigInterface {
		return vs[0].([]GetInstancesInstanceConfigInterface)[vs[1].(int)]
	}).(GetInstancesInstanceConfigInterfaceOutput)
}

type GetInstancesInstanceDisk struct {
	Filesystem string `pulumi:"filesystem"`
	Id         int    `pulumi:"id"`
	Label      string `pulumi:"label"`
	Size       int    `pulumi:"size"`
}

// GetInstancesInstanceDiskInput is an input type that accepts GetInstancesInstanceDiskArgs and GetInstancesInstanceDiskOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDiskInput` via:
//
//          GetInstancesInstanceDiskArgs{...}
type GetInstancesInstanceDiskInput interface {
	pulumi.Input

	ToGetInstancesInstanceDiskOutput() GetInstancesInstanceDiskOutput
	ToGetInstancesInstanceDiskOutputWithContext(context.Context) GetInstancesInstanceDiskOutput
}

type GetInstancesInstanceDiskArgs struct {
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	Id         pulumi.IntInput    `pulumi:"id"`
	Label      pulumi.StringInput `pulumi:"label"`
	Size       pulumi.IntInput    `pulumi:"size"`
}

func (GetInstancesInstanceDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDisk)(nil)).Elem()
}

func (i GetInstancesInstanceDiskArgs) ToGetInstancesInstanceDiskOutput() GetInstancesInstanceDiskOutput {
	return i.ToGetInstancesInstanceDiskOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDiskArgs) ToGetInstancesInstanceDiskOutputWithContext(ctx context.Context) GetInstancesInstanceDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDiskOutput)
}

// GetInstancesInstanceDiskArrayInput is an input type that accepts GetInstancesInstanceDiskArray and GetInstancesInstanceDiskArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDiskArrayInput` via:
//
//          GetInstancesInstanceDiskArray{ GetInstancesInstanceDiskArgs{...} }
type GetInstancesInstanceDiskArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceDiskArrayOutput() GetInstancesInstanceDiskArrayOutput
	ToGetInstancesInstanceDiskArrayOutputWithContext(context.Context) GetInstancesInstanceDiskArrayOutput
}

type GetInstancesInstanceDiskArray []GetInstancesInstanceDiskInput

func (GetInstancesInstanceDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDisk)(nil)).Elem()
}

func (i GetInstancesInstanceDiskArray) ToGetInstancesInstanceDiskArrayOutput() GetInstancesInstanceDiskArrayOutput {
	return i.ToGetInstancesInstanceDiskArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDiskArray) ToGetInstancesInstanceDiskArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDiskArrayOutput)
}

type GetInstancesInstanceDiskOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDisk)(nil)).Elem()
}

func (o GetInstancesInstanceDiskOutput) ToGetInstancesInstanceDiskOutput() GetInstancesInstanceDiskOutput {
	return o
}

func (o GetInstancesInstanceDiskOutput) ToGetInstancesInstanceDiskOutputWithContext(ctx context.Context) GetInstancesInstanceDiskOutput {
	return o
}

func (o GetInstancesInstanceDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceDiskOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstancesInstanceDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDisk)(nil)).Elem()
}

func (o GetInstancesInstanceDiskArrayOutput) ToGetInstancesInstanceDiskArrayOutput() GetInstancesInstanceDiskArrayOutput {
	return o
}

func (o GetInstancesInstanceDiskArrayOutput) ToGetInstancesInstanceDiskArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDiskArrayOutput {
	return o
}

func (o GetInstancesInstanceDiskArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceDisk {
		return vs[0].([]GetInstancesInstanceDisk)[vs[1].(int)]
	}).(GetInstancesInstanceDiskOutput)
}

type GetInstancesInstanceSpec struct {
	Disk     int `pulumi:"disk"`
	Memory   int `pulumi:"memory"`
	Transfer int `pulumi:"transfer"`
	Vcpus    int `pulumi:"vcpus"`
}

// GetInstancesInstanceSpecInput is an input type that accepts GetInstancesInstanceSpecArgs and GetInstancesInstanceSpecOutput values.
// You can construct a concrete instance of `GetInstancesInstanceSpecInput` via:
//
//          GetInstancesInstanceSpecArgs{...}
type GetInstancesInstanceSpecInput interface {
	pulumi.Input

	ToGetInstancesInstanceSpecOutput() GetInstancesInstanceSpecOutput
	ToGetInstancesInstanceSpecOutputWithContext(context.Context) GetInstancesInstanceSpecOutput
}

type GetInstancesInstanceSpecArgs struct {
	Disk     pulumi.IntInput `pulumi:"disk"`
	Memory   pulumi.IntInput `pulumi:"memory"`
	Transfer pulumi.IntInput `pulumi:"transfer"`
	Vcpus    pulumi.IntInput `pulumi:"vcpus"`
}

func (GetInstancesInstanceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceSpec)(nil)).Elem()
}

func (i GetInstancesInstanceSpecArgs) ToGetInstancesInstanceSpecOutput() GetInstancesInstanceSpecOutput {
	return i.ToGetInstancesInstanceSpecOutputWithContext(context.Background())
}

func (i GetInstancesInstanceSpecArgs) ToGetInstancesInstanceSpecOutputWithContext(ctx context.Context) GetInstancesInstanceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceSpecOutput)
}

// GetInstancesInstanceSpecArrayInput is an input type that accepts GetInstancesInstanceSpecArray and GetInstancesInstanceSpecArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceSpecArrayInput` via:
//
//          GetInstancesInstanceSpecArray{ GetInstancesInstanceSpecArgs{...} }
type GetInstancesInstanceSpecArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceSpecArrayOutput() GetInstancesInstanceSpecArrayOutput
	ToGetInstancesInstanceSpecArrayOutputWithContext(context.Context) GetInstancesInstanceSpecArrayOutput
}

type GetInstancesInstanceSpecArray []GetInstancesInstanceSpecInput

func (GetInstancesInstanceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceSpec)(nil)).Elem()
}

func (i GetInstancesInstanceSpecArray) ToGetInstancesInstanceSpecArrayOutput() GetInstancesInstanceSpecArrayOutput {
	return i.ToGetInstancesInstanceSpecArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceSpecArray) ToGetInstancesInstanceSpecArrayOutputWithContext(ctx context.Context) GetInstancesInstanceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceSpecArrayOutput)
}

type GetInstancesInstanceSpecOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceSpec)(nil)).Elem()
}

func (o GetInstancesInstanceSpecOutput) ToGetInstancesInstanceSpecOutput() GetInstancesInstanceSpecOutput {
	return o
}

func (o GetInstancesInstanceSpecOutput) ToGetInstancesInstanceSpecOutputWithContext(ctx context.Context) GetInstancesInstanceSpecOutput {
	return o
}

func (o GetInstancesInstanceSpecOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceSpecOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceSpecOutput) Transfer() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Transfer }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceSpecOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetInstancesInstanceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceSpec)(nil)).Elem()
}

func (o GetInstancesInstanceSpecArrayOutput) ToGetInstancesInstanceSpecArrayOutput() GetInstancesInstanceSpecArrayOutput {
	return o
}

func (o GetInstancesInstanceSpecArrayOutput) ToGetInstancesInstanceSpecArrayOutputWithContext(ctx context.Context) GetInstancesInstanceSpecArrayOutput {
	return o
}

func (o GetInstancesInstanceSpecArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceSpec {
		return vs[0].([]GetInstancesInstanceSpec)[vs[1].(int)]
	}).(GetInstancesInstanceSpecOutput)
}

type GetLkeClusterControlPlane struct {
	HighAvailability bool `pulumi:"highAvailability"`
}

// GetLkeClusterControlPlaneInput is an input type that accepts GetLkeClusterControlPlaneArgs and GetLkeClusterControlPlaneOutput values.
// You can construct a concrete instance of `GetLkeClusterControlPlaneInput` via:
//
//          GetLkeClusterControlPlaneArgs{...}
type GetLkeClusterControlPlaneInput interface {
	pulumi.Input

	ToGetLkeClusterControlPlaneOutput() GetLkeClusterControlPlaneOutput
	ToGetLkeClusterControlPlaneOutputWithContext(context.Context) GetLkeClusterControlPlaneOutput
}

type GetLkeClusterControlPlaneArgs struct {
	HighAvailability pulumi.BoolInput `pulumi:"highAvailability"`
}

func (GetLkeClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterControlPlane)(nil)).Elem()
}

func (i GetLkeClusterControlPlaneArgs) ToGetLkeClusterControlPlaneOutput() GetLkeClusterControlPlaneOutput {
	return i.ToGetLkeClusterControlPlaneOutputWithContext(context.Background())
}

func (i GetLkeClusterControlPlaneArgs) ToGetLkeClusterControlPlaneOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterControlPlaneOutput)
}

// GetLkeClusterControlPlaneArrayInput is an input type that accepts GetLkeClusterControlPlaneArray and GetLkeClusterControlPlaneArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterControlPlaneArrayInput` via:
//
//          GetLkeClusterControlPlaneArray{ GetLkeClusterControlPlaneArgs{...} }
type GetLkeClusterControlPlaneArrayInput interface {
	pulumi.Input

	ToGetLkeClusterControlPlaneArrayOutput() GetLkeClusterControlPlaneArrayOutput
	ToGetLkeClusterControlPlaneArrayOutputWithContext(context.Context) GetLkeClusterControlPlaneArrayOutput
}

type GetLkeClusterControlPlaneArray []GetLkeClusterControlPlaneInput

func (GetLkeClusterControlPlaneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterControlPlane)(nil)).Elem()
}

func (i GetLkeClusterControlPlaneArray) ToGetLkeClusterControlPlaneArrayOutput() GetLkeClusterControlPlaneArrayOutput {
	return i.ToGetLkeClusterControlPlaneArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterControlPlaneArray) ToGetLkeClusterControlPlaneArrayOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterControlPlaneArrayOutput)
}

type GetLkeClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (GetLkeClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterControlPlane)(nil)).Elem()
}

func (o GetLkeClusterControlPlaneOutput) ToGetLkeClusterControlPlaneOutput() GetLkeClusterControlPlaneOutput {
	return o
}

func (o GetLkeClusterControlPlaneOutput) ToGetLkeClusterControlPlaneOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneOutput {
	return o
}

func (o GetLkeClusterControlPlaneOutput) HighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLkeClusterControlPlane) bool { return v.HighAvailability }).(pulumi.BoolOutput)
}

type GetLkeClusterControlPlaneArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterControlPlaneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterControlPlane)(nil)).Elem()
}

func (o GetLkeClusterControlPlaneArrayOutput) ToGetLkeClusterControlPlaneArrayOutput() GetLkeClusterControlPlaneArrayOutput {
	return o
}

func (o GetLkeClusterControlPlaneArrayOutput) ToGetLkeClusterControlPlaneArrayOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneArrayOutput {
	return o
}

func (o GetLkeClusterControlPlaneArrayOutput) Index(i pulumi.IntInput) GetLkeClusterControlPlaneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterControlPlane {
		return vs[0].([]GetLkeClusterControlPlane)[vs[1].(int)]
	}).(GetLkeClusterControlPlaneOutput)
}

type GetLkeClusterPool struct {
	// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
	Autoscalers []GetLkeClusterPoolAutoscaler `pulumi:"autoscalers"`
	// The number of nodes in the Node Pool.
	Count int `pulumi:"count"`
	// The LKE Cluster's ID.
	Id int `pulumi:"id"`
	// The nodes in the Node Pool.
	Nodes []GetLkeClusterPoolNode `pulumi:"nodes"`
	// The linode type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type string `pulumi:"type"`
}

// GetLkeClusterPoolInput is an input type that accepts GetLkeClusterPoolArgs and GetLkeClusterPoolOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolInput` via:
//
//          GetLkeClusterPoolArgs{...}
type GetLkeClusterPoolInput interface {
	pulumi.Input

	ToGetLkeClusterPoolOutput() GetLkeClusterPoolOutput
	ToGetLkeClusterPoolOutputWithContext(context.Context) GetLkeClusterPoolOutput
}

type GetLkeClusterPoolArgs struct {
	// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
	Autoscalers GetLkeClusterPoolAutoscalerArrayInput `pulumi:"autoscalers"`
	// The number of nodes in the Node Pool.
	Count pulumi.IntInput `pulumi:"count"`
	// The LKE Cluster's ID.
	Id pulumi.IntInput `pulumi:"id"`
	// The nodes in the Node Pool.
	Nodes GetLkeClusterPoolNodeArrayInput `pulumi:"nodes"`
	// The linode type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLkeClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPool)(nil)).Elem()
}

func (i GetLkeClusterPoolArgs) ToGetLkeClusterPoolOutput() GetLkeClusterPoolOutput {
	return i.ToGetLkeClusterPoolOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolArgs) ToGetLkeClusterPoolOutputWithContext(ctx context.Context) GetLkeClusterPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolOutput)
}

// GetLkeClusterPoolArrayInput is an input type that accepts GetLkeClusterPoolArray and GetLkeClusterPoolArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolArrayInput` via:
//
//          GetLkeClusterPoolArray{ GetLkeClusterPoolArgs{...} }
type GetLkeClusterPoolArrayInput interface {
	pulumi.Input

	ToGetLkeClusterPoolArrayOutput() GetLkeClusterPoolArrayOutput
	ToGetLkeClusterPoolArrayOutputWithContext(context.Context) GetLkeClusterPoolArrayOutput
}

type GetLkeClusterPoolArray []GetLkeClusterPoolInput

func (GetLkeClusterPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPool)(nil)).Elem()
}

func (i GetLkeClusterPoolArray) ToGetLkeClusterPoolArrayOutput() GetLkeClusterPoolArrayOutput {
	return i.ToGetLkeClusterPoolArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolArray) ToGetLkeClusterPoolArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolArrayOutput)
}

type GetLkeClusterPoolOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPool)(nil)).Elem()
}

func (o GetLkeClusterPoolOutput) ToGetLkeClusterPoolOutput() GetLkeClusterPoolOutput {
	return o
}

func (o GetLkeClusterPoolOutput) ToGetLkeClusterPoolOutputWithContext(ctx context.Context) GetLkeClusterPoolOutput {
	return o
}

// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
func (o GetLkeClusterPoolOutput) Autoscalers() GetLkeClusterPoolAutoscalerArrayOutput {
	return o.ApplyT(func(v GetLkeClusterPool) []GetLkeClusterPoolAutoscaler { return v.Autoscalers }).(GetLkeClusterPoolAutoscalerArrayOutput)
}

// The number of nodes in the Node Pool.
func (o GetLkeClusterPoolOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPool) int { return v.Count }).(pulumi.IntOutput)
}

// The LKE Cluster's ID.
func (o GetLkeClusterPoolOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPool) int { return v.Id }).(pulumi.IntOutput)
}

// The nodes in the Node Pool.
func (o GetLkeClusterPoolOutput) Nodes() GetLkeClusterPoolNodeArrayOutput {
	return o.ApplyT(func(v GetLkeClusterPool) []GetLkeClusterPoolNode { return v.Nodes }).(GetLkeClusterPoolNodeArrayOutput)
}

// The linode type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
func (o GetLkeClusterPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeClusterPool) string { return v.Type }).(pulumi.StringOutput)
}

type GetLkeClusterPoolArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPool)(nil)).Elem()
}

func (o GetLkeClusterPoolArrayOutput) ToGetLkeClusterPoolArrayOutput() GetLkeClusterPoolArrayOutput {
	return o
}

func (o GetLkeClusterPoolArrayOutput) ToGetLkeClusterPoolArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolArrayOutput {
	return o
}

func (o GetLkeClusterPoolArrayOutput) Index(i pulumi.IntInput) GetLkeClusterPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterPool {
		return vs[0].([]GetLkeClusterPool)[vs[1].(int)]
	}).(GetLkeClusterPoolOutput)
}

type GetLkeClusterPoolAutoscaler struct {
	// The maximum number of nodes to autoscale to.
	Max int `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min int `pulumi:"min"`
}

// GetLkeClusterPoolAutoscalerInput is an input type that accepts GetLkeClusterPoolAutoscalerArgs and GetLkeClusterPoolAutoscalerOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolAutoscalerInput` via:
//
//          GetLkeClusterPoolAutoscalerArgs{...}
type GetLkeClusterPoolAutoscalerInput interface {
	pulumi.Input

	ToGetLkeClusterPoolAutoscalerOutput() GetLkeClusterPoolAutoscalerOutput
	ToGetLkeClusterPoolAutoscalerOutputWithContext(context.Context) GetLkeClusterPoolAutoscalerOutput
}

type GetLkeClusterPoolAutoscalerArgs struct {
	// The maximum number of nodes to autoscale to.
	Max pulumi.IntInput `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min pulumi.IntInput `pulumi:"min"`
}

func (GetLkeClusterPoolAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i GetLkeClusterPoolAutoscalerArgs) ToGetLkeClusterPoolAutoscalerOutput() GetLkeClusterPoolAutoscalerOutput {
	return i.ToGetLkeClusterPoolAutoscalerOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolAutoscalerArgs) ToGetLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolAutoscalerOutput)
}

// GetLkeClusterPoolAutoscalerArrayInput is an input type that accepts GetLkeClusterPoolAutoscalerArray and GetLkeClusterPoolAutoscalerArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolAutoscalerArrayInput` via:
//
//          GetLkeClusterPoolAutoscalerArray{ GetLkeClusterPoolAutoscalerArgs{...} }
type GetLkeClusterPoolAutoscalerArrayInput interface {
	pulumi.Input

	ToGetLkeClusterPoolAutoscalerArrayOutput() GetLkeClusterPoolAutoscalerArrayOutput
	ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(context.Context) GetLkeClusterPoolAutoscalerArrayOutput
}

type GetLkeClusterPoolAutoscalerArray []GetLkeClusterPoolAutoscalerInput

func (GetLkeClusterPoolAutoscalerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i GetLkeClusterPoolAutoscalerArray) ToGetLkeClusterPoolAutoscalerArrayOutput() GetLkeClusterPoolAutoscalerArrayOutput {
	return i.ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolAutoscalerArray) ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolAutoscalerArrayOutput)
}

type GetLkeClusterPoolAutoscalerOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o GetLkeClusterPoolAutoscalerOutput) ToGetLkeClusterPoolAutoscalerOutput() GetLkeClusterPoolAutoscalerOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerOutput) ToGetLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerOutput {
	return o
}

// The maximum number of nodes to autoscale to.
func (o GetLkeClusterPoolAutoscalerOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPoolAutoscaler) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum number of nodes to autoscale to.
func (o GetLkeClusterPoolAutoscalerOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPoolAutoscaler) int { return v.Min }).(pulumi.IntOutput)
}

type GetLkeClusterPoolAutoscalerArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolAutoscalerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) ToGetLkeClusterPoolAutoscalerArrayOutput() GetLkeClusterPoolAutoscalerArrayOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerArrayOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) Index(i pulumi.IntInput) GetLkeClusterPoolAutoscalerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterPoolAutoscaler {
		return vs[0].([]GetLkeClusterPoolAutoscaler)[vs[1].(int)]
	}).(GetLkeClusterPoolAutoscalerOutput)
}

type GetLkeClusterPoolNode struct {
	// The LKE Cluster's ID.
	Id string `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId int `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status string `pulumi:"status"`
}

// GetLkeClusterPoolNodeInput is an input type that accepts GetLkeClusterPoolNodeArgs and GetLkeClusterPoolNodeOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolNodeInput` via:
//
//          GetLkeClusterPoolNodeArgs{...}
type GetLkeClusterPoolNodeInput interface {
	pulumi.Input

	ToGetLkeClusterPoolNodeOutput() GetLkeClusterPoolNodeOutput
	ToGetLkeClusterPoolNodeOutputWithContext(context.Context) GetLkeClusterPoolNodeOutput
}

type GetLkeClusterPoolNodeArgs struct {
	// The LKE Cluster's ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId pulumi.IntInput `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLkeClusterPoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolNode)(nil)).Elem()
}

func (i GetLkeClusterPoolNodeArgs) ToGetLkeClusterPoolNodeOutput() GetLkeClusterPoolNodeOutput {
	return i.ToGetLkeClusterPoolNodeOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolNodeArgs) ToGetLkeClusterPoolNodeOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolNodeOutput)
}

// GetLkeClusterPoolNodeArrayInput is an input type that accepts GetLkeClusterPoolNodeArray and GetLkeClusterPoolNodeArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolNodeArrayInput` via:
//
//          GetLkeClusterPoolNodeArray{ GetLkeClusterPoolNodeArgs{...} }
type GetLkeClusterPoolNodeArrayInput interface {
	pulumi.Input

	ToGetLkeClusterPoolNodeArrayOutput() GetLkeClusterPoolNodeArrayOutput
	ToGetLkeClusterPoolNodeArrayOutputWithContext(context.Context) GetLkeClusterPoolNodeArrayOutput
}

type GetLkeClusterPoolNodeArray []GetLkeClusterPoolNodeInput

func (GetLkeClusterPoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolNode)(nil)).Elem()
}

func (i GetLkeClusterPoolNodeArray) ToGetLkeClusterPoolNodeArrayOutput() GetLkeClusterPoolNodeArrayOutput {
	return i.ToGetLkeClusterPoolNodeArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolNodeArray) ToGetLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolNodeArrayOutput)
}

type GetLkeClusterPoolNodeOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolNode)(nil)).Elem()
}

func (o GetLkeClusterPoolNodeOutput) ToGetLkeClusterPoolNodeOutput() GetLkeClusterPoolNodeOutput {
	return o
}

func (o GetLkeClusterPoolNodeOutput) ToGetLkeClusterPoolNodeOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeOutput {
	return o
}

// The LKE Cluster's ID.
func (o GetLkeClusterPoolNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeClusterPoolNode) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the underlying Linode instance.
func (o GetLkeClusterPoolNodeOutput) InstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPoolNode) int { return v.InstanceId }).(pulumi.IntOutput)
}

// The status of the node. (`ready`, `notReady`)
func (o GetLkeClusterPoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeClusterPoolNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetLkeClusterPoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolNode)(nil)).Elem()
}

func (o GetLkeClusterPoolNodeArrayOutput) ToGetLkeClusterPoolNodeArrayOutput() GetLkeClusterPoolNodeArrayOutput {
	return o
}

func (o GetLkeClusterPoolNodeArrayOutput) ToGetLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeArrayOutput {
	return o
}

func (o GetLkeClusterPoolNodeArrayOutput) Index(i pulumi.IntInput) GetLkeClusterPoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterPoolNode {
		return vs[0].([]GetLkeClusterPoolNode)[vs[1].(int)]
	}).(GetLkeClusterPoolNodeOutput)
}

type GetNodeBalancerConfigNodeStatus struct {
	// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
	Down int `pulumi:"down"`
	// The number of backends considered to be 'UP' and healthy, and that are serving requests.
	Up int `pulumi:"up"`
}

// GetNodeBalancerConfigNodeStatusInput is an input type that accepts GetNodeBalancerConfigNodeStatusArgs and GetNodeBalancerConfigNodeStatusOutput values.
// You can construct a concrete instance of `GetNodeBalancerConfigNodeStatusInput` via:
//
//          GetNodeBalancerConfigNodeStatusArgs{...}
type GetNodeBalancerConfigNodeStatusInput interface {
	pulumi.Input

	ToGetNodeBalancerConfigNodeStatusOutput() GetNodeBalancerConfigNodeStatusOutput
	ToGetNodeBalancerConfigNodeStatusOutputWithContext(context.Context) GetNodeBalancerConfigNodeStatusOutput
}

type GetNodeBalancerConfigNodeStatusArgs struct {
	// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
	Down pulumi.IntInput `pulumi:"down"`
	// The number of backends considered to be 'UP' and healthy, and that are serving requests.
	Up pulumi.IntInput `pulumi:"up"`
}

func (GetNodeBalancerConfigNodeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i GetNodeBalancerConfigNodeStatusArgs) ToGetNodeBalancerConfigNodeStatusOutput() GetNodeBalancerConfigNodeStatusOutput {
	return i.ToGetNodeBalancerConfigNodeStatusOutputWithContext(context.Background())
}

func (i GetNodeBalancerConfigNodeStatusArgs) ToGetNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerConfigNodeStatusOutput)
}

// GetNodeBalancerConfigNodeStatusArrayInput is an input type that accepts GetNodeBalancerConfigNodeStatusArray and GetNodeBalancerConfigNodeStatusArrayOutput values.
// You can construct a concrete instance of `GetNodeBalancerConfigNodeStatusArrayInput` via:
//
//          GetNodeBalancerConfigNodeStatusArray{ GetNodeBalancerConfigNodeStatusArgs{...} }
type GetNodeBalancerConfigNodeStatusArrayInput interface {
	pulumi.Input

	ToGetNodeBalancerConfigNodeStatusArrayOutput() GetNodeBalancerConfigNodeStatusArrayOutput
	ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Context) GetNodeBalancerConfigNodeStatusArrayOutput
}

type GetNodeBalancerConfigNodeStatusArray []GetNodeBalancerConfigNodeStatusInput

func (GetNodeBalancerConfigNodeStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i GetNodeBalancerConfigNodeStatusArray) ToGetNodeBalancerConfigNodeStatusArrayOutput() GetNodeBalancerConfigNodeStatusArrayOutput {
	return i.ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Background())
}

func (i GetNodeBalancerConfigNodeStatusArray) ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerConfigNodeStatusArrayOutput)
}

type GetNodeBalancerConfigNodeStatusOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerConfigNodeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o GetNodeBalancerConfigNodeStatusOutput) ToGetNodeBalancerConfigNodeStatusOutput() GetNodeBalancerConfigNodeStatusOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusOutput) ToGetNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusOutput {
	return o
}

// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
func (o GetNodeBalancerConfigNodeStatusOutput) Down() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeBalancerConfigNodeStatus) int { return v.Down }).(pulumi.IntOutput)
}

// The number of backends considered to be 'UP' and healthy, and that are serving requests.
func (o GetNodeBalancerConfigNodeStatusOutput) Up() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeBalancerConfigNodeStatus) int { return v.Up }).(pulumi.IntOutput)
}

type GetNodeBalancerConfigNodeStatusArrayOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerConfigNodeStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) ToGetNodeBalancerConfigNodeStatusArrayOutput() GetNodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) Index(i pulumi.IntInput) GetNodeBalancerConfigNodeStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeBalancerConfigNodeStatus {
		return vs[0].([]GetNodeBalancerConfigNodeStatus)[vs[1].(int)]
	}).(GetNodeBalancerConfigNodeStatusOutput)
}

type GetNodeBalancerTransfer struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In float64 `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out float64 `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total float64 `pulumi:"total"`
}

// GetNodeBalancerTransferInput is an input type that accepts GetNodeBalancerTransferArgs and GetNodeBalancerTransferOutput values.
// You can construct a concrete instance of `GetNodeBalancerTransferInput` via:
//
//          GetNodeBalancerTransferArgs{...}
type GetNodeBalancerTransferInput interface {
	pulumi.Input

	ToGetNodeBalancerTransferOutput() GetNodeBalancerTransferOutput
	ToGetNodeBalancerTransferOutputWithContext(context.Context) GetNodeBalancerTransferOutput
}

type GetNodeBalancerTransferArgs struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In pulumi.Float64Input `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out pulumi.Float64Input `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetNodeBalancerTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerTransfer)(nil)).Elem()
}

func (i GetNodeBalancerTransferArgs) ToGetNodeBalancerTransferOutput() GetNodeBalancerTransferOutput {
	return i.ToGetNodeBalancerTransferOutputWithContext(context.Background())
}

func (i GetNodeBalancerTransferArgs) ToGetNodeBalancerTransferOutputWithContext(ctx context.Context) GetNodeBalancerTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerTransferOutput)
}

// GetNodeBalancerTransferArrayInput is an input type that accepts GetNodeBalancerTransferArray and GetNodeBalancerTransferArrayOutput values.
// You can construct a concrete instance of `GetNodeBalancerTransferArrayInput` via:
//
//          GetNodeBalancerTransferArray{ GetNodeBalancerTransferArgs{...} }
type GetNodeBalancerTransferArrayInput interface {
	pulumi.Input

	ToGetNodeBalancerTransferArrayOutput() GetNodeBalancerTransferArrayOutput
	ToGetNodeBalancerTransferArrayOutputWithContext(context.Context) GetNodeBalancerTransferArrayOutput
}

type GetNodeBalancerTransferArray []GetNodeBalancerTransferInput

func (GetNodeBalancerTransferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerTransfer)(nil)).Elem()
}

func (i GetNodeBalancerTransferArray) ToGetNodeBalancerTransferArrayOutput() GetNodeBalancerTransferArrayOutput {
	return i.ToGetNodeBalancerTransferArrayOutputWithContext(context.Background())
}

func (i GetNodeBalancerTransferArray) ToGetNodeBalancerTransferArrayOutputWithContext(ctx context.Context) GetNodeBalancerTransferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerTransferArrayOutput)
}

type GetNodeBalancerTransferOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerTransfer)(nil)).Elem()
}

func (o GetNodeBalancerTransferOutput) ToGetNodeBalancerTransferOutput() GetNodeBalancerTransferOutput {
	return o
}

func (o GetNodeBalancerTransferOutput) ToGetNodeBalancerTransferOutputWithContext(ctx context.Context) GetNodeBalancerTransferOutput {
	return o
}

// The total transfer, in MB, used by this NodeBalancer for the current month
func (o GetNodeBalancerTransferOutput) In() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodeBalancerTransfer) float64 { return v.In }).(pulumi.Float64Output)
}

// The total inbound transfer, in MB, used for this NodeBalancer for the current month
func (o GetNodeBalancerTransferOutput) Out() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodeBalancerTransfer) float64 { return v.Out }).(pulumi.Float64Output)
}

// The total outbound transfer, in MB, used for this NodeBalancer for the current month
func (o GetNodeBalancerTransferOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodeBalancerTransfer) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetNodeBalancerTransferArrayOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerTransferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerTransfer)(nil)).Elem()
}

func (o GetNodeBalancerTransferArrayOutput) ToGetNodeBalancerTransferArrayOutput() GetNodeBalancerTransferArrayOutput {
	return o
}

func (o GetNodeBalancerTransferArrayOutput) ToGetNodeBalancerTransferArrayOutputWithContext(ctx context.Context) GetNodeBalancerTransferArrayOutput {
	return o
}

func (o GetNodeBalancerTransferArrayOutput) Index(i pulumi.IntInput) GetNodeBalancerTransferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeBalancerTransfer {
		return vs[0].([]GetNodeBalancerTransfer)[vs[1].(int)]
	}).(GetNodeBalancerTransferOutput)
}

type GetProfileReferrals struct {
	Code      string  `pulumi:"code"`
	Completed int     `pulumi:"completed"`
	Credit    float64 `pulumi:"credit"`
	Pending   int     `pulumi:"pending"`
	Total     int     `pulumi:"total"`
	Url       string  `pulumi:"url"`
}

// GetProfileReferralsInput is an input type that accepts GetProfileReferralsArgs and GetProfileReferralsOutput values.
// You can construct a concrete instance of `GetProfileReferralsInput` via:
//
//          GetProfileReferralsArgs{...}
type GetProfileReferralsInput interface {
	pulumi.Input

	ToGetProfileReferralsOutput() GetProfileReferralsOutput
	ToGetProfileReferralsOutputWithContext(context.Context) GetProfileReferralsOutput
}

type GetProfileReferralsArgs struct {
	Code      pulumi.StringInput  `pulumi:"code"`
	Completed pulumi.IntInput     `pulumi:"completed"`
	Credit    pulumi.Float64Input `pulumi:"credit"`
	Pending   pulumi.IntInput     `pulumi:"pending"`
	Total     pulumi.IntInput     `pulumi:"total"`
	Url       pulumi.StringInput  `pulumi:"url"`
}

func (GetProfileReferralsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileReferrals)(nil)).Elem()
}

func (i GetProfileReferralsArgs) ToGetProfileReferralsOutput() GetProfileReferralsOutput {
	return i.ToGetProfileReferralsOutputWithContext(context.Background())
}

func (i GetProfileReferralsArgs) ToGetProfileReferralsOutputWithContext(ctx context.Context) GetProfileReferralsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileReferralsOutput)
}

type GetProfileReferralsOutput struct{ *pulumi.OutputState }

func (GetProfileReferralsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileReferrals)(nil)).Elem()
}

func (o GetProfileReferralsOutput) ToGetProfileReferralsOutput() GetProfileReferralsOutput {
	return o
}

func (o GetProfileReferralsOutput) ToGetProfileReferralsOutputWithContext(ctx context.Context) GetProfileReferralsOutput {
	return o
}

func (o GetProfileReferralsOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileReferrals) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetProfileReferralsOutput) Completed() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileReferrals) int { return v.Completed }).(pulumi.IntOutput)
}

func (o GetProfileReferralsOutput) Credit() pulumi.Float64Output {
	return o.ApplyT(func(v GetProfileReferrals) float64 { return v.Credit }).(pulumi.Float64Output)
}

func (o GetProfileReferralsOutput) Pending() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileReferrals) int { return v.Pending }).(pulumi.IntOutput)
}

func (o GetProfileReferralsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileReferrals) int { return v.Total }).(pulumi.IntOutput)
}

func (o GetProfileReferralsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileReferrals) string { return v.Url }).(pulumi.StringOutput)
}

type GetStackScriptUserDefinedField struct {
	Default string `pulumi:"default"`
	Example string `pulumi:"example"`
	Label   string `pulumi:"label"`
	ManyOf  string `pulumi:"manyOf"`
	Name    string `pulumi:"name"`
	OneOf   string `pulumi:"oneOf"`
}

// GetStackScriptUserDefinedFieldInput is an input type that accepts GetStackScriptUserDefinedFieldArgs and GetStackScriptUserDefinedFieldOutput values.
// You can construct a concrete instance of `GetStackScriptUserDefinedFieldInput` via:
//
//          GetStackScriptUserDefinedFieldArgs{...}
type GetStackScriptUserDefinedFieldInput interface {
	pulumi.Input

	ToGetStackScriptUserDefinedFieldOutput() GetStackScriptUserDefinedFieldOutput
	ToGetStackScriptUserDefinedFieldOutputWithContext(context.Context) GetStackScriptUserDefinedFieldOutput
}

type GetStackScriptUserDefinedFieldArgs struct {
	Default pulumi.StringInput `pulumi:"default"`
	Example pulumi.StringInput `pulumi:"example"`
	Label   pulumi.StringInput `pulumi:"label"`
	ManyOf  pulumi.StringInput `pulumi:"manyOf"`
	Name    pulumi.StringInput `pulumi:"name"`
	OneOf   pulumi.StringInput `pulumi:"oneOf"`
}

func (GetStackScriptUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptUserDefinedFieldArgs) ToGetStackScriptUserDefinedFieldOutput() GetStackScriptUserDefinedFieldOutput {
	return i.ToGetStackScriptUserDefinedFieldOutputWithContext(context.Background())
}

func (i GetStackScriptUserDefinedFieldArgs) ToGetStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptUserDefinedFieldOutput)
}

// GetStackScriptUserDefinedFieldArrayInput is an input type that accepts GetStackScriptUserDefinedFieldArray and GetStackScriptUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `GetStackScriptUserDefinedFieldArrayInput` via:
//
//          GetStackScriptUserDefinedFieldArray{ GetStackScriptUserDefinedFieldArgs{...} }
type GetStackScriptUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToGetStackScriptUserDefinedFieldArrayOutput() GetStackScriptUserDefinedFieldArrayOutput
	ToGetStackScriptUserDefinedFieldArrayOutputWithContext(context.Context) GetStackScriptUserDefinedFieldArrayOutput
}

type GetStackScriptUserDefinedFieldArray []GetStackScriptUserDefinedFieldInput

func (GetStackScriptUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptUserDefinedFieldArray) ToGetStackScriptUserDefinedFieldArrayOutput() GetStackScriptUserDefinedFieldArrayOutput {
	return i.ToGetStackScriptUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i GetStackScriptUserDefinedFieldArray) ToGetStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptUserDefinedFieldArrayOutput)
}

type GetStackScriptUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (GetStackScriptUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptUserDefinedFieldOutput) ToGetStackScriptUserDefinedFieldOutput() GetStackScriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldOutput) ToGetStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Default }).(pulumi.StringOutput)
}

func (o GetStackScriptUserDefinedFieldOutput) Example() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Example }).(pulumi.StringOutput)
}

func (o GetStackScriptUserDefinedFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetStackScriptUserDefinedFieldOutput) ManyOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.ManyOf }).(pulumi.StringOutput)
}

func (o GetStackScriptUserDefinedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStackScriptUserDefinedFieldOutput) OneOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.OneOf }).(pulumi.StringOutput)
}

type GetStackScriptUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptUserDefinedFieldArrayOutput) ToGetStackScriptUserDefinedFieldArrayOutput() GetStackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldArrayOutput) ToGetStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) GetStackScriptUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptUserDefinedField {
		return vs[0].([]GetStackScriptUserDefinedField)[vs[1].(int)]
	}).(GetStackScriptUserDefinedFieldOutput)
}

type GetStackScriptsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetStackScriptsFilterInput is an input type that accepts GetStackScriptsFilterArgs and GetStackScriptsFilterOutput values.
// You can construct a concrete instance of `GetStackScriptsFilterInput` via:
//
//          GetStackScriptsFilterArgs{...}
type GetStackScriptsFilterInput interface {
	pulumi.Input

	ToGetStackScriptsFilterOutput() GetStackScriptsFilterOutput
	ToGetStackScriptsFilterOutputWithContext(context.Context) GetStackScriptsFilterOutput
}

type GetStackScriptsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStackScriptsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsFilter)(nil)).Elem()
}

func (i GetStackScriptsFilterArgs) ToGetStackScriptsFilterOutput() GetStackScriptsFilterOutput {
	return i.ToGetStackScriptsFilterOutputWithContext(context.Background())
}

func (i GetStackScriptsFilterArgs) ToGetStackScriptsFilterOutputWithContext(ctx context.Context) GetStackScriptsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsFilterOutput)
}

// GetStackScriptsFilterArrayInput is an input type that accepts GetStackScriptsFilterArray and GetStackScriptsFilterArrayOutput values.
// You can construct a concrete instance of `GetStackScriptsFilterArrayInput` via:
//
//          GetStackScriptsFilterArray{ GetStackScriptsFilterArgs{...} }
type GetStackScriptsFilterArrayInput interface {
	pulumi.Input

	ToGetStackScriptsFilterArrayOutput() GetStackScriptsFilterArrayOutput
	ToGetStackScriptsFilterArrayOutputWithContext(context.Context) GetStackScriptsFilterArrayOutput
}

type GetStackScriptsFilterArray []GetStackScriptsFilterInput

func (GetStackScriptsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsFilter)(nil)).Elem()
}

func (i GetStackScriptsFilterArray) ToGetStackScriptsFilterArrayOutput() GetStackScriptsFilterArrayOutput {
	return i.ToGetStackScriptsFilterArrayOutputWithContext(context.Background())
}

func (i GetStackScriptsFilterArray) ToGetStackScriptsFilterArrayOutputWithContext(ctx context.Context) GetStackScriptsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsFilterArrayOutput)
}

type GetStackScriptsFilterOutput struct{ *pulumi.OutputState }

func (GetStackScriptsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsFilter)(nil)).Elem()
}

func (o GetStackScriptsFilterOutput) ToGetStackScriptsFilterOutput() GetStackScriptsFilterOutput {
	return o
}

func (o GetStackScriptsFilterOutput) ToGetStackScriptsFilterOutputWithContext(ctx context.Context) GetStackScriptsFilterOutput {
	return o
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetStackScriptsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStackScriptsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetStackScriptsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetStackScriptsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackScriptsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStackScriptsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsFilter)(nil)).Elem()
}

func (o GetStackScriptsFilterArrayOutput) ToGetStackScriptsFilterArrayOutput() GetStackScriptsFilterArrayOutput {
	return o
}

func (o GetStackScriptsFilterArrayOutput) ToGetStackScriptsFilterArrayOutputWithContext(ctx context.Context) GetStackScriptsFilterArrayOutput {
	return o
}

func (o GetStackScriptsFilterArrayOutput) Index(i pulumi.IntInput) GetStackScriptsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptsFilter {
		return vs[0].([]GetStackScriptsFilter)[vs[1].(int)]
	}).(GetStackScriptsFilterOutput)
}

type GetStackScriptsStackscript struct {
	Created           string                                       `pulumi:"created"`
	DeploymentsActive int                                          `pulumi:"deploymentsActive"`
	DeploymentsTotal  int                                          `pulumi:"deploymentsTotal"`
	Description       string                                       `pulumi:"description"`
	Id                int                                          `pulumi:"id"`
	Images            []string                                     `pulumi:"images"`
	IsPublic          bool                                         `pulumi:"isPublic"`
	Label             string                                       `pulumi:"label"`
	RevNote           string                                       `pulumi:"revNote"`
	Script            string                                       `pulumi:"script"`
	Updated           string                                       `pulumi:"updated"`
	UserDefinedFields []GetStackScriptsStackscriptUserDefinedField `pulumi:"userDefinedFields"`
	UserGravatarId    string                                       `pulumi:"userGravatarId"`
	Username          string                                       `pulumi:"username"`
}

// GetStackScriptsStackscriptInput is an input type that accepts GetStackScriptsStackscriptArgs and GetStackScriptsStackscriptOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptInput` via:
//
//          GetStackScriptsStackscriptArgs{...}
type GetStackScriptsStackscriptInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptOutput() GetStackScriptsStackscriptOutput
	ToGetStackScriptsStackscriptOutputWithContext(context.Context) GetStackScriptsStackscriptOutput
}

type GetStackScriptsStackscriptArgs struct {
	Created           pulumi.StringInput                                   `pulumi:"created"`
	DeploymentsActive pulumi.IntInput                                      `pulumi:"deploymentsActive"`
	DeploymentsTotal  pulumi.IntInput                                      `pulumi:"deploymentsTotal"`
	Description       pulumi.StringInput                                   `pulumi:"description"`
	Id                pulumi.IntInput                                      `pulumi:"id"`
	Images            pulumi.StringArrayInput                              `pulumi:"images"`
	IsPublic          pulumi.BoolInput                                     `pulumi:"isPublic"`
	Label             pulumi.StringInput                                   `pulumi:"label"`
	RevNote           pulumi.StringInput                                   `pulumi:"revNote"`
	Script            pulumi.StringInput                                   `pulumi:"script"`
	Updated           pulumi.StringInput                                   `pulumi:"updated"`
	UserDefinedFields GetStackScriptsStackscriptUserDefinedFieldArrayInput `pulumi:"userDefinedFields"`
	UserGravatarId    pulumi.StringInput                                   `pulumi:"userGravatarId"`
	Username          pulumi.StringInput                                   `pulumi:"username"`
}

func (GetStackScriptsStackscriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscript)(nil)).Elem()
}

func (i GetStackScriptsStackscriptArgs) ToGetStackScriptsStackscriptOutput() GetStackScriptsStackscriptOutput {
	return i.ToGetStackScriptsStackscriptOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptArgs) ToGetStackScriptsStackscriptOutputWithContext(ctx context.Context) GetStackScriptsStackscriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptOutput)
}

// GetStackScriptsStackscriptArrayInput is an input type that accepts GetStackScriptsStackscriptArray and GetStackScriptsStackscriptArrayOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptArrayInput` via:
//
//          GetStackScriptsStackscriptArray{ GetStackScriptsStackscriptArgs{...} }
type GetStackScriptsStackscriptArrayInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptArrayOutput() GetStackScriptsStackscriptArrayOutput
	ToGetStackScriptsStackscriptArrayOutputWithContext(context.Context) GetStackScriptsStackscriptArrayOutput
}

type GetStackScriptsStackscriptArray []GetStackScriptsStackscriptInput

func (GetStackScriptsStackscriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscript)(nil)).Elem()
}

func (i GetStackScriptsStackscriptArray) ToGetStackScriptsStackscriptArrayOutput() GetStackScriptsStackscriptArrayOutput {
	return i.ToGetStackScriptsStackscriptArrayOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptArray) ToGetStackScriptsStackscriptArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptArrayOutput)
}

type GetStackScriptsStackscriptOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscript)(nil)).Elem()
}

func (o GetStackScriptsStackscriptOutput) ToGetStackScriptsStackscriptOutput() GetStackScriptsStackscriptOutput {
	return o
}

func (o GetStackScriptsStackscriptOutput) ToGetStackScriptsStackscriptOutputWithContext(ctx context.Context) GetStackScriptsStackscriptOutput {
	return o
}

func (o GetStackScriptsStackscriptOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) DeploymentsActive() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) int { return v.DeploymentsActive }).(pulumi.IntOutput)
}

func (o GetStackScriptsStackscriptOutput) DeploymentsTotal() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) int { return v.DeploymentsTotal }).(pulumi.IntOutput)
}

func (o GetStackScriptsStackscriptOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetStackScriptsStackscriptOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o GetStackScriptsStackscriptOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

func (o GetStackScriptsStackscriptOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) RevNote() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.RevNote }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Script }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Updated }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) UserDefinedFields() GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) []GetStackScriptsStackscriptUserDefinedField {
		return v.UserDefinedFields
	}).(GetStackScriptsStackscriptUserDefinedFieldArrayOutput)
}

func (o GetStackScriptsStackscriptOutput) UserGravatarId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.UserGravatarId }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Username }).(pulumi.StringOutput)
}

type GetStackScriptsStackscriptArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscript)(nil)).Elem()
}

func (o GetStackScriptsStackscriptArrayOutput) ToGetStackScriptsStackscriptArrayOutput() GetStackScriptsStackscriptArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptArrayOutput) ToGetStackScriptsStackscriptArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptArrayOutput) Index(i pulumi.IntInput) GetStackScriptsStackscriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptsStackscript {
		return vs[0].([]GetStackScriptsStackscript)[vs[1].(int)]
	}).(GetStackScriptsStackscriptOutput)
}

type GetStackScriptsStackscriptUserDefinedField struct {
	Default string `pulumi:"default"`
	Example string `pulumi:"example"`
	Label   string `pulumi:"label"`
	ManyOf  string `pulumi:"manyOf"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name  string `pulumi:"name"`
	OneOf string `pulumi:"oneOf"`
}

// GetStackScriptsStackscriptUserDefinedFieldInput is an input type that accepts GetStackScriptsStackscriptUserDefinedFieldArgs and GetStackScriptsStackscriptUserDefinedFieldOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptUserDefinedFieldInput` via:
//
//          GetStackScriptsStackscriptUserDefinedFieldArgs{...}
type GetStackScriptsStackscriptUserDefinedFieldInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptUserDefinedFieldOutput() GetStackScriptsStackscriptUserDefinedFieldOutput
	ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(context.Context) GetStackScriptsStackscriptUserDefinedFieldOutput
}

type GetStackScriptsStackscriptUserDefinedFieldArgs struct {
	Default pulumi.StringInput `pulumi:"default"`
	Example pulumi.StringInput `pulumi:"example"`
	Label   pulumi.StringInput `pulumi:"label"`
	ManyOf  pulumi.StringInput `pulumi:"manyOf"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name  pulumi.StringInput `pulumi:"name"`
	OneOf pulumi.StringInput `pulumi:"oneOf"`
}

func (GetStackScriptsStackscriptUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptsStackscriptUserDefinedFieldArgs) ToGetStackScriptsStackscriptUserDefinedFieldOutput() GetStackScriptsStackscriptUserDefinedFieldOutput {
	return i.ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptUserDefinedFieldArgs) ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptUserDefinedFieldOutput)
}

// GetStackScriptsStackscriptUserDefinedFieldArrayInput is an input type that accepts GetStackScriptsStackscriptUserDefinedFieldArray and GetStackScriptsStackscriptUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptUserDefinedFieldArrayInput` via:
//
//          GetStackScriptsStackscriptUserDefinedFieldArray{ GetStackScriptsStackscriptUserDefinedFieldArgs{...} }
type GetStackScriptsStackscriptUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptUserDefinedFieldArrayOutput() GetStackScriptsStackscriptUserDefinedFieldArrayOutput
	ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(context.Context) GetStackScriptsStackscriptUserDefinedFieldArrayOutput
}

type GetStackScriptsStackscriptUserDefinedFieldArray []GetStackScriptsStackscriptUserDefinedFieldInput

func (GetStackScriptsStackscriptUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptsStackscriptUserDefinedFieldArray) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutput() GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return i.ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptUserDefinedFieldArray) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptUserDefinedFieldArrayOutput)
}

type GetStackScriptsStackscriptUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ToGetStackScriptsStackscriptUserDefinedFieldOutput() GetStackScriptsStackscriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Default }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Example() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Example }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ManyOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.ManyOf }).(pulumi.StringOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) OneOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.OneOf }).(pulumi.StringOutput)
}

type GetStackScriptsStackscriptUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutput() GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) GetStackScriptsStackscriptUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptsStackscriptUserDefinedField {
		return vs[0].([]GetStackScriptsStackscriptUserDefinedField)[vs[1].(int)]
	}).(GetStackScriptsStackscriptUserDefinedFieldOutput)
}

type GetVlansFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetVlansFilterInput is an input type that accepts GetVlansFilterArgs and GetVlansFilterOutput values.
// You can construct a concrete instance of `GetVlansFilterInput` via:
//
//          GetVlansFilterArgs{...}
type GetVlansFilterInput interface {
	pulumi.Input

	ToGetVlansFilterOutput() GetVlansFilterOutput
	ToGetVlansFilterOutputWithContext(context.Context) GetVlansFilterOutput
}

type GetVlansFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVlansFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansFilter)(nil)).Elem()
}

func (i GetVlansFilterArgs) ToGetVlansFilterOutput() GetVlansFilterOutput {
	return i.ToGetVlansFilterOutputWithContext(context.Background())
}

func (i GetVlansFilterArgs) ToGetVlansFilterOutputWithContext(ctx context.Context) GetVlansFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansFilterOutput)
}

// GetVlansFilterArrayInput is an input type that accepts GetVlansFilterArray and GetVlansFilterArrayOutput values.
// You can construct a concrete instance of `GetVlansFilterArrayInput` via:
//
//          GetVlansFilterArray{ GetVlansFilterArgs{...} }
type GetVlansFilterArrayInput interface {
	pulumi.Input

	ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput
	ToGetVlansFilterArrayOutputWithContext(context.Context) GetVlansFilterArrayOutput
}

type GetVlansFilterArray []GetVlansFilterInput

func (GetVlansFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansFilter)(nil)).Elem()
}

func (i GetVlansFilterArray) ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput {
	return i.ToGetVlansFilterArrayOutputWithContext(context.Background())
}

func (i GetVlansFilterArray) ToGetVlansFilterArrayOutputWithContext(ctx context.Context) GetVlansFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansFilterArrayOutput)
}

type GetVlansFilterOutput struct{ *pulumi.OutputState }

func (GetVlansFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansFilter)(nil)).Elem()
}

func (o GetVlansFilterOutput) ToGetVlansFilterOutput() GetVlansFilterOutput {
	return o
}

func (o GetVlansFilterOutput) ToGetVlansFilterOutputWithContext(ctx context.Context) GetVlansFilterOutput {
	return o
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetVlansFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVlansFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetVlansFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetVlansFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVlansFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVlansFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVlansFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansFilter)(nil)).Elem()
}

func (o GetVlansFilterArrayOutput) ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput {
	return o
}

func (o GetVlansFilterArrayOutput) ToGetVlansFilterArrayOutputWithContext(ctx context.Context) GetVlansFilterArrayOutput {
	return o
}

func (o GetVlansFilterArrayOutput) Index(i pulumi.IntInput) GetVlansFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVlansFilter {
		return vs[0].([]GetVlansFilter)[vs[1].(int)]
	}).(GetVlansFilterOutput)
}

type GetVlansVlan struct {
	Created string `pulumi:"created"`
	Label   string `pulumi:"label"`
	Linodes []int  `pulumi:"linodes"`
	Region  string `pulumi:"region"`
}

// GetVlansVlanInput is an input type that accepts GetVlansVlanArgs and GetVlansVlanOutput values.
// You can construct a concrete instance of `GetVlansVlanInput` via:
//
//          GetVlansVlanArgs{...}
type GetVlansVlanInput interface {
	pulumi.Input

	ToGetVlansVlanOutput() GetVlansVlanOutput
	ToGetVlansVlanOutputWithContext(context.Context) GetVlansVlanOutput
}

type GetVlansVlanArgs struct {
	Created pulumi.StringInput   `pulumi:"created"`
	Label   pulumi.StringInput   `pulumi:"label"`
	Linodes pulumi.IntArrayInput `pulumi:"linodes"`
	Region  pulumi.StringInput   `pulumi:"region"`
}

func (GetVlansVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansVlan)(nil)).Elem()
}

func (i GetVlansVlanArgs) ToGetVlansVlanOutput() GetVlansVlanOutput {
	return i.ToGetVlansVlanOutputWithContext(context.Background())
}

func (i GetVlansVlanArgs) ToGetVlansVlanOutputWithContext(ctx context.Context) GetVlansVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansVlanOutput)
}

// GetVlansVlanArrayInput is an input type that accepts GetVlansVlanArray and GetVlansVlanArrayOutput values.
// You can construct a concrete instance of `GetVlansVlanArrayInput` via:
//
//          GetVlansVlanArray{ GetVlansVlanArgs{...} }
type GetVlansVlanArrayInput interface {
	pulumi.Input

	ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput
	ToGetVlansVlanArrayOutputWithContext(context.Context) GetVlansVlanArrayOutput
}

type GetVlansVlanArray []GetVlansVlanInput

func (GetVlansVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansVlan)(nil)).Elem()
}

func (i GetVlansVlanArray) ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput {
	return i.ToGetVlansVlanArrayOutputWithContext(context.Background())
}

func (i GetVlansVlanArray) ToGetVlansVlanArrayOutputWithContext(ctx context.Context) GetVlansVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansVlanArrayOutput)
}

type GetVlansVlanOutput struct{ *pulumi.OutputState }

func (GetVlansVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansVlan)(nil)).Elem()
}

func (o GetVlansVlanOutput) ToGetVlansVlanOutput() GetVlansVlanOutput {
	return o
}

func (o GetVlansVlanOutput) ToGetVlansVlanOutputWithContext(ctx context.Context) GetVlansVlanOutput {
	return o
}

func (o GetVlansVlanOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetVlansVlanOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetVlansVlanOutput) Linodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVlansVlan) []int { return v.Linodes }).(pulumi.IntArrayOutput)
}

func (o GetVlansVlanOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Region }).(pulumi.StringOutput)
}

type GetVlansVlanArrayOutput struct{ *pulumi.OutputState }

func (GetVlansVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansVlan)(nil)).Elem()
}

func (o GetVlansVlanArrayOutput) ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput {
	return o
}

func (o GetVlansVlanArrayOutput) ToGetVlansVlanArrayOutputWithContext(ctx context.Context) GetVlansVlanArrayOutput {
	return o
}

func (o GetVlansVlanArrayOutput) Index(i pulumi.IntInput) GetVlansVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVlansVlan {
		return vs[0].([]GetVlansVlan)[vs[1].(int)]
	}).(GetVlansVlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDeviceTypeInput)(nil)).Elem(), FirewallDeviceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDeviceTypeArrayInput)(nil)).Elem(), FirewallDeviceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInboundInput)(nil)).Elem(), FirewallInboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInboundArrayInput)(nil)).Elem(), FirewallInboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallOutboundInput)(nil)).Elem(), FirewallOutboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallOutboundArrayInput)(nil)).Elem(), FirewallOutboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAlertsInput)(nil)).Elem(), InstanceAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAlertsPtrInput)(nil)).Elem(), InstanceAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsInput)(nil)).Elem(), InstanceBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsPtrInput)(nil)).Elem(), InstanceBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsScheduleInput)(nil)).Elem(), InstanceBackupsScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsSchedulePtrInput)(nil)).Elem(), InstanceBackupsScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigArrayInput)(nil)).Elem(), InstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesInput)(nil)).Elem(), InstanceConfigDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesPtrInput)(nil)).Elem(), InstanceConfigDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdaInput)(nil)).Elem(), InstanceConfigDevicesSdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdaPtrInput)(nil)).Elem(), InstanceConfigDevicesSdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdbInput)(nil)).Elem(), InstanceConfigDevicesSdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdbPtrInput)(nil)).Elem(), InstanceConfigDevicesSdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdcInput)(nil)).Elem(), InstanceConfigDevicesSdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdcPtrInput)(nil)).Elem(), InstanceConfigDevicesSdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSddInput)(nil)).Elem(), InstanceConfigDevicesSddArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSddPtrInput)(nil)).Elem(), InstanceConfigDevicesSddArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdeInput)(nil)).Elem(), InstanceConfigDevicesSdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdePtrInput)(nil)).Elem(), InstanceConfigDevicesSdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdfInput)(nil)).Elem(), InstanceConfigDevicesSdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdfPtrInput)(nil)).Elem(), InstanceConfigDevicesSdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdgInput)(nil)).Elem(), InstanceConfigDevicesSdgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdgPtrInput)(nil)).Elem(), InstanceConfigDevicesSdgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdhInput)(nil)).Elem(), InstanceConfigDevicesSdhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdhPtrInput)(nil)).Elem(), InstanceConfigDevicesSdhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigHelpersInput)(nil)).Elem(), InstanceConfigHelpersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigHelpersPtrInput)(nil)).Elem(), InstanceConfigHelpersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInterfaceInput)(nil)).Elem(), InstanceConfigInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInterfaceArrayInput)(nil)).Elem(), InstanceConfigInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiskInput)(nil)).Elem(), InstanceDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiskArrayInput)(nil)).Elem(), InstanceDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInterfaceInput)(nil)).Elem(), InstanceInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInterfaceArrayInput)(nil)).Elem(), InstanceInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsInput)(nil)).Elem(), InstanceSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsPtrInput)(nil)).Elem(), InstanceSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterControlPlaneInput)(nil)).Elem(), LkeClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterControlPlanePtrInput)(nil)).Elem(), LkeClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolInput)(nil)).Elem(), LkeClusterPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolArrayInput)(nil)).Elem(), LkeClusterPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolAutoscalerInput)(nil)).Elem(), LkeClusterPoolAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolAutoscalerPtrInput)(nil)).Elem(), LkeClusterPoolAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolNodeInput)(nil)).Elem(), LkeClusterPoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolNodeArrayInput)(nil)).Elem(), LkeClusterPoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerConfigNodeStatusInput)(nil)).Elem(), NodeBalancerConfigNodeStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerConfigNodeStatusArrayInput)(nil)).Elem(), NodeBalancerConfigNodeStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerTransferInput)(nil)).Elem(), NodeBalancerTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerTransferArrayInput)(nil)).Elem(), NodeBalancerTransferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketCertInput)(nil)).Elem(), ObjectStorageBucketCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketCertPtrInput)(nil)).Elem(), ObjectStorageBucketCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleArrayInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpirationInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpirationPtrInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageKeyBucketAccessInput)(nil)).Elem(), ObjectStorageKeyBucketAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageKeyBucketAccessArrayInput)(nil)).Elem(), ObjectStorageKeyBucketAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackScriptUserDefinedFieldInput)(nil)).Elem(), StackScriptUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackScriptUserDefinedFieldArrayInput)(nil)).Elem(), StackScriptUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDomainGrantInput)(nil)).Elem(), UserDomainGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDomainGrantArrayInput)(nil)).Elem(), UserDomainGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserFirewallGrantInput)(nil)).Elem(), UserFirewallGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserFirewallGrantArrayInput)(nil)).Elem(), UserFirewallGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGlobalGrantsInput)(nil)).Elem(), UserGlobalGrantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGlobalGrantsPtrInput)(nil)).Elem(), UserGlobalGrantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserImageGrantInput)(nil)).Elem(), UserImageGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserImageGrantArrayInput)(nil)).Elem(), UserImageGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLinodeGrantInput)(nil)).Elem(), UserLinodeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLinodeGrantArrayInput)(nil)).Elem(), UserLinodeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLongviewGrantInput)(nil)).Elem(), UserLongviewGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLongviewGrantArrayInput)(nil)).Elem(), UserLongviewGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNodebalancerGrantInput)(nil)).Elem(), UserNodebalancerGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNodebalancerGrantArrayInput)(nil)).Elem(), UserNodebalancerGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserStackscriptGrantInput)(nil)).Elem(), UserStackscriptGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserStackscriptGrantArrayInput)(nil)).Elem(), UserStackscriptGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserVolumeGrantInput)(nil)).Elem(), UserVolumeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserVolumeGrantArrayInput)(nil)).Elem(), UserVolumeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDeviceTypeInput)(nil)).Elem(), GetFirewallDeviceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDeviceTypeArrayInput)(nil)).Elem(), GetFirewallDeviceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInboundInput)(nil)).Elem(), GetFirewallInboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInboundArrayInput)(nil)).Elem(), GetFirewallInboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallOutboundInput)(nil)).Elem(), GetFirewallOutboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallOutboundArrayInput)(nil)).Elem(), GetFirewallOutboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterInput)(nil)).Elem(), GetImagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterArrayInput)(nil)).Elem(), GetImagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticInput)(nil)).Elem(), GetInstanceBackupsAutomaticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticArrayInput)(nil)).Elem(), GetInstanceBackupsAutomaticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticDiskInput)(nil)).Elem(), GetInstanceBackupsAutomaticDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticDiskArrayInput)(nil)).Elem(), GetInstanceBackupsAutomaticDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentInput)(nil)).Elem(), GetInstanceBackupsCurrentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentArrayInput)(nil)).Elem(), GetInstanceBackupsCurrentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentDiskInput)(nil)).Elem(), GetInstanceBackupsCurrentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentDiskArrayInput)(nil)).Elem(), GetInstanceBackupsCurrentDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressInput)(nil)).Elem(), GetInstanceBackupsInProgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressArrayInput)(nil)).Elem(), GetInstanceBackupsInProgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressDiskInput)(nil)).Elem(), GetInstanceBackupsInProgressDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressDiskArrayInput)(nil)).Elem(), GetInstanceBackupsInProgressDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsInput)(nil)).Elem(), GetInstanceTypeAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupsInput)(nil)).Elem(), GetInstanceTypeAddonsBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupsPriceInput)(nil)).Elem(), GetInstanceTypeAddonsBackupsPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypePriceInput)(nil)).Elem(), GetInstanceTypePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesFilterInput)(nil)).Elem(), GetInstanceTypesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesFilterArrayInput)(nil)).Elem(), GetInstanceTypesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeInput)(nil)).Elem(), GetInstanceTypesTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeArrayInput)(nil)).Elem(), GetInstanceTypesTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonInput)(nil)).Elem(), GetInstanceTypesTypeAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPriceInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPriceArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypePriceInput)(nil)).Elem(), GetInstanceTypesTypePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypePriceArrayInput)(nil)).Elem(), GetInstanceTypesTypePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAlertsInput)(nil)).Elem(), GetInstancesInstanceAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupInput)(nil)).Elem(), GetInstancesInstanceBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupArrayInput)(nil)).Elem(), GetInstancesInstanceBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupScheduleInput)(nil)).Elem(), GetInstancesInstanceBackupScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupScheduleArrayInput)(nil)).Elem(), GetInstancesInstanceBackupScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigInput)(nil)).Elem(), GetInstancesInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigArrayInput)(nil)).Elem(), GetInstancesInstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdaInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdaArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdbInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdbArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdcInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdcArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSddInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSddArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSddArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSddArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdeInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdeArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdfInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdfArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdgInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdgArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdhInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdhArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdhArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigHelperInput)(nil)).Elem(), GetInstancesInstanceConfigHelperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigHelperArrayInput)(nil)).Elem(), GetInstancesInstanceConfigHelperArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigInterfaceInput)(nil)).Elem(), GetInstancesInstanceConfigInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigInterfaceArrayInput)(nil)).Elem(), GetInstancesInstanceConfigInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDiskInput)(nil)).Elem(), GetInstancesInstanceDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDiskArrayInput)(nil)).Elem(), GetInstancesInstanceDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceSpecInput)(nil)).Elem(), GetInstancesInstanceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceSpecArrayInput)(nil)).Elem(), GetInstancesInstanceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterControlPlaneInput)(nil)).Elem(), GetLkeClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterControlPlaneArrayInput)(nil)).Elem(), GetLkeClusterControlPlaneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolInput)(nil)).Elem(), GetLkeClusterPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolArrayInput)(nil)).Elem(), GetLkeClusterPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolAutoscalerInput)(nil)).Elem(), GetLkeClusterPoolAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolAutoscalerArrayInput)(nil)).Elem(), GetLkeClusterPoolAutoscalerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolNodeInput)(nil)).Elem(), GetLkeClusterPoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolNodeArrayInput)(nil)).Elem(), GetLkeClusterPoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerConfigNodeStatusInput)(nil)).Elem(), GetNodeBalancerConfigNodeStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerConfigNodeStatusArrayInput)(nil)).Elem(), GetNodeBalancerConfigNodeStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerTransferInput)(nil)).Elem(), GetNodeBalancerTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerTransferArrayInput)(nil)).Elem(), GetNodeBalancerTransferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileReferralsInput)(nil)).Elem(), GetProfileReferralsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptUserDefinedFieldInput)(nil)).Elem(), GetStackScriptUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptUserDefinedFieldArrayInput)(nil)).Elem(), GetStackScriptUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsFilterInput)(nil)).Elem(), GetStackScriptsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsFilterArrayInput)(nil)).Elem(), GetStackScriptsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptInput)(nil)).Elem(), GetStackScriptsStackscriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptArrayInput)(nil)).Elem(), GetStackScriptsStackscriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedFieldInput)(nil)).Elem(), GetStackScriptsStackscriptUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedFieldArrayInput)(nil)).Elem(), GetStackScriptsStackscriptUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansFilterInput)(nil)).Elem(), GetVlansFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansFilterArrayInput)(nil)).Elem(), GetVlansFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansVlanInput)(nil)).Elem(), GetVlansVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansVlanArrayInput)(nil)).Elem(), GetVlansVlanArray{})
	pulumi.RegisterOutputType(FirewallDeviceTypeOutput{})
	pulumi.RegisterOutputType(FirewallDeviceTypeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInboundOutput{})
	pulumi.RegisterOutputType(FirewallInboundArrayOutput{})
	pulumi.RegisterOutputType(FirewallOutboundOutput{})
	pulumi.RegisterOutputType(FirewallOutboundArrayOutput{})
	pulumi.RegisterOutputType(InstanceAlertsOutput{})
	pulumi.RegisterOutputType(InstanceAlertsPtrOutput{})
	pulumi.RegisterOutputType(InstanceBackupsOutput{})
	pulumi.RegisterOutputType(InstanceBackupsPtrOutput{})
	pulumi.RegisterOutputType(InstanceBackupsScheduleOutput{})
	pulumi.RegisterOutputType(InstanceBackupsSchedulePtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdaOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdaPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdbOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdbPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdcOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdcPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSddOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSddPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdeOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdePtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdfOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdfPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdgOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdgPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdhOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdhPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigHelpersOutput{})
	pulumi.RegisterOutputType(InstanceConfigHelpersPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceConfigInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceDiskOutput{})
	pulumi.RegisterOutputType(InstanceDiskArrayOutput{})
	pulumi.RegisterOutputType(InstanceInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceSpecsOutput{})
	pulumi.RegisterOutputType(InstanceSpecsPtrOutput{})
	pulumi.RegisterOutputType(LkeClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(LkeClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolArrayOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolAutoscalerOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolNodeOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolNodeArrayOutput{})
	pulumi.RegisterOutputType(NodeBalancerConfigNodeStatusOutput{})
	pulumi.RegisterOutputType(NodeBalancerConfigNodeStatusArrayOutput{})
	pulumi.RegisterOutputType(NodeBalancerTransferOutput{})
	pulumi.RegisterOutputType(NodeBalancerTransferArrayOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketCertOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketCertPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageKeyBucketAccessOutput{})
	pulumi.RegisterOutputType(ObjectStorageKeyBucketAccessArrayOutput{})
	pulumi.RegisterOutputType(StackScriptUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(StackScriptUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(UserDomainGrantOutput{})
	pulumi.RegisterOutputType(UserDomainGrantArrayOutput{})
	pulumi.RegisterOutputType(UserFirewallGrantOutput{})
	pulumi.RegisterOutputType(UserFirewallGrantArrayOutput{})
	pulumi.RegisterOutputType(UserGlobalGrantsOutput{})
	pulumi.RegisterOutputType(UserGlobalGrantsPtrOutput{})
	pulumi.RegisterOutputType(UserImageGrantOutput{})
	pulumi.RegisterOutputType(UserImageGrantArrayOutput{})
	pulumi.RegisterOutputType(UserLinodeGrantOutput{})
	pulumi.RegisterOutputType(UserLinodeGrantArrayOutput{})
	pulumi.RegisterOutputType(UserLongviewGrantOutput{})
	pulumi.RegisterOutputType(UserLongviewGrantArrayOutput{})
	pulumi.RegisterOutputType(UserNodebalancerGrantOutput{})
	pulumi.RegisterOutputType(UserNodebalancerGrantArrayOutput{})
	pulumi.RegisterOutputType(UserStackscriptGrantOutput{})
	pulumi.RegisterOutputType(UserStackscriptGrantArrayOutput{})
	pulumi.RegisterOutputType(UserVolumeGrantOutput{})
	pulumi.RegisterOutputType(UserVolumeGrantArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDeviceTypeOutput{})
	pulumi.RegisterOutputType(GetFirewallDeviceTypeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInboundOutput{})
	pulumi.RegisterOutputType(GetFirewallInboundArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallOutboundOutput{})
	pulumi.RegisterOutputType(GetFirewallOutboundArrayOutput{})
	pulumi.RegisterOutputType(GetImagesFilterOutput{})
	pulumi.RegisterOutputType(GetImagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupsOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupsPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypePriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypePriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypePriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAlertsOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupScheduleOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdaOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdaArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdbOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdbArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdcOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdcArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSddOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSddArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdfOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdfArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdgOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdgArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdhOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdhArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigHelperOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigHelperArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigInterfaceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDiskOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceSpecOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(GetLkeClusterControlPlaneArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolAutoscalerOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolAutoscalerArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolNodeOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerConfigNodeStatusOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerConfigNodeStatusArrayOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerTransferOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerTransferArrayOutput{})
	pulumi.RegisterOutputType(GetProfileReferralsOutput{})
	pulumi.RegisterOutputType(GetStackScriptUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(GetStackScriptUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptsFilterOutput{})
	pulumi.RegisterOutputType(GetStackScriptsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(GetVlansFilterOutput{})
	pulumi.RegisterOutputType(GetVlansFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVlansVlanOutput{})
	pulumi.RegisterOutputType(GetVlansVlanArrayOutput{})
}
