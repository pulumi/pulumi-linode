// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DatabaseMysqlUpdates struct {
	DayOfWeek   string `pulumi:"dayOfWeek"`
	Duration    int    `pulumi:"duration"`
	Frequency   string `pulumi:"frequency"`
	HourOfDay   int    `pulumi:"hourOfDay"`
	WeekOfMonth *int   `pulumi:"weekOfMonth"`
}

// DatabaseMysqlUpdatesInput is an input type that accepts DatabaseMysqlUpdatesArgs and DatabaseMysqlUpdatesOutput values.
// You can construct a concrete instance of `DatabaseMysqlUpdatesInput` via:
//
//	DatabaseMysqlUpdatesArgs{...}
type DatabaseMysqlUpdatesInput interface {
	pulumi.Input

	ToDatabaseMysqlUpdatesOutput() DatabaseMysqlUpdatesOutput
	ToDatabaseMysqlUpdatesOutputWithContext(context.Context) DatabaseMysqlUpdatesOutput
}

type DatabaseMysqlUpdatesArgs struct {
	DayOfWeek   pulumi.StringInput `pulumi:"dayOfWeek"`
	Duration    pulumi.IntInput    `pulumi:"duration"`
	Frequency   pulumi.StringInput `pulumi:"frequency"`
	HourOfDay   pulumi.IntInput    `pulumi:"hourOfDay"`
	WeekOfMonth pulumi.IntPtrInput `pulumi:"weekOfMonth"`
}

func (DatabaseMysqlUpdatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMysqlUpdates)(nil)).Elem()
}

func (i DatabaseMysqlUpdatesArgs) ToDatabaseMysqlUpdatesOutput() DatabaseMysqlUpdatesOutput {
	return i.ToDatabaseMysqlUpdatesOutputWithContext(context.Background())
}

func (i DatabaseMysqlUpdatesArgs) ToDatabaseMysqlUpdatesOutputWithContext(ctx context.Context) DatabaseMysqlUpdatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMysqlUpdatesOutput)
}

func (i DatabaseMysqlUpdatesArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseMysqlUpdates] {
	return pulumix.Output[DatabaseMysqlUpdates]{
		OutputState: i.ToDatabaseMysqlUpdatesOutputWithContext(ctx).OutputState,
	}
}

func (i DatabaseMysqlUpdatesArgs) ToDatabaseMysqlUpdatesPtrOutput() DatabaseMysqlUpdatesPtrOutput {
	return i.ToDatabaseMysqlUpdatesPtrOutputWithContext(context.Background())
}

func (i DatabaseMysqlUpdatesArgs) ToDatabaseMysqlUpdatesPtrOutputWithContext(ctx context.Context) DatabaseMysqlUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMysqlUpdatesOutput).ToDatabaseMysqlUpdatesPtrOutputWithContext(ctx)
}

// DatabaseMysqlUpdatesPtrInput is an input type that accepts DatabaseMysqlUpdatesArgs, DatabaseMysqlUpdatesPtr and DatabaseMysqlUpdatesPtrOutput values.
// You can construct a concrete instance of `DatabaseMysqlUpdatesPtrInput` via:
//
//	        DatabaseMysqlUpdatesArgs{...}
//
//	or:
//
//	        nil
type DatabaseMysqlUpdatesPtrInput interface {
	pulumi.Input

	ToDatabaseMysqlUpdatesPtrOutput() DatabaseMysqlUpdatesPtrOutput
	ToDatabaseMysqlUpdatesPtrOutputWithContext(context.Context) DatabaseMysqlUpdatesPtrOutput
}

type databaseMysqlUpdatesPtrType DatabaseMysqlUpdatesArgs

func DatabaseMysqlUpdatesPtr(v *DatabaseMysqlUpdatesArgs) DatabaseMysqlUpdatesPtrInput {
	return (*databaseMysqlUpdatesPtrType)(v)
}

func (*databaseMysqlUpdatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMysqlUpdates)(nil)).Elem()
}

func (i *databaseMysqlUpdatesPtrType) ToDatabaseMysqlUpdatesPtrOutput() DatabaseMysqlUpdatesPtrOutput {
	return i.ToDatabaseMysqlUpdatesPtrOutputWithContext(context.Background())
}

func (i *databaseMysqlUpdatesPtrType) ToDatabaseMysqlUpdatesPtrOutputWithContext(ctx context.Context) DatabaseMysqlUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMysqlUpdatesPtrOutput)
}

func (i *databaseMysqlUpdatesPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabaseMysqlUpdates] {
	return pulumix.Output[*DatabaseMysqlUpdates]{
		OutputState: i.ToDatabaseMysqlUpdatesPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabaseMysqlUpdatesOutput struct{ *pulumi.OutputState }

func (DatabaseMysqlUpdatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMysqlUpdates)(nil)).Elem()
}

func (o DatabaseMysqlUpdatesOutput) ToDatabaseMysqlUpdatesOutput() DatabaseMysqlUpdatesOutput {
	return o
}

func (o DatabaseMysqlUpdatesOutput) ToDatabaseMysqlUpdatesOutputWithContext(ctx context.Context) DatabaseMysqlUpdatesOutput {
	return o
}

func (o DatabaseMysqlUpdatesOutput) ToDatabaseMysqlUpdatesPtrOutput() DatabaseMysqlUpdatesPtrOutput {
	return o.ToDatabaseMysqlUpdatesPtrOutputWithContext(context.Background())
}

func (o DatabaseMysqlUpdatesOutput) ToDatabaseMysqlUpdatesPtrOutputWithContext(ctx context.Context) DatabaseMysqlUpdatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseMysqlUpdates) *DatabaseMysqlUpdates {
		return &v
	}).(DatabaseMysqlUpdatesPtrOutput)
}

func (o DatabaseMysqlUpdatesOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseMysqlUpdates] {
	return pulumix.Output[DatabaseMysqlUpdates]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseMysqlUpdatesOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseMysqlUpdates) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

func (o DatabaseMysqlUpdatesOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseMysqlUpdates) int { return v.Duration }).(pulumi.IntOutput)
}

func (o DatabaseMysqlUpdatesOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseMysqlUpdates) string { return v.Frequency }).(pulumi.StringOutput)
}

func (o DatabaseMysqlUpdatesOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseMysqlUpdates) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o DatabaseMysqlUpdatesOutput) WeekOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseMysqlUpdates) *int { return v.WeekOfMonth }).(pulumi.IntPtrOutput)
}

type DatabaseMysqlUpdatesPtrOutput struct{ *pulumi.OutputState }

func (DatabaseMysqlUpdatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMysqlUpdates)(nil)).Elem()
}

func (o DatabaseMysqlUpdatesPtrOutput) ToDatabaseMysqlUpdatesPtrOutput() DatabaseMysqlUpdatesPtrOutput {
	return o
}

func (o DatabaseMysqlUpdatesPtrOutput) ToDatabaseMysqlUpdatesPtrOutputWithContext(ctx context.Context) DatabaseMysqlUpdatesPtrOutput {
	return o
}

func (o DatabaseMysqlUpdatesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseMysqlUpdates] {
	return pulumix.Output[*DatabaseMysqlUpdates]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseMysqlUpdatesPtrOutput) Elem() DatabaseMysqlUpdatesOutput {
	return o.ApplyT(func(v *DatabaseMysqlUpdates) DatabaseMysqlUpdates {
		if v != nil {
			return *v
		}
		var ret DatabaseMysqlUpdates
		return ret
	}).(DatabaseMysqlUpdatesOutput)
}

func (o DatabaseMysqlUpdatesPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysqlUpdates) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseMysqlUpdatesPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseMysqlUpdates) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o DatabaseMysqlUpdatesPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMysqlUpdates) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseMysqlUpdatesPtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseMysqlUpdates) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

func (o DatabaseMysqlUpdatesPtrOutput) WeekOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseMysqlUpdates) *int {
		if v == nil {
			return nil
		}
		return v.WeekOfMonth
	}).(pulumi.IntPtrOutput)
}

type DatabasePostgresqlUpdates struct {
	DayOfWeek   string `pulumi:"dayOfWeek"`
	Duration    int    `pulumi:"duration"`
	Frequency   string `pulumi:"frequency"`
	HourOfDay   int    `pulumi:"hourOfDay"`
	WeekOfMonth *int   `pulumi:"weekOfMonth"`
}

// DatabasePostgresqlUpdatesInput is an input type that accepts DatabasePostgresqlUpdatesArgs and DatabasePostgresqlUpdatesOutput values.
// You can construct a concrete instance of `DatabasePostgresqlUpdatesInput` via:
//
//	DatabasePostgresqlUpdatesArgs{...}
type DatabasePostgresqlUpdatesInput interface {
	pulumi.Input

	ToDatabasePostgresqlUpdatesOutput() DatabasePostgresqlUpdatesOutput
	ToDatabasePostgresqlUpdatesOutputWithContext(context.Context) DatabasePostgresqlUpdatesOutput
}

type DatabasePostgresqlUpdatesArgs struct {
	DayOfWeek   pulumi.StringInput `pulumi:"dayOfWeek"`
	Duration    pulumi.IntInput    `pulumi:"duration"`
	Frequency   pulumi.StringInput `pulumi:"frequency"`
	HourOfDay   pulumi.IntInput    `pulumi:"hourOfDay"`
	WeekOfMonth pulumi.IntPtrInput `pulumi:"weekOfMonth"`
}

func (DatabasePostgresqlUpdatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePostgresqlUpdates)(nil)).Elem()
}

func (i DatabasePostgresqlUpdatesArgs) ToDatabasePostgresqlUpdatesOutput() DatabasePostgresqlUpdatesOutput {
	return i.ToDatabasePostgresqlUpdatesOutputWithContext(context.Background())
}

func (i DatabasePostgresqlUpdatesArgs) ToDatabasePostgresqlUpdatesOutputWithContext(ctx context.Context) DatabasePostgresqlUpdatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePostgresqlUpdatesOutput)
}

func (i DatabasePostgresqlUpdatesArgs) ToOutput(ctx context.Context) pulumix.Output[DatabasePostgresqlUpdates] {
	return pulumix.Output[DatabasePostgresqlUpdates]{
		OutputState: i.ToDatabasePostgresqlUpdatesOutputWithContext(ctx).OutputState,
	}
}

func (i DatabasePostgresqlUpdatesArgs) ToDatabasePostgresqlUpdatesPtrOutput() DatabasePostgresqlUpdatesPtrOutput {
	return i.ToDatabasePostgresqlUpdatesPtrOutputWithContext(context.Background())
}

func (i DatabasePostgresqlUpdatesArgs) ToDatabasePostgresqlUpdatesPtrOutputWithContext(ctx context.Context) DatabasePostgresqlUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePostgresqlUpdatesOutput).ToDatabasePostgresqlUpdatesPtrOutputWithContext(ctx)
}

// DatabasePostgresqlUpdatesPtrInput is an input type that accepts DatabasePostgresqlUpdatesArgs, DatabasePostgresqlUpdatesPtr and DatabasePostgresqlUpdatesPtrOutput values.
// You can construct a concrete instance of `DatabasePostgresqlUpdatesPtrInput` via:
//
//	        DatabasePostgresqlUpdatesArgs{...}
//
//	or:
//
//	        nil
type DatabasePostgresqlUpdatesPtrInput interface {
	pulumi.Input

	ToDatabasePostgresqlUpdatesPtrOutput() DatabasePostgresqlUpdatesPtrOutput
	ToDatabasePostgresqlUpdatesPtrOutputWithContext(context.Context) DatabasePostgresqlUpdatesPtrOutput
}

type databasePostgresqlUpdatesPtrType DatabasePostgresqlUpdatesArgs

func DatabasePostgresqlUpdatesPtr(v *DatabasePostgresqlUpdatesArgs) DatabasePostgresqlUpdatesPtrInput {
	return (*databasePostgresqlUpdatesPtrType)(v)
}

func (*databasePostgresqlUpdatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePostgresqlUpdates)(nil)).Elem()
}

func (i *databasePostgresqlUpdatesPtrType) ToDatabasePostgresqlUpdatesPtrOutput() DatabasePostgresqlUpdatesPtrOutput {
	return i.ToDatabasePostgresqlUpdatesPtrOutputWithContext(context.Background())
}

func (i *databasePostgresqlUpdatesPtrType) ToDatabasePostgresqlUpdatesPtrOutputWithContext(ctx context.Context) DatabasePostgresqlUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePostgresqlUpdatesPtrOutput)
}

func (i *databasePostgresqlUpdatesPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabasePostgresqlUpdates] {
	return pulumix.Output[*DatabasePostgresqlUpdates]{
		OutputState: i.ToDatabasePostgresqlUpdatesPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabasePostgresqlUpdatesOutput struct{ *pulumi.OutputState }

func (DatabasePostgresqlUpdatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePostgresqlUpdates)(nil)).Elem()
}

func (o DatabasePostgresqlUpdatesOutput) ToDatabasePostgresqlUpdatesOutput() DatabasePostgresqlUpdatesOutput {
	return o
}

func (o DatabasePostgresqlUpdatesOutput) ToDatabasePostgresqlUpdatesOutputWithContext(ctx context.Context) DatabasePostgresqlUpdatesOutput {
	return o
}

func (o DatabasePostgresqlUpdatesOutput) ToDatabasePostgresqlUpdatesPtrOutput() DatabasePostgresqlUpdatesPtrOutput {
	return o.ToDatabasePostgresqlUpdatesPtrOutputWithContext(context.Background())
}

func (o DatabasePostgresqlUpdatesOutput) ToDatabasePostgresqlUpdatesPtrOutputWithContext(ctx context.Context) DatabasePostgresqlUpdatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabasePostgresqlUpdates) *DatabasePostgresqlUpdates {
		return &v
	}).(DatabasePostgresqlUpdatesPtrOutput)
}

func (o DatabasePostgresqlUpdatesOutput) ToOutput(ctx context.Context) pulumix.Output[DatabasePostgresqlUpdates] {
	return pulumix.Output[DatabasePostgresqlUpdates]{
		OutputState: o.OutputState,
	}
}

func (o DatabasePostgresqlUpdatesOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePostgresqlUpdates) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

func (o DatabasePostgresqlUpdatesOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v DatabasePostgresqlUpdates) int { return v.Duration }).(pulumi.IntOutput)
}

func (o DatabasePostgresqlUpdatesOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePostgresqlUpdates) string { return v.Frequency }).(pulumi.StringOutput)
}

func (o DatabasePostgresqlUpdatesOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v DatabasePostgresqlUpdates) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o DatabasePostgresqlUpdatesOutput) WeekOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabasePostgresqlUpdates) *int { return v.WeekOfMonth }).(pulumi.IntPtrOutput)
}

type DatabasePostgresqlUpdatesPtrOutput struct{ *pulumi.OutputState }

func (DatabasePostgresqlUpdatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePostgresqlUpdates)(nil)).Elem()
}

func (o DatabasePostgresqlUpdatesPtrOutput) ToDatabasePostgresqlUpdatesPtrOutput() DatabasePostgresqlUpdatesPtrOutput {
	return o
}

func (o DatabasePostgresqlUpdatesPtrOutput) ToDatabasePostgresqlUpdatesPtrOutputWithContext(ctx context.Context) DatabasePostgresqlUpdatesPtrOutput {
	return o
}

func (o DatabasePostgresqlUpdatesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabasePostgresqlUpdates] {
	return pulumix.Output[*DatabasePostgresqlUpdates]{
		OutputState: o.OutputState,
	}
}

func (o DatabasePostgresqlUpdatesPtrOutput) Elem() DatabasePostgresqlUpdatesOutput {
	return o.ApplyT(func(v *DatabasePostgresqlUpdates) DatabasePostgresqlUpdates {
		if v != nil {
			return *v
		}
		var ret DatabasePostgresqlUpdates
		return ret
	}).(DatabasePostgresqlUpdatesOutput)
}

func (o DatabasePostgresqlUpdatesPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePostgresqlUpdates) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

func (o DatabasePostgresqlUpdatesPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabasePostgresqlUpdates) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o DatabasePostgresqlUpdatesPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePostgresqlUpdates) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

func (o DatabasePostgresqlUpdatesPtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabasePostgresqlUpdates) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

func (o DatabasePostgresqlUpdatesPtrOutput) WeekOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabasePostgresqlUpdates) *int {
		if v == nil {
			return nil
		}
		return v.WeekOfMonth
	}).(pulumi.IntPtrOutput)
}

type FirewallDeviceType struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId *int `pulumi:"entityId"`
	// The ID of the Firewall Device.
	Id *int `pulumi:"id"`
	// This Firewall's unique label.
	Label *string `pulumi:"label"`
	// The type of Firewall Device.
	Type *string `pulumi:"type"`
	// The URL of the underlying entity this device references.
	Url *string `pulumi:"url"`
}

// FirewallDeviceTypeInput is an input type that accepts FirewallDeviceTypeArgs and FirewallDeviceTypeOutput values.
// You can construct a concrete instance of `FirewallDeviceTypeInput` via:
//
//	FirewallDeviceTypeArgs{...}
type FirewallDeviceTypeInput interface {
	pulumi.Input

	ToFirewallDeviceTypeOutput() FirewallDeviceTypeOutput
	ToFirewallDeviceTypeOutputWithContext(context.Context) FirewallDeviceTypeOutput
}

type FirewallDeviceTypeArgs struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId pulumi.IntPtrInput `pulumi:"entityId"`
	// The ID of the Firewall Device.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// This Firewall's unique label.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The type of Firewall Device.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The URL of the underlying entity this device references.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (FirewallDeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDeviceType)(nil)).Elem()
}

func (i FirewallDeviceTypeArgs) ToFirewallDeviceTypeOutput() FirewallDeviceTypeOutput {
	return i.ToFirewallDeviceTypeOutputWithContext(context.Background())
}

func (i FirewallDeviceTypeArgs) ToFirewallDeviceTypeOutputWithContext(ctx context.Context) FirewallDeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDeviceTypeOutput)
}

func (i FirewallDeviceTypeArgs) ToOutput(ctx context.Context) pulumix.Output[FirewallDeviceType] {
	return pulumix.Output[FirewallDeviceType]{
		OutputState: i.ToFirewallDeviceTypeOutputWithContext(ctx).OutputState,
	}
}

// FirewallDeviceTypeArrayInput is an input type that accepts FirewallDeviceTypeArray and FirewallDeviceTypeArrayOutput values.
// You can construct a concrete instance of `FirewallDeviceTypeArrayInput` via:
//
//	FirewallDeviceTypeArray{ FirewallDeviceTypeArgs{...} }
type FirewallDeviceTypeArrayInput interface {
	pulumi.Input

	ToFirewallDeviceTypeArrayOutput() FirewallDeviceTypeArrayOutput
	ToFirewallDeviceTypeArrayOutputWithContext(context.Context) FirewallDeviceTypeArrayOutput
}

type FirewallDeviceTypeArray []FirewallDeviceTypeInput

func (FirewallDeviceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDeviceType)(nil)).Elem()
}

func (i FirewallDeviceTypeArray) ToFirewallDeviceTypeArrayOutput() FirewallDeviceTypeArrayOutput {
	return i.ToFirewallDeviceTypeArrayOutputWithContext(context.Background())
}

func (i FirewallDeviceTypeArray) ToFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) FirewallDeviceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDeviceTypeArrayOutput)
}

func (i FirewallDeviceTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]FirewallDeviceType] {
	return pulumix.Output[[]FirewallDeviceType]{
		OutputState: i.ToFirewallDeviceTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type FirewallDeviceTypeOutput struct{ *pulumi.OutputState }

func (FirewallDeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDeviceType)(nil)).Elem()
}

func (o FirewallDeviceTypeOutput) ToFirewallDeviceTypeOutput() FirewallDeviceTypeOutput {
	return o
}

func (o FirewallDeviceTypeOutput) ToFirewallDeviceTypeOutputWithContext(ctx context.Context) FirewallDeviceTypeOutput {
	return o
}

func (o FirewallDeviceTypeOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallDeviceType] {
	return pulumix.Output[FirewallDeviceType]{
		OutputState: o.OutputState,
	}
}

// The ID of the underlying entity this device references (i.e. the Linode's ID).
func (o FirewallDeviceTypeOutput) EntityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *int { return v.EntityId }).(pulumi.IntPtrOutput)
}

// The ID of the Firewall Device.
func (o FirewallDeviceTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// This Firewall's unique label.
func (o FirewallDeviceTypeOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of Firewall Device.
func (o FirewallDeviceTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The URL of the underlying entity this device references.
func (o FirewallDeviceTypeOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDeviceType) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type FirewallDeviceTypeArrayOutput struct{ *pulumi.OutputState }

func (FirewallDeviceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDeviceType)(nil)).Elem()
}

func (o FirewallDeviceTypeArrayOutput) ToFirewallDeviceTypeArrayOutput() FirewallDeviceTypeArrayOutput {
	return o
}

func (o FirewallDeviceTypeArrayOutput) ToFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) FirewallDeviceTypeArrayOutput {
	return o
}

func (o FirewallDeviceTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirewallDeviceType] {
	return pulumix.Output[[]FirewallDeviceType]{
		OutputState: o.OutputState,
	}
}

func (o FirewallDeviceTypeArrayOutput) Index(i pulumi.IntInput) FirewallDeviceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDeviceType {
		return vs[0].([]FirewallDeviceType)[vs[1].(int)]
	}).(FirewallDeviceTypeOutput)
}

type FirewallInbound struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv6s []string `pulumi:"ipv6s"`
	// Used to identify this rule. For display purposes only.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports *string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// FirewallInboundInput is an input type that accepts FirewallInboundArgs and FirewallInboundOutput values.
// You can construct a concrete instance of `FirewallInboundInput` via:
//
//	FirewallInboundArgs{...}
type FirewallInboundInput interface {
	pulumi.Input

	ToFirewallInboundOutput() FirewallInboundOutput
	ToFirewallInboundOutputWithContext(context.Context) FirewallInboundOutput
}

type FirewallInboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// Used to identify this rule. For display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (FirewallInboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInbound)(nil)).Elem()
}

func (i FirewallInboundArgs) ToFirewallInboundOutput() FirewallInboundOutput {
	return i.ToFirewallInboundOutputWithContext(context.Background())
}

func (i FirewallInboundArgs) ToFirewallInboundOutputWithContext(ctx context.Context) FirewallInboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundOutput)
}

func (i FirewallInboundArgs) ToOutput(ctx context.Context) pulumix.Output[FirewallInbound] {
	return pulumix.Output[FirewallInbound]{
		OutputState: i.ToFirewallInboundOutputWithContext(ctx).OutputState,
	}
}

// FirewallInboundArrayInput is an input type that accepts FirewallInboundArray and FirewallInboundArrayOutput values.
// You can construct a concrete instance of `FirewallInboundArrayInput` via:
//
//	FirewallInboundArray{ FirewallInboundArgs{...} }
type FirewallInboundArrayInput interface {
	pulumi.Input

	ToFirewallInboundArrayOutput() FirewallInboundArrayOutput
	ToFirewallInboundArrayOutputWithContext(context.Context) FirewallInboundArrayOutput
}

type FirewallInboundArray []FirewallInboundInput

func (FirewallInboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInbound)(nil)).Elem()
}

func (i FirewallInboundArray) ToFirewallInboundArrayOutput() FirewallInboundArrayOutput {
	return i.ToFirewallInboundArrayOutputWithContext(context.Background())
}

func (i FirewallInboundArray) ToFirewallInboundArrayOutputWithContext(ctx context.Context) FirewallInboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundArrayOutput)
}

func (i FirewallInboundArray) ToOutput(ctx context.Context) pulumix.Output[[]FirewallInbound] {
	return pulumix.Output[[]FirewallInbound]{
		OutputState: i.ToFirewallInboundArrayOutputWithContext(ctx).OutputState,
	}
}

type FirewallInboundOutput struct{ *pulumi.OutputState }

func (FirewallInboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInbound)(nil)).Elem()
}

func (o FirewallInboundOutput) ToFirewallInboundOutput() FirewallInboundOutput {
	return o
}

func (o FirewallInboundOutput) ToFirewallInboundOutputWithContext(ctx context.Context) FirewallInboundOutput {
	return o
}

func (o FirewallInboundOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallInbound] {
	return pulumix.Output[FirewallInbound]{
		OutputState: o.OutputState,
	}
}

// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o FirewallInboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask (CIDR) format.
func (o FirewallInboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask (CIDR) format.
func (o FirewallInboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// Used to identify this rule. For display purposes only.
func (o FirewallInboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o FirewallInboundOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInbound) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o FirewallInboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type FirewallInboundArrayOutput struct{ *pulumi.OutputState }

func (FirewallInboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInbound)(nil)).Elem()
}

func (o FirewallInboundArrayOutput) ToFirewallInboundArrayOutput() FirewallInboundArrayOutput {
	return o
}

func (o FirewallInboundArrayOutput) ToFirewallInboundArrayOutputWithContext(ctx context.Context) FirewallInboundArrayOutput {
	return o
}

func (o FirewallInboundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirewallInbound] {
	return pulumix.Output[[]FirewallInbound]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInboundArrayOutput) Index(i pulumi.IntInput) FirewallInboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInbound {
		return vs[0].([]FirewallInbound)[vs[1].(int)]
	}).(FirewallInboundOutput)
}

type FirewallOutbound struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv6s []string `pulumi:"ipv6s"`
	// This Firewall's unique label.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports *string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// FirewallOutboundInput is an input type that accepts FirewallOutboundArgs and FirewallOutboundOutput values.
// You can construct a concrete instance of `FirewallOutboundInput` via:
//
//	FirewallOutboundArgs{...}
type FirewallOutboundInput interface {
	pulumi.Input

	ToFirewallOutboundOutput() FirewallOutboundOutput
	ToFirewallOutboundOutputWithContext(context.Context) FirewallOutboundOutput
}

type FirewallOutboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask (CIDR) format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// This Firewall's unique label.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (FirewallOutboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutbound)(nil)).Elem()
}

func (i FirewallOutboundArgs) ToFirewallOutboundOutput() FirewallOutboundOutput {
	return i.ToFirewallOutboundOutputWithContext(context.Background())
}

func (i FirewallOutboundArgs) ToFirewallOutboundOutputWithContext(ctx context.Context) FirewallOutboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundOutput)
}

func (i FirewallOutboundArgs) ToOutput(ctx context.Context) pulumix.Output[FirewallOutbound] {
	return pulumix.Output[FirewallOutbound]{
		OutputState: i.ToFirewallOutboundOutputWithContext(ctx).OutputState,
	}
}

// FirewallOutboundArrayInput is an input type that accepts FirewallOutboundArray and FirewallOutboundArrayOutput values.
// You can construct a concrete instance of `FirewallOutboundArrayInput` via:
//
//	FirewallOutboundArray{ FirewallOutboundArgs{...} }
type FirewallOutboundArrayInput interface {
	pulumi.Input

	ToFirewallOutboundArrayOutput() FirewallOutboundArrayOutput
	ToFirewallOutboundArrayOutputWithContext(context.Context) FirewallOutboundArrayOutput
}

type FirewallOutboundArray []FirewallOutboundInput

func (FirewallOutboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutbound)(nil)).Elem()
}

func (i FirewallOutboundArray) ToFirewallOutboundArrayOutput() FirewallOutboundArrayOutput {
	return i.ToFirewallOutboundArrayOutputWithContext(context.Background())
}

func (i FirewallOutboundArray) ToFirewallOutboundArrayOutputWithContext(ctx context.Context) FirewallOutboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundArrayOutput)
}

func (i FirewallOutboundArray) ToOutput(ctx context.Context) pulumix.Output[[]FirewallOutbound] {
	return pulumix.Output[[]FirewallOutbound]{
		OutputState: i.ToFirewallOutboundArrayOutputWithContext(ctx).OutputState,
	}
}

type FirewallOutboundOutput struct{ *pulumi.OutputState }

func (FirewallOutboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutbound)(nil)).Elem()
}

func (o FirewallOutboundOutput) ToFirewallOutboundOutput() FirewallOutboundOutput {
	return o
}

func (o FirewallOutboundOutput) ToFirewallOutboundOutputWithContext(ctx context.Context) FirewallOutboundOutput {
	return o
}

func (o FirewallOutboundOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallOutbound] {
	return pulumix.Output[FirewallOutbound]{
		OutputState: o.OutputState,
	}
}

// Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o FirewallOutboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask (CIDR) format.
func (o FirewallOutboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask (CIDR) format.
func (o FirewallOutboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// This Firewall's unique label.
func (o FirewallOutboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o FirewallOutboundOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallOutbound) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o FirewallOutboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type FirewallOutboundArrayOutput struct{ *pulumi.OutputState }

func (FirewallOutboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutbound)(nil)).Elem()
}

func (o FirewallOutboundArrayOutput) ToFirewallOutboundArrayOutput() FirewallOutboundArrayOutput {
	return o
}

func (o FirewallOutboundArrayOutput) ToFirewallOutboundArrayOutputWithContext(ctx context.Context) FirewallOutboundArrayOutput {
	return o
}

func (o FirewallOutboundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirewallOutbound] {
	return pulumix.Output[[]FirewallOutbound]{
		OutputState: o.OutputState,
	}
}

func (o FirewallOutboundArrayOutput) Index(i pulumi.IntInput) FirewallOutboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallOutbound {
		return vs[0].([]FirewallOutbound)[vs[1].(int)]
	}).(FirewallOutboundOutput)
}

type InstanceAlerts struct {
	Cpu           *int `pulumi:"cpu"`
	Io            *int `pulumi:"io"`
	NetworkIn     *int `pulumi:"networkIn"`
	NetworkOut    *int `pulumi:"networkOut"`
	TransferQuota *int `pulumi:"transferQuota"`
}

// InstanceAlertsInput is an input type that accepts InstanceAlertsArgs and InstanceAlertsOutput values.
// You can construct a concrete instance of `InstanceAlertsInput` via:
//
//	InstanceAlertsArgs{...}
type InstanceAlertsInput interface {
	pulumi.Input

	ToInstanceAlertsOutput() InstanceAlertsOutput
	ToInstanceAlertsOutputWithContext(context.Context) InstanceAlertsOutput
}

type InstanceAlertsArgs struct {
	Cpu           pulumi.IntPtrInput `pulumi:"cpu"`
	Io            pulumi.IntPtrInput `pulumi:"io"`
	NetworkIn     pulumi.IntPtrInput `pulumi:"networkIn"`
	NetworkOut    pulumi.IntPtrInput `pulumi:"networkOut"`
	TransferQuota pulumi.IntPtrInput `pulumi:"transferQuota"`
}

func (InstanceAlertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAlerts)(nil)).Elem()
}

func (i InstanceAlertsArgs) ToInstanceAlertsOutput() InstanceAlertsOutput {
	return i.ToInstanceAlertsOutputWithContext(context.Background())
}

func (i InstanceAlertsArgs) ToInstanceAlertsOutputWithContext(ctx context.Context) InstanceAlertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAlertsOutput)
}

func (i InstanceAlertsArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceAlerts] {
	return pulumix.Output[InstanceAlerts]{
		OutputState: i.ToInstanceAlertsOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceAlertsArgs) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return i.ToInstanceAlertsPtrOutputWithContext(context.Background())
}

func (i InstanceAlertsArgs) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAlertsOutput).ToInstanceAlertsPtrOutputWithContext(ctx)
}

// InstanceAlertsPtrInput is an input type that accepts InstanceAlertsArgs, InstanceAlertsPtr and InstanceAlertsPtrOutput values.
// You can construct a concrete instance of `InstanceAlertsPtrInput` via:
//
//	        InstanceAlertsArgs{...}
//
//	or:
//
//	        nil
type InstanceAlertsPtrInput interface {
	pulumi.Input

	ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput
	ToInstanceAlertsPtrOutputWithContext(context.Context) InstanceAlertsPtrOutput
}

type instanceAlertsPtrType InstanceAlertsArgs

func InstanceAlertsPtr(v *InstanceAlertsArgs) InstanceAlertsPtrInput {
	return (*instanceAlertsPtrType)(v)
}

func (*instanceAlertsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAlerts)(nil)).Elem()
}

func (i *instanceAlertsPtrType) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return i.ToInstanceAlertsPtrOutputWithContext(context.Background())
}

func (i *instanceAlertsPtrType) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAlertsPtrOutput)
}

func (i *instanceAlertsPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceAlerts] {
	return pulumix.Output[*InstanceAlerts]{
		OutputState: i.ToInstanceAlertsPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceAlertsOutput struct{ *pulumi.OutputState }

func (InstanceAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAlerts)(nil)).Elem()
}

func (o InstanceAlertsOutput) ToInstanceAlertsOutput() InstanceAlertsOutput {
	return o
}

func (o InstanceAlertsOutput) ToInstanceAlertsOutputWithContext(ctx context.Context) InstanceAlertsOutput {
	return o
}

func (o InstanceAlertsOutput) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return o.ToInstanceAlertsPtrOutputWithContext(context.Background())
}

func (o InstanceAlertsOutput) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAlerts) *InstanceAlerts {
		return &v
	}).(InstanceAlertsPtrOutput)
}

func (o InstanceAlertsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceAlerts] {
	return pulumix.Output[InstanceAlerts]{
		OutputState: o.OutputState,
	}
}

func (o InstanceAlertsOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) Io() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.Io }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) NetworkIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.NetworkIn }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) NetworkOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.NetworkOut }).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsOutput) TransferQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAlerts) *int { return v.TransferQuota }).(pulumi.IntPtrOutput)
}

type InstanceAlertsPtrOutput struct{ *pulumi.OutputState }

func (InstanceAlertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAlerts)(nil)).Elem()
}

func (o InstanceAlertsPtrOutput) ToInstanceAlertsPtrOutput() InstanceAlertsPtrOutput {
	return o
}

func (o InstanceAlertsPtrOutput) ToInstanceAlertsPtrOutputWithContext(ctx context.Context) InstanceAlertsPtrOutput {
	return o
}

func (o InstanceAlertsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceAlerts] {
	return pulumix.Output[*InstanceAlerts]{
		OutputState: o.OutputState,
	}
}

func (o InstanceAlertsPtrOutput) Elem() InstanceAlertsOutput {
	return o.ApplyT(func(v *InstanceAlerts) InstanceAlerts {
		if v != nil {
			return *v
		}
		var ret InstanceAlerts
		return ret
	}).(InstanceAlertsOutput)
}

func (o InstanceAlertsPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) Io() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.Io
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) NetworkIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.NetworkIn
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) NetworkOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.NetworkOut
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAlertsPtrOutput) TransferQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAlerts) *int {
		if v == nil {
			return nil
		}
		return v.TransferQuota
	}).(pulumi.IntPtrOutput)
}

type InstanceBackups struct {
	Available *bool `pulumi:"available"`
	// If this Linode has the Backup service enabled.
	Enabled  *bool                    `pulumi:"enabled"`
	Schedule *InstanceBackupsSchedule `pulumi:"schedule"`
}

// InstanceBackupsInput is an input type that accepts InstanceBackupsArgs and InstanceBackupsOutput values.
// You can construct a concrete instance of `InstanceBackupsInput` via:
//
//	InstanceBackupsArgs{...}
type InstanceBackupsInput interface {
	pulumi.Input

	ToInstanceBackupsOutput() InstanceBackupsOutput
	ToInstanceBackupsOutputWithContext(context.Context) InstanceBackupsOutput
}

type InstanceBackupsArgs struct {
	Available pulumi.BoolPtrInput `pulumi:"available"`
	// If this Linode has the Backup service enabled.
	Enabled  pulumi.BoolPtrInput             `pulumi:"enabled"`
	Schedule InstanceBackupsSchedulePtrInput `pulumi:"schedule"`
}

func (InstanceBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackups)(nil)).Elem()
}

func (i InstanceBackupsArgs) ToInstanceBackupsOutput() InstanceBackupsOutput {
	return i.ToInstanceBackupsOutputWithContext(context.Background())
}

func (i InstanceBackupsArgs) ToInstanceBackupsOutputWithContext(ctx context.Context) InstanceBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsOutput)
}

func (i InstanceBackupsArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceBackups] {
	return pulumix.Output[InstanceBackups]{
		OutputState: i.ToInstanceBackupsOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceBackupsArgs) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return i.ToInstanceBackupsPtrOutputWithContext(context.Background())
}

func (i InstanceBackupsArgs) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsOutput).ToInstanceBackupsPtrOutputWithContext(ctx)
}

// InstanceBackupsPtrInput is an input type that accepts InstanceBackupsArgs, InstanceBackupsPtr and InstanceBackupsPtrOutput values.
// You can construct a concrete instance of `InstanceBackupsPtrInput` via:
//
//	        InstanceBackupsArgs{...}
//
//	or:
//
//	        nil
type InstanceBackupsPtrInput interface {
	pulumi.Input

	ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput
	ToInstanceBackupsPtrOutputWithContext(context.Context) InstanceBackupsPtrOutput
}

type instanceBackupsPtrType InstanceBackupsArgs

func InstanceBackupsPtr(v *InstanceBackupsArgs) InstanceBackupsPtrInput {
	return (*instanceBackupsPtrType)(v)
}

func (*instanceBackupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackups)(nil)).Elem()
}

func (i *instanceBackupsPtrType) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return i.ToInstanceBackupsPtrOutputWithContext(context.Background())
}

func (i *instanceBackupsPtrType) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsPtrOutput)
}

func (i *instanceBackupsPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceBackups] {
	return pulumix.Output[*InstanceBackups]{
		OutputState: i.ToInstanceBackupsPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceBackupsOutput struct{ *pulumi.OutputState }

func (InstanceBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackups)(nil)).Elem()
}

func (o InstanceBackupsOutput) ToInstanceBackupsOutput() InstanceBackupsOutput {
	return o
}

func (o InstanceBackupsOutput) ToInstanceBackupsOutputWithContext(ctx context.Context) InstanceBackupsOutput {
	return o
}

func (o InstanceBackupsOutput) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return o.ToInstanceBackupsPtrOutputWithContext(context.Background())
}

func (o InstanceBackupsOutput) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackups) *InstanceBackups {
		return &v
	}).(InstanceBackupsPtrOutput)
}

func (o InstanceBackupsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceBackups] {
	return pulumix.Output[InstanceBackups]{
		OutputState: o.OutputState,
	}
}

func (o InstanceBackupsOutput) Available() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceBackups) *bool { return v.Available }).(pulumi.BoolPtrOutput)
}

// If this Linode has the Backup service enabled.
func (o InstanceBackupsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceBackups) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceBackupsOutput) Schedule() InstanceBackupsSchedulePtrOutput {
	return o.ApplyT(func(v InstanceBackups) *InstanceBackupsSchedule { return v.Schedule }).(InstanceBackupsSchedulePtrOutput)
}

type InstanceBackupsPtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackups)(nil)).Elem()
}

func (o InstanceBackupsPtrOutput) ToInstanceBackupsPtrOutput() InstanceBackupsPtrOutput {
	return o
}

func (o InstanceBackupsPtrOutput) ToInstanceBackupsPtrOutputWithContext(ctx context.Context) InstanceBackupsPtrOutput {
	return o
}

func (o InstanceBackupsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceBackups] {
	return pulumix.Output[*InstanceBackups]{
		OutputState: o.OutputState,
	}
}

func (o InstanceBackupsPtrOutput) Elem() InstanceBackupsOutput {
	return o.ApplyT(func(v *InstanceBackups) InstanceBackups {
		if v != nil {
			return *v
		}
		var ret InstanceBackups
		return ret
	}).(InstanceBackupsOutput)
}

func (o InstanceBackupsPtrOutput) Available() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceBackups) *bool {
		if v == nil {
			return nil
		}
		return v.Available
	}).(pulumi.BoolPtrOutput)
}

// If this Linode has the Backup service enabled.
func (o InstanceBackupsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceBackups) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceBackupsPtrOutput) Schedule() InstanceBackupsSchedulePtrOutput {
	return o.ApplyT(func(v *InstanceBackups) *InstanceBackupsSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(InstanceBackupsSchedulePtrOutput)
}

type InstanceBackupsSchedule struct {
	// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
	Day *string `pulumi:"day"`
	// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
	Window *string `pulumi:"window"`
}

// InstanceBackupsScheduleInput is an input type that accepts InstanceBackupsScheduleArgs and InstanceBackupsScheduleOutput values.
// You can construct a concrete instance of `InstanceBackupsScheduleInput` via:
//
//	InstanceBackupsScheduleArgs{...}
type InstanceBackupsScheduleInput interface {
	pulumi.Input

	ToInstanceBackupsScheduleOutput() InstanceBackupsScheduleOutput
	ToInstanceBackupsScheduleOutputWithContext(context.Context) InstanceBackupsScheduleOutput
}

type InstanceBackupsScheduleArgs struct {
	// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
	Day pulumi.StringPtrInput `pulumi:"day"`
	// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
	Window pulumi.StringPtrInput `pulumi:"window"`
}

func (InstanceBackupsScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupsSchedule)(nil)).Elem()
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsScheduleOutput() InstanceBackupsScheduleOutput {
	return i.ToInstanceBackupsScheduleOutputWithContext(context.Background())
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsScheduleOutputWithContext(ctx context.Context) InstanceBackupsScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsScheduleOutput)
}

func (i InstanceBackupsScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceBackupsSchedule] {
	return pulumix.Output[InstanceBackupsSchedule]{
		OutputState: i.ToInstanceBackupsScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return i.ToInstanceBackupsSchedulePtrOutputWithContext(context.Background())
}

func (i InstanceBackupsScheduleArgs) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsScheduleOutput).ToInstanceBackupsSchedulePtrOutputWithContext(ctx)
}

// InstanceBackupsSchedulePtrInput is an input type that accepts InstanceBackupsScheduleArgs, InstanceBackupsSchedulePtr and InstanceBackupsSchedulePtrOutput values.
// You can construct a concrete instance of `InstanceBackupsSchedulePtrInput` via:
//
//	        InstanceBackupsScheduleArgs{...}
//
//	or:
//
//	        nil
type InstanceBackupsSchedulePtrInput interface {
	pulumi.Input

	ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput
	ToInstanceBackupsSchedulePtrOutputWithContext(context.Context) InstanceBackupsSchedulePtrOutput
}

type instanceBackupsSchedulePtrType InstanceBackupsScheduleArgs

func InstanceBackupsSchedulePtr(v *InstanceBackupsScheduleArgs) InstanceBackupsSchedulePtrInput {
	return (*instanceBackupsSchedulePtrType)(v)
}

func (*instanceBackupsSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupsSchedule)(nil)).Elem()
}

func (i *instanceBackupsSchedulePtrType) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return i.ToInstanceBackupsSchedulePtrOutputWithContext(context.Background())
}

func (i *instanceBackupsSchedulePtrType) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupsSchedulePtrOutput)
}

func (i *instanceBackupsSchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceBackupsSchedule] {
	return pulumix.Output[*InstanceBackupsSchedule]{
		OutputState: i.ToInstanceBackupsSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceBackupsScheduleOutput struct{ *pulumi.OutputState }

func (InstanceBackupsScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupsSchedule)(nil)).Elem()
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsScheduleOutput() InstanceBackupsScheduleOutput {
	return o
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsScheduleOutputWithContext(ctx context.Context) InstanceBackupsScheduleOutput {
	return o
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return o.ToInstanceBackupsSchedulePtrOutputWithContext(context.Background())
}

func (o InstanceBackupsScheduleOutput) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackupsSchedule) *InstanceBackupsSchedule {
		return &v
	}).(InstanceBackupsSchedulePtrOutput)
}

func (o InstanceBackupsScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceBackupsSchedule] {
	return pulumix.Output[InstanceBackupsSchedule]{
		OutputState: o.OutputState,
	}
}

// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
func (o InstanceBackupsScheduleOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupsSchedule) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
func (o InstanceBackupsScheduleOutput) Window() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupsSchedule) *string { return v.Window }).(pulumi.StringPtrOutput)
}

type InstanceBackupsSchedulePtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupsSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupsSchedule)(nil)).Elem()
}

func (o InstanceBackupsSchedulePtrOutput) ToInstanceBackupsSchedulePtrOutput() InstanceBackupsSchedulePtrOutput {
	return o
}

func (o InstanceBackupsSchedulePtrOutput) ToInstanceBackupsSchedulePtrOutputWithContext(ctx context.Context) InstanceBackupsSchedulePtrOutput {
	return o
}

func (o InstanceBackupsSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceBackupsSchedule] {
	return pulumix.Output[*InstanceBackupsSchedule]{
		OutputState: o.OutputState,
	}
}

func (o InstanceBackupsSchedulePtrOutput) Elem() InstanceBackupsScheduleOutput {
	return o.ApplyT(func(v *InstanceBackupsSchedule) InstanceBackupsSchedule {
		if v != nil {
			return *v
		}
		var ret InstanceBackupsSchedule
		return ret
	}).(InstanceBackupsScheduleOutput)
}

// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
func (o InstanceBackupsSchedulePtrOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupsSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.StringPtrOutput)
}

// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
func (o InstanceBackupsSchedulePtrOutput) Window() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupsSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.StringPtrOutput)
}

type InstanceConfig struct {
	// Arbitrary user comments about this `config`.
	Comments *string `pulumi:"comments"`
	// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
	Devices *InstanceConfigDevices `pulumi:"devices"`
	// Helpers enabled when booting to this Linode Config.
	Helpers    *InstanceConfigHelpers    `pulumi:"helpers"`
	Interfaces []InstanceConfigInterface `pulumi:"interfaces"`
	// A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
	Kernel *string `pulumi:"kernel"`
	// The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
	Label string `pulumi:"label"`
	// Defaults to the total RAM of the Linode
	//
	// * `interface` - (Optional) A list of network interfaces to be assigned to the Linode.
	MemoryLimit *int `pulumi:"memoryLimit"`
	// The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
	RootDevice *string `pulumi:"rootDevice"`
	// Defines the state of your Linode after booting. Defaults to `"default"`.
	RunLevel *string `pulumi:"runLevel"`
	// Controls the virtualization mode. Defaults to `"paravirt"`.
	VirtMode *string `pulumi:"virtMode"`
}

// InstanceConfigInput is an input type that accepts InstanceConfigArgs and InstanceConfigOutput values.
// You can construct a concrete instance of `InstanceConfigInput` via:
//
//	InstanceConfigArgs{...}
type InstanceConfigInput interface {
	pulumi.Input

	ToInstanceConfigOutput() InstanceConfigOutput
	ToInstanceConfigOutputWithContext(context.Context) InstanceConfigOutput
}

type InstanceConfigArgs struct {
	// Arbitrary user comments about this `config`.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
	Devices InstanceConfigDevicesPtrInput `pulumi:"devices"`
	// Helpers enabled when booting to this Linode Config.
	Helpers    InstanceConfigHelpersPtrInput     `pulumi:"helpers"`
	Interfaces InstanceConfigInterfaceArrayInput `pulumi:"interfaces"`
	// A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
	Kernel pulumi.StringPtrInput `pulumi:"kernel"`
	// The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
	Label pulumi.StringInput `pulumi:"label"`
	// Defaults to the total RAM of the Linode
	//
	// * `interface` - (Optional) A list of network interfaces to be assigned to the Linode.
	MemoryLimit pulumi.IntPtrInput `pulumi:"memoryLimit"`
	// The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
	RootDevice pulumi.StringPtrInput `pulumi:"rootDevice"`
	// Defines the state of your Linode after booting. Defaults to `"default"`.
	RunLevel pulumi.StringPtrInput `pulumi:"runLevel"`
	// Controls the virtualization mode. Defaults to `"paravirt"`.
	VirtMode pulumi.StringPtrInput `pulumi:"virtMode"`
}

func (InstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArgs) ToInstanceConfigOutput() InstanceConfigOutput {
	return i.ToInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput)
}

func (i InstanceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfig] {
	return pulumix.Output[InstanceConfig]{
		OutputState: i.ToInstanceConfigOutputWithContext(ctx).OutputState,
	}
}

// InstanceConfigArrayInput is an input type that accepts InstanceConfigArray and InstanceConfigArrayOutput values.
// You can construct a concrete instance of `InstanceConfigArrayInput` via:
//
//	InstanceConfigArray{ InstanceConfigArgs{...} }
type InstanceConfigArrayInput interface {
	pulumi.Input

	ToInstanceConfigArrayOutput() InstanceConfigArrayOutput
	ToInstanceConfigArrayOutputWithContext(context.Context) InstanceConfigArrayOutput
}

type InstanceConfigArray []InstanceConfigInput

func (InstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArray) ToInstanceConfigArrayOutput() InstanceConfigArrayOutput {
	return i.ToInstanceConfigArrayOutputWithContext(context.Background())
}

func (i InstanceConfigArray) ToInstanceConfigArrayOutputWithContext(ctx context.Context) InstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigArrayOutput)
}

func (i InstanceConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]InstanceConfig] {
	return pulumix.Output[[]InstanceConfig]{
		OutputState: i.ToInstanceConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigOutput) ToInstanceConfigOutput() InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfig] {
	return pulumix.Output[InstanceConfig]{
		OutputState: o.OutputState,
	}
}

// Arbitrary user comments about this `config`.
func (o InstanceConfigOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
func (o InstanceConfigOutput) Devices() InstanceConfigDevicesPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *InstanceConfigDevices { return v.Devices }).(InstanceConfigDevicesPtrOutput)
}

// Helpers enabled when booting to this Linode Config.
func (o InstanceConfigOutput) Helpers() InstanceConfigHelpersPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *InstanceConfigHelpers { return v.Helpers }).(InstanceConfigHelpersPtrOutput)
}

func (o InstanceConfigOutput) Interfaces() InstanceConfigInterfaceArrayOutput {
	return o.ApplyT(func(v InstanceConfig) []InstanceConfigInterface { return v.Interfaces }).(InstanceConfigInterfaceArrayOutput)
}

// A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
func (o InstanceConfigOutput) Kernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.Kernel }).(pulumi.StringPtrOutput)
}

// The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
func (o InstanceConfigOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceConfig) string { return v.Label }).(pulumi.StringOutput)
}

// Defaults to the total RAM of the Linode
//
// * `interface` - (Optional) A list of network interfaces to be assigned to the Linode.
func (o InstanceConfigOutput) MemoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *int { return v.MemoryLimit }).(pulumi.IntPtrOutput)
}

// The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
func (o InstanceConfigOutput) RootDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.RootDevice }).(pulumi.StringPtrOutput)
}

// Defines the state of your Linode after booting. Defaults to `"default"`.
func (o InstanceConfigOutput) RunLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.RunLevel }).(pulumi.StringPtrOutput)
}

// Controls the virtualization mode. Defaults to `"paravirt"`.
func (o InstanceConfigOutput) VirtMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfig) *string { return v.VirtMode }).(pulumi.StringPtrOutput)
}

type InstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigArrayOutput) ToInstanceConfigArrayOutput() InstanceConfigArrayOutput {
	return o
}

func (o InstanceConfigArrayOutput) ToInstanceConfigArrayOutputWithContext(ctx context.Context) InstanceConfigArrayOutput {
	return o
}

func (o InstanceConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InstanceConfig] {
	return pulumix.Output[[]InstanceConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigArrayOutput) Index(i pulumi.IntInput) InstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceConfig {
		return vs[0].([]InstanceConfig)[vs[1].(int)]
	}).(InstanceConfigOutput)
}

type InstanceConfigDevices struct {
	// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
	Sda *InstanceConfigDevicesSda `pulumi:"sda"`
	Sdb *InstanceConfigDevicesSdb `pulumi:"sdb"`
	Sdc *InstanceConfigDevicesSdc `pulumi:"sdc"`
	Sdd *InstanceConfigDevicesSdd `pulumi:"sdd"`
	Sde *InstanceConfigDevicesSde `pulumi:"sde"`
	Sdf *InstanceConfigDevicesSdf `pulumi:"sdf"`
	Sdg *InstanceConfigDevicesSdg `pulumi:"sdg"`
	Sdh *InstanceConfigDevicesSdh `pulumi:"sdh"`
}

// InstanceConfigDevicesInput is an input type that accepts InstanceConfigDevicesArgs and InstanceConfigDevicesOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesInput` via:
//
//	InstanceConfigDevicesArgs{...}
type InstanceConfigDevicesInput interface {
	pulumi.Input

	ToInstanceConfigDevicesOutput() InstanceConfigDevicesOutput
	ToInstanceConfigDevicesOutputWithContext(context.Context) InstanceConfigDevicesOutput
}

type InstanceConfigDevicesArgs struct {
	// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
	Sda InstanceConfigDevicesSdaPtrInput `pulumi:"sda"`
	Sdb InstanceConfigDevicesSdbPtrInput `pulumi:"sdb"`
	Sdc InstanceConfigDevicesSdcPtrInput `pulumi:"sdc"`
	Sdd InstanceConfigDevicesSddPtrInput `pulumi:"sdd"`
	Sde InstanceConfigDevicesSdePtrInput `pulumi:"sde"`
	Sdf InstanceConfigDevicesSdfPtrInput `pulumi:"sdf"`
	Sdg InstanceConfigDevicesSdgPtrInput `pulumi:"sdg"`
	Sdh InstanceConfigDevicesSdhPtrInput `pulumi:"sdh"`
}

func (InstanceConfigDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevices)(nil)).Elem()
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesOutput() InstanceConfigDevicesOutput {
	return i.ToInstanceConfigDevicesOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesOutputWithContext(ctx context.Context) InstanceConfigDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesOutput)
}

func (i InstanceConfigDevicesArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevices] {
	return pulumix.Output[InstanceConfigDevices]{
		OutputState: i.ToInstanceConfigDevicesOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return i.ToInstanceConfigDevicesPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesArgs) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesOutput).ToInstanceConfigDevicesPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesPtrInput is an input type that accepts InstanceConfigDevicesArgs, InstanceConfigDevicesPtr and InstanceConfigDevicesPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesPtrInput` via:
//
//	        InstanceConfigDevicesArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput
	ToInstanceConfigDevicesPtrOutputWithContext(context.Context) InstanceConfigDevicesPtrOutput
}

type instanceConfigDevicesPtrType InstanceConfigDevicesArgs

func InstanceConfigDevicesPtr(v *InstanceConfigDevicesArgs) InstanceConfigDevicesPtrInput {
	return (*instanceConfigDevicesPtrType)(v)
}

func (*instanceConfigDevicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevices)(nil)).Elem()
}

func (i *instanceConfigDevicesPtrType) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return i.ToInstanceConfigDevicesPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesPtrType) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesPtrOutput)
}

func (i *instanceConfigDevicesPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevices] {
	return pulumix.Output[*InstanceConfigDevices]{
		OutputState: i.ToInstanceConfigDevicesPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevices)(nil)).Elem()
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesOutput() InstanceConfigDevicesOutput {
	return o
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesOutputWithContext(ctx context.Context) InstanceConfigDevicesOutput {
	return o
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return o.ToInstanceConfigDevicesPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesOutput) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevices) *InstanceConfigDevices {
		return &v
	}).(InstanceConfigDevicesPtrOutput)
}

func (o InstanceConfigDevicesOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevices] {
	return pulumix.Output[InstanceConfigDevices]{
		OutputState: o.OutputState,
	}
}

// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
func (o InstanceConfigDevicesOutput) Sda() InstanceConfigDevicesSdaPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSda { return v.Sda }).(InstanceConfigDevicesSdaPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdb() InstanceConfigDevicesSdbPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdb { return v.Sdb }).(InstanceConfigDevicesSdbPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdc() InstanceConfigDevicesSdcPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdc { return v.Sdc }).(InstanceConfigDevicesSdcPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdd() InstanceConfigDevicesSddPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdd { return v.Sdd }).(InstanceConfigDevicesSddPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sde() InstanceConfigDevicesSdePtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSde { return v.Sde }).(InstanceConfigDevicesSdePtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdf() InstanceConfigDevicesSdfPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdf { return v.Sdf }).(InstanceConfigDevicesSdfPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdg() InstanceConfigDevicesSdgPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdg { return v.Sdg }).(InstanceConfigDevicesSdgPtrOutput)
}

func (o InstanceConfigDevicesOutput) Sdh() InstanceConfigDevicesSdhPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevices) *InstanceConfigDevicesSdh { return v.Sdh }).(InstanceConfigDevicesSdhPtrOutput)
}

type InstanceConfigDevicesPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevices)(nil)).Elem()
}

func (o InstanceConfigDevicesPtrOutput) ToInstanceConfigDevicesPtrOutput() InstanceConfigDevicesPtrOutput {
	return o
}

func (o InstanceConfigDevicesPtrOutput) ToInstanceConfigDevicesPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesPtrOutput {
	return o
}

func (o InstanceConfigDevicesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevices] {
	return pulumix.Output[*InstanceConfigDevices]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesPtrOutput) Elem() InstanceConfigDevicesOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) InstanceConfigDevices {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevices
		return ret
	}).(InstanceConfigDevicesOutput)
}

// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
func (o InstanceConfigDevicesPtrOutput) Sda() InstanceConfigDevicesSdaPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSda {
		if v == nil {
			return nil
		}
		return v.Sda
	}).(InstanceConfigDevicesSdaPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdb() InstanceConfigDevicesSdbPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdb {
		if v == nil {
			return nil
		}
		return v.Sdb
	}).(InstanceConfigDevicesSdbPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdc() InstanceConfigDevicesSdcPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdc {
		if v == nil {
			return nil
		}
		return v.Sdc
	}).(InstanceConfigDevicesSdcPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdd() InstanceConfigDevicesSddPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdd {
		if v == nil {
			return nil
		}
		return v.Sdd
	}).(InstanceConfigDevicesSddPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sde() InstanceConfigDevicesSdePtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSde {
		if v == nil {
			return nil
		}
		return v.Sde
	}).(InstanceConfigDevicesSdePtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdf() InstanceConfigDevicesSdfPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdf {
		if v == nil {
			return nil
		}
		return v.Sdf
	}).(InstanceConfigDevicesSdfPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdg() InstanceConfigDevicesSdgPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdg {
		if v == nil {
			return nil
		}
		return v.Sdg
	}).(InstanceConfigDevicesSdgPtrOutput)
}

func (o InstanceConfigDevicesPtrOutput) Sdh() InstanceConfigDevicesSdhPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevices) *InstanceConfigDevicesSdh {
		if v == nil {
			return nil
		}
		return v.Sdh
	}).(InstanceConfigDevicesSdhPtrOutput)
}

type InstanceConfigDevicesSda struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdaInput is an input type that accepts InstanceConfigDevicesSdaArgs and InstanceConfigDevicesSdaOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdaInput` via:
//
//	InstanceConfigDevicesSdaArgs{...}
type InstanceConfigDevicesSdaInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdaOutput() InstanceConfigDevicesSdaOutput
	ToInstanceConfigDevicesSdaOutputWithContext(context.Context) InstanceConfigDevicesSdaOutput
}

type InstanceConfigDevicesSdaArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSda)(nil)).Elem()
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaOutput() InstanceConfigDevicesSdaOutput {
	return i.ToInstanceConfigDevicesSdaOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdaOutput)
}

func (i InstanceConfigDevicesSdaArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSda] {
	return pulumix.Output[InstanceConfigDevicesSda]{
		OutputState: i.ToInstanceConfigDevicesSdaOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return i.ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdaArgs) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdaOutput).ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdaPtrInput is an input type that accepts InstanceConfigDevicesSdaArgs, InstanceConfigDevicesSdaPtr and InstanceConfigDevicesSdaPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdaPtrInput` via:
//
//	        InstanceConfigDevicesSdaArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdaPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput
	ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Context) InstanceConfigDevicesSdaPtrOutput
}

type instanceConfigDevicesSdaPtrType InstanceConfigDevicesSdaArgs

func InstanceConfigDevicesSdaPtr(v *InstanceConfigDevicesSdaArgs) InstanceConfigDevicesSdaPtrInput {
	return (*instanceConfigDevicesSdaPtrType)(v)
}

func (*instanceConfigDevicesSdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSda)(nil)).Elem()
}

func (i *instanceConfigDevicesSdaPtrType) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return i.ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdaPtrType) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdaPtrOutput)
}

func (i *instanceConfigDevicesSdaPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSda] {
	return pulumix.Output[*InstanceConfigDevicesSda]{
		OutputState: i.ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdaOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSda)(nil)).Elem()
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaOutput() InstanceConfigDevicesSdaOutput {
	return o
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaOutput {
	return o
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return o.ToInstanceConfigDevicesSdaPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdaOutput) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSda) *InstanceConfigDevicesSda {
		return &v
	}).(InstanceConfigDevicesSdaPtrOutput)
}

func (o InstanceConfigDevicesSdaOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSda] {
	return pulumix.Output[InstanceConfigDevicesSda]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdaOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSda) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdaOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSda) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdaOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSda) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdaPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSda)(nil)).Elem()
}

func (o InstanceConfigDevicesSdaPtrOutput) ToInstanceConfigDevicesSdaPtrOutput() InstanceConfigDevicesSdaPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdaPtrOutput) ToInstanceConfigDevicesSdaPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdaPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSda] {
	return pulumix.Output[*InstanceConfigDevicesSda]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdaPtrOutput) Elem() InstanceConfigDevicesSdaOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) InstanceConfigDevicesSda {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSda
		return ret
	}).(InstanceConfigDevicesSdaOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdaPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdaPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdaPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSda) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdb struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdbInput is an input type that accepts InstanceConfigDevicesSdbArgs and InstanceConfigDevicesSdbOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdbInput` via:
//
//	InstanceConfigDevicesSdbArgs{...}
type InstanceConfigDevicesSdbInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdbOutput() InstanceConfigDevicesSdbOutput
	ToInstanceConfigDevicesSdbOutputWithContext(context.Context) InstanceConfigDevicesSdbOutput
}

type InstanceConfigDevicesSdbArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdb)(nil)).Elem()
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbOutput() InstanceConfigDevicesSdbOutput {
	return i.ToInstanceConfigDevicesSdbOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdbOutput)
}

func (i InstanceConfigDevicesSdbArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdb] {
	return pulumix.Output[InstanceConfigDevicesSdb]{
		OutputState: i.ToInstanceConfigDevicesSdbOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return i.ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdbArgs) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdbOutput).ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdbPtrInput is an input type that accepts InstanceConfigDevicesSdbArgs, InstanceConfigDevicesSdbPtr and InstanceConfigDevicesSdbPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdbPtrInput` via:
//
//	        InstanceConfigDevicesSdbArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdbPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput
	ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Context) InstanceConfigDevicesSdbPtrOutput
}

type instanceConfigDevicesSdbPtrType InstanceConfigDevicesSdbArgs

func InstanceConfigDevicesSdbPtr(v *InstanceConfigDevicesSdbArgs) InstanceConfigDevicesSdbPtrInput {
	return (*instanceConfigDevicesSdbPtrType)(v)
}

func (*instanceConfigDevicesSdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdb)(nil)).Elem()
}

func (i *instanceConfigDevicesSdbPtrType) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return i.ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdbPtrType) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdbPtrOutput)
}

func (i *instanceConfigDevicesSdbPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdb] {
	return pulumix.Output[*InstanceConfigDevicesSdb]{
		OutputState: i.ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdbOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdb)(nil)).Elem()
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbOutput() InstanceConfigDevicesSdbOutput {
	return o
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbOutput {
	return o
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return o.ToInstanceConfigDevicesSdbPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdbOutput) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdb) *InstanceConfigDevicesSdb {
		return &v
	}).(InstanceConfigDevicesSdbPtrOutput)
}

func (o InstanceConfigDevicesSdbOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdb] {
	return pulumix.Output[InstanceConfigDevicesSdb]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdbOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdb) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdbOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdb) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdbOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdb) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdbPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdb)(nil)).Elem()
}

func (o InstanceConfigDevicesSdbPtrOutput) ToInstanceConfigDevicesSdbPtrOutput() InstanceConfigDevicesSdbPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdbPtrOutput) ToInstanceConfigDevicesSdbPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdbPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdbPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdb] {
	return pulumix.Output[*InstanceConfigDevicesSdb]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdbPtrOutput) Elem() InstanceConfigDevicesSdbOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) InstanceConfigDevicesSdb {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdb
		return ret
	}).(InstanceConfigDevicesSdbOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdbPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdbPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdbPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdb) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdc struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdcInput is an input type that accepts InstanceConfigDevicesSdcArgs and InstanceConfigDevicesSdcOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdcInput` via:
//
//	InstanceConfigDevicesSdcArgs{...}
type InstanceConfigDevicesSdcInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdcOutput() InstanceConfigDevicesSdcOutput
	ToInstanceConfigDevicesSdcOutputWithContext(context.Context) InstanceConfigDevicesSdcOutput
}

type InstanceConfigDevicesSdcArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdc)(nil)).Elem()
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcOutput() InstanceConfigDevicesSdcOutput {
	return i.ToInstanceConfigDevicesSdcOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdcOutput)
}

func (i InstanceConfigDevicesSdcArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdc] {
	return pulumix.Output[InstanceConfigDevicesSdc]{
		OutputState: i.ToInstanceConfigDevicesSdcOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return i.ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdcArgs) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdcOutput).ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdcPtrInput is an input type that accepts InstanceConfigDevicesSdcArgs, InstanceConfigDevicesSdcPtr and InstanceConfigDevicesSdcPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdcPtrInput` via:
//
//	        InstanceConfigDevicesSdcArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdcPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput
	ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Context) InstanceConfigDevicesSdcPtrOutput
}

type instanceConfigDevicesSdcPtrType InstanceConfigDevicesSdcArgs

func InstanceConfigDevicesSdcPtr(v *InstanceConfigDevicesSdcArgs) InstanceConfigDevicesSdcPtrInput {
	return (*instanceConfigDevicesSdcPtrType)(v)
}

func (*instanceConfigDevicesSdcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdc)(nil)).Elem()
}

func (i *instanceConfigDevicesSdcPtrType) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return i.ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdcPtrType) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdcPtrOutput)
}

func (i *instanceConfigDevicesSdcPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdc] {
	return pulumix.Output[*InstanceConfigDevicesSdc]{
		OutputState: i.ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdcOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdc)(nil)).Elem()
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcOutput() InstanceConfigDevicesSdcOutput {
	return o
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcOutput {
	return o
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return o.ToInstanceConfigDevicesSdcPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdcOutput) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdc) *InstanceConfigDevicesSdc {
		return &v
	}).(InstanceConfigDevicesSdcPtrOutput)
}

func (o InstanceConfigDevicesSdcOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdc] {
	return pulumix.Output[InstanceConfigDevicesSdc]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdcOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdc) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdcOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdc) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdcOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdc) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdcPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdc)(nil)).Elem()
}

func (o InstanceConfigDevicesSdcPtrOutput) ToInstanceConfigDevicesSdcPtrOutput() InstanceConfigDevicesSdcPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdcPtrOutput) ToInstanceConfigDevicesSdcPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdcPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdcPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdc] {
	return pulumix.Output[*InstanceConfigDevicesSdc]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdcPtrOutput) Elem() InstanceConfigDevicesSdcOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) InstanceConfigDevicesSdc {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdc
		return ret
	}).(InstanceConfigDevicesSdcOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdcPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdcPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdcPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdc) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdd struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSddInput is an input type that accepts InstanceConfigDevicesSddArgs and InstanceConfigDevicesSddOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSddInput` via:
//
//	InstanceConfigDevicesSddArgs{...}
type InstanceConfigDevicesSddInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSddOutput() InstanceConfigDevicesSddOutput
	ToInstanceConfigDevicesSddOutputWithContext(context.Context) InstanceConfigDevicesSddOutput
}

type InstanceConfigDevicesSddArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSddArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdd)(nil)).Elem()
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddOutput() InstanceConfigDevicesSddOutput {
	return i.ToInstanceConfigDevicesSddOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddOutputWithContext(ctx context.Context) InstanceConfigDevicesSddOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSddOutput)
}

func (i InstanceConfigDevicesSddArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdd] {
	return pulumix.Output[InstanceConfigDevicesSdd]{
		OutputState: i.ToInstanceConfigDevicesSddOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return i.ToInstanceConfigDevicesSddPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSddArgs) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSddOutput).ToInstanceConfigDevicesSddPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSddPtrInput is an input type that accepts InstanceConfigDevicesSddArgs, InstanceConfigDevicesSddPtr and InstanceConfigDevicesSddPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSddPtrInput` via:
//
//	        InstanceConfigDevicesSddArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSddPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput
	ToInstanceConfigDevicesSddPtrOutputWithContext(context.Context) InstanceConfigDevicesSddPtrOutput
}

type instanceConfigDevicesSddPtrType InstanceConfigDevicesSddArgs

func InstanceConfigDevicesSddPtr(v *InstanceConfigDevicesSddArgs) InstanceConfigDevicesSddPtrInput {
	return (*instanceConfigDevicesSddPtrType)(v)
}

func (*instanceConfigDevicesSddPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdd)(nil)).Elem()
}

func (i *instanceConfigDevicesSddPtrType) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return i.ToInstanceConfigDevicesSddPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSddPtrType) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSddPtrOutput)
}

func (i *instanceConfigDevicesSddPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdd] {
	return pulumix.Output[*InstanceConfigDevicesSdd]{
		OutputState: i.ToInstanceConfigDevicesSddPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSddOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSddOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdd)(nil)).Elem()
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddOutput() InstanceConfigDevicesSddOutput {
	return o
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddOutputWithContext(ctx context.Context) InstanceConfigDevicesSddOutput {
	return o
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return o.ToInstanceConfigDevicesSddPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSddOutput) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdd) *InstanceConfigDevicesSdd {
		return &v
	}).(InstanceConfigDevicesSddPtrOutput)
}

func (o InstanceConfigDevicesSddOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdd] {
	return pulumix.Output[InstanceConfigDevicesSdd]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSddOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdd) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSddOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdd) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSddOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdd) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSddPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSddPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdd)(nil)).Elem()
}

func (o InstanceConfigDevicesSddPtrOutput) ToInstanceConfigDevicesSddPtrOutput() InstanceConfigDevicesSddPtrOutput {
	return o
}

func (o InstanceConfigDevicesSddPtrOutput) ToInstanceConfigDevicesSddPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSddPtrOutput {
	return o
}

func (o InstanceConfigDevicesSddPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdd] {
	return pulumix.Output[*InstanceConfigDevicesSdd]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSddPtrOutput) Elem() InstanceConfigDevicesSddOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) InstanceConfigDevicesSdd {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdd
		return ret
	}).(InstanceConfigDevicesSddOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSddPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSddPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSddPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdd) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSde struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdeInput is an input type that accepts InstanceConfigDevicesSdeArgs and InstanceConfigDevicesSdeOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdeInput` via:
//
//	InstanceConfigDevicesSdeArgs{...}
type InstanceConfigDevicesSdeInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdeOutput() InstanceConfigDevicesSdeOutput
	ToInstanceConfigDevicesSdeOutputWithContext(context.Context) InstanceConfigDevicesSdeOutput
}

type InstanceConfigDevicesSdeArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSde)(nil)).Elem()
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdeOutput() InstanceConfigDevicesSdeOutput {
	return i.ToInstanceConfigDevicesSdeOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdeOutputWithContext(ctx context.Context) InstanceConfigDevicesSdeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdeOutput)
}

func (i InstanceConfigDevicesSdeArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSde] {
	return pulumix.Output[InstanceConfigDevicesSde]{
		OutputState: i.ToInstanceConfigDevicesSdeOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return i.ToInstanceConfigDevicesSdePtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdeArgs) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdeOutput).ToInstanceConfigDevicesSdePtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdePtrInput is an input type that accepts InstanceConfigDevicesSdeArgs, InstanceConfigDevicesSdePtr and InstanceConfigDevicesSdePtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdePtrInput` via:
//
//	        InstanceConfigDevicesSdeArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdePtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput
	ToInstanceConfigDevicesSdePtrOutputWithContext(context.Context) InstanceConfigDevicesSdePtrOutput
}

type instanceConfigDevicesSdePtrType InstanceConfigDevicesSdeArgs

func InstanceConfigDevicesSdePtr(v *InstanceConfigDevicesSdeArgs) InstanceConfigDevicesSdePtrInput {
	return (*instanceConfigDevicesSdePtrType)(v)
}

func (*instanceConfigDevicesSdePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSde)(nil)).Elem()
}

func (i *instanceConfigDevicesSdePtrType) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return i.ToInstanceConfigDevicesSdePtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdePtrType) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdePtrOutput)
}

func (i *instanceConfigDevicesSdePtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSde] {
	return pulumix.Output[*InstanceConfigDevicesSde]{
		OutputState: i.ToInstanceConfigDevicesSdePtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdeOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSde)(nil)).Elem()
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdeOutput() InstanceConfigDevicesSdeOutput {
	return o
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdeOutputWithContext(ctx context.Context) InstanceConfigDevicesSdeOutput {
	return o
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return o.ToInstanceConfigDevicesSdePtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdeOutput) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSde) *InstanceConfigDevicesSde {
		return &v
	}).(InstanceConfigDevicesSdePtrOutput)
}

func (o InstanceConfigDevicesSdeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSde] {
	return pulumix.Output[InstanceConfigDevicesSde]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdeOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSde) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdeOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSde) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdeOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSde) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdePtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSde)(nil)).Elem()
}

func (o InstanceConfigDevicesSdePtrOutput) ToInstanceConfigDevicesSdePtrOutput() InstanceConfigDevicesSdePtrOutput {
	return o
}

func (o InstanceConfigDevicesSdePtrOutput) ToInstanceConfigDevicesSdePtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdePtrOutput {
	return o
}

func (o InstanceConfigDevicesSdePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSde] {
	return pulumix.Output[*InstanceConfigDevicesSde]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdePtrOutput) Elem() InstanceConfigDevicesSdeOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) InstanceConfigDevicesSde {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSde
		return ret
	}).(InstanceConfigDevicesSdeOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdePtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdePtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdePtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSde) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdf struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdfInput is an input type that accepts InstanceConfigDevicesSdfArgs and InstanceConfigDevicesSdfOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdfInput` via:
//
//	InstanceConfigDevicesSdfArgs{...}
type InstanceConfigDevicesSdfInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdfOutput() InstanceConfigDevicesSdfOutput
	ToInstanceConfigDevicesSdfOutputWithContext(context.Context) InstanceConfigDevicesSdfOutput
}

type InstanceConfigDevicesSdfArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdf)(nil)).Elem()
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfOutput() InstanceConfigDevicesSdfOutput {
	return i.ToInstanceConfigDevicesSdfOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdfOutput)
}

func (i InstanceConfigDevicesSdfArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdf] {
	return pulumix.Output[InstanceConfigDevicesSdf]{
		OutputState: i.ToInstanceConfigDevicesSdfOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return i.ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdfArgs) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdfOutput).ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdfPtrInput is an input type that accepts InstanceConfigDevicesSdfArgs, InstanceConfigDevicesSdfPtr and InstanceConfigDevicesSdfPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdfPtrInput` via:
//
//	        InstanceConfigDevicesSdfArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdfPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput
	ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Context) InstanceConfigDevicesSdfPtrOutput
}

type instanceConfigDevicesSdfPtrType InstanceConfigDevicesSdfArgs

func InstanceConfigDevicesSdfPtr(v *InstanceConfigDevicesSdfArgs) InstanceConfigDevicesSdfPtrInput {
	return (*instanceConfigDevicesSdfPtrType)(v)
}

func (*instanceConfigDevicesSdfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdf)(nil)).Elem()
}

func (i *instanceConfigDevicesSdfPtrType) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return i.ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdfPtrType) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdfPtrOutput)
}

func (i *instanceConfigDevicesSdfPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdf] {
	return pulumix.Output[*InstanceConfigDevicesSdf]{
		OutputState: i.ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdfOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdf)(nil)).Elem()
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfOutput() InstanceConfigDevicesSdfOutput {
	return o
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfOutput {
	return o
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return o.ToInstanceConfigDevicesSdfPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdfOutput) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdf) *InstanceConfigDevicesSdf {
		return &v
	}).(InstanceConfigDevicesSdfPtrOutput)
}

func (o InstanceConfigDevicesSdfOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdf] {
	return pulumix.Output[InstanceConfigDevicesSdf]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdfOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdf) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdfOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdf) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdfOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdf) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdfPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdf)(nil)).Elem()
}

func (o InstanceConfigDevicesSdfPtrOutput) ToInstanceConfigDevicesSdfPtrOutput() InstanceConfigDevicesSdfPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdfPtrOutput) ToInstanceConfigDevicesSdfPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdfPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdfPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdf] {
	return pulumix.Output[*InstanceConfigDevicesSdf]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdfPtrOutput) Elem() InstanceConfigDevicesSdfOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) InstanceConfigDevicesSdf {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdf
		return ret
	}).(InstanceConfigDevicesSdfOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdfPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdfPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdfPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdf) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdg struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdgInput is an input type that accepts InstanceConfigDevicesSdgArgs and InstanceConfigDevicesSdgOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdgInput` via:
//
//	InstanceConfigDevicesSdgArgs{...}
type InstanceConfigDevicesSdgInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdgOutput() InstanceConfigDevicesSdgOutput
	ToInstanceConfigDevicesSdgOutputWithContext(context.Context) InstanceConfigDevicesSdgOutput
}

type InstanceConfigDevicesSdgArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdg)(nil)).Elem()
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgOutput() InstanceConfigDevicesSdgOutput {
	return i.ToInstanceConfigDevicesSdgOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdgOutput)
}

func (i InstanceConfigDevicesSdgArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdg] {
	return pulumix.Output[InstanceConfigDevicesSdg]{
		OutputState: i.ToInstanceConfigDevicesSdgOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return i.ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdgArgs) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdgOutput).ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdgPtrInput is an input type that accepts InstanceConfigDevicesSdgArgs, InstanceConfigDevicesSdgPtr and InstanceConfigDevicesSdgPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdgPtrInput` via:
//
//	        InstanceConfigDevicesSdgArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdgPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput
	ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Context) InstanceConfigDevicesSdgPtrOutput
}

type instanceConfigDevicesSdgPtrType InstanceConfigDevicesSdgArgs

func InstanceConfigDevicesSdgPtr(v *InstanceConfigDevicesSdgArgs) InstanceConfigDevicesSdgPtrInput {
	return (*instanceConfigDevicesSdgPtrType)(v)
}

func (*instanceConfigDevicesSdgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdg)(nil)).Elem()
}

func (i *instanceConfigDevicesSdgPtrType) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return i.ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdgPtrType) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdgPtrOutput)
}

func (i *instanceConfigDevicesSdgPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdg] {
	return pulumix.Output[*InstanceConfigDevicesSdg]{
		OutputState: i.ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdgOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdg)(nil)).Elem()
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgOutput() InstanceConfigDevicesSdgOutput {
	return o
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgOutput {
	return o
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return o.ToInstanceConfigDevicesSdgPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdgOutput) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdg) *InstanceConfigDevicesSdg {
		return &v
	}).(InstanceConfigDevicesSdgPtrOutput)
}

func (o InstanceConfigDevicesSdgOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdg] {
	return pulumix.Output[InstanceConfigDevicesSdg]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdgOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdg) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdgOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdg) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdgOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdg) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdgPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdg)(nil)).Elem()
}

func (o InstanceConfigDevicesSdgPtrOutput) ToInstanceConfigDevicesSdgPtrOutput() InstanceConfigDevicesSdgPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdgPtrOutput) ToInstanceConfigDevicesSdgPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdgPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdgPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdg] {
	return pulumix.Output[*InstanceConfigDevicesSdg]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdgPtrOutput) Elem() InstanceConfigDevicesSdgOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) InstanceConfigDevicesSdg {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdg
		return ret
	}).(InstanceConfigDevicesSdgOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdgPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdgPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdgPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdg) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdh struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId *int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// InstanceConfigDevicesSdhInput is an input type that accepts InstanceConfigDevicesSdhArgs and InstanceConfigDevicesSdhOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdhInput` via:
//
//	InstanceConfigDevicesSdhArgs{...}
type InstanceConfigDevicesSdhInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdhOutput() InstanceConfigDevicesSdhOutput
	ToInstanceConfigDevicesSdhOutputWithContext(context.Context) InstanceConfigDevicesSdhOutput
}

type InstanceConfigDevicesSdhArgs struct {
	// The Disk ID of the associated `diskLabel`, if used.
	DiskId pulumi.IntPtrInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (InstanceConfigDevicesSdhArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdh)(nil)).Elem()
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhOutput() InstanceConfigDevicesSdhOutput {
	return i.ToInstanceConfigDevicesSdhOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdhOutput)
}

func (i InstanceConfigDevicesSdhArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdh] {
	return pulumix.Output[InstanceConfigDevicesSdh]{
		OutputState: i.ToInstanceConfigDevicesSdhOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return i.ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Background())
}

func (i InstanceConfigDevicesSdhArgs) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdhOutput).ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx)
}

// InstanceConfigDevicesSdhPtrInput is an input type that accepts InstanceConfigDevicesSdhArgs, InstanceConfigDevicesSdhPtr and InstanceConfigDevicesSdhPtrOutput values.
// You can construct a concrete instance of `InstanceConfigDevicesSdhPtrInput` via:
//
//	        InstanceConfigDevicesSdhArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigDevicesSdhPtrInput interface {
	pulumi.Input

	ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput
	ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Context) InstanceConfigDevicesSdhPtrOutput
}

type instanceConfigDevicesSdhPtrType InstanceConfigDevicesSdhArgs

func InstanceConfigDevicesSdhPtr(v *InstanceConfigDevicesSdhArgs) InstanceConfigDevicesSdhPtrInput {
	return (*instanceConfigDevicesSdhPtrType)(v)
}

func (*instanceConfigDevicesSdhPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdh)(nil)).Elem()
}

func (i *instanceConfigDevicesSdhPtrType) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return i.ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Background())
}

func (i *instanceConfigDevicesSdhPtrType) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigDevicesSdhPtrOutput)
}

func (i *instanceConfigDevicesSdhPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdh] {
	return pulumix.Output[*InstanceConfigDevicesSdh]{
		OutputState: i.ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigDevicesSdhOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdhOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigDevicesSdh)(nil)).Elem()
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhOutput() InstanceConfigDevicesSdhOutput {
	return o
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhOutput {
	return o
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return o.ToInstanceConfigDevicesSdhPtrOutputWithContext(context.Background())
}

func (o InstanceConfigDevicesSdhOutput) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigDevicesSdh) *InstanceConfigDevicesSdh {
		return &v
	}).(InstanceConfigDevicesSdhPtrOutput)
}

func (o InstanceConfigDevicesSdhOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigDevicesSdh] {
	return pulumix.Output[InstanceConfigDevicesSdh]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdhOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdh) *int { return v.DiskId }).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdhOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdh) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdhOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceConfigDevicesSdh) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type InstanceConfigDevicesSdhPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigDevicesSdhPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigDevicesSdh)(nil)).Elem()
}

func (o InstanceConfigDevicesSdhPtrOutput) ToInstanceConfigDevicesSdhPtrOutput() InstanceConfigDevicesSdhPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdhPtrOutput) ToInstanceConfigDevicesSdhPtrOutputWithContext(ctx context.Context) InstanceConfigDevicesSdhPtrOutput {
	return o
}

func (o InstanceConfigDevicesSdhPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigDevicesSdh] {
	return pulumix.Output[*InstanceConfigDevicesSdh]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigDevicesSdhPtrOutput) Elem() InstanceConfigDevicesSdhOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) InstanceConfigDevicesSdh {
		if v != nil {
			return *v
		}
		var ret InstanceConfigDevicesSdh
		return ret
	}).(InstanceConfigDevicesSdhOutput)
}

// The Disk ID of the associated `diskLabel`, if used.
func (o InstanceConfigDevicesSdhPtrOutput) DiskId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) *int {
		if v == nil {
			return nil
		}
		return v.DiskId
	}).(pulumi.IntPtrOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o InstanceConfigDevicesSdhPtrOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) *string {
		if v == nil {
			return nil
		}
		return v.DiskLabel
	}).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o InstanceConfigDevicesSdhPtrOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceConfigDevicesSdh) *int {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.IntPtrOutput)
}

type InstanceConfigHelpers struct {
	DevtmpfsAutomount *bool `pulumi:"devtmpfsAutomount"`
	// Controls the behavior of the Linode Config's Distribution Helper setting.
	Distro *bool `pulumi:"distro"`
	// Creates a modules dependency file for the Kernel you run.
	ModulesDep *bool `pulumi:"modulesDep"`
	// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
	Network *bool `pulumi:"network"`
	// Disables updatedb cron job to avoid disk thrashing.
	UpdatedbDisabled *bool `pulumi:"updatedbDisabled"`
}

// InstanceConfigHelpersInput is an input type that accepts InstanceConfigHelpersArgs and InstanceConfigHelpersOutput values.
// You can construct a concrete instance of `InstanceConfigHelpersInput` via:
//
//	InstanceConfigHelpersArgs{...}
type InstanceConfigHelpersInput interface {
	pulumi.Input

	ToInstanceConfigHelpersOutput() InstanceConfigHelpersOutput
	ToInstanceConfigHelpersOutputWithContext(context.Context) InstanceConfigHelpersOutput
}

type InstanceConfigHelpersArgs struct {
	DevtmpfsAutomount pulumi.BoolPtrInput `pulumi:"devtmpfsAutomount"`
	// Controls the behavior of the Linode Config's Distribution Helper setting.
	Distro pulumi.BoolPtrInput `pulumi:"distro"`
	// Creates a modules dependency file for the Kernel you run.
	ModulesDep pulumi.BoolPtrInput `pulumi:"modulesDep"`
	// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
	Network pulumi.BoolPtrInput `pulumi:"network"`
	// Disables updatedb cron job to avoid disk thrashing.
	UpdatedbDisabled pulumi.BoolPtrInput `pulumi:"updatedbDisabled"`
}

func (InstanceConfigHelpersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigHelpers)(nil)).Elem()
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersOutput() InstanceConfigHelpersOutput {
	return i.ToInstanceConfigHelpersOutputWithContext(context.Background())
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersOutputWithContext(ctx context.Context) InstanceConfigHelpersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigHelpersOutput)
}

func (i InstanceConfigHelpersArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigHelpers] {
	return pulumix.Output[InstanceConfigHelpers]{
		OutputState: i.ToInstanceConfigHelpersOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return i.ToInstanceConfigHelpersPtrOutputWithContext(context.Background())
}

func (i InstanceConfigHelpersArgs) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigHelpersOutput).ToInstanceConfigHelpersPtrOutputWithContext(ctx)
}

// InstanceConfigHelpersPtrInput is an input type that accepts InstanceConfigHelpersArgs, InstanceConfigHelpersPtr and InstanceConfigHelpersPtrOutput values.
// You can construct a concrete instance of `InstanceConfigHelpersPtrInput` via:
//
//	        InstanceConfigHelpersArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigHelpersPtrInput interface {
	pulumi.Input

	ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput
	ToInstanceConfigHelpersPtrOutputWithContext(context.Context) InstanceConfigHelpersPtrOutput
}

type instanceConfigHelpersPtrType InstanceConfigHelpersArgs

func InstanceConfigHelpersPtr(v *InstanceConfigHelpersArgs) InstanceConfigHelpersPtrInput {
	return (*instanceConfigHelpersPtrType)(v)
}

func (*instanceConfigHelpersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigHelpers)(nil)).Elem()
}

func (i *instanceConfigHelpersPtrType) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return i.ToInstanceConfigHelpersPtrOutputWithContext(context.Background())
}

func (i *instanceConfigHelpersPtrType) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigHelpersPtrOutput)
}

func (i *instanceConfigHelpersPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigHelpers] {
	return pulumix.Output[*InstanceConfigHelpers]{
		OutputState: i.ToInstanceConfigHelpersPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigHelpersOutput struct{ *pulumi.OutputState }

func (InstanceConfigHelpersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigHelpers)(nil)).Elem()
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersOutput() InstanceConfigHelpersOutput {
	return o
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersOutputWithContext(ctx context.Context) InstanceConfigHelpersOutput {
	return o
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return o.ToInstanceConfigHelpersPtrOutputWithContext(context.Background())
}

func (o InstanceConfigHelpersOutput) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfigHelpers) *InstanceConfigHelpers {
		return &v
	}).(InstanceConfigHelpersPtrOutput)
}

func (o InstanceConfigHelpersOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigHelpers] {
	return pulumix.Output[InstanceConfigHelpers]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigHelpersOutput) DevtmpfsAutomount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.DevtmpfsAutomount }).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Distribution Helper setting.
func (o InstanceConfigHelpersOutput) Distro() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.Distro }).(pulumi.BoolPtrOutput)
}

// Creates a modules dependency file for the Kernel you run.
func (o InstanceConfigHelpersOutput) ModulesDep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.ModulesDep }).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
func (o InstanceConfigHelpersOutput) Network() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.Network }).(pulumi.BoolPtrOutput)
}

// Disables updatedb cron job to avoid disk thrashing.
func (o InstanceConfigHelpersOutput) UpdatedbDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceConfigHelpers) *bool { return v.UpdatedbDisabled }).(pulumi.BoolPtrOutput)
}

type InstanceConfigHelpersPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigHelpersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfigHelpers)(nil)).Elem()
}

func (o InstanceConfigHelpersPtrOutput) ToInstanceConfigHelpersPtrOutput() InstanceConfigHelpersPtrOutput {
	return o
}

func (o InstanceConfigHelpersPtrOutput) ToInstanceConfigHelpersPtrOutputWithContext(ctx context.Context) InstanceConfigHelpersPtrOutput {
	return o
}

func (o InstanceConfigHelpersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfigHelpers] {
	return pulumix.Output[*InstanceConfigHelpers]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigHelpersPtrOutput) Elem() InstanceConfigHelpersOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) InstanceConfigHelpers {
		if v != nil {
			return *v
		}
		var ret InstanceConfigHelpers
		return ret
	}).(InstanceConfigHelpersOutput)
}

func (o InstanceConfigHelpersPtrOutput) DevtmpfsAutomount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.DevtmpfsAutomount
	}).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Distribution Helper setting.
func (o InstanceConfigHelpersPtrOutput) Distro() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.Distro
	}).(pulumi.BoolPtrOutput)
}

// Creates a modules dependency file for the Kernel you run.
func (o InstanceConfigHelpersPtrOutput) ModulesDep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.ModulesDep
	}).(pulumi.BoolPtrOutput)
}

// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
func (o InstanceConfigHelpersPtrOutput) Network() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.BoolPtrOutput)
}

// Disables updatedb cron job to avoid disk thrashing.
func (o InstanceConfigHelpersPtrOutput) UpdatedbDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceConfigHelpers) *bool {
		if v == nil {
			return nil
		}
		return v.UpdatedbDisabled
	}).(pulumi.BoolPtrOutput)
}

type InstanceConfigInterface struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress *string `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label *string `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose *string `pulumi:"purpose"`
}

// InstanceConfigInterfaceInput is an input type that accepts InstanceConfigInterfaceArgs and InstanceConfigInterfaceOutput values.
// You can construct a concrete instance of `InstanceConfigInterfaceInput` via:
//
//	InstanceConfigInterfaceArgs{...}
type InstanceConfigInterfaceInput interface {
	pulumi.Input

	ToInstanceConfigInterfaceOutput() InstanceConfigInterfaceOutput
	ToInstanceConfigInterfaceOutputWithContext(context.Context) InstanceConfigInterfaceOutput
}

type InstanceConfigInterfaceArgs struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress pulumi.StringPtrInput `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose pulumi.StringPtrInput `pulumi:"purpose"`
}

func (InstanceConfigInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigInterface)(nil)).Elem()
}

func (i InstanceConfigInterfaceArgs) ToInstanceConfigInterfaceOutput() InstanceConfigInterfaceOutput {
	return i.ToInstanceConfigInterfaceOutputWithContext(context.Background())
}

func (i InstanceConfigInterfaceArgs) ToInstanceConfigInterfaceOutputWithContext(ctx context.Context) InstanceConfigInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigInterfaceOutput)
}

func (i InstanceConfigInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigInterface] {
	return pulumix.Output[InstanceConfigInterface]{
		OutputState: i.ToInstanceConfigInterfaceOutputWithContext(ctx).OutputState,
	}
}

// InstanceConfigInterfaceArrayInput is an input type that accepts InstanceConfigInterfaceArray and InstanceConfigInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceConfigInterfaceArrayInput` via:
//
//	InstanceConfigInterfaceArray{ InstanceConfigInterfaceArgs{...} }
type InstanceConfigInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceConfigInterfaceArrayOutput() InstanceConfigInterfaceArrayOutput
	ToInstanceConfigInterfaceArrayOutputWithContext(context.Context) InstanceConfigInterfaceArrayOutput
}

type InstanceConfigInterfaceArray []InstanceConfigInterfaceInput

func (InstanceConfigInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigInterface)(nil)).Elem()
}

func (i InstanceConfigInterfaceArray) ToInstanceConfigInterfaceArrayOutput() InstanceConfigInterfaceArrayOutput {
	return i.ToInstanceConfigInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceConfigInterfaceArray) ToInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) InstanceConfigInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigInterfaceArrayOutput)
}

func (i InstanceConfigInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]InstanceConfigInterface] {
	return pulumix.Output[[]InstanceConfigInterface]{
		OutputState: i.ToInstanceConfigInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type InstanceConfigInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceConfigInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigInterface)(nil)).Elem()
}

func (o InstanceConfigInterfaceOutput) ToInstanceConfigInterfaceOutput() InstanceConfigInterfaceOutput {
	return o
}

func (o InstanceConfigInterfaceOutput) ToInstanceConfigInterfaceOutputWithContext(ctx context.Context) InstanceConfigInterfaceOutput {
	return o
}

func (o InstanceConfigInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigInterface] {
	return pulumix.Output[InstanceConfigInterface]{
		OutputState: o.OutputState,
	}
}

// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
func (o InstanceConfigInterfaceOutput) IpamAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigInterface) *string { return v.IpamAddress }).(pulumi.StringPtrOutput)
}

// The name of this interface. If the interface is a VLAN, a label is required.
func (o InstanceConfigInterfaceOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigInterface) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of interface. (`public`, `vlan`)
func (o InstanceConfigInterfaceOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConfigInterface) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

type InstanceConfigInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceConfigInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigInterface)(nil)).Elem()
}

func (o InstanceConfigInterfaceArrayOutput) ToInstanceConfigInterfaceArrayOutput() InstanceConfigInterfaceArrayOutput {
	return o
}

func (o InstanceConfigInterfaceArrayOutput) ToInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) InstanceConfigInterfaceArrayOutput {
	return o
}

func (o InstanceConfigInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InstanceConfigInterface] {
	return pulumix.Output[[]InstanceConfigInterface]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceConfigInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceConfigInterface {
		return vs[0].([]InstanceConfigInterface)[vs[1].(int)]
	}).(InstanceConfigInterfaceOutput)
}

type InstanceDiskType struct {
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys []string `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers []string `pulumi:"authorizedUsers"`
	// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
	Filesystem *string `pulumi:"filesystem"`
	// The ID of the disk in the Linode API.
	Id *int `pulumi:"id"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/images). *Changing `image` forces the creation of a new Linode Instance.*
	Image *string `pulumi:"image"`
	// The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
	Label string `pulumi:"label"`
	// If true, this Disk is read-only.
	ReadOnly *bool `pulumi:"readOnly"`
	// The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in Pulumi state.*
	RootPass *string `pulumi:"rootPass"`
	// The size of the Disk in MB.
	Size int `pulumi:"size"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData map[string]interface{} `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId *int `pulumi:"stackscriptId"`
}

// InstanceDiskTypeInput is an input type that accepts InstanceDiskTypeArgs and InstanceDiskTypeOutput values.
// You can construct a concrete instance of `InstanceDiskTypeInput` via:
//
//	InstanceDiskTypeArgs{...}
type InstanceDiskTypeInput interface {
	pulumi.Input

	ToInstanceDiskTypeOutput() InstanceDiskTypeOutput
	ToInstanceDiskTypeOutputWithContext(context.Context) InstanceDiskTypeOutput
}

type InstanceDiskTypeArgs struct {
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys pulumi.StringArrayInput `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers pulumi.StringArrayInput `pulumi:"authorizedUsers"`
	// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
	Filesystem pulumi.StringPtrInput `pulumi:"filesystem"`
	// The ID of the disk in the Linode API.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/images). *Changing `image` forces the creation of a new Linode Instance.*
	Image pulumi.StringPtrInput `pulumi:"image"`
	// The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
	Label pulumi.StringInput `pulumi:"label"`
	// If true, this Disk is read-only.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in Pulumi state.*
	RootPass pulumi.StringPtrInput `pulumi:"rootPass"`
	// The size of the Disk in MB.
	Size pulumi.IntInput `pulumi:"size"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData pulumi.MapInput `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId pulumi.IntPtrInput `pulumi:"stackscriptId"`
}

func (InstanceDiskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDiskType)(nil)).Elem()
}

func (i InstanceDiskTypeArgs) ToInstanceDiskTypeOutput() InstanceDiskTypeOutput {
	return i.ToInstanceDiskTypeOutputWithContext(context.Background())
}

func (i InstanceDiskTypeArgs) ToInstanceDiskTypeOutputWithContext(ctx context.Context) InstanceDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskTypeOutput)
}

func (i InstanceDiskTypeArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceDiskType] {
	return pulumix.Output[InstanceDiskType]{
		OutputState: i.ToInstanceDiskTypeOutputWithContext(ctx).OutputState,
	}
}

// InstanceDiskTypeArrayInput is an input type that accepts InstanceDiskTypeArray and InstanceDiskTypeArrayOutput values.
// You can construct a concrete instance of `InstanceDiskTypeArrayInput` via:
//
//	InstanceDiskTypeArray{ InstanceDiskTypeArgs{...} }
type InstanceDiskTypeArrayInput interface {
	pulumi.Input

	ToInstanceDiskTypeArrayOutput() InstanceDiskTypeArrayOutput
	ToInstanceDiskTypeArrayOutputWithContext(context.Context) InstanceDiskTypeArrayOutput
}

type InstanceDiskTypeArray []InstanceDiskTypeInput

func (InstanceDiskTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDiskType)(nil)).Elem()
}

func (i InstanceDiskTypeArray) ToInstanceDiskTypeArrayOutput() InstanceDiskTypeArrayOutput {
	return i.ToInstanceDiskTypeArrayOutputWithContext(context.Background())
}

func (i InstanceDiskTypeArray) ToInstanceDiskTypeArrayOutputWithContext(ctx context.Context) InstanceDiskTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskTypeArrayOutput)
}

func (i InstanceDiskTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]InstanceDiskType] {
	return pulumix.Output[[]InstanceDiskType]{
		OutputState: i.ToInstanceDiskTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type InstanceDiskTypeOutput struct{ *pulumi.OutputState }

func (InstanceDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDiskType)(nil)).Elem()
}

func (o InstanceDiskTypeOutput) ToInstanceDiskTypeOutput() InstanceDiskTypeOutput {
	return o
}

func (o InstanceDiskTypeOutput) ToInstanceDiskTypeOutputWithContext(ctx context.Context) InstanceDiskTypeOutput {
	return o
}

func (o InstanceDiskTypeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceDiskType] {
	return pulumix.Output[InstanceDiskType]{
		OutputState: o.OutputState,
	}
}

// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
func (o InstanceDiskTypeOutput) AuthorizedKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceDiskType) []string { return v.AuthorizedKeys }).(pulumi.StringArrayOutput)
}

// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
func (o InstanceDiskTypeOutput) AuthorizedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceDiskType) []string { return v.AuthorizedUsers }).(pulumi.StringArrayOutput)
}

// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
func (o InstanceDiskTypeOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiskType) *string { return v.Filesystem }).(pulumi.StringPtrOutput)
}

// The ID of the disk in the Linode API.
func (o InstanceDiskTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDiskType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/images). *Changing `image` forces the creation of a new Linode Instance.*
func (o InstanceDiskTypeOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiskType) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
func (o InstanceDiskTypeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDiskType) string { return v.Label }).(pulumi.StringOutput)
}

// If true, this Disk is read-only.
func (o InstanceDiskTypeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDiskType) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in Pulumi state.*
func (o InstanceDiskTypeOutput) RootPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiskType) *string { return v.RootPass }).(pulumi.StringPtrOutput)
}

// The size of the Disk in MB.
func (o InstanceDiskTypeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceDiskType) int { return v.Size }).(pulumi.IntOutput)
}

// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
func (o InstanceDiskTypeOutput) StackscriptData() pulumi.MapOutput {
	return o.ApplyT(func(v InstanceDiskType) map[string]interface{} { return v.StackscriptData }).(pulumi.MapOutput)
}

// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
func (o InstanceDiskTypeOutput) StackscriptId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDiskType) *int { return v.StackscriptId }).(pulumi.IntPtrOutput)
}

type InstanceDiskTypeArrayOutput struct{ *pulumi.OutputState }

func (InstanceDiskTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDiskType)(nil)).Elem()
}

func (o InstanceDiskTypeArrayOutput) ToInstanceDiskTypeArrayOutput() InstanceDiskTypeArrayOutput {
	return o
}

func (o InstanceDiskTypeArrayOutput) ToInstanceDiskTypeArrayOutputWithContext(ctx context.Context) InstanceDiskTypeArrayOutput {
	return o
}

func (o InstanceDiskTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InstanceDiskType] {
	return pulumix.Output[[]InstanceDiskType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceDiskTypeArrayOutput) Index(i pulumi.IntInput) InstanceDiskTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDiskType {
		return vs[0].([]InstanceDiskType)[vs[1].(int)]
	}).(InstanceDiskTypeOutput)
}

type InstanceInterface struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress *string `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label *string `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose *string `pulumi:"purpose"`
}

// InstanceInterfaceInput is an input type that accepts InstanceInterfaceArgs and InstanceInterfaceOutput values.
// You can construct a concrete instance of `InstanceInterfaceInput` via:
//
//	InstanceInterfaceArgs{...}
type InstanceInterfaceInput interface {
	pulumi.Input

	ToInstanceInterfaceOutput() InstanceInterfaceOutput
	ToInstanceInterfaceOutputWithContext(context.Context) InstanceInterfaceOutput
}

type InstanceInterfaceArgs struct {
	// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress pulumi.StringPtrInput `pulumi:"ipamAddress"`
	// The name of this interface. If the interface is a VLAN, a label is required.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The type of interface. (`public`, `vlan`)
	Purpose pulumi.StringPtrInput `pulumi:"purpose"`
}

func (InstanceInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInterface)(nil)).Elem()
}

func (i InstanceInterfaceArgs) ToInstanceInterfaceOutput() InstanceInterfaceOutput {
	return i.ToInstanceInterfaceOutputWithContext(context.Background())
}

func (i InstanceInterfaceArgs) ToInstanceInterfaceOutputWithContext(ctx context.Context) InstanceInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceInterfaceOutput)
}

func (i InstanceInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceInterface] {
	return pulumix.Output[InstanceInterface]{
		OutputState: i.ToInstanceInterfaceOutputWithContext(ctx).OutputState,
	}
}

// InstanceInterfaceArrayInput is an input type that accepts InstanceInterfaceArray and InstanceInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceInterfaceArrayInput` via:
//
//	InstanceInterfaceArray{ InstanceInterfaceArgs{...} }
type InstanceInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceInterfaceArrayOutput() InstanceInterfaceArrayOutput
	ToInstanceInterfaceArrayOutputWithContext(context.Context) InstanceInterfaceArrayOutput
}

type InstanceInterfaceArray []InstanceInterfaceInput

func (InstanceInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceInterface)(nil)).Elem()
}

func (i InstanceInterfaceArray) ToInstanceInterfaceArrayOutput() InstanceInterfaceArrayOutput {
	return i.ToInstanceInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceInterfaceArray) ToInstanceInterfaceArrayOutputWithContext(ctx context.Context) InstanceInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceInterfaceArrayOutput)
}

func (i InstanceInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]InstanceInterface] {
	return pulumix.Output[[]InstanceInterface]{
		OutputState: i.ToInstanceInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type InstanceInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInterface)(nil)).Elem()
}

func (o InstanceInterfaceOutput) ToInstanceInterfaceOutput() InstanceInterfaceOutput {
	return o
}

func (o InstanceInterfaceOutput) ToInstanceInterfaceOutputWithContext(ctx context.Context) InstanceInterfaceOutput {
	return o
}

func (o InstanceInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceInterface] {
	return pulumix.Output[InstanceInterface]{
		OutputState: o.OutputState,
	}
}

// This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
func (o InstanceInterfaceOutput) IpamAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceInterface) *string { return v.IpamAddress }).(pulumi.StringPtrOutput)
}

// The name of this interface. If the interface is a VLAN, a label is required.
func (o InstanceInterfaceOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceInterface) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of interface. (`public`, `vlan`)
func (o InstanceInterfaceOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceInterface) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

type InstanceInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceInterface)(nil)).Elem()
}

func (o InstanceInterfaceArrayOutput) ToInstanceInterfaceArrayOutput() InstanceInterfaceArrayOutput {
	return o
}

func (o InstanceInterfaceArrayOutput) ToInstanceInterfaceArrayOutputWithContext(ctx context.Context) InstanceInterfaceArrayOutput {
	return o
}

func (o InstanceInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InstanceInterface] {
	return pulumix.Output[[]InstanceInterface]{
		OutputState: o.OutputState,
	}
}

func (o InstanceInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceInterface {
		return vs[0].([]InstanceInterface)[vs[1].(int)]
	}).(InstanceInterfaceOutput)
}

type InstanceMetadata struct {
	UserData *string `pulumi:"userData"`
}

// InstanceMetadataInput is an input type that accepts InstanceMetadataArgs and InstanceMetadataOutput values.
// You can construct a concrete instance of `InstanceMetadataInput` via:
//
//	InstanceMetadataArgs{...}
type InstanceMetadataInput interface {
	pulumi.Input

	ToInstanceMetadataOutput() InstanceMetadataOutput
	ToInstanceMetadataOutputWithContext(context.Context) InstanceMetadataOutput
}

type InstanceMetadataArgs struct {
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (InstanceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadata)(nil)).Elem()
}

func (i InstanceMetadataArgs) ToInstanceMetadataOutput() InstanceMetadataOutput {
	return i.ToInstanceMetadataOutputWithContext(context.Background())
}

func (i InstanceMetadataArgs) ToInstanceMetadataOutputWithContext(ctx context.Context) InstanceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOutput)
}

func (i InstanceMetadataArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceMetadata] {
	return pulumix.Output[InstanceMetadata]{
		OutputState: i.ToInstanceMetadataOutputWithContext(ctx).OutputState,
	}
}

// InstanceMetadataArrayInput is an input type that accepts InstanceMetadataArray and InstanceMetadataArrayOutput values.
// You can construct a concrete instance of `InstanceMetadataArrayInput` via:
//
//	InstanceMetadataArray{ InstanceMetadataArgs{...} }
type InstanceMetadataArrayInput interface {
	pulumi.Input

	ToInstanceMetadataArrayOutput() InstanceMetadataArrayOutput
	ToInstanceMetadataArrayOutputWithContext(context.Context) InstanceMetadataArrayOutput
}

type InstanceMetadataArray []InstanceMetadataInput

func (InstanceMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMetadata)(nil)).Elem()
}

func (i InstanceMetadataArray) ToInstanceMetadataArrayOutput() InstanceMetadataArrayOutput {
	return i.ToInstanceMetadataArrayOutputWithContext(context.Background())
}

func (i InstanceMetadataArray) ToInstanceMetadataArrayOutputWithContext(ctx context.Context) InstanceMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataArrayOutput)
}

func (i InstanceMetadataArray) ToOutput(ctx context.Context) pulumix.Output[[]InstanceMetadata] {
	return pulumix.Output[[]InstanceMetadata]{
		OutputState: i.ToInstanceMetadataArrayOutputWithContext(ctx).OutputState,
	}
}

type InstanceMetadataOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadata)(nil)).Elem()
}

func (o InstanceMetadataOutput) ToInstanceMetadataOutput() InstanceMetadataOutput {
	return o
}

func (o InstanceMetadataOutput) ToInstanceMetadataOutputWithContext(ctx context.Context) InstanceMetadataOutput {
	return o
}

func (o InstanceMetadataOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceMetadata] {
	return pulumix.Output[InstanceMetadata]{
		OutputState: o.OutputState,
	}
}

func (o InstanceMetadataOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadata) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type InstanceMetadataArrayOutput struct{ *pulumi.OutputState }

func (InstanceMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMetadata)(nil)).Elem()
}

func (o InstanceMetadataArrayOutput) ToInstanceMetadataArrayOutput() InstanceMetadataArrayOutput {
	return o
}

func (o InstanceMetadataArrayOutput) ToInstanceMetadataArrayOutputWithContext(ctx context.Context) InstanceMetadataArrayOutput {
	return o
}

func (o InstanceMetadataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InstanceMetadata] {
	return pulumix.Output[[]InstanceMetadata]{
		OutputState: o.OutputState,
	}
}

func (o InstanceMetadataArrayOutput) Index(i pulumi.IntInput) InstanceMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMetadata {
		return vs[0].([]InstanceMetadata)[vs[1].(int)]
	}).(InstanceMetadataOutput)
}

type InstanceSpecs struct {
	Disk     *int `pulumi:"disk"`
	Memory   *int `pulumi:"memory"`
	Transfer *int `pulumi:"transfer"`
	Vcpus    *int `pulumi:"vcpus"`
}

// InstanceSpecsInput is an input type that accepts InstanceSpecsArgs and InstanceSpecsOutput values.
// You can construct a concrete instance of `InstanceSpecsInput` via:
//
//	InstanceSpecsArgs{...}
type InstanceSpecsInput interface {
	pulumi.Input

	ToInstanceSpecsOutput() InstanceSpecsOutput
	ToInstanceSpecsOutputWithContext(context.Context) InstanceSpecsOutput
}

type InstanceSpecsArgs struct {
	Disk     pulumi.IntPtrInput `pulumi:"disk"`
	Memory   pulumi.IntPtrInput `pulumi:"memory"`
	Transfer pulumi.IntPtrInput `pulumi:"transfer"`
	Vcpus    pulumi.IntPtrInput `pulumi:"vcpus"`
}

func (InstanceSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecs)(nil)).Elem()
}

func (i InstanceSpecsArgs) ToInstanceSpecsOutput() InstanceSpecsOutput {
	return i.ToInstanceSpecsOutputWithContext(context.Background())
}

func (i InstanceSpecsArgs) ToInstanceSpecsOutputWithContext(ctx context.Context) InstanceSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsOutput)
}

func (i InstanceSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceSpecs] {
	return pulumix.Output[InstanceSpecs]{
		OutputState: i.ToInstanceSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceSpecsArgs) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return i.ToInstanceSpecsPtrOutputWithContext(context.Background())
}

func (i InstanceSpecsArgs) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsOutput).ToInstanceSpecsPtrOutputWithContext(ctx)
}

// InstanceSpecsPtrInput is an input type that accepts InstanceSpecsArgs, InstanceSpecsPtr and InstanceSpecsPtrOutput values.
// You can construct a concrete instance of `InstanceSpecsPtrInput` via:
//
//	        InstanceSpecsArgs{...}
//
//	or:
//
//	        nil
type InstanceSpecsPtrInput interface {
	pulumi.Input

	ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput
	ToInstanceSpecsPtrOutputWithContext(context.Context) InstanceSpecsPtrOutput
}

type instanceSpecsPtrType InstanceSpecsArgs

func InstanceSpecsPtr(v *InstanceSpecsArgs) InstanceSpecsPtrInput {
	return (*instanceSpecsPtrType)(v)
}

func (*instanceSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSpecs)(nil)).Elem()
}

func (i *instanceSpecsPtrType) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return i.ToInstanceSpecsPtrOutputWithContext(context.Background())
}

func (i *instanceSpecsPtrType) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsPtrOutput)
}

func (i *instanceSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceSpecs] {
	return pulumix.Output[*InstanceSpecs]{
		OutputState: i.ToInstanceSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceSpecsOutput struct{ *pulumi.OutputState }

func (InstanceSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecs)(nil)).Elem()
}

func (o InstanceSpecsOutput) ToInstanceSpecsOutput() InstanceSpecsOutput {
	return o
}

func (o InstanceSpecsOutput) ToInstanceSpecsOutputWithContext(ctx context.Context) InstanceSpecsOutput {
	return o
}

func (o InstanceSpecsOutput) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return o.ToInstanceSpecsPtrOutputWithContext(context.Background())
}

func (o InstanceSpecsOutput) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceSpecs) *InstanceSpecs {
		return &v
	}).(InstanceSpecsPtrOutput)
}

func (o InstanceSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceSpecs] {
	return pulumix.Output[InstanceSpecs]{
		OutputState: o.OutputState,
	}
}

func (o InstanceSpecsOutput) Disk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Disk }).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsOutput) Transfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Transfer }).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSpecs) *int { return v.Vcpus }).(pulumi.IntPtrOutput)
}

type InstanceSpecsPtrOutput struct{ *pulumi.OutputState }

func (InstanceSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSpecs)(nil)).Elem()
}

func (o InstanceSpecsPtrOutput) ToInstanceSpecsPtrOutput() InstanceSpecsPtrOutput {
	return o
}

func (o InstanceSpecsPtrOutput) ToInstanceSpecsPtrOutputWithContext(ctx context.Context) InstanceSpecsPtrOutput {
	return o
}

func (o InstanceSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceSpecs] {
	return pulumix.Output[*InstanceSpecs]{
		OutputState: o.OutputState,
	}
}

func (o InstanceSpecsPtrOutput) Elem() InstanceSpecsOutput {
	return o.ApplyT(func(v *InstanceSpecs) InstanceSpecs {
		if v != nil {
			return *v
		}
		var ret InstanceSpecs
		return ret
	}).(InstanceSpecsOutput)
}

func (o InstanceSpecsPtrOutput) Disk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsPtrOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsPtrOutput) Transfer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Transfer
	}).(pulumi.IntPtrOutput)
}

func (o InstanceSpecsPtrOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceSpecs) *int {
		if v == nil {
			return nil
		}
		return v.Vcpus
	}).(pulumi.IntPtrOutput)
}

type LkeClusterControlPlane struct {
	// Defines whether High Availability is enabled for the cluster Control Plane. This is an **irreversible** change.
	HighAvailability *bool `pulumi:"highAvailability"`
}

// LkeClusterControlPlaneInput is an input type that accepts LkeClusterControlPlaneArgs and LkeClusterControlPlaneOutput values.
// You can construct a concrete instance of `LkeClusterControlPlaneInput` via:
//
//	LkeClusterControlPlaneArgs{...}
type LkeClusterControlPlaneInput interface {
	pulumi.Input

	ToLkeClusterControlPlaneOutput() LkeClusterControlPlaneOutput
	ToLkeClusterControlPlaneOutputWithContext(context.Context) LkeClusterControlPlaneOutput
}

type LkeClusterControlPlaneArgs struct {
	// Defines whether High Availability is enabled for the cluster Control Plane. This is an **irreversible** change.
	HighAvailability pulumi.BoolPtrInput `pulumi:"highAvailability"`
}

func (LkeClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterControlPlane)(nil)).Elem()
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlaneOutput() LkeClusterControlPlaneOutput {
	return i.ToLkeClusterControlPlaneOutputWithContext(context.Background())
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlaneOutputWithContext(ctx context.Context) LkeClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterControlPlaneOutput)
}

func (i LkeClusterControlPlaneArgs) ToOutput(ctx context.Context) pulumix.Output[LkeClusterControlPlane] {
	return pulumix.Output[LkeClusterControlPlane]{
		OutputState: i.ToLkeClusterControlPlaneOutputWithContext(ctx).OutputState,
	}
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return i.ToLkeClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i LkeClusterControlPlaneArgs) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterControlPlaneOutput).ToLkeClusterControlPlanePtrOutputWithContext(ctx)
}

// LkeClusterControlPlanePtrInput is an input type that accepts LkeClusterControlPlaneArgs, LkeClusterControlPlanePtr and LkeClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `LkeClusterControlPlanePtrInput` via:
//
//	        LkeClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type LkeClusterControlPlanePtrInput interface {
	pulumi.Input

	ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput
	ToLkeClusterControlPlanePtrOutputWithContext(context.Context) LkeClusterControlPlanePtrOutput
}

type lkeClusterControlPlanePtrType LkeClusterControlPlaneArgs

func LkeClusterControlPlanePtr(v *LkeClusterControlPlaneArgs) LkeClusterControlPlanePtrInput {
	return (*lkeClusterControlPlanePtrType)(v)
}

func (*lkeClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterControlPlane)(nil)).Elem()
}

func (i *lkeClusterControlPlanePtrType) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return i.ToLkeClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *lkeClusterControlPlanePtrType) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterControlPlanePtrOutput)
}

func (i *lkeClusterControlPlanePtrType) ToOutput(ctx context.Context) pulumix.Output[*LkeClusterControlPlane] {
	return pulumix.Output[*LkeClusterControlPlane]{
		OutputState: i.ToLkeClusterControlPlanePtrOutputWithContext(ctx).OutputState,
	}
}

type LkeClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (LkeClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterControlPlane)(nil)).Elem()
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlaneOutput() LkeClusterControlPlaneOutput {
	return o
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlaneOutputWithContext(ctx context.Context) LkeClusterControlPlaneOutput {
	return o
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return o.ToLkeClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o LkeClusterControlPlaneOutput) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LkeClusterControlPlane) *LkeClusterControlPlane {
		return &v
	}).(LkeClusterControlPlanePtrOutput)
}

func (o LkeClusterControlPlaneOutput) ToOutput(ctx context.Context) pulumix.Output[LkeClusterControlPlane] {
	return pulumix.Output[LkeClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

// Defines whether High Availability is enabled for the cluster Control Plane. This is an **irreversible** change.
func (o LkeClusterControlPlaneOutput) HighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LkeClusterControlPlane) *bool { return v.HighAvailability }).(pulumi.BoolPtrOutput)
}

type LkeClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (LkeClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterControlPlane)(nil)).Elem()
}

func (o LkeClusterControlPlanePtrOutput) ToLkeClusterControlPlanePtrOutput() LkeClusterControlPlanePtrOutput {
	return o
}

func (o LkeClusterControlPlanePtrOutput) ToLkeClusterControlPlanePtrOutputWithContext(ctx context.Context) LkeClusterControlPlanePtrOutput {
	return o
}

func (o LkeClusterControlPlanePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LkeClusterControlPlane] {
	return pulumix.Output[*LkeClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

func (o LkeClusterControlPlanePtrOutput) Elem() LkeClusterControlPlaneOutput {
	return o.ApplyT(func(v *LkeClusterControlPlane) LkeClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret LkeClusterControlPlane
		return ret
	}).(LkeClusterControlPlaneOutput)
}

// Defines whether High Availability is enabled for the cluster Control Plane. This is an **irreversible** change.
func (o LkeClusterControlPlanePtrOutput) HighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LkeClusterControlPlane) *bool {
		if v == nil {
			return nil
		}
		return v.HighAvailability
	}).(pulumi.BoolPtrOutput)
}

type LkeClusterPool struct {
	Autoscaler *LkeClusterPoolAutoscaler `pulumi:"autoscaler"`
	// The number of nodes in the Node Pool.
	//
	// * `autoscaler` - (Optional) If defined, an autoscaler will be enabled with the given configuration.
	Count int `pulumi:"count"`
	// The ID of the node.
	Id    *int                 `pulumi:"id"`
	Nodes []LkeClusterPoolNode `pulumi:"nodes"`
	// A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type string `pulumi:"type"`
}

// LkeClusterPoolInput is an input type that accepts LkeClusterPoolArgs and LkeClusterPoolOutput values.
// You can construct a concrete instance of `LkeClusterPoolInput` via:
//
//	LkeClusterPoolArgs{...}
type LkeClusterPoolInput interface {
	pulumi.Input

	ToLkeClusterPoolOutput() LkeClusterPoolOutput
	ToLkeClusterPoolOutputWithContext(context.Context) LkeClusterPoolOutput
}

type LkeClusterPoolArgs struct {
	Autoscaler LkeClusterPoolAutoscalerPtrInput `pulumi:"autoscaler"`
	// The number of nodes in the Node Pool.
	//
	// * `autoscaler` - (Optional) If defined, an autoscaler will be enabled with the given configuration.
	Count pulumi.IntInput `pulumi:"count"`
	// The ID of the node.
	Id    pulumi.IntPtrInput           `pulumi:"id"`
	Nodes LkeClusterPoolNodeArrayInput `pulumi:"nodes"`
	// A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type pulumi.StringInput `pulumi:"type"`
}

func (LkeClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPool)(nil)).Elem()
}

func (i LkeClusterPoolArgs) ToLkeClusterPoolOutput() LkeClusterPoolOutput {
	return i.ToLkeClusterPoolOutputWithContext(context.Background())
}

func (i LkeClusterPoolArgs) ToLkeClusterPoolOutputWithContext(ctx context.Context) LkeClusterPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolOutput)
}

func (i LkeClusterPoolArgs) ToOutput(ctx context.Context) pulumix.Output[LkeClusterPool] {
	return pulumix.Output[LkeClusterPool]{
		OutputState: i.ToLkeClusterPoolOutputWithContext(ctx).OutputState,
	}
}

// LkeClusterPoolArrayInput is an input type that accepts LkeClusterPoolArray and LkeClusterPoolArrayOutput values.
// You can construct a concrete instance of `LkeClusterPoolArrayInput` via:
//
//	LkeClusterPoolArray{ LkeClusterPoolArgs{...} }
type LkeClusterPoolArrayInput interface {
	pulumi.Input

	ToLkeClusterPoolArrayOutput() LkeClusterPoolArrayOutput
	ToLkeClusterPoolArrayOutputWithContext(context.Context) LkeClusterPoolArrayOutput
}

type LkeClusterPoolArray []LkeClusterPoolInput

func (LkeClusterPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPool)(nil)).Elem()
}

func (i LkeClusterPoolArray) ToLkeClusterPoolArrayOutput() LkeClusterPoolArrayOutput {
	return i.ToLkeClusterPoolArrayOutputWithContext(context.Background())
}

func (i LkeClusterPoolArray) ToLkeClusterPoolArrayOutputWithContext(ctx context.Context) LkeClusterPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolArrayOutput)
}

func (i LkeClusterPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]LkeClusterPool] {
	return pulumix.Output[[]LkeClusterPool]{
		OutputState: i.ToLkeClusterPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type LkeClusterPoolOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPool)(nil)).Elem()
}

func (o LkeClusterPoolOutput) ToLkeClusterPoolOutput() LkeClusterPoolOutput {
	return o
}

func (o LkeClusterPoolOutput) ToLkeClusterPoolOutputWithContext(ctx context.Context) LkeClusterPoolOutput {
	return o
}

func (o LkeClusterPoolOutput) ToOutput(ctx context.Context) pulumix.Output[LkeClusterPool] {
	return pulumix.Output[LkeClusterPool]{
		OutputState: o.OutputState,
	}
}

func (o LkeClusterPoolOutput) Autoscaler() LkeClusterPoolAutoscalerPtrOutput {
	return o.ApplyT(func(v LkeClusterPool) *LkeClusterPoolAutoscaler { return v.Autoscaler }).(LkeClusterPoolAutoscalerPtrOutput)
}

// The number of nodes in the Node Pool.
//
// * `autoscaler` - (Optional) If defined, an autoscaler will be enabled with the given configuration.
func (o LkeClusterPoolOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v LkeClusterPool) int { return v.Count }).(pulumi.IntOutput)
}

// The ID of the node.
func (o LkeClusterPoolOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LkeClusterPool) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LkeClusterPoolOutput) Nodes() LkeClusterPoolNodeArrayOutput {
	return o.ApplyT(func(v LkeClusterPool) []LkeClusterPoolNode { return v.Nodes }).(LkeClusterPoolNodeArrayOutput)
}

// A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
func (o LkeClusterPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LkeClusterPool) string { return v.Type }).(pulumi.StringOutput)
}

type LkeClusterPoolArrayOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPool)(nil)).Elem()
}

func (o LkeClusterPoolArrayOutput) ToLkeClusterPoolArrayOutput() LkeClusterPoolArrayOutput {
	return o
}

func (o LkeClusterPoolArrayOutput) ToLkeClusterPoolArrayOutputWithContext(ctx context.Context) LkeClusterPoolArrayOutput {
	return o
}

func (o LkeClusterPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LkeClusterPool] {
	return pulumix.Output[[]LkeClusterPool]{
		OutputState: o.OutputState,
	}
}

func (o LkeClusterPoolArrayOutput) Index(i pulumi.IntInput) LkeClusterPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LkeClusterPool {
		return vs[0].([]LkeClusterPool)[vs[1].(int)]
	}).(LkeClusterPoolOutput)
}

type LkeClusterPoolAutoscaler struct {
	// The maximum number of nodes to autoscale to.
	Max int `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min int `pulumi:"min"`
}

// LkeClusterPoolAutoscalerInput is an input type that accepts LkeClusterPoolAutoscalerArgs and LkeClusterPoolAutoscalerOutput values.
// You can construct a concrete instance of `LkeClusterPoolAutoscalerInput` via:
//
//	LkeClusterPoolAutoscalerArgs{...}
type LkeClusterPoolAutoscalerInput interface {
	pulumi.Input

	ToLkeClusterPoolAutoscalerOutput() LkeClusterPoolAutoscalerOutput
	ToLkeClusterPoolAutoscalerOutputWithContext(context.Context) LkeClusterPoolAutoscalerOutput
}

type LkeClusterPoolAutoscalerArgs struct {
	// The maximum number of nodes to autoscale to.
	Max pulumi.IntInput `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min pulumi.IntInput `pulumi:"min"`
}

func (LkeClusterPoolAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerOutput() LkeClusterPoolAutoscalerOutput {
	return i.ToLkeClusterPoolAutoscalerOutputWithContext(context.Background())
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolAutoscalerOutput)
}

func (i LkeClusterPoolAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[LkeClusterPoolAutoscaler] {
	return pulumix.Output[LkeClusterPoolAutoscaler]{
		OutputState: i.ToLkeClusterPoolAutoscalerOutputWithContext(ctx).OutputState,
	}
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return i.ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Background())
}

func (i LkeClusterPoolAutoscalerArgs) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolAutoscalerOutput).ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx)
}

// LkeClusterPoolAutoscalerPtrInput is an input type that accepts LkeClusterPoolAutoscalerArgs, LkeClusterPoolAutoscalerPtr and LkeClusterPoolAutoscalerPtrOutput values.
// You can construct a concrete instance of `LkeClusterPoolAutoscalerPtrInput` via:
//
//	        LkeClusterPoolAutoscalerArgs{...}
//
//	or:
//
//	        nil
type LkeClusterPoolAutoscalerPtrInput interface {
	pulumi.Input

	ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput
	ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Context) LkeClusterPoolAutoscalerPtrOutput
}

type lkeClusterPoolAutoscalerPtrType LkeClusterPoolAutoscalerArgs

func LkeClusterPoolAutoscalerPtr(v *LkeClusterPoolAutoscalerArgs) LkeClusterPoolAutoscalerPtrInput {
	return (*lkeClusterPoolAutoscalerPtrType)(v)
}

func (*lkeClusterPoolAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i *lkeClusterPoolAutoscalerPtrType) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return i.ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Background())
}

func (i *lkeClusterPoolAutoscalerPtrType) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolAutoscalerPtrOutput)
}

func (i *lkeClusterPoolAutoscalerPtrType) ToOutput(ctx context.Context) pulumix.Output[*LkeClusterPoolAutoscaler] {
	return pulumix.Output[*LkeClusterPoolAutoscaler]{
		OutputState: i.ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx).OutputState,
	}
}

type LkeClusterPoolAutoscalerOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerOutput() LkeClusterPoolAutoscalerOutput {
	return o
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerOutput {
	return o
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return o.ToLkeClusterPoolAutoscalerPtrOutputWithContext(context.Background())
}

func (o LkeClusterPoolAutoscalerOutput) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LkeClusterPoolAutoscaler) *LkeClusterPoolAutoscaler {
		return &v
	}).(LkeClusterPoolAutoscalerPtrOutput)
}

func (o LkeClusterPoolAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[LkeClusterPoolAutoscaler] {
	return pulumix.Output[LkeClusterPoolAutoscaler]{
		OutputState: o.OutputState,
	}
}

// The maximum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v LkeClusterPoolAutoscaler) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v LkeClusterPoolAutoscaler) int { return v.Min }).(pulumi.IntOutput)
}

type LkeClusterPoolAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o LkeClusterPoolAutoscalerPtrOutput) ToLkeClusterPoolAutoscalerPtrOutput() LkeClusterPoolAutoscalerPtrOutput {
	return o
}

func (o LkeClusterPoolAutoscalerPtrOutput) ToLkeClusterPoolAutoscalerPtrOutputWithContext(ctx context.Context) LkeClusterPoolAutoscalerPtrOutput {
	return o
}

func (o LkeClusterPoolAutoscalerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LkeClusterPoolAutoscaler] {
	return pulumix.Output[*LkeClusterPoolAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o LkeClusterPoolAutoscalerPtrOutput) Elem() LkeClusterPoolAutoscalerOutput {
	return o.ApplyT(func(v *LkeClusterPoolAutoscaler) LkeClusterPoolAutoscaler {
		if v != nil {
			return *v
		}
		var ret LkeClusterPoolAutoscaler
		return ret
	}).(LkeClusterPoolAutoscalerOutput)
}

// The maximum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LkeClusterPoolAutoscaler) *int {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes to autoscale to.
func (o LkeClusterPoolAutoscalerPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LkeClusterPoolAutoscaler) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type LkeClusterPoolNode struct {
	// The ID of the node.
	Id *string `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId *int `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status *string `pulumi:"status"`
}

// LkeClusterPoolNodeInput is an input type that accepts LkeClusterPoolNodeArgs and LkeClusterPoolNodeOutput values.
// You can construct a concrete instance of `LkeClusterPoolNodeInput` via:
//
//	LkeClusterPoolNodeArgs{...}
type LkeClusterPoolNodeInput interface {
	pulumi.Input

	ToLkeClusterPoolNodeOutput() LkeClusterPoolNodeOutput
	ToLkeClusterPoolNodeOutputWithContext(context.Context) LkeClusterPoolNodeOutput
}

type LkeClusterPoolNodeArgs struct {
	// The ID of the node.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId pulumi.IntPtrInput `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LkeClusterPoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolNode)(nil)).Elem()
}

func (i LkeClusterPoolNodeArgs) ToLkeClusterPoolNodeOutput() LkeClusterPoolNodeOutput {
	return i.ToLkeClusterPoolNodeOutputWithContext(context.Background())
}

func (i LkeClusterPoolNodeArgs) ToLkeClusterPoolNodeOutputWithContext(ctx context.Context) LkeClusterPoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolNodeOutput)
}

func (i LkeClusterPoolNodeArgs) ToOutput(ctx context.Context) pulumix.Output[LkeClusterPoolNode] {
	return pulumix.Output[LkeClusterPoolNode]{
		OutputState: i.ToLkeClusterPoolNodeOutputWithContext(ctx).OutputState,
	}
}

// LkeClusterPoolNodeArrayInput is an input type that accepts LkeClusterPoolNodeArray and LkeClusterPoolNodeArrayOutput values.
// You can construct a concrete instance of `LkeClusterPoolNodeArrayInput` via:
//
//	LkeClusterPoolNodeArray{ LkeClusterPoolNodeArgs{...} }
type LkeClusterPoolNodeArrayInput interface {
	pulumi.Input

	ToLkeClusterPoolNodeArrayOutput() LkeClusterPoolNodeArrayOutput
	ToLkeClusterPoolNodeArrayOutputWithContext(context.Context) LkeClusterPoolNodeArrayOutput
}

type LkeClusterPoolNodeArray []LkeClusterPoolNodeInput

func (LkeClusterPoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPoolNode)(nil)).Elem()
}

func (i LkeClusterPoolNodeArray) ToLkeClusterPoolNodeArrayOutput() LkeClusterPoolNodeArrayOutput {
	return i.ToLkeClusterPoolNodeArrayOutputWithContext(context.Background())
}

func (i LkeClusterPoolNodeArray) ToLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) LkeClusterPoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LkeClusterPoolNodeArrayOutput)
}

func (i LkeClusterPoolNodeArray) ToOutput(ctx context.Context) pulumix.Output[[]LkeClusterPoolNode] {
	return pulumix.Output[[]LkeClusterPoolNode]{
		OutputState: i.ToLkeClusterPoolNodeArrayOutputWithContext(ctx).OutputState,
	}
}

type LkeClusterPoolNodeOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LkeClusterPoolNode)(nil)).Elem()
}

func (o LkeClusterPoolNodeOutput) ToLkeClusterPoolNodeOutput() LkeClusterPoolNodeOutput {
	return o
}

func (o LkeClusterPoolNodeOutput) ToLkeClusterPoolNodeOutputWithContext(ctx context.Context) LkeClusterPoolNodeOutput {
	return o
}

func (o LkeClusterPoolNodeOutput) ToOutput(ctx context.Context) pulumix.Output[LkeClusterPoolNode] {
	return pulumix.Output[LkeClusterPoolNode]{
		OutputState: o.OutputState,
	}
}

// The ID of the node.
func (o LkeClusterPoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LkeClusterPoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ID of the underlying Linode instance.
func (o LkeClusterPoolNodeOutput) InstanceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LkeClusterPoolNode) *int { return v.InstanceId }).(pulumi.IntPtrOutput)
}

// The status of the node. (`ready`, `notReady`)
func (o LkeClusterPoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LkeClusterPoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type LkeClusterPoolNodeArrayOutput struct{ *pulumi.OutputState }

func (LkeClusterPoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LkeClusterPoolNode)(nil)).Elem()
}

func (o LkeClusterPoolNodeArrayOutput) ToLkeClusterPoolNodeArrayOutput() LkeClusterPoolNodeArrayOutput {
	return o
}

func (o LkeClusterPoolNodeArrayOutput) ToLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) LkeClusterPoolNodeArrayOutput {
	return o
}

func (o LkeClusterPoolNodeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LkeClusterPoolNode] {
	return pulumix.Output[[]LkeClusterPoolNode]{
		OutputState: o.OutputState,
	}
}

func (o LkeClusterPoolNodeArrayOutput) Index(i pulumi.IntInput) LkeClusterPoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LkeClusterPoolNode {
		return vs[0].([]LkeClusterPoolNode)[vs[1].(int)]
	}).(LkeClusterPoolNodeOutput)
}

type NodeBalancerConfigNodeStatus struct {
	// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
	Down *int `pulumi:"down"`
	// The number of backends considered to be 'UP' and healthy, and that are serving requests.
	Up *int `pulumi:"up"`
}

// NodeBalancerConfigNodeStatusInput is an input type that accepts NodeBalancerConfigNodeStatusArgs and NodeBalancerConfigNodeStatusOutput values.
// You can construct a concrete instance of `NodeBalancerConfigNodeStatusInput` via:
//
//	NodeBalancerConfigNodeStatusArgs{...}
type NodeBalancerConfigNodeStatusInput interface {
	pulumi.Input

	ToNodeBalancerConfigNodeStatusOutput() NodeBalancerConfigNodeStatusOutput
	ToNodeBalancerConfigNodeStatusOutputWithContext(context.Context) NodeBalancerConfigNodeStatusOutput
}

type NodeBalancerConfigNodeStatusArgs struct {
	// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
	Down pulumi.IntPtrInput `pulumi:"down"`
	// The number of backends considered to be 'UP' and healthy, and that are serving requests.
	Up pulumi.IntPtrInput `pulumi:"up"`
}

func (NodeBalancerConfigNodeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i NodeBalancerConfigNodeStatusArgs) ToNodeBalancerConfigNodeStatusOutput() NodeBalancerConfigNodeStatusOutput {
	return i.ToNodeBalancerConfigNodeStatusOutputWithContext(context.Background())
}

func (i NodeBalancerConfigNodeStatusArgs) ToNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerConfigNodeStatusOutput)
}

func (i NodeBalancerConfigNodeStatusArgs) ToOutput(ctx context.Context) pulumix.Output[NodeBalancerConfigNodeStatus] {
	return pulumix.Output[NodeBalancerConfigNodeStatus]{
		OutputState: i.ToNodeBalancerConfigNodeStatusOutputWithContext(ctx).OutputState,
	}
}

// NodeBalancerConfigNodeStatusArrayInput is an input type that accepts NodeBalancerConfigNodeStatusArray and NodeBalancerConfigNodeStatusArrayOutput values.
// You can construct a concrete instance of `NodeBalancerConfigNodeStatusArrayInput` via:
//
//	NodeBalancerConfigNodeStatusArray{ NodeBalancerConfigNodeStatusArgs{...} }
type NodeBalancerConfigNodeStatusArrayInput interface {
	pulumi.Input

	ToNodeBalancerConfigNodeStatusArrayOutput() NodeBalancerConfigNodeStatusArrayOutput
	ToNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Context) NodeBalancerConfigNodeStatusArrayOutput
}

type NodeBalancerConfigNodeStatusArray []NodeBalancerConfigNodeStatusInput

func (NodeBalancerConfigNodeStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i NodeBalancerConfigNodeStatusArray) ToNodeBalancerConfigNodeStatusArrayOutput() NodeBalancerConfigNodeStatusArrayOutput {
	return i.ToNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Background())
}

func (i NodeBalancerConfigNodeStatusArray) ToNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerConfigNodeStatusArrayOutput)
}

func (i NodeBalancerConfigNodeStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]NodeBalancerConfigNodeStatus] {
	return pulumix.Output[[]NodeBalancerConfigNodeStatus]{
		OutputState: i.ToNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type NodeBalancerConfigNodeStatusOutput struct{ *pulumi.OutputState }

func (NodeBalancerConfigNodeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o NodeBalancerConfigNodeStatusOutput) ToNodeBalancerConfigNodeStatusOutput() NodeBalancerConfigNodeStatusOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusOutput) ToNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusOutput) ToOutput(ctx context.Context) pulumix.Output[NodeBalancerConfigNodeStatus] {
	return pulumix.Output[NodeBalancerConfigNodeStatus]{
		OutputState: o.OutputState,
	}
}

// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
func (o NodeBalancerConfigNodeStatusOutput) Down() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeBalancerConfigNodeStatus) *int { return v.Down }).(pulumi.IntPtrOutput)
}

// The number of backends considered to be 'UP' and healthy, and that are serving requests.
func (o NodeBalancerConfigNodeStatusOutput) Up() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeBalancerConfigNodeStatus) *int { return v.Up }).(pulumi.IntPtrOutput)
}

type NodeBalancerConfigNodeStatusArrayOutput struct{ *pulumi.OutputState }

func (NodeBalancerConfigNodeStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o NodeBalancerConfigNodeStatusArrayOutput) ToNodeBalancerConfigNodeStatusArrayOutput() NodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusArrayOutput) ToNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) NodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o NodeBalancerConfigNodeStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NodeBalancerConfigNodeStatus] {
	return pulumix.Output[[]NodeBalancerConfigNodeStatus]{
		OutputState: o.OutputState,
	}
}

func (o NodeBalancerConfigNodeStatusArrayOutput) Index(i pulumi.IntInput) NodeBalancerConfigNodeStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeBalancerConfigNodeStatus {
		return vs[0].([]NodeBalancerConfigNodeStatus)[vs[1].(int)]
	}).(NodeBalancerConfigNodeStatusOutput)
}

type NodeBalancerTransfer struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In float64 `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out float64 `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total float64 `pulumi:"total"`
}

// NodeBalancerTransferInput is an input type that accepts NodeBalancerTransferArgs and NodeBalancerTransferOutput values.
// You can construct a concrete instance of `NodeBalancerTransferInput` via:
//
//	NodeBalancerTransferArgs{...}
type NodeBalancerTransferInput interface {
	pulumi.Input

	ToNodeBalancerTransferOutput() NodeBalancerTransferOutput
	ToNodeBalancerTransferOutputWithContext(context.Context) NodeBalancerTransferOutput
}

type NodeBalancerTransferArgs struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In pulumi.Float64Input `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out pulumi.Float64Input `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total pulumi.Float64Input `pulumi:"total"`
}

func (NodeBalancerTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerTransfer)(nil)).Elem()
}

func (i NodeBalancerTransferArgs) ToNodeBalancerTransferOutput() NodeBalancerTransferOutput {
	return i.ToNodeBalancerTransferOutputWithContext(context.Background())
}

func (i NodeBalancerTransferArgs) ToNodeBalancerTransferOutputWithContext(ctx context.Context) NodeBalancerTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerTransferOutput)
}

func (i NodeBalancerTransferArgs) ToOutput(ctx context.Context) pulumix.Output[NodeBalancerTransfer] {
	return pulumix.Output[NodeBalancerTransfer]{
		OutputState: i.ToNodeBalancerTransferOutputWithContext(ctx).OutputState,
	}
}

// NodeBalancerTransferArrayInput is an input type that accepts NodeBalancerTransferArray and NodeBalancerTransferArrayOutput values.
// You can construct a concrete instance of `NodeBalancerTransferArrayInput` via:
//
//	NodeBalancerTransferArray{ NodeBalancerTransferArgs{...} }
type NodeBalancerTransferArrayInput interface {
	pulumi.Input

	ToNodeBalancerTransferArrayOutput() NodeBalancerTransferArrayOutput
	ToNodeBalancerTransferArrayOutputWithContext(context.Context) NodeBalancerTransferArrayOutput
}

type NodeBalancerTransferArray []NodeBalancerTransferInput

func (NodeBalancerTransferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerTransfer)(nil)).Elem()
}

func (i NodeBalancerTransferArray) ToNodeBalancerTransferArrayOutput() NodeBalancerTransferArrayOutput {
	return i.ToNodeBalancerTransferArrayOutputWithContext(context.Background())
}

func (i NodeBalancerTransferArray) ToNodeBalancerTransferArrayOutputWithContext(ctx context.Context) NodeBalancerTransferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeBalancerTransferArrayOutput)
}

func (i NodeBalancerTransferArray) ToOutput(ctx context.Context) pulumix.Output[[]NodeBalancerTransfer] {
	return pulumix.Output[[]NodeBalancerTransfer]{
		OutputState: i.ToNodeBalancerTransferArrayOutputWithContext(ctx).OutputState,
	}
}

type NodeBalancerTransferOutput struct{ *pulumi.OutputState }

func (NodeBalancerTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeBalancerTransfer)(nil)).Elem()
}

func (o NodeBalancerTransferOutput) ToNodeBalancerTransferOutput() NodeBalancerTransferOutput {
	return o
}

func (o NodeBalancerTransferOutput) ToNodeBalancerTransferOutputWithContext(ctx context.Context) NodeBalancerTransferOutput {
	return o
}

func (o NodeBalancerTransferOutput) ToOutput(ctx context.Context) pulumix.Output[NodeBalancerTransfer] {
	return pulumix.Output[NodeBalancerTransfer]{
		OutputState: o.OutputState,
	}
}

// The total transfer, in MB, used by this NodeBalancer for the current month
func (o NodeBalancerTransferOutput) In() pulumi.Float64Output {
	return o.ApplyT(func(v NodeBalancerTransfer) float64 { return v.In }).(pulumi.Float64Output)
}

// The total inbound transfer, in MB, used for this NodeBalancer for the current month
func (o NodeBalancerTransferOutput) Out() pulumi.Float64Output {
	return o.ApplyT(func(v NodeBalancerTransfer) float64 { return v.Out }).(pulumi.Float64Output)
}

// The total outbound transfer, in MB, used for this NodeBalancer for the current month
func (o NodeBalancerTransferOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v NodeBalancerTransfer) float64 { return v.Total }).(pulumi.Float64Output)
}

type NodeBalancerTransferArrayOutput struct{ *pulumi.OutputState }

func (NodeBalancerTransferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeBalancerTransfer)(nil)).Elem()
}

func (o NodeBalancerTransferArrayOutput) ToNodeBalancerTransferArrayOutput() NodeBalancerTransferArrayOutput {
	return o
}

func (o NodeBalancerTransferArrayOutput) ToNodeBalancerTransferArrayOutputWithContext(ctx context.Context) NodeBalancerTransferArrayOutput {
	return o
}

func (o NodeBalancerTransferArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NodeBalancerTransfer] {
	return pulumix.Output[[]NodeBalancerTransfer]{
		OutputState: o.OutputState,
	}
}

func (o NodeBalancerTransferArrayOutput) Index(i pulumi.IntInput) NodeBalancerTransferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeBalancerTransfer {
		return vs[0].([]NodeBalancerTransfer)[vs[1].(int)]
	}).(NodeBalancerTransferOutput)
}

type ObjectStorageBucketCert struct {
	// The Base64 encoded and PEM formatted SSL certificate.
	Certificate string `pulumi:"certificate"`
	// The private key associated with the TLS/SSL certificate.
	PrivateKey string `pulumi:"privateKey"`
}

// ObjectStorageBucketCertInput is an input type that accepts ObjectStorageBucketCertArgs and ObjectStorageBucketCertOutput values.
// You can construct a concrete instance of `ObjectStorageBucketCertInput` via:
//
//	ObjectStorageBucketCertArgs{...}
type ObjectStorageBucketCertInput interface {
	pulumi.Input

	ToObjectStorageBucketCertOutput() ObjectStorageBucketCertOutput
	ToObjectStorageBucketCertOutputWithContext(context.Context) ObjectStorageBucketCertOutput
}

type ObjectStorageBucketCertArgs struct {
	// The Base64 encoded and PEM formatted SSL certificate.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// The private key associated with the TLS/SSL certificate.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (ObjectStorageBucketCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketCert)(nil)).Elem()
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertOutput() ObjectStorageBucketCertOutput {
	return i.ToObjectStorageBucketCertOutputWithContext(context.Background())
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertOutputWithContext(ctx context.Context) ObjectStorageBucketCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketCertOutput)
}

func (i ObjectStorageBucketCertArgs) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketCert] {
	return pulumix.Output[ObjectStorageBucketCert]{
		OutputState: i.ToObjectStorageBucketCertOutputWithContext(ctx).OutputState,
	}
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return i.ToObjectStorageBucketCertPtrOutputWithContext(context.Background())
}

func (i ObjectStorageBucketCertArgs) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketCertOutput).ToObjectStorageBucketCertPtrOutputWithContext(ctx)
}

// ObjectStorageBucketCertPtrInput is an input type that accepts ObjectStorageBucketCertArgs, ObjectStorageBucketCertPtr and ObjectStorageBucketCertPtrOutput values.
// You can construct a concrete instance of `ObjectStorageBucketCertPtrInput` via:
//
//	        ObjectStorageBucketCertArgs{...}
//
//	or:
//
//	        nil
type ObjectStorageBucketCertPtrInput interface {
	pulumi.Input

	ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput
	ToObjectStorageBucketCertPtrOutputWithContext(context.Context) ObjectStorageBucketCertPtrOutput
}

type objectStorageBucketCertPtrType ObjectStorageBucketCertArgs

func ObjectStorageBucketCertPtr(v *ObjectStorageBucketCertArgs) ObjectStorageBucketCertPtrInput {
	return (*objectStorageBucketCertPtrType)(v)
}

func (*objectStorageBucketCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketCert)(nil)).Elem()
}

func (i *objectStorageBucketCertPtrType) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return i.ToObjectStorageBucketCertPtrOutputWithContext(context.Background())
}

func (i *objectStorageBucketCertPtrType) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketCertPtrOutput)
}

func (i *objectStorageBucketCertPtrType) ToOutput(ctx context.Context) pulumix.Output[*ObjectStorageBucketCert] {
	return pulumix.Output[*ObjectStorageBucketCert]{
		OutputState: i.ToObjectStorageBucketCertPtrOutputWithContext(ctx).OutputState,
	}
}

type ObjectStorageBucketCertOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketCert)(nil)).Elem()
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertOutput() ObjectStorageBucketCertOutput {
	return o
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertOutputWithContext(ctx context.Context) ObjectStorageBucketCertOutput {
	return o
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return o.ToObjectStorageBucketCertPtrOutputWithContext(context.Background())
}

func (o ObjectStorageBucketCertOutput) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectStorageBucketCert) *ObjectStorageBucketCert {
		return &v
	}).(ObjectStorageBucketCertPtrOutput)
}

func (o ObjectStorageBucketCertOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketCert] {
	return pulumix.Output[ObjectStorageBucketCert]{
		OutputState: o.OutputState,
	}
}

// The Base64 encoded and PEM formatted SSL certificate.
func (o ObjectStorageBucketCertOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageBucketCert) string { return v.Certificate }).(pulumi.StringOutput)
}

// The private key associated with the TLS/SSL certificate.
func (o ObjectStorageBucketCertOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageBucketCert) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type ObjectStorageBucketCertPtrOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketCert)(nil)).Elem()
}

func (o ObjectStorageBucketCertPtrOutput) ToObjectStorageBucketCertPtrOutput() ObjectStorageBucketCertPtrOutput {
	return o
}

func (o ObjectStorageBucketCertPtrOutput) ToObjectStorageBucketCertPtrOutputWithContext(ctx context.Context) ObjectStorageBucketCertPtrOutput {
	return o
}

func (o ObjectStorageBucketCertPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ObjectStorageBucketCert] {
	return pulumix.Output[*ObjectStorageBucketCert]{
		OutputState: o.OutputState,
	}
}

func (o ObjectStorageBucketCertPtrOutput) Elem() ObjectStorageBucketCertOutput {
	return o.ApplyT(func(v *ObjectStorageBucketCert) ObjectStorageBucketCert {
		if v != nil {
			return *v
		}
		var ret ObjectStorageBucketCert
		return ret
	}).(ObjectStorageBucketCertOutput)
}

// The Base64 encoded and PEM formatted SSL certificate.
func (o ObjectStorageBucketCertPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketCert) *string {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The private key associated with the TLS/SSL certificate.
func (o ObjectStorageBucketCertPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketCert) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type ObjectStorageBucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	//
	// * `expiration` - (Optional) Specifies a period in the object's expire.
	//
	// * `noncurrentVersionExpiration` - (Optional) Specifies when non-current object versions expire.
	AbortIncompleteMultipartUploadDays *int `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies whether the lifecycle rule is active.
	Enabled    bool                                        `pulumi:"enabled"`
	Expiration *ObjectStorageBucketLifecycleRuleExpiration `pulumi:"expiration"`
	// The unique identifier for the rule.
	Id                          *string                                                      `pulumi:"id"`
	NoncurrentVersionExpiration *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// The object key prefix identifying one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
}

// ObjectStorageBucketLifecycleRuleInput is an input type that accepts ObjectStorageBucketLifecycleRuleArgs and ObjectStorageBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleInput` via:
//
//	ObjectStorageBucketLifecycleRuleArgs{...}
type ObjectStorageBucketLifecycleRuleInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleOutput() ObjectStorageBucketLifecycleRuleOutput
	ToObjectStorageBucketLifecycleRuleOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleOutput
}

type ObjectStorageBucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	//
	// * `expiration` - (Optional) Specifies a period in the object's expire.
	//
	// * `noncurrentVersionExpiration` - (Optional) Specifies when non-current object versions expire.
	AbortIncompleteMultipartUploadDays pulumi.IntPtrInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies whether the lifecycle rule is active.
	Enabled    pulumi.BoolInput                                   `pulumi:"enabled"`
	Expiration ObjectStorageBucketLifecycleRuleExpirationPtrInput `pulumi:"expiration"`
	// The unique identifier for the rule.
	Id                          pulumi.StringPtrInput                                               `pulumi:"id"`
	NoncurrentVersionExpiration ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// The object key prefix identifying one or more objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ObjectStorageBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleArgs) ToObjectStorageBucketLifecycleRuleOutput() ObjectStorageBucketLifecycleRuleOutput {
	return i.ToObjectStorageBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleArgs) ToObjectStorageBucketLifecycleRuleOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleOutput)
}

func (i ObjectStorageBucketLifecycleRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketLifecycleRule] {
	return pulumix.Output[ObjectStorageBucketLifecycleRule]{
		OutputState: i.ToObjectStorageBucketLifecycleRuleOutputWithContext(ctx).OutputState,
	}
}

// ObjectStorageBucketLifecycleRuleArrayInput is an input type that accepts ObjectStorageBucketLifecycleRuleArray and ObjectStorageBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleArrayInput` via:
//
//	ObjectStorageBucketLifecycleRuleArray{ ObjectStorageBucketLifecycleRuleArgs{...} }
type ObjectStorageBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleArrayOutput() ObjectStorageBucketLifecycleRuleArrayOutput
	ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleArrayOutput
}

type ObjectStorageBucketLifecycleRuleArray []ObjectStorageBucketLifecycleRuleInput

func (ObjectStorageBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleArray) ToObjectStorageBucketLifecycleRuleArrayOutput() ObjectStorageBucketLifecycleRuleArrayOutput {
	return i.ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleArray) ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleArrayOutput)
}

func (i ObjectStorageBucketLifecycleRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ObjectStorageBucketLifecycleRule] {
	return pulumix.Output[[]ObjectStorageBucketLifecycleRule]{
		OutputState: i.ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ObjectStorageBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleOutput) ToObjectStorageBucketLifecycleRuleOutput() ObjectStorageBucketLifecycleRuleOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleOutput) ToObjectStorageBucketLifecycleRuleOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketLifecycleRule] {
	return pulumix.Output[ObjectStorageBucketLifecycleRule]{
		OutputState: o.OutputState,
	}
}

// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
//
// * `expiration` - (Optional) Specifies a period in the object's expire.
//
// * `noncurrentVersionExpiration` - (Optional) Specifies when non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntPtrOutput)
}

// Specifies whether the lifecycle rule is active.
func (o ObjectStorageBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ObjectStorageBucketLifecycleRuleOutput) Expiration() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *ObjectStorageBucketLifecycleRuleExpiration {
		return v.Expiration
	}).(ObjectStorageBucketLifecycleRuleExpirationPtrOutput)
}

// The unique identifier for the rule.
func (o ObjectStorageBucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ObjectStorageBucketLifecycleRuleOutput) NoncurrentVersionExpiration() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return v.NoncurrentVersionExpiration
	}).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// The object key prefix identifying one or more objects to which the rule applies.
func (o ObjectStorageBucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ObjectStorageBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageBucketLifecycleRule)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) ToObjectStorageBucketLifecycleRuleArrayOutput() ObjectStorageBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) ToObjectStorageBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ObjectStorageBucketLifecycleRule] {
	return pulumix.Output[[]ObjectStorageBucketLifecycleRule]{
		OutputState: o.OutputState,
	}
}

func (o ObjectStorageBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) ObjectStorageBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStorageBucketLifecycleRule {
		return vs[0].([]ObjectStorageBucketLifecycleRule)[vs[1].(int)]
	}).(ObjectStorageBucketLifecycleRuleOutput)
}

type ObjectStorageBucketLifecycleRuleExpiration struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date *string `pulumi:"date"`
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days *int `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

// ObjectStorageBucketLifecycleRuleExpirationInput is an input type that accepts ObjectStorageBucketLifecycleRuleExpirationArgs and ObjectStorageBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleExpirationInput` via:
//
//	ObjectStorageBucketLifecycleRuleExpirationArgs{...}
type ObjectStorageBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleExpirationOutput() ObjectStorageBucketLifecycleRuleExpirationOutput
	ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleExpirationOutput
}

type ObjectStorageBucketLifecycleRuleExpirationArgs struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
}

func (ObjectStorageBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationOutput() ObjectStorageBucketLifecycleRuleExpirationOutput {
	return i.ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleExpirationOutput)
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketLifecycleRuleExpiration] {
	return pulumix.Output[ObjectStorageBucketLifecycleRuleExpiration]{
		OutputState: i.ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(ctx).OutputState,
	}
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleExpirationArgs) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleExpirationOutput).ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

// ObjectStorageBucketLifecycleRuleExpirationPtrInput is an input type that accepts ObjectStorageBucketLifecycleRuleExpirationArgs, ObjectStorageBucketLifecycleRuleExpirationPtr and ObjectStorageBucketLifecycleRuleExpirationPtrOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleExpirationPtrInput` via:
//
//	        ObjectStorageBucketLifecycleRuleExpirationArgs{...}
//
//	or:
//
//	        nil
type ObjectStorageBucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput
	ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput
}

type objectStorageBucketLifecycleRuleExpirationPtrType ObjectStorageBucketLifecycleRuleExpirationArgs

func ObjectStorageBucketLifecycleRuleExpirationPtr(v *ObjectStorageBucketLifecycleRuleExpirationArgs) ObjectStorageBucketLifecycleRuleExpirationPtrInput {
	return (*objectStorageBucketLifecycleRuleExpirationPtrType)(v)
}

func (*objectStorageBucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *objectStorageBucketLifecycleRuleExpirationPtrType) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *objectStorageBucketLifecycleRuleExpirationPtrType) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleExpirationPtrOutput)
}

func (i *objectStorageBucketLifecycleRuleExpirationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ObjectStorageBucketLifecycleRuleExpiration] {
	return pulumix.Output[*ObjectStorageBucketLifecycleRuleExpiration]{
		OutputState: i.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx).OutputState,
	}
}

type ObjectStorageBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationOutput() ObjectStorageBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectStorageBucketLifecycleRuleExpiration) *ObjectStorageBucketLifecycleRuleExpiration {
		return &v
	}).(ObjectStorageBucketLifecycleRuleExpirationPtrOutput)
}

func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketLifecycleRuleExpiration] {
	return pulumix.Output[ObjectStorageBucketLifecycleRuleExpiration]{
		OutputState: o.OutputState,
	}
}

// Specifies the date after which you want the corresponding action to take effect.
func (o ObjectStorageBucketLifecycleRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
func (o ObjectStorageBucketLifecycleRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
func (o ObjectStorageBucketLifecycleRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type ObjectStorageBucketLifecycleRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutput() ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ObjectStorageBucketLifecycleRuleExpiration] {
	return pulumix.Output[*ObjectStorageBucketLifecycleRuleExpiration]{
		OutputState: o.OutputState,
	}
}

func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) Elem() ObjectStorageBucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) ObjectStorageBucketLifecycleRuleExpiration {
		if v != nil {
			return *v
		}
		var ret ObjectStorageBucketLifecycleRuleExpiration
		return ret
	}).(ObjectStorageBucketLifecycleRuleExpirationOutput)
}

// Specifies the date after which you want the corresponding action to take effect.
func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
func (o ObjectStorageBucketLifecycleRuleExpirationPtrOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleExpiration) *bool {
		if v == nil {
			return nil
		}
		return v.ExpiredObjectDeleteMarker
	}).(pulumi.BoolPtrOutput)
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration struct {
	// Specifies the number of days non-current object versions expire.
	Days int `pulumi:"days"`
}

// ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput is an input type that accepts ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs and ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput` via:
//
//	ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	// Specifies the number of days non-current object versions expire.
	Days pulumi.IntInput `pulumi:"days"`
}

func (ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration] {
	return pulumix.Output[ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration]{
		OutputState: i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx).OutputState,
	}
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput).ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

// ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput is an input type that accepts ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs, ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtr and ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput` via:
//
//	        ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
//
//	or:
//
//	        nil
type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
	ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
}

type objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs

func ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtr(v *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput {
	return (*objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType)(v)
}

func (*objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i *objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

func (i *objectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration] {
	return pulumix.Output[*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration]{
		OutputState: i.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx).OutputState,
	}
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
		return &v
	}).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration] {
	return pulumix.Output[ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration]{
		OutputState: o.OutputState,
	}
}

// Specifies the number of days non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration] {
	return pulumix.Output[*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration]{
		OutputState: o.OutputState,
	}
}

func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Elem() ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
		if v != nil {
			return *v
		}
		var ret ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration
		return ret
	}).(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// Specifies the number of days non-current object versions expire.
func (o ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return &v.Days
	}).(pulumi.IntPtrOutput)
}

type ObjectStorageKeyBucketAccess struct {
	// The unique label of the bucket to which the key will grant limited access.
	BucketName string `pulumi:"bucketName"`
	// The Object Storage cluster where a bucket to which the key is granting access is hosted.
	Cluster string `pulumi:"cluster"`
	// This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
	Permissions string `pulumi:"permissions"`
}

// ObjectStorageKeyBucketAccessInput is an input type that accepts ObjectStorageKeyBucketAccessArgs and ObjectStorageKeyBucketAccessOutput values.
// You can construct a concrete instance of `ObjectStorageKeyBucketAccessInput` via:
//
//	ObjectStorageKeyBucketAccessArgs{...}
type ObjectStorageKeyBucketAccessInput interface {
	pulumi.Input

	ToObjectStorageKeyBucketAccessOutput() ObjectStorageKeyBucketAccessOutput
	ToObjectStorageKeyBucketAccessOutputWithContext(context.Context) ObjectStorageKeyBucketAccessOutput
}

type ObjectStorageKeyBucketAccessArgs struct {
	// The unique label of the bucket to which the key will grant limited access.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The Object Storage cluster where a bucket to which the key is granting access is hosted.
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (ObjectStorageKeyBucketAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (i ObjectStorageKeyBucketAccessArgs) ToObjectStorageKeyBucketAccessOutput() ObjectStorageKeyBucketAccessOutput {
	return i.ToObjectStorageKeyBucketAccessOutputWithContext(context.Background())
}

func (i ObjectStorageKeyBucketAccessArgs) ToObjectStorageKeyBucketAccessOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageKeyBucketAccessOutput)
}

func (i ObjectStorageKeyBucketAccessArgs) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageKeyBucketAccess] {
	return pulumix.Output[ObjectStorageKeyBucketAccess]{
		OutputState: i.ToObjectStorageKeyBucketAccessOutputWithContext(ctx).OutputState,
	}
}

// ObjectStorageKeyBucketAccessArrayInput is an input type that accepts ObjectStorageKeyBucketAccessArray and ObjectStorageKeyBucketAccessArrayOutput values.
// You can construct a concrete instance of `ObjectStorageKeyBucketAccessArrayInput` via:
//
//	ObjectStorageKeyBucketAccessArray{ ObjectStorageKeyBucketAccessArgs{...} }
type ObjectStorageKeyBucketAccessArrayInput interface {
	pulumi.Input

	ToObjectStorageKeyBucketAccessArrayOutput() ObjectStorageKeyBucketAccessArrayOutput
	ToObjectStorageKeyBucketAccessArrayOutputWithContext(context.Context) ObjectStorageKeyBucketAccessArrayOutput
}

type ObjectStorageKeyBucketAccessArray []ObjectStorageKeyBucketAccessInput

func (ObjectStorageKeyBucketAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (i ObjectStorageKeyBucketAccessArray) ToObjectStorageKeyBucketAccessArrayOutput() ObjectStorageKeyBucketAccessArrayOutput {
	return i.ToObjectStorageKeyBucketAccessArrayOutputWithContext(context.Background())
}

func (i ObjectStorageKeyBucketAccessArray) ToObjectStorageKeyBucketAccessArrayOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageKeyBucketAccessArrayOutput)
}

func (i ObjectStorageKeyBucketAccessArray) ToOutput(ctx context.Context) pulumix.Output[[]ObjectStorageKeyBucketAccess] {
	return pulumix.Output[[]ObjectStorageKeyBucketAccess]{
		OutputState: i.ToObjectStorageKeyBucketAccessArrayOutputWithContext(ctx).OutputState,
	}
}

type ObjectStorageKeyBucketAccessOutput struct{ *pulumi.OutputState }

func (ObjectStorageKeyBucketAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (o ObjectStorageKeyBucketAccessOutput) ToObjectStorageKeyBucketAccessOutput() ObjectStorageKeyBucketAccessOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessOutput) ToObjectStorageKeyBucketAccessOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectStorageKeyBucketAccess] {
	return pulumix.Output[ObjectStorageKeyBucketAccess]{
		OutputState: o.OutputState,
	}
}

// The unique label of the bucket to which the key will grant limited access.
func (o ObjectStorageKeyBucketAccessOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageKeyBucketAccess) string { return v.BucketName }).(pulumi.StringOutput)
}

// The Object Storage cluster where a bucket to which the key is granting access is hosted.
func (o ObjectStorageKeyBucketAccessOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageKeyBucketAccess) string { return v.Cluster }).(pulumi.StringOutput)
}

// This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
func (o ObjectStorageKeyBucketAccessOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageKeyBucketAccess) string { return v.Permissions }).(pulumi.StringOutput)
}

type ObjectStorageKeyBucketAccessArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageKeyBucketAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageKeyBucketAccess)(nil)).Elem()
}

func (o ObjectStorageKeyBucketAccessArrayOutput) ToObjectStorageKeyBucketAccessArrayOutput() ObjectStorageKeyBucketAccessArrayOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessArrayOutput) ToObjectStorageKeyBucketAccessArrayOutputWithContext(ctx context.Context) ObjectStorageKeyBucketAccessArrayOutput {
	return o
}

func (o ObjectStorageKeyBucketAccessArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ObjectStorageKeyBucketAccess] {
	return pulumix.Output[[]ObjectStorageKeyBucketAccess]{
		OutputState: o.OutputState,
	}
}

func (o ObjectStorageKeyBucketAccessArrayOutput) Index(i pulumi.IntInput) ObjectStorageKeyBucketAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStorageKeyBucketAccess {
		return vs[0].([]ObjectStorageKeyBucketAccess)[vs[1].(int)]
	}).(ObjectStorageKeyBucketAccessOutput)
}

type StackScriptUserDefinedField struct {
	// The default value. If not specified, this value will be used.
	Default string `pulumi:"default"`
	// An example value for the field.
	Example string `pulumi:"example"`
	// The StackScript's label is for display purposes only.
	Label string `pulumi:"label"`
	// A list of acceptable values for the field in any quantity, combination or order.
	ManyOf string `pulumi:"manyOf"`
	// The name of the field.
	Name string `pulumi:"name"`
	// A list of acceptable single values for the field.
	OneOf string `pulumi:"oneOf"`
}

// StackScriptUserDefinedFieldInput is an input type that accepts StackScriptUserDefinedFieldArgs and StackScriptUserDefinedFieldOutput values.
// You can construct a concrete instance of `StackScriptUserDefinedFieldInput` via:
//
//	StackScriptUserDefinedFieldArgs{...}
type StackScriptUserDefinedFieldInput interface {
	pulumi.Input

	ToStackScriptUserDefinedFieldOutput() StackScriptUserDefinedFieldOutput
	ToStackScriptUserDefinedFieldOutputWithContext(context.Context) StackScriptUserDefinedFieldOutput
}

type StackScriptUserDefinedFieldArgs struct {
	// The default value. If not specified, this value will be used.
	Default pulumi.StringInput `pulumi:"default"`
	// An example value for the field.
	Example pulumi.StringInput `pulumi:"example"`
	// The StackScript's label is for display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// A list of acceptable values for the field in any quantity, combination or order.
	ManyOf pulumi.StringInput `pulumi:"manyOf"`
	// The name of the field.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of acceptable single values for the field.
	OneOf pulumi.StringInput `pulumi:"oneOf"`
}

func (StackScriptUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackScriptUserDefinedField)(nil)).Elem()
}

func (i StackScriptUserDefinedFieldArgs) ToStackScriptUserDefinedFieldOutput() StackScriptUserDefinedFieldOutput {
	return i.ToStackScriptUserDefinedFieldOutputWithContext(context.Background())
}

func (i StackScriptUserDefinedFieldArgs) ToStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackScriptUserDefinedFieldOutput)
}

func (i StackScriptUserDefinedFieldArgs) ToOutput(ctx context.Context) pulumix.Output[StackScriptUserDefinedField] {
	return pulumix.Output[StackScriptUserDefinedField]{
		OutputState: i.ToStackScriptUserDefinedFieldOutputWithContext(ctx).OutputState,
	}
}

// StackScriptUserDefinedFieldArrayInput is an input type that accepts StackScriptUserDefinedFieldArray and StackScriptUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `StackScriptUserDefinedFieldArrayInput` via:
//
//	StackScriptUserDefinedFieldArray{ StackScriptUserDefinedFieldArgs{...} }
type StackScriptUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToStackScriptUserDefinedFieldArrayOutput() StackScriptUserDefinedFieldArrayOutput
	ToStackScriptUserDefinedFieldArrayOutputWithContext(context.Context) StackScriptUserDefinedFieldArrayOutput
}

type StackScriptUserDefinedFieldArray []StackScriptUserDefinedFieldInput

func (StackScriptUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackScriptUserDefinedField)(nil)).Elem()
}

func (i StackScriptUserDefinedFieldArray) ToStackScriptUserDefinedFieldArrayOutput() StackScriptUserDefinedFieldArrayOutput {
	return i.ToStackScriptUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i StackScriptUserDefinedFieldArray) ToStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackScriptUserDefinedFieldArrayOutput)
}

func (i StackScriptUserDefinedFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]StackScriptUserDefinedField] {
	return pulumix.Output[[]StackScriptUserDefinedField]{
		OutputState: i.ToStackScriptUserDefinedFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type StackScriptUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (StackScriptUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackScriptUserDefinedField)(nil)).Elem()
}

func (o StackScriptUserDefinedFieldOutput) ToStackScriptUserDefinedFieldOutput() StackScriptUserDefinedFieldOutput {
	return o
}

func (o StackScriptUserDefinedFieldOutput) ToStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldOutput {
	return o
}

func (o StackScriptUserDefinedFieldOutput) ToOutput(ctx context.Context) pulumix.Output[StackScriptUserDefinedField] {
	return pulumix.Output[StackScriptUserDefinedField]{
		OutputState: o.OutputState,
	}
}

// The default value. If not specified, this value will be used.
func (o StackScriptUserDefinedFieldOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) string { return v.Default }).(pulumi.StringOutput)
}

// An example value for the field.
func (o StackScriptUserDefinedFieldOutput) Example() pulumi.StringOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) string { return v.Example }).(pulumi.StringOutput)
}

// The StackScript's label is for display purposes only.
func (o StackScriptUserDefinedFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) string { return v.Label }).(pulumi.StringOutput)
}

// A list of acceptable values for the field in any quantity, combination or order.
func (o StackScriptUserDefinedFieldOutput) ManyOf() pulumi.StringOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) string { return v.ManyOf }).(pulumi.StringOutput)
}

// The name of the field.
func (o StackScriptUserDefinedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) string { return v.Name }).(pulumi.StringOutput)
}

// A list of acceptable single values for the field.
func (o StackScriptUserDefinedFieldOutput) OneOf() pulumi.StringOutput {
	return o.ApplyT(func(v StackScriptUserDefinedField) string { return v.OneOf }).(pulumi.StringOutput)
}

type StackScriptUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (StackScriptUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackScriptUserDefinedField)(nil)).Elem()
}

func (o StackScriptUserDefinedFieldArrayOutput) ToStackScriptUserDefinedFieldArrayOutput() StackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o StackScriptUserDefinedFieldArrayOutput) ToStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) StackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o StackScriptUserDefinedFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StackScriptUserDefinedField] {
	return pulumix.Output[[]StackScriptUserDefinedField]{
		OutputState: o.OutputState,
	}
}

func (o StackScriptUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) StackScriptUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackScriptUserDefinedField {
		return vs[0].([]StackScriptUserDefinedField)[vs[1].(int)]
	}).(StackScriptUserDefinedFieldOutput)
}

type UserDomainGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserDomainGrantInput is an input type that accepts UserDomainGrantArgs and UserDomainGrantOutput values.
// You can construct a concrete instance of `UserDomainGrantInput` via:
//
//	UserDomainGrantArgs{...}
type UserDomainGrantInput interface {
	pulumi.Input

	ToUserDomainGrantOutput() UserDomainGrantOutput
	ToUserDomainGrantOutputWithContext(context.Context) UserDomainGrantOutput
}

type UserDomainGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserDomainGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDomainGrant)(nil)).Elem()
}

func (i UserDomainGrantArgs) ToUserDomainGrantOutput() UserDomainGrantOutput {
	return i.ToUserDomainGrantOutputWithContext(context.Background())
}

func (i UserDomainGrantArgs) ToUserDomainGrantOutputWithContext(ctx context.Context) UserDomainGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDomainGrantOutput)
}

func (i UserDomainGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserDomainGrant] {
	return pulumix.Output[UserDomainGrant]{
		OutputState: i.ToUserDomainGrantOutputWithContext(ctx).OutputState,
	}
}

// UserDomainGrantArrayInput is an input type that accepts UserDomainGrantArray and UserDomainGrantArrayOutput values.
// You can construct a concrete instance of `UserDomainGrantArrayInput` via:
//
//	UserDomainGrantArray{ UserDomainGrantArgs{...} }
type UserDomainGrantArrayInput interface {
	pulumi.Input

	ToUserDomainGrantArrayOutput() UserDomainGrantArrayOutput
	ToUserDomainGrantArrayOutputWithContext(context.Context) UserDomainGrantArrayOutput
}

type UserDomainGrantArray []UserDomainGrantInput

func (UserDomainGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDomainGrant)(nil)).Elem()
}

func (i UserDomainGrantArray) ToUserDomainGrantArrayOutput() UserDomainGrantArrayOutput {
	return i.ToUserDomainGrantArrayOutputWithContext(context.Background())
}

func (i UserDomainGrantArray) ToUserDomainGrantArrayOutputWithContext(ctx context.Context) UserDomainGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDomainGrantArrayOutput)
}

func (i UserDomainGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserDomainGrant] {
	return pulumix.Output[[]UserDomainGrant]{
		OutputState: i.ToUserDomainGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserDomainGrantOutput struct{ *pulumi.OutputState }

func (UserDomainGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDomainGrant)(nil)).Elem()
}

func (o UserDomainGrantOutput) ToUserDomainGrantOutput() UserDomainGrantOutput {
	return o
}

func (o UserDomainGrantOutput) ToUserDomainGrantOutputWithContext(ctx context.Context) UserDomainGrantOutput {
	return o
}

func (o UserDomainGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserDomainGrant] {
	return pulumix.Output[UserDomainGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserDomainGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserDomainGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserDomainGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserDomainGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserDomainGrantArrayOutput struct{ *pulumi.OutputState }

func (UserDomainGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDomainGrant)(nil)).Elem()
}

func (o UserDomainGrantArrayOutput) ToUserDomainGrantArrayOutput() UserDomainGrantArrayOutput {
	return o
}

func (o UserDomainGrantArrayOutput) ToUserDomainGrantArrayOutputWithContext(ctx context.Context) UserDomainGrantArrayOutput {
	return o
}

func (o UserDomainGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserDomainGrant] {
	return pulumix.Output[[]UserDomainGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserDomainGrantArrayOutput) Index(i pulumi.IntInput) UserDomainGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDomainGrant {
		return vs[0].([]UserDomainGrant)[vs[1].(int)]
	}).(UserDomainGrantOutput)
}

type UserFirewallGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserFirewallGrantInput is an input type that accepts UserFirewallGrantArgs and UserFirewallGrantOutput values.
// You can construct a concrete instance of `UserFirewallGrantInput` via:
//
//	UserFirewallGrantArgs{...}
type UserFirewallGrantInput interface {
	pulumi.Input

	ToUserFirewallGrantOutput() UserFirewallGrantOutput
	ToUserFirewallGrantOutputWithContext(context.Context) UserFirewallGrantOutput
}

type UserFirewallGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserFirewallGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFirewallGrant)(nil)).Elem()
}

func (i UserFirewallGrantArgs) ToUserFirewallGrantOutput() UserFirewallGrantOutput {
	return i.ToUserFirewallGrantOutputWithContext(context.Background())
}

func (i UserFirewallGrantArgs) ToUserFirewallGrantOutputWithContext(ctx context.Context) UserFirewallGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFirewallGrantOutput)
}

func (i UserFirewallGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserFirewallGrant] {
	return pulumix.Output[UserFirewallGrant]{
		OutputState: i.ToUserFirewallGrantOutputWithContext(ctx).OutputState,
	}
}

// UserFirewallGrantArrayInput is an input type that accepts UserFirewallGrantArray and UserFirewallGrantArrayOutput values.
// You can construct a concrete instance of `UserFirewallGrantArrayInput` via:
//
//	UserFirewallGrantArray{ UserFirewallGrantArgs{...} }
type UserFirewallGrantArrayInput interface {
	pulumi.Input

	ToUserFirewallGrantArrayOutput() UserFirewallGrantArrayOutput
	ToUserFirewallGrantArrayOutputWithContext(context.Context) UserFirewallGrantArrayOutput
}

type UserFirewallGrantArray []UserFirewallGrantInput

func (UserFirewallGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFirewallGrant)(nil)).Elem()
}

func (i UserFirewallGrantArray) ToUserFirewallGrantArrayOutput() UserFirewallGrantArrayOutput {
	return i.ToUserFirewallGrantArrayOutputWithContext(context.Background())
}

func (i UserFirewallGrantArray) ToUserFirewallGrantArrayOutputWithContext(ctx context.Context) UserFirewallGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFirewallGrantArrayOutput)
}

func (i UserFirewallGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserFirewallGrant] {
	return pulumix.Output[[]UserFirewallGrant]{
		OutputState: i.ToUserFirewallGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserFirewallGrantOutput struct{ *pulumi.OutputState }

func (UserFirewallGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFirewallGrant)(nil)).Elem()
}

func (o UserFirewallGrantOutput) ToUserFirewallGrantOutput() UserFirewallGrantOutput {
	return o
}

func (o UserFirewallGrantOutput) ToUserFirewallGrantOutputWithContext(ctx context.Context) UserFirewallGrantOutput {
	return o
}

func (o UserFirewallGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserFirewallGrant] {
	return pulumix.Output[UserFirewallGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserFirewallGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserFirewallGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserFirewallGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserFirewallGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserFirewallGrantArrayOutput struct{ *pulumi.OutputState }

func (UserFirewallGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFirewallGrant)(nil)).Elem()
}

func (o UserFirewallGrantArrayOutput) ToUserFirewallGrantArrayOutput() UserFirewallGrantArrayOutput {
	return o
}

func (o UserFirewallGrantArrayOutput) ToUserFirewallGrantArrayOutputWithContext(ctx context.Context) UserFirewallGrantArrayOutput {
	return o
}

func (o UserFirewallGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserFirewallGrant] {
	return pulumix.Output[[]UserFirewallGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserFirewallGrantArrayOutput) Index(i pulumi.IntInput) UserFirewallGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserFirewallGrant {
		return vs[0].([]UserFirewallGrant)[vs[1].(int)]
	}).(UserFirewallGrantOutput)
}

type UserGlobalGrants struct {
	AccountAccess        *string `pulumi:"accountAccess"`
	AddDatabases         *bool   `pulumi:"addDatabases"`
	AddDomains           *bool   `pulumi:"addDomains"`
	AddFirewalls         *bool   `pulumi:"addFirewalls"`
	AddImages            *bool   `pulumi:"addImages"`
	AddLinodes           *bool   `pulumi:"addLinodes"`
	AddLongview          *bool   `pulumi:"addLongview"`
	AddNodebalancers     *bool   `pulumi:"addNodebalancers"`
	AddStackscripts      *bool   `pulumi:"addStackscripts"`
	AddVolumes           *bool   `pulumi:"addVolumes"`
	CancelAccount        *bool   `pulumi:"cancelAccount"`
	LongviewSubscription *bool   `pulumi:"longviewSubscription"`
}

// UserGlobalGrantsInput is an input type that accepts UserGlobalGrantsArgs and UserGlobalGrantsOutput values.
// You can construct a concrete instance of `UserGlobalGrantsInput` via:
//
//	UserGlobalGrantsArgs{...}
type UserGlobalGrantsInput interface {
	pulumi.Input

	ToUserGlobalGrantsOutput() UserGlobalGrantsOutput
	ToUserGlobalGrantsOutputWithContext(context.Context) UserGlobalGrantsOutput
}

type UserGlobalGrantsArgs struct {
	AccountAccess        pulumi.StringPtrInput `pulumi:"accountAccess"`
	AddDatabases         pulumi.BoolPtrInput   `pulumi:"addDatabases"`
	AddDomains           pulumi.BoolPtrInput   `pulumi:"addDomains"`
	AddFirewalls         pulumi.BoolPtrInput   `pulumi:"addFirewalls"`
	AddImages            pulumi.BoolPtrInput   `pulumi:"addImages"`
	AddLinodes           pulumi.BoolPtrInput   `pulumi:"addLinodes"`
	AddLongview          pulumi.BoolPtrInput   `pulumi:"addLongview"`
	AddNodebalancers     pulumi.BoolPtrInput   `pulumi:"addNodebalancers"`
	AddStackscripts      pulumi.BoolPtrInput   `pulumi:"addStackscripts"`
	AddVolumes           pulumi.BoolPtrInput   `pulumi:"addVolumes"`
	CancelAccount        pulumi.BoolPtrInput   `pulumi:"cancelAccount"`
	LongviewSubscription pulumi.BoolPtrInput   `pulumi:"longviewSubscription"`
}

func (UserGlobalGrantsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGlobalGrants)(nil)).Elem()
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsOutput() UserGlobalGrantsOutput {
	return i.ToUserGlobalGrantsOutputWithContext(context.Background())
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsOutputWithContext(ctx context.Context) UserGlobalGrantsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGlobalGrantsOutput)
}

func (i UserGlobalGrantsArgs) ToOutput(ctx context.Context) pulumix.Output[UserGlobalGrants] {
	return pulumix.Output[UserGlobalGrants]{
		OutputState: i.ToUserGlobalGrantsOutputWithContext(ctx).OutputState,
	}
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return i.ToUserGlobalGrantsPtrOutputWithContext(context.Background())
}

func (i UserGlobalGrantsArgs) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGlobalGrantsOutput).ToUserGlobalGrantsPtrOutputWithContext(ctx)
}

// UserGlobalGrantsPtrInput is an input type that accepts UserGlobalGrantsArgs, UserGlobalGrantsPtr and UserGlobalGrantsPtrOutput values.
// You can construct a concrete instance of `UserGlobalGrantsPtrInput` via:
//
//	        UserGlobalGrantsArgs{...}
//
//	or:
//
//	        nil
type UserGlobalGrantsPtrInput interface {
	pulumi.Input

	ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput
	ToUserGlobalGrantsPtrOutputWithContext(context.Context) UserGlobalGrantsPtrOutput
}

type userGlobalGrantsPtrType UserGlobalGrantsArgs

func UserGlobalGrantsPtr(v *UserGlobalGrantsArgs) UserGlobalGrantsPtrInput {
	return (*userGlobalGrantsPtrType)(v)
}

func (*userGlobalGrantsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGlobalGrants)(nil)).Elem()
}

func (i *userGlobalGrantsPtrType) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return i.ToUserGlobalGrantsPtrOutputWithContext(context.Background())
}

func (i *userGlobalGrantsPtrType) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGlobalGrantsPtrOutput)
}

func (i *userGlobalGrantsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserGlobalGrants] {
	return pulumix.Output[*UserGlobalGrants]{
		OutputState: i.ToUserGlobalGrantsPtrOutputWithContext(ctx).OutputState,
	}
}

type UserGlobalGrantsOutput struct{ *pulumi.OutputState }

func (UserGlobalGrantsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGlobalGrants)(nil)).Elem()
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsOutput() UserGlobalGrantsOutput {
	return o
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsOutputWithContext(ctx context.Context) UserGlobalGrantsOutput {
	return o
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return o.ToUserGlobalGrantsPtrOutputWithContext(context.Background())
}

func (o UserGlobalGrantsOutput) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserGlobalGrants) *UserGlobalGrants {
		return &v
	}).(UserGlobalGrantsPtrOutput)
}

func (o UserGlobalGrantsOutput) ToOutput(ctx context.Context) pulumix.Output[UserGlobalGrants] {
	return pulumix.Output[UserGlobalGrants]{
		OutputState: o.OutputState,
	}
}

func (o UserGlobalGrantsOutput) AccountAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *string { return v.AccountAccess }).(pulumi.StringPtrOutput)
}

func (o UserGlobalGrantsOutput) AddDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddDatabases }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddDomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddDomains }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddFirewalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddFirewalls }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddImages }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddLinodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddLinodes }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddLongview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddLongview }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddNodebalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddNodebalancers }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddStackscripts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddStackscripts }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) AddVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.AddVolumes }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) CancelAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.CancelAccount }).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsOutput) LongviewSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserGlobalGrants) *bool { return v.LongviewSubscription }).(pulumi.BoolPtrOutput)
}

type UserGlobalGrantsPtrOutput struct{ *pulumi.OutputState }

func (UserGlobalGrantsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGlobalGrants)(nil)).Elem()
}

func (o UserGlobalGrantsPtrOutput) ToUserGlobalGrantsPtrOutput() UserGlobalGrantsPtrOutput {
	return o
}

func (o UserGlobalGrantsPtrOutput) ToUserGlobalGrantsPtrOutputWithContext(ctx context.Context) UserGlobalGrantsPtrOutput {
	return o
}

func (o UserGlobalGrantsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserGlobalGrants] {
	return pulumix.Output[*UserGlobalGrants]{
		OutputState: o.OutputState,
	}
}

func (o UserGlobalGrantsPtrOutput) Elem() UserGlobalGrantsOutput {
	return o.ApplyT(func(v *UserGlobalGrants) UserGlobalGrants {
		if v != nil {
			return *v
		}
		var ret UserGlobalGrants
		return ret
	}).(UserGlobalGrantsOutput)
}

func (o UserGlobalGrantsPtrOutput) AccountAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *string {
		if v == nil {
			return nil
		}
		return v.AccountAccess
	}).(pulumi.StringPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddDatabases
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddDomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddDomains
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddFirewalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddFirewalls
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddImages
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddLinodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddLinodes
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddLongview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddLongview
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddNodebalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddNodebalancers
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddStackscripts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddStackscripts
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) AddVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.AddVolumes
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) CancelAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.CancelAccount
	}).(pulumi.BoolPtrOutput)
}

func (o UserGlobalGrantsPtrOutput) LongviewSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserGlobalGrants) *bool {
		if v == nil {
			return nil
		}
		return v.LongviewSubscription
	}).(pulumi.BoolPtrOutput)
}

type UserImageGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserImageGrantInput is an input type that accepts UserImageGrantArgs and UserImageGrantOutput values.
// You can construct a concrete instance of `UserImageGrantInput` via:
//
//	UserImageGrantArgs{...}
type UserImageGrantInput interface {
	pulumi.Input

	ToUserImageGrantOutput() UserImageGrantOutput
	ToUserImageGrantOutputWithContext(context.Context) UserImageGrantOutput
}

type UserImageGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserImageGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserImageGrant)(nil)).Elem()
}

func (i UserImageGrantArgs) ToUserImageGrantOutput() UserImageGrantOutput {
	return i.ToUserImageGrantOutputWithContext(context.Background())
}

func (i UserImageGrantArgs) ToUserImageGrantOutputWithContext(ctx context.Context) UserImageGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserImageGrantOutput)
}

func (i UserImageGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserImageGrant] {
	return pulumix.Output[UserImageGrant]{
		OutputState: i.ToUserImageGrantOutputWithContext(ctx).OutputState,
	}
}

// UserImageGrantArrayInput is an input type that accepts UserImageGrantArray and UserImageGrantArrayOutput values.
// You can construct a concrete instance of `UserImageGrantArrayInput` via:
//
//	UserImageGrantArray{ UserImageGrantArgs{...} }
type UserImageGrantArrayInput interface {
	pulumi.Input

	ToUserImageGrantArrayOutput() UserImageGrantArrayOutput
	ToUserImageGrantArrayOutputWithContext(context.Context) UserImageGrantArrayOutput
}

type UserImageGrantArray []UserImageGrantInput

func (UserImageGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserImageGrant)(nil)).Elem()
}

func (i UserImageGrantArray) ToUserImageGrantArrayOutput() UserImageGrantArrayOutput {
	return i.ToUserImageGrantArrayOutputWithContext(context.Background())
}

func (i UserImageGrantArray) ToUserImageGrantArrayOutputWithContext(ctx context.Context) UserImageGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserImageGrantArrayOutput)
}

func (i UserImageGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserImageGrant] {
	return pulumix.Output[[]UserImageGrant]{
		OutputState: i.ToUserImageGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserImageGrantOutput struct{ *pulumi.OutputState }

func (UserImageGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserImageGrant)(nil)).Elem()
}

func (o UserImageGrantOutput) ToUserImageGrantOutput() UserImageGrantOutput {
	return o
}

func (o UserImageGrantOutput) ToUserImageGrantOutputWithContext(ctx context.Context) UserImageGrantOutput {
	return o
}

func (o UserImageGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserImageGrant] {
	return pulumix.Output[UserImageGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserImageGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserImageGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserImageGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserImageGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserImageGrantArrayOutput struct{ *pulumi.OutputState }

func (UserImageGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserImageGrant)(nil)).Elem()
}

func (o UserImageGrantArrayOutput) ToUserImageGrantArrayOutput() UserImageGrantArrayOutput {
	return o
}

func (o UserImageGrantArrayOutput) ToUserImageGrantArrayOutputWithContext(ctx context.Context) UserImageGrantArrayOutput {
	return o
}

func (o UserImageGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserImageGrant] {
	return pulumix.Output[[]UserImageGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserImageGrantArrayOutput) Index(i pulumi.IntInput) UserImageGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserImageGrant {
		return vs[0].([]UserImageGrant)[vs[1].(int)]
	}).(UserImageGrantOutput)
}

type UserLinodeGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserLinodeGrantInput is an input type that accepts UserLinodeGrantArgs and UserLinodeGrantOutput values.
// You can construct a concrete instance of `UserLinodeGrantInput` via:
//
//	UserLinodeGrantArgs{...}
type UserLinodeGrantInput interface {
	pulumi.Input

	ToUserLinodeGrantOutput() UserLinodeGrantOutput
	ToUserLinodeGrantOutputWithContext(context.Context) UserLinodeGrantOutput
}

type UserLinodeGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserLinodeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLinodeGrant)(nil)).Elem()
}

func (i UserLinodeGrantArgs) ToUserLinodeGrantOutput() UserLinodeGrantOutput {
	return i.ToUserLinodeGrantOutputWithContext(context.Background())
}

func (i UserLinodeGrantArgs) ToUserLinodeGrantOutputWithContext(ctx context.Context) UserLinodeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLinodeGrantOutput)
}

func (i UserLinodeGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserLinodeGrant] {
	return pulumix.Output[UserLinodeGrant]{
		OutputState: i.ToUserLinodeGrantOutputWithContext(ctx).OutputState,
	}
}

// UserLinodeGrantArrayInput is an input type that accepts UserLinodeGrantArray and UserLinodeGrantArrayOutput values.
// You can construct a concrete instance of `UserLinodeGrantArrayInput` via:
//
//	UserLinodeGrantArray{ UserLinodeGrantArgs{...} }
type UserLinodeGrantArrayInput interface {
	pulumi.Input

	ToUserLinodeGrantArrayOutput() UserLinodeGrantArrayOutput
	ToUserLinodeGrantArrayOutputWithContext(context.Context) UserLinodeGrantArrayOutput
}

type UserLinodeGrantArray []UserLinodeGrantInput

func (UserLinodeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLinodeGrant)(nil)).Elem()
}

func (i UserLinodeGrantArray) ToUserLinodeGrantArrayOutput() UserLinodeGrantArrayOutput {
	return i.ToUserLinodeGrantArrayOutputWithContext(context.Background())
}

func (i UserLinodeGrantArray) ToUserLinodeGrantArrayOutputWithContext(ctx context.Context) UserLinodeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLinodeGrantArrayOutput)
}

func (i UserLinodeGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserLinodeGrant] {
	return pulumix.Output[[]UserLinodeGrant]{
		OutputState: i.ToUserLinodeGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserLinodeGrantOutput struct{ *pulumi.OutputState }

func (UserLinodeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLinodeGrant)(nil)).Elem()
}

func (o UserLinodeGrantOutput) ToUserLinodeGrantOutput() UserLinodeGrantOutput {
	return o
}

func (o UserLinodeGrantOutput) ToUserLinodeGrantOutputWithContext(ctx context.Context) UserLinodeGrantOutput {
	return o
}

func (o UserLinodeGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserLinodeGrant] {
	return pulumix.Output[UserLinodeGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserLinodeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserLinodeGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserLinodeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserLinodeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserLinodeGrantArrayOutput struct{ *pulumi.OutputState }

func (UserLinodeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLinodeGrant)(nil)).Elem()
}

func (o UserLinodeGrantArrayOutput) ToUserLinodeGrantArrayOutput() UserLinodeGrantArrayOutput {
	return o
}

func (o UserLinodeGrantArrayOutput) ToUserLinodeGrantArrayOutputWithContext(ctx context.Context) UserLinodeGrantArrayOutput {
	return o
}

func (o UserLinodeGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserLinodeGrant] {
	return pulumix.Output[[]UserLinodeGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserLinodeGrantArrayOutput) Index(i pulumi.IntInput) UserLinodeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserLinodeGrant {
		return vs[0].([]UserLinodeGrant)[vs[1].(int)]
	}).(UserLinodeGrantOutput)
}

type UserLongviewGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserLongviewGrantInput is an input type that accepts UserLongviewGrantArgs and UserLongviewGrantOutput values.
// You can construct a concrete instance of `UserLongviewGrantInput` via:
//
//	UserLongviewGrantArgs{...}
type UserLongviewGrantInput interface {
	pulumi.Input

	ToUserLongviewGrantOutput() UserLongviewGrantOutput
	ToUserLongviewGrantOutputWithContext(context.Context) UserLongviewGrantOutput
}

type UserLongviewGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserLongviewGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLongviewGrant)(nil)).Elem()
}

func (i UserLongviewGrantArgs) ToUserLongviewGrantOutput() UserLongviewGrantOutput {
	return i.ToUserLongviewGrantOutputWithContext(context.Background())
}

func (i UserLongviewGrantArgs) ToUserLongviewGrantOutputWithContext(ctx context.Context) UserLongviewGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLongviewGrantOutput)
}

func (i UserLongviewGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserLongviewGrant] {
	return pulumix.Output[UserLongviewGrant]{
		OutputState: i.ToUserLongviewGrantOutputWithContext(ctx).OutputState,
	}
}

// UserLongviewGrantArrayInput is an input type that accepts UserLongviewGrantArray and UserLongviewGrantArrayOutput values.
// You can construct a concrete instance of `UserLongviewGrantArrayInput` via:
//
//	UserLongviewGrantArray{ UserLongviewGrantArgs{...} }
type UserLongviewGrantArrayInput interface {
	pulumi.Input

	ToUserLongviewGrantArrayOutput() UserLongviewGrantArrayOutput
	ToUserLongviewGrantArrayOutputWithContext(context.Context) UserLongviewGrantArrayOutput
}

type UserLongviewGrantArray []UserLongviewGrantInput

func (UserLongviewGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLongviewGrant)(nil)).Elem()
}

func (i UserLongviewGrantArray) ToUserLongviewGrantArrayOutput() UserLongviewGrantArrayOutput {
	return i.ToUserLongviewGrantArrayOutputWithContext(context.Background())
}

func (i UserLongviewGrantArray) ToUserLongviewGrantArrayOutputWithContext(ctx context.Context) UserLongviewGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLongviewGrantArrayOutput)
}

func (i UserLongviewGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserLongviewGrant] {
	return pulumix.Output[[]UserLongviewGrant]{
		OutputState: i.ToUserLongviewGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserLongviewGrantOutput struct{ *pulumi.OutputState }

func (UserLongviewGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLongviewGrant)(nil)).Elem()
}

func (o UserLongviewGrantOutput) ToUserLongviewGrantOutput() UserLongviewGrantOutput {
	return o
}

func (o UserLongviewGrantOutput) ToUserLongviewGrantOutputWithContext(ctx context.Context) UserLongviewGrantOutput {
	return o
}

func (o UserLongviewGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserLongviewGrant] {
	return pulumix.Output[UserLongviewGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserLongviewGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserLongviewGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserLongviewGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserLongviewGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserLongviewGrantArrayOutput struct{ *pulumi.OutputState }

func (UserLongviewGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserLongviewGrant)(nil)).Elem()
}

func (o UserLongviewGrantArrayOutput) ToUserLongviewGrantArrayOutput() UserLongviewGrantArrayOutput {
	return o
}

func (o UserLongviewGrantArrayOutput) ToUserLongviewGrantArrayOutputWithContext(ctx context.Context) UserLongviewGrantArrayOutput {
	return o
}

func (o UserLongviewGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserLongviewGrant] {
	return pulumix.Output[[]UserLongviewGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserLongviewGrantArrayOutput) Index(i pulumi.IntInput) UserLongviewGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserLongviewGrant {
		return vs[0].([]UserLongviewGrant)[vs[1].(int)]
	}).(UserLongviewGrantOutput)
}

type UserNodebalancerGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserNodebalancerGrantInput is an input type that accepts UserNodebalancerGrantArgs and UserNodebalancerGrantOutput values.
// You can construct a concrete instance of `UserNodebalancerGrantInput` via:
//
//	UserNodebalancerGrantArgs{...}
type UserNodebalancerGrantInput interface {
	pulumi.Input

	ToUserNodebalancerGrantOutput() UserNodebalancerGrantOutput
	ToUserNodebalancerGrantOutputWithContext(context.Context) UserNodebalancerGrantOutput
}

type UserNodebalancerGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserNodebalancerGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNodebalancerGrant)(nil)).Elem()
}

func (i UserNodebalancerGrantArgs) ToUserNodebalancerGrantOutput() UserNodebalancerGrantOutput {
	return i.ToUserNodebalancerGrantOutputWithContext(context.Background())
}

func (i UserNodebalancerGrantArgs) ToUserNodebalancerGrantOutputWithContext(ctx context.Context) UserNodebalancerGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNodebalancerGrantOutput)
}

func (i UserNodebalancerGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserNodebalancerGrant] {
	return pulumix.Output[UserNodebalancerGrant]{
		OutputState: i.ToUserNodebalancerGrantOutputWithContext(ctx).OutputState,
	}
}

// UserNodebalancerGrantArrayInput is an input type that accepts UserNodebalancerGrantArray and UserNodebalancerGrantArrayOutput values.
// You can construct a concrete instance of `UserNodebalancerGrantArrayInput` via:
//
//	UserNodebalancerGrantArray{ UserNodebalancerGrantArgs{...} }
type UserNodebalancerGrantArrayInput interface {
	pulumi.Input

	ToUserNodebalancerGrantArrayOutput() UserNodebalancerGrantArrayOutput
	ToUserNodebalancerGrantArrayOutputWithContext(context.Context) UserNodebalancerGrantArrayOutput
}

type UserNodebalancerGrantArray []UserNodebalancerGrantInput

func (UserNodebalancerGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNodebalancerGrant)(nil)).Elem()
}

func (i UserNodebalancerGrantArray) ToUserNodebalancerGrantArrayOutput() UserNodebalancerGrantArrayOutput {
	return i.ToUserNodebalancerGrantArrayOutputWithContext(context.Background())
}

func (i UserNodebalancerGrantArray) ToUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) UserNodebalancerGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNodebalancerGrantArrayOutput)
}

func (i UserNodebalancerGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserNodebalancerGrant] {
	return pulumix.Output[[]UserNodebalancerGrant]{
		OutputState: i.ToUserNodebalancerGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserNodebalancerGrantOutput struct{ *pulumi.OutputState }

func (UserNodebalancerGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNodebalancerGrant)(nil)).Elem()
}

func (o UserNodebalancerGrantOutput) ToUserNodebalancerGrantOutput() UserNodebalancerGrantOutput {
	return o
}

func (o UserNodebalancerGrantOutput) ToUserNodebalancerGrantOutputWithContext(ctx context.Context) UserNodebalancerGrantOutput {
	return o
}

func (o UserNodebalancerGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserNodebalancerGrant] {
	return pulumix.Output[UserNodebalancerGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserNodebalancerGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserNodebalancerGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserNodebalancerGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserNodebalancerGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserNodebalancerGrantArrayOutput struct{ *pulumi.OutputState }

func (UserNodebalancerGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNodebalancerGrant)(nil)).Elem()
}

func (o UserNodebalancerGrantArrayOutput) ToUserNodebalancerGrantArrayOutput() UserNodebalancerGrantArrayOutput {
	return o
}

func (o UserNodebalancerGrantArrayOutput) ToUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) UserNodebalancerGrantArrayOutput {
	return o
}

func (o UserNodebalancerGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserNodebalancerGrant] {
	return pulumix.Output[[]UserNodebalancerGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserNodebalancerGrantArrayOutput) Index(i pulumi.IntInput) UserNodebalancerGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserNodebalancerGrant {
		return vs[0].([]UserNodebalancerGrant)[vs[1].(int)]
	}).(UserNodebalancerGrantOutput)
}

type UserStackscriptGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserStackscriptGrantInput is an input type that accepts UserStackscriptGrantArgs and UserStackscriptGrantOutput values.
// You can construct a concrete instance of `UserStackscriptGrantInput` via:
//
//	UserStackscriptGrantArgs{...}
type UserStackscriptGrantInput interface {
	pulumi.Input

	ToUserStackscriptGrantOutput() UserStackscriptGrantOutput
	ToUserStackscriptGrantOutputWithContext(context.Context) UserStackscriptGrantOutput
}

type UserStackscriptGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserStackscriptGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserStackscriptGrant)(nil)).Elem()
}

func (i UserStackscriptGrantArgs) ToUserStackscriptGrantOutput() UserStackscriptGrantOutput {
	return i.ToUserStackscriptGrantOutputWithContext(context.Background())
}

func (i UserStackscriptGrantArgs) ToUserStackscriptGrantOutputWithContext(ctx context.Context) UserStackscriptGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserStackscriptGrantOutput)
}

func (i UserStackscriptGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserStackscriptGrant] {
	return pulumix.Output[UserStackscriptGrant]{
		OutputState: i.ToUserStackscriptGrantOutputWithContext(ctx).OutputState,
	}
}

// UserStackscriptGrantArrayInput is an input type that accepts UserStackscriptGrantArray and UserStackscriptGrantArrayOutput values.
// You can construct a concrete instance of `UserStackscriptGrantArrayInput` via:
//
//	UserStackscriptGrantArray{ UserStackscriptGrantArgs{...} }
type UserStackscriptGrantArrayInput interface {
	pulumi.Input

	ToUserStackscriptGrantArrayOutput() UserStackscriptGrantArrayOutput
	ToUserStackscriptGrantArrayOutputWithContext(context.Context) UserStackscriptGrantArrayOutput
}

type UserStackscriptGrantArray []UserStackscriptGrantInput

func (UserStackscriptGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserStackscriptGrant)(nil)).Elem()
}

func (i UserStackscriptGrantArray) ToUserStackscriptGrantArrayOutput() UserStackscriptGrantArrayOutput {
	return i.ToUserStackscriptGrantArrayOutputWithContext(context.Background())
}

func (i UserStackscriptGrantArray) ToUserStackscriptGrantArrayOutputWithContext(ctx context.Context) UserStackscriptGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserStackscriptGrantArrayOutput)
}

func (i UserStackscriptGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserStackscriptGrant] {
	return pulumix.Output[[]UserStackscriptGrant]{
		OutputState: i.ToUserStackscriptGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserStackscriptGrantOutput struct{ *pulumi.OutputState }

func (UserStackscriptGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserStackscriptGrant)(nil)).Elem()
}

func (o UserStackscriptGrantOutput) ToUserStackscriptGrantOutput() UserStackscriptGrantOutput {
	return o
}

func (o UserStackscriptGrantOutput) ToUserStackscriptGrantOutputWithContext(ctx context.Context) UserStackscriptGrantOutput {
	return o
}

func (o UserStackscriptGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserStackscriptGrant] {
	return pulumix.Output[UserStackscriptGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserStackscriptGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserStackscriptGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserStackscriptGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserStackscriptGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserStackscriptGrantArrayOutput struct{ *pulumi.OutputState }

func (UserStackscriptGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserStackscriptGrant)(nil)).Elem()
}

func (o UserStackscriptGrantArrayOutput) ToUserStackscriptGrantArrayOutput() UserStackscriptGrantArrayOutput {
	return o
}

func (o UserStackscriptGrantArrayOutput) ToUserStackscriptGrantArrayOutputWithContext(ctx context.Context) UserStackscriptGrantArrayOutput {
	return o
}

func (o UserStackscriptGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserStackscriptGrant] {
	return pulumix.Output[[]UserStackscriptGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserStackscriptGrantArrayOutput) Index(i pulumi.IntInput) UserStackscriptGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserStackscriptGrant {
		return vs[0].([]UserStackscriptGrant)[vs[1].(int)]
	}).(UserStackscriptGrantOutput)
}

type UserVolumeGrant struct {
	Id          int    `pulumi:"id"`
	Permissions string `pulumi:"permissions"`
}

// UserVolumeGrantInput is an input type that accepts UserVolumeGrantArgs and UserVolumeGrantOutput values.
// You can construct a concrete instance of `UserVolumeGrantInput` via:
//
//	UserVolumeGrantArgs{...}
type UserVolumeGrantInput interface {
	pulumi.Input

	ToUserVolumeGrantOutput() UserVolumeGrantOutput
	ToUserVolumeGrantOutputWithContext(context.Context) UserVolumeGrantOutput
}

type UserVolumeGrantArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (UserVolumeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserVolumeGrant)(nil)).Elem()
}

func (i UserVolumeGrantArgs) ToUserVolumeGrantOutput() UserVolumeGrantOutput {
	return i.ToUserVolumeGrantOutputWithContext(context.Background())
}

func (i UserVolumeGrantArgs) ToUserVolumeGrantOutputWithContext(ctx context.Context) UserVolumeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserVolumeGrantOutput)
}

func (i UserVolumeGrantArgs) ToOutput(ctx context.Context) pulumix.Output[UserVolumeGrant] {
	return pulumix.Output[UserVolumeGrant]{
		OutputState: i.ToUserVolumeGrantOutputWithContext(ctx).OutputState,
	}
}

// UserVolumeGrantArrayInput is an input type that accepts UserVolumeGrantArray and UserVolumeGrantArrayOutput values.
// You can construct a concrete instance of `UserVolumeGrantArrayInput` via:
//
//	UserVolumeGrantArray{ UserVolumeGrantArgs{...} }
type UserVolumeGrantArrayInput interface {
	pulumi.Input

	ToUserVolumeGrantArrayOutput() UserVolumeGrantArrayOutput
	ToUserVolumeGrantArrayOutputWithContext(context.Context) UserVolumeGrantArrayOutput
}

type UserVolumeGrantArray []UserVolumeGrantInput

func (UserVolumeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserVolumeGrant)(nil)).Elem()
}

func (i UserVolumeGrantArray) ToUserVolumeGrantArrayOutput() UserVolumeGrantArrayOutput {
	return i.ToUserVolumeGrantArrayOutputWithContext(context.Background())
}

func (i UserVolumeGrantArray) ToUserVolumeGrantArrayOutputWithContext(ctx context.Context) UserVolumeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserVolumeGrantArrayOutput)
}

func (i UserVolumeGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]UserVolumeGrant] {
	return pulumix.Output[[]UserVolumeGrant]{
		OutputState: i.ToUserVolumeGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type UserVolumeGrantOutput struct{ *pulumi.OutputState }

func (UserVolumeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserVolumeGrant)(nil)).Elem()
}

func (o UserVolumeGrantOutput) ToUserVolumeGrantOutput() UserVolumeGrantOutput {
	return o
}

func (o UserVolumeGrantOutput) ToUserVolumeGrantOutputWithContext(ctx context.Context) UserVolumeGrantOutput {
	return o
}

func (o UserVolumeGrantOutput) ToOutput(ctx context.Context) pulumix.Output[UserVolumeGrant] {
	return pulumix.Output[UserVolumeGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserVolumeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v UserVolumeGrant) int { return v.Id }).(pulumi.IntOutput)
}

func (o UserVolumeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v UserVolumeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type UserVolumeGrantArrayOutput struct{ *pulumi.OutputState }

func (UserVolumeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserVolumeGrant)(nil)).Elem()
}

func (o UserVolumeGrantArrayOutput) ToUserVolumeGrantArrayOutput() UserVolumeGrantArrayOutput {
	return o
}

func (o UserVolumeGrantArrayOutput) ToUserVolumeGrantArrayOutputWithContext(ctx context.Context) UserVolumeGrantArrayOutput {
	return o
}

func (o UserVolumeGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserVolumeGrant] {
	return pulumix.Output[[]UserVolumeGrant]{
		OutputState: o.OutputState,
	}
}

func (o UserVolumeGrantArrayOutput) Index(i pulumi.IntInput) UserVolumeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserVolumeGrant {
		return vs[0].([]UserVolumeGrant)[vs[1].(int)]
	}).(UserVolumeGrantOutput)
}

type GetAccountLoginsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetAccountLoginsFilterInput is an input type that accepts GetAccountLoginsFilterArgs and GetAccountLoginsFilterOutput values.
// You can construct a concrete instance of `GetAccountLoginsFilterInput` via:
//
//	GetAccountLoginsFilterArgs{...}
type GetAccountLoginsFilterInput interface {
	pulumi.Input

	ToGetAccountLoginsFilterOutput() GetAccountLoginsFilterOutput
	ToGetAccountLoginsFilterOutputWithContext(context.Context) GetAccountLoginsFilterOutput
}

type GetAccountLoginsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAccountLoginsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountLoginsFilter)(nil)).Elem()
}

func (i GetAccountLoginsFilterArgs) ToGetAccountLoginsFilterOutput() GetAccountLoginsFilterOutput {
	return i.ToGetAccountLoginsFilterOutputWithContext(context.Background())
}

func (i GetAccountLoginsFilterArgs) ToGetAccountLoginsFilterOutputWithContext(ctx context.Context) GetAccountLoginsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountLoginsFilterOutput)
}

func (i GetAccountLoginsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetAccountLoginsFilter] {
	return pulumix.Output[GetAccountLoginsFilter]{
		OutputState: i.ToGetAccountLoginsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetAccountLoginsFilterArrayInput is an input type that accepts GetAccountLoginsFilterArray and GetAccountLoginsFilterArrayOutput values.
// You can construct a concrete instance of `GetAccountLoginsFilterArrayInput` via:
//
//	GetAccountLoginsFilterArray{ GetAccountLoginsFilterArgs{...} }
type GetAccountLoginsFilterArrayInput interface {
	pulumi.Input

	ToGetAccountLoginsFilterArrayOutput() GetAccountLoginsFilterArrayOutput
	ToGetAccountLoginsFilterArrayOutputWithContext(context.Context) GetAccountLoginsFilterArrayOutput
}

type GetAccountLoginsFilterArray []GetAccountLoginsFilterInput

func (GetAccountLoginsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountLoginsFilter)(nil)).Elem()
}

func (i GetAccountLoginsFilterArray) ToGetAccountLoginsFilterArrayOutput() GetAccountLoginsFilterArrayOutput {
	return i.ToGetAccountLoginsFilterArrayOutputWithContext(context.Background())
}

func (i GetAccountLoginsFilterArray) ToGetAccountLoginsFilterArrayOutputWithContext(ctx context.Context) GetAccountLoginsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountLoginsFilterArrayOutput)
}

func (i GetAccountLoginsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAccountLoginsFilter] {
	return pulumix.Output[[]GetAccountLoginsFilter]{
		OutputState: i.ToGetAccountLoginsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAccountLoginsFilterOutput struct{ *pulumi.OutputState }

func (GetAccountLoginsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountLoginsFilter)(nil)).Elem()
}

func (o GetAccountLoginsFilterOutput) ToGetAccountLoginsFilterOutput() GetAccountLoginsFilterOutput {
	return o
}

func (o GetAccountLoginsFilterOutput) ToGetAccountLoginsFilterOutputWithContext(ctx context.Context) GetAccountLoginsFilterOutput {
	return o
}

func (o GetAccountLoginsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAccountLoginsFilter] {
	return pulumix.Output[GetAccountLoginsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetAccountLoginsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccountLoginsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetAccountLoginsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountLoginsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetAccountLoginsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccountLoginsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAccountLoginsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAccountLoginsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountLoginsFilter)(nil)).Elem()
}

func (o GetAccountLoginsFilterArrayOutput) ToGetAccountLoginsFilterArrayOutput() GetAccountLoginsFilterArrayOutput {
	return o
}

func (o GetAccountLoginsFilterArrayOutput) ToGetAccountLoginsFilterArrayOutputWithContext(ctx context.Context) GetAccountLoginsFilterArrayOutput {
	return o
}

func (o GetAccountLoginsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAccountLoginsFilter] {
	return pulumix.Output[[]GetAccountLoginsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetAccountLoginsFilterArrayOutput) Index(i pulumi.IntInput) GetAccountLoginsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountLoginsFilter {
		return vs[0].([]GetAccountLoginsFilter)[vs[1].(int)]
	}).(GetAccountLoginsFilterOutput)
}

type GetAccountLoginsLogin struct {
	// When the login was initiated.
	Datetime string `pulumi:"datetime"`
	// The unique ID of this login object.
	Id int `pulumi:"id"`
	// The remote IP address that requested the login.
	Ip string `pulumi:"ip"`
	// True if the User that was logged into was a restricted User, false otherwise.
	Restricted bool   `pulumi:"restricted"`
	Status     string `pulumi:"status"`
	// The username of the User that was logged into.
	Username string `pulumi:"username"`
}

// GetAccountLoginsLoginInput is an input type that accepts GetAccountLoginsLoginArgs and GetAccountLoginsLoginOutput values.
// You can construct a concrete instance of `GetAccountLoginsLoginInput` via:
//
//	GetAccountLoginsLoginArgs{...}
type GetAccountLoginsLoginInput interface {
	pulumi.Input

	ToGetAccountLoginsLoginOutput() GetAccountLoginsLoginOutput
	ToGetAccountLoginsLoginOutputWithContext(context.Context) GetAccountLoginsLoginOutput
}

type GetAccountLoginsLoginArgs struct {
	// When the login was initiated.
	Datetime pulumi.StringInput `pulumi:"datetime"`
	// The unique ID of this login object.
	Id pulumi.IntInput `pulumi:"id"`
	// The remote IP address that requested the login.
	Ip pulumi.StringInput `pulumi:"ip"`
	// True if the User that was logged into was a restricted User, false otherwise.
	Restricted pulumi.BoolInput   `pulumi:"restricted"`
	Status     pulumi.StringInput `pulumi:"status"`
	// The username of the User that was logged into.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetAccountLoginsLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountLoginsLogin)(nil)).Elem()
}

func (i GetAccountLoginsLoginArgs) ToGetAccountLoginsLoginOutput() GetAccountLoginsLoginOutput {
	return i.ToGetAccountLoginsLoginOutputWithContext(context.Background())
}

func (i GetAccountLoginsLoginArgs) ToGetAccountLoginsLoginOutputWithContext(ctx context.Context) GetAccountLoginsLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountLoginsLoginOutput)
}

func (i GetAccountLoginsLoginArgs) ToOutput(ctx context.Context) pulumix.Output[GetAccountLoginsLogin] {
	return pulumix.Output[GetAccountLoginsLogin]{
		OutputState: i.ToGetAccountLoginsLoginOutputWithContext(ctx).OutputState,
	}
}

// GetAccountLoginsLoginArrayInput is an input type that accepts GetAccountLoginsLoginArray and GetAccountLoginsLoginArrayOutput values.
// You can construct a concrete instance of `GetAccountLoginsLoginArrayInput` via:
//
//	GetAccountLoginsLoginArray{ GetAccountLoginsLoginArgs{...} }
type GetAccountLoginsLoginArrayInput interface {
	pulumi.Input

	ToGetAccountLoginsLoginArrayOutput() GetAccountLoginsLoginArrayOutput
	ToGetAccountLoginsLoginArrayOutputWithContext(context.Context) GetAccountLoginsLoginArrayOutput
}

type GetAccountLoginsLoginArray []GetAccountLoginsLoginInput

func (GetAccountLoginsLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountLoginsLogin)(nil)).Elem()
}

func (i GetAccountLoginsLoginArray) ToGetAccountLoginsLoginArrayOutput() GetAccountLoginsLoginArrayOutput {
	return i.ToGetAccountLoginsLoginArrayOutputWithContext(context.Background())
}

func (i GetAccountLoginsLoginArray) ToGetAccountLoginsLoginArrayOutputWithContext(ctx context.Context) GetAccountLoginsLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountLoginsLoginArrayOutput)
}

func (i GetAccountLoginsLoginArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAccountLoginsLogin] {
	return pulumix.Output[[]GetAccountLoginsLogin]{
		OutputState: i.ToGetAccountLoginsLoginArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAccountLoginsLoginOutput struct{ *pulumi.OutputState }

func (GetAccountLoginsLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountLoginsLogin)(nil)).Elem()
}

func (o GetAccountLoginsLoginOutput) ToGetAccountLoginsLoginOutput() GetAccountLoginsLoginOutput {
	return o
}

func (o GetAccountLoginsLoginOutput) ToGetAccountLoginsLoginOutputWithContext(ctx context.Context) GetAccountLoginsLoginOutput {
	return o
}

func (o GetAccountLoginsLoginOutput) ToOutput(ctx context.Context) pulumix.Output[GetAccountLoginsLogin] {
	return pulumix.Output[GetAccountLoginsLogin]{
		OutputState: o.OutputState,
	}
}

// When the login was initiated.
func (o GetAccountLoginsLoginOutput) Datetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountLoginsLogin) string { return v.Datetime }).(pulumi.StringOutput)
}

// The unique ID of this login object.
func (o GetAccountLoginsLoginOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountLoginsLogin) int { return v.Id }).(pulumi.IntOutput)
}

// The remote IP address that requested the login.
func (o GetAccountLoginsLoginOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountLoginsLogin) string { return v.Ip }).(pulumi.StringOutput)
}

// True if the User that was logged into was a restricted User, false otherwise.
func (o GetAccountLoginsLoginOutput) Restricted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAccountLoginsLogin) bool { return v.Restricted }).(pulumi.BoolOutput)
}

func (o GetAccountLoginsLoginOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountLoginsLogin) string { return v.Status }).(pulumi.StringOutput)
}

// The username of the User that was logged into.
func (o GetAccountLoginsLoginOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountLoginsLogin) string { return v.Username }).(pulumi.StringOutput)
}

type GetAccountLoginsLoginArrayOutput struct{ *pulumi.OutputState }

func (GetAccountLoginsLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountLoginsLogin)(nil)).Elem()
}

func (o GetAccountLoginsLoginArrayOutput) ToGetAccountLoginsLoginArrayOutput() GetAccountLoginsLoginArrayOutput {
	return o
}

func (o GetAccountLoginsLoginArrayOutput) ToGetAccountLoginsLoginArrayOutputWithContext(ctx context.Context) GetAccountLoginsLoginArrayOutput {
	return o
}

func (o GetAccountLoginsLoginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAccountLoginsLogin] {
	return pulumix.Output[[]GetAccountLoginsLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetAccountLoginsLoginArrayOutput) Index(i pulumi.IntInput) GetAccountLoginsLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountLoginsLogin {
		return vs[0].([]GetAccountLoginsLogin)[vs[1].(int)]
	}).(GetAccountLoginsLoginOutput)
}

type GetDatabaseBackupsBackup struct {
	// A time value given in a combined date and time format that represents when the database backup was created.
	Created string `pulumi:"created"`
	// The ID of the database backup object.
	Id int `pulumi:"id"`
	// The database backup’s label, for display purposes only.
	Label string `pulumi:"label"`
	// The type of database backup, determined by how the backup was created.
	Type string `pulumi:"type"`
}

// GetDatabaseBackupsBackupInput is an input type that accepts GetDatabaseBackupsBackupArgs and GetDatabaseBackupsBackupOutput values.
// You can construct a concrete instance of `GetDatabaseBackupsBackupInput` via:
//
//	GetDatabaseBackupsBackupArgs{...}
type GetDatabaseBackupsBackupInput interface {
	pulumi.Input

	ToGetDatabaseBackupsBackupOutput() GetDatabaseBackupsBackupOutput
	ToGetDatabaseBackupsBackupOutputWithContext(context.Context) GetDatabaseBackupsBackupOutput
}

type GetDatabaseBackupsBackupArgs struct {
	// A time value given in a combined date and time format that represents when the database backup was created.
	Created pulumi.StringInput `pulumi:"created"`
	// The ID of the database backup object.
	Id pulumi.IntInput `pulumi:"id"`
	// The database backup’s label, for display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// The type of database backup, determined by how the backup was created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseBackupsBackup)(nil)).Elem()
}

func (i GetDatabaseBackupsBackupArgs) ToGetDatabaseBackupsBackupOutput() GetDatabaseBackupsBackupOutput {
	return i.ToGetDatabaseBackupsBackupOutputWithContext(context.Background())
}

func (i GetDatabaseBackupsBackupArgs) ToGetDatabaseBackupsBackupOutputWithContext(ctx context.Context) GetDatabaseBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseBackupsBackupOutput)
}

func (i GetDatabaseBackupsBackupArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseBackupsBackup] {
	return pulumix.Output[GetDatabaseBackupsBackup]{
		OutputState: i.ToGetDatabaseBackupsBackupOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseBackupsBackupArrayInput is an input type that accepts GetDatabaseBackupsBackupArray and GetDatabaseBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetDatabaseBackupsBackupArrayInput` via:
//
//	GetDatabaseBackupsBackupArray{ GetDatabaseBackupsBackupArgs{...} }
type GetDatabaseBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetDatabaseBackupsBackupArrayOutput() GetDatabaseBackupsBackupArrayOutput
	ToGetDatabaseBackupsBackupArrayOutputWithContext(context.Context) GetDatabaseBackupsBackupArrayOutput
}

type GetDatabaseBackupsBackupArray []GetDatabaseBackupsBackupInput

func (GetDatabaseBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseBackupsBackup)(nil)).Elem()
}

func (i GetDatabaseBackupsBackupArray) ToGetDatabaseBackupsBackupArrayOutput() GetDatabaseBackupsBackupArrayOutput {
	return i.ToGetDatabaseBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetDatabaseBackupsBackupArray) ToGetDatabaseBackupsBackupArrayOutputWithContext(ctx context.Context) GetDatabaseBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseBackupsBackupArrayOutput)
}

func (i GetDatabaseBackupsBackupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseBackupsBackup] {
	return pulumix.Output[[]GetDatabaseBackupsBackup]{
		OutputState: i.ToGetDatabaseBackupsBackupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetDatabaseBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseBackupsBackup)(nil)).Elem()
}

func (o GetDatabaseBackupsBackupOutput) ToGetDatabaseBackupsBackupOutput() GetDatabaseBackupsBackupOutput {
	return o
}

func (o GetDatabaseBackupsBackupOutput) ToGetDatabaseBackupsBackupOutputWithContext(ctx context.Context) GetDatabaseBackupsBackupOutput {
	return o
}

func (o GetDatabaseBackupsBackupOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseBackupsBackup] {
	return pulumix.Output[GetDatabaseBackupsBackup]{
		OutputState: o.OutputState,
	}
}

// A time value given in a combined date and time format that represents when the database backup was created.
func (o GetDatabaseBackupsBackupOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseBackupsBackup) string { return v.Created }).(pulumi.StringOutput)
}

// The ID of the database backup object.
func (o GetDatabaseBackupsBackupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseBackupsBackup) int { return v.Id }).(pulumi.IntOutput)
}

// The database backup’s label, for display purposes only.
func (o GetDatabaseBackupsBackupOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseBackupsBackup) string { return v.Label }).(pulumi.StringOutput)
}

// The type of database backup, determined by how the backup was created.
func (o GetDatabaseBackupsBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseBackupsBackup) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseBackupsBackup)(nil)).Elem()
}

func (o GetDatabaseBackupsBackupArrayOutput) ToGetDatabaseBackupsBackupArrayOutput() GetDatabaseBackupsBackupArrayOutput {
	return o
}

func (o GetDatabaseBackupsBackupArrayOutput) ToGetDatabaseBackupsBackupArrayOutputWithContext(ctx context.Context) GetDatabaseBackupsBackupArrayOutput {
	return o
}

func (o GetDatabaseBackupsBackupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseBackupsBackup] {
	return pulumix.Output[[]GetDatabaseBackupsBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetDatabaseBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseBackupsBackup {
		return vs[0].([]GetDatabaseBackupsBackup)[vs[1].(int)]
	}).(GetDatabaseBackupsBackupOutput)
}

type GetDatabaseBackupsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetDatabaseBackupsFilterInput is an input type that accepts GetDatabaseBackupsFilterArgs and GetDatabaseBackupsFilterOutput values.
// You can construct a concrete instance of `GetDatabaseBackupsFilterInput` via:
//
//	GetDatabaseBackupsFilterArgs{...}
type GetDatabaseBackupsFilterInput interface {
	pulumi.Input

	ToGetDatabaseBackupsFilterOutput() GetDatabaseBackupsFilterOutput
	ToGetDatabaseBackupsFilterOutputWithContext(context.Context) GetDatabaseBackupsFilterOutput
}

type GetDatabaseBackupsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDatabaseBackupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseBackupsFilter)(nil)).Elem()
}

func (i GetDatabaseBackupsFilterArgs) ToGetDatabaseBackupsFilterOutput() GetDatabaseBackupsFilterOutput {
	return i.ToGetDatabaseBackupsFilterOutputWithContext(context.Background())
}

func (i GetDatabaseBackupsFilterArgs) ToGetDatabaseBackupsFilterOutputWithContext(ctx context.Context) GetDatabaseBackupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseBackupsFilterOutput)
}

func (i GetDatabaseBackupsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseBackupsFilter] {
	return pulumix.Output[GetDatabaseBackupsFilter]{
		OutputState: i.ToGetDatabaseBackupsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseBackupsFilterArrayInput is an input type that accepts GetDatabaseBackupsFilterArray and GetDatabaseBackupsFilterArrayOutput values.
// You can construct a concrete instance of `GetDatabaseBackupsFilterArrayInput` via:
//
//	GetDatabaseBackupsFilterArray{ GetDatabaseBackupsFilterArgs{...} }
type GetDatabaseBackupsFilterArrayInput interface {
	pulumi.Input

	ToGetDatabaseBackupsFilterArrayOutput() GetDatabaseBackupsFilterArrayOutput
	ToGetDatabaseBackupsFilterArrayOutputWithContext(context.Context) GetDatabaseBackupsFilterArrayOutput
}

type GetDatabaseBackupsFilterArray []GetDatabaseBackupsFilterInput

func (GetDatabaseBackupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseBackupsFilter)(nil)).Elem()
}

func (i GetDatabaseBackupsFilterArray) ToGetDatabaseBackupsFilterArrayOutput() GetDatabaseBackupsFilterArrayOutput {
	return i.ToGetDatabaseBackupsFilterArrayOutputWithContext(context.Background())
}

func (i GetDatabaseBackupsFilterArray) ToGetDatabaseBackupsFilterArrayOutputWithContext(ctx context.Context) GetDatabaseBackupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseBackupsFilterArrayOutput)
}

func (i GetDatabaseBackupsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseBackupsFilter] {
	return pulumix.Output[[]GetDatabaseBackupsFilter]{
		OutputState: i.ToGetDatabaseBackupsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseBackupsFilterOutput struct{ *pulumi.OutputState }

func (GetDatabaseBackupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseBackupsFilter)(nil)).Elem()
}

func (o GetDatabaseBackupsFilterOutput) ToGetDatabaseBackupsFilterOutput() GetDatabaseBackupsFilterOutput {
	return o
}

func (o GetDatabaseBackupsFilterOutput) ToGetDatabaseBackupsFilterOutputWithContext(ctx context.Context) GetDatabaseBackupsFilterOutput {
	return o
}

func (o GetDatabaseBackupsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseBackupsFilter] {
	return pulumix.Output[GetDatabaseBackupsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetDatabaseBackupsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseBackupsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by.
func (o GetDatabaseBackupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseBackupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetDatabaseBackupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabaseBackupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDatabaseBackupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseBackupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseBackupsFilter)(nil)).Elem()
}

func (o GetDatabaseBackupsFilterArrayOutput) ToGetDatabaseBackupsFilterArrayOutput() GetDatabaseBackupsFilterArrayOutput {
	return o
}

func (o GetDatabaseBackupsFilterArrayOutput) ToGetDatabaseBackupsFilterArrayOutputWithContext(ctx context.Context) GetDatabaseBackupsFilterArrayOutput {
	return o
}

func (o GetDatabaseBackupsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseBackupsFilter] {
	return pulumix.Output[[]GetDatabaseBackupsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseBackupsFilterArrayOutput) Index(i pulumi.IntInput) GetDatabaseBackupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseBackupsFilter {
		return vs[0].([]GetDatabaseBackupsFilter)[vs[1].(int)]
	}).(GetDatabaseBackupsFilterOutput)
}

type GetDatabaseEnginesEngine struct {
	// The Managed Database engine type.
	Engine string `pulumi:"engine"`
	// The Managed Database engine ID in engine/version format.
	Id string `pulumi:"id"`
	// The Managed Database engine version.
	Version string `pulumi:"version"`
}

// GetDatabaseEnginesEngineInput is an input type that accepts GetDatabaseEnginesEngineArgs and GetDatabaseEnginesEngineOutput values.
// You can construct a concrete instance of `GetDatabaseEnginesEngineInput` via:
//
//	GetDatabaseEnginesEngineArgs{...}
type GetDatabaseEnginesEngineInput interface {
	pulumi.Input

	ToGetDatabaseEnginesEngineOutput() GetDatabaseEnginesEngineOutput
	ToGetDatabaseEnginesEngineOutputWithContext(context.Context) GetDatabaseEnginesEngineOutput
}

type GetDatabaseEnginesEngineArgs struct {
	// The Managed Database engine type.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The Managed Database engine ID in engine/version format.
	Id pulumi.StringInput `pulumi:"id"`
	// The Managed Database engine version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDatabaseEnginesEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseEnginesEngine)(nil)).Elem()
}

func (i GetDatabaseEnginesEngineArgs) ToGetDatabaseEnginesEngineOutput() GetDatabaseEnginesEngineOutput {
	return i.ToGetDatabaseEnginesEngineOutputWithContext(context.Background())
}

func (i GetDatabaseEnginesEngineArgs) ToGetDatabaseEnginesEngineOutputWithContext(ctx context.Context) GetDatabaseEnginesEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseEnginesEngineOutput)
}

func (i GetDatabaseEnginesEngineArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseEnginesEngine] {
	return pulumix.Output[GetDatabaseEnginesEngine]{
		OutputState: i.ToGetDatabaseEnginesEngineOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseEnginesEngineArrayInput is an input type that accepts GetDatabaseEnginesEngineArray and GetDatabaseEnginesEngineArrayOutput values.
// You can construct a concrete instance of `GetDatabaseEnginesEngineArrayInput` via:
//
//	GetDatabaseEnginesEngineArray{ GetDatabaseEnginesEngineArgs{...} }
type GetDatabaseEnginesEngineArrayInput interface {
	pulumi.Input

	ToGetDatabaseEnginesEngineArrayOutput() GetDatabaseEnginesEngineArrayOutput
	ToGetDatabaseEnginesEngineArrayOutputWithContext(context.Context) GetDatabaseEnginesEngineArrayOutput
}

type GetDatabaseEnginesEngineArray []GetDatabaseEnginesEngineInput

func (GetDatabaseEnginesEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseEnginesEngine)(nil)).Elem()
}

func (i GetDatabaseEnginesEngineArray) ToGetDatabaseEnginesEngineArrayOutput() GetDatabaseEnginesEngineArrayOutput {
	return i.ToGetDatabaseEnginesEngineArrayOutputWithContext(context.Background())
}

func (i GetDatabaseEnginesEngineArray) ToGetDatabaseEnginesEngineArrayOutputWithContext(ctx context.Context) GetDatabaseEnginesEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseEnginesEngineArrayOutput)
}

func (i GetDatabaseEnginesEngineArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseEnginesEngine] {
	return pulumix.Output[[]GetDatabaseEnginesEngine]{
		OutputState: i.ToGetDatabaseEnginesEngineArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseEnginesEngineOutput struct{ *pulumi.OutputState }

func (GetDatabaseEnginesEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseEnginesEngine)(nil)).Elem()
}

func (o GetDatabaseEnginesEngineOutput) ToGetDatabaseEnginesEngineOutput() GetDatabaseEnginesEngineOutput {
	return o
}

func (o GetDatabaseEnginesEngineOutput) ToGetDatabaseEnginesEngineOutputWithContext(ctx context.Context) GetDatabaseEnginesEngineOutput {
	return o
}

func (o GetDatabaseEnginesEngineOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseEnginesEngine] {
	return pulumix.Output[GetDatabaseEnginesEngine]{
		OutputState: o.OutputState,
	}
}

// The Managed Database engine type.
func (o GetDatabaseEnginesEngineOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseEnginesEngine) string { return v.Engine }).(pulumi.StringOutput)
}

// The Managed Database engine ID in engine/version format.
func (o GetDatabaseEnginesEngineOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseEnginesEngine) string { return v.Id }).(pulumi.StringOutput)
}

// The Managed Database engine version.
func (o GetDatabaseEnginesEngineOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseEnginesEngine) string { return v.Version }).(pulumi.StringOutput)
}

type GetDatabaseEnginesEngineArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseEnginesEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseEnginesEngine)(nil)).Elem()
}

func (o GetDatabaseEnginesEngineArrayOutput) ToGetDatabaseEnginesEngineArrayOutput() GetDatabaseEnginesEngineArrayOutput {
	return o
}

func (o GetDatabaseEnginesEngineArrayOutput) ToGetDatabaseEnginesEngineArrayOutputWithContext(ctx context.Context) GetDatabaseEnginesEngineArrayOutput {
	return o
}

func (o GetDatabaseEnginesEngineArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseEnginesEngine] {
	return pulumix.Output[[]GetDatabaseEnginesEngine]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseEnginesEngineArrayOutput) Index(i pulumi.IntInput) GetDatabaseEnginesEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseEnginesEngine {
		return vs[0].([]GetDatabaseEnginesEngine)[vs[1].(int)]
	}).(GetDatabaseEnginesEngineOutput)
}

type GetDatabaseEnginesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetDatabaseEnginesFilterInput is an input type that accepts GetDatabaseEnginesFilterArgs and GetDatabaseEnginesFilterOutput values.
// You can construct a concrete instance of `GetDatabaseEnginesFilterInput` via:
//
//	GetDatabaseEnginesFilterArgs{...}
type GetDatabaseEnginesFilterInput interface {
	pulumi.Input

	ToGetDatabaseEnginesFilterOutput() GetDatabaseEnginesFilterOutput
	ToGetDatabaseEnginesFilterOutputWithContext(context.Context) GetDatabaseEnginesFilterOutput
}

type GetDatabaseEnginesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDatabaseEnginesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseEnginesFilter)(nil)).Elem()
}

func (i GetDatabaseEnginesFilterArgs) ToGetDatabaseEnginesFilterOutput() GetDatabaseEnginesFilterOutput {
	return i.ToGetDatabaseEnginesFilterOutputWithContext(context.Background())
}

func (i GetDatabaseEnginesFilterArgs) ToGetDatabaseEnginesFilterOutputWithContext(ctx context.Context) GetDatabaseEnginesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseEnginesFilterOutput)
}

func (i GetDatabaseEnginesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseEnginesFilter] {
	return pulumix.Output[GetDatabaseEnginesFilter]{
		OutputState: i.ToGetDatabaseEnginesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseEnginesFilterArrayInput is an input type that accepts GetDatabaseEnginesFilterArray and GetDatabaseEnginesFilterArrayOutput values.
// You can construct a concrete instance of `GetDatabaseEnginesFilterArrayInput` via:
//
//	GetDatabaseEnginesFilterArray{ GetDatabaseEnginesFilterArgs{...} }
type GetDatabaseEnginesFilterArrayInput interface {
	pulumi.Input

	ToGetDatabaseEnginesFilterArrayOutput() GetDatabaseEnginesFilterArrayOutput
	ToGetDatabaseEnginesFilterArrayOutputWithContext(context.Context) GetDatabaseEnginesFilterArrayOutput
}

type GetDatabaseEnginesFilterArray []GetDatabaseEnginesFilterInput

func (GetDatabaseEnginesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseEnginesFilter)(nil)).Elem()
}

func (i GetDatabaseEnginesFilterArray) ToGetDatabaseEnginesFilterArrayOutput() GetDatabaseEnginesFilterArrayOutput {
	return i.ToGetDatabaseEnginesFilterArrayOutputWithContext(context.Background())
}

func (i GetDatabaseEnginesFilterArray) ToGetDatabaseEnginesFilterArrayOutputWithContext(ctx context.Context) GetDatabaseEnginesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseEnginesFilterArrayOutput)
}

func (i GetDatabaseEnginesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseEnginesFilter] {
	return pulumix.Output[[]GetDatabaseEnginesFilter]{
		OutputState: i.ToGetDatabaseEnginesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseEnginesFilterOutput struct{ *pulumi.OutputState }

func (GetDatabaseEnginesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseEnginesFilter)(nil)).Elem()
}

func (o GetDatabaseEnginesFilterOutput) ToGetDatabaseEnginesFilterOutput() GetDatabaseEnginesFilterOutput {
	return o
}

func (o GetDatabaseEnginesFilterOutput) ToGetDatabaseEnginesFilterOutputWithContext(ctx context.Context) GetDatabaseEnginesFilterOutput {
	return o
}

func (o GetDatabaseEnginesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseEnginesFilter] {
	return pulumix.Output[GetDatabaseEnginesFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetDatabaseEnginesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseEnginesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by.
func (o GetDatabaseEnginesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseEnginesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetDatabaseEnginesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabaseEnginesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDatabaseEnginesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseEnginesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseEnginesFilter)(nil)).Elem()
}

func (o GetDatabaseEnginesFilterArrayOutput) ToGetDatabaseEnginesFilterArrayOutput() GetDatabaseEnginesFilterArrayOutput {
	return o
}

func (o GetDatabaseEnginesFilterArrayOutput) ToGetDatabaseEnginesFilterArrayOutputWithContext(ctx context.Context) GetDatabaseEnginesFilterArrayOutput {
	return o
}

func (o GetDatabaseEnginesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseEnginesFilter] {
	return pulumix.Output[[]GetDatabaseEnginesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseEnginesFilterArrayOutput) Index(i pulumi.IntInput) GetDatabaseEnginesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseEnginesFilter {
		return vs[0].([]GetDatabaseEnginesFilter)[vs[1].(int)]
	}).(GetDatabaseEnginesFilterOutput)
}

type GetDatabaseMysqlBackupsBackup struct {
	// A time value given in a combined date and time format that represents when the database backup was created.
	Created string `pulumi:"created"`
	// The ID of the database backup object.
	Id int `pulumi:"id"`
	// The database backup’s label, for display purposes only.
	Label string `pulumi:"label"`
	// The type of database backup, determined by how the backup was created.
	Type string `pulumi:"type"`
}

// GetDatabaseMysqlBackupsBackupInput is an input type that accepts GetDatabaseMysqlBackupsBackupArgs and GetDatabaseMysqlBackupsBackupOutput values.
// You can construct a concrete instance of `GetDatabaseMysqlBackupsBackupInput` via:
//
//	GetDatabaseMysqlBackupsBackupArgs{...}
type GetDatabaseMysqlBackupsBackupInput interface {
	pulumi.Input

	ToGetDatabaseMysqlBackupsBackupOutput() GetDatabaseMysqlBackupsBackupOutput
	ToGetDatabaseMysqlBackupsBackupOutputWithContext(context.Context) GetDatabaseMysqlBackupsBackupOutput
}

type GetDatabaseMysqlBackupsBackupArgs struct {
	// A time value given in a combined date and time format that represents when the database backup was created.
	Created pulumi.StringInput `pulumi:"created"`
	// The ID of the database backup object.
	Id pulumi.IntInput `pulumi:"id"`
	// The database backup’s label, for display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// The type of database backup, determined by how the backup was created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseMysqlBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlBackupsBackup)(nil)).Elem()
}

func (i GetDatabaseMysqlBackupsBackupArgs) ToGetDatabaseMysqlBackupsBackupOutput() GetDatabaseMysqlBackupsBackupOutput {
	return i.ToGetDatabaseMysqlBackupsBackupOutputWithContext(context.Background())
}

func (i GetDatabaseMysqlBackupsBackupArgs) ToGetDatabaseMysqlBackupsBackupOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseMysqlBackupsBackupOutput)
}

func (i GetDatabaseMysqlBackupsBackupArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseMysqlBackupsBackup] {
	return pulumix.Output[GetDatabaseMysqlBackupsBackup]{
		OutputState: i.ToGetDatabaseMysqlBackupsBackupOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseMysqlBackupsBackupArrayInput is an input type that accepts GetDatabaseMysqlBackupsBackupArray and GetDatabaseMysqlBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetDatabaseMysqlBackupsBackupArrayInput` via:
//
//	GetDatabaseMysqlBackupsBackupArray{ GetDatabaseMysqlBackupsBackupArgs{...} }
type GetDatabaseMysqlBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetDatabaseMysqlBackupsBackupArrayOutput() GetDatabaseMysqlBackupsBackupArrayOutput
	ToGetDatabaseMysqlBackupsBackupArrayOutputWithContext(context.Context) GetDatabaseMysqlBackupsBackupArrayOutput
}

type GetDatabaseMysqlBackupsBackupArray []GetDatabaseMysqlBackupsBackupInput

func (GetDatabaseMysqlBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseMysqlBackupsBackup)(nil)).Elem()
}

func (i GetDatabaseMysqlBackupsBackupArray) ToGetDatabaseMysqlBackupsBackupArrayOutput() GetDatabaseMysqlBackupsBackupArrayOutput {
	return i.ToGetDatabaseMysqlBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetDatabaseMysqlBackupsBackupArray) ToGetDatabaseMysqlBackupsBackupArrayOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseMysqlBackupsBackupArrayOutput)
}

func (i GetDatabaseMysqlBackupsBackupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseMysqlBackupsBackup] {
	return pulumix.Output[[]GetDatabaseMysqlBackupsBackup]{
		OutputState: i.ToGetDatabaseMysqlBackupsBackupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseMysqlBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlBackupsBackup)(nil)).Elem()
}

func (o GetDatabaseMysqlBackupsBackupOutput) ToGetDatabaseMysqlBackupsBackupOutput() GetDatabaseMysqlBackupsBackupOutput {
	return o
}

func (o GetDatabaseMysqlBackupsBackupOutput) ToGetDatabaseMysqlBackupsBackupOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsBackupOutput {
	return o
}

func (o GetDatabaseMysqlBackupsBackupOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseMysqlBackupsBackup] {
	return pulumix.Output[GetDatabaseMysqlBackupsBackup]{
		OutputState: o.OutputState,
	}
}

// A time value given in a combined date and time format that represents when the database backup was created.
func (o GetDatabaseMysqlBackupsBackupOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsBackup) string { return v.Created }).(pulumi.StringOutput)
}

// The ID of the database backup object.
func (o GetDatabaseMysqlBackupsBackupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsBackup) int { return v.Id }).(pulumi.IntOutput)
}

// The database backup’s label, for display purposes only.
func (o GetDatabaseMysqlBackupsBackupOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsBackup) string { return v.Label }).(pulumi.StringOutput)
}

// The type of database backup, determined by how the backup was created.
func (o GetDatabaseMysqlBackupsBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsBackup) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseMysqlBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseMysqlBackupsBackup)(nil)).Elem()
}

func (o GetDatabaseMysqlBackupsBackupArrayOutput) ToGetDatabaseMysqlBackupsBackupArrayOutput() GetDatabaseMysqlBackupsBackupArrayOutput {
	return o
}

func (o GetDatabaseMysqlBackupsBackupArrayOutput) ToGetDatabaseMysqlBackupsBackupArrayOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsBackupArrayOutput {
	return o
}

func (o GetDatabaseMysqlBackupsBackupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseMysqlBackupsBackup] {
	return pulumix.Output[[]GetDatabaseMysqlBackupsBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseMysqlBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetDatabaseMysqlBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseMysqlBackupsBackup {
		return vs[0].([]GetDatabaseMysqlBackupsBackup)[vs[1].(int)]
	}).(GetDatabaseMysqlBackupsBackupOutput)
}

type GetDatabaseMysqlBackupsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetDatabaseMysqlBackupsFilterInput is an input type that accepts GetDatabaseMysqlBackupsFilterArgs and GetDatabaseMysqlBackupsFilterOutput values.
// You can construct a concrete instance of `GetDatabaseMysqlBackupsFilterInput` via:
//
//	GetDatabaseMysqlBackupsFilterArgs{...}
type GetDatabaseMysqlBackupsFilterInput interface {
	pulumi.Input

	ToGetDatabaseMysqlBackupsFilterOutput() GetDatabaseMysqlBackupsFilterOutput
	ToGetDatabaseMysqlBackupsFilterOutputWithContext(context.Context) GetDatabaseMysqlBackupsFilterOutput
}

type GetDatabaseMysqlBackupsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDatabaseMysqlBackupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlBackupsFilter)(nil)).Elem()
}

func (i GetDatabaseMysqlBackupsFilterArgs) ToGetDatabaseMysqlBackupsFilterOutput() GetDatabaseMysqlBackupsFilterOutput {
	return i.ToGetDatabaseMysqlBackupsFilterOutputWithContext(context.Background())
}

func (i GetDatabaseMysqlBackupsFilterArgs) ToGetDatabaseMysqlBackupsFilterOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseMysqlBackupsFilterOutput)
}

func (i GetDatabaseMysqlBackupsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseMysqlBackupsFilter] {
	return pulumix.Output[GetDatabaseMysqlBackupsFilter]{
		OutputState: i.ToGetDatabaseMysqlBackupsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseMysqlBackupsFilterArrayInput is an input type that accepts GetDatabaseMysqlBackupsFilterArray and GetDatabaseMysqlBackupsFilterArrayOutput values.
// You can construct a concrete instance of `GetDatabaseMysqlBackupsFilterArrayInput` via:
//
//	GetDatabaseMysqlBackupsFilterArray{ GetDatabaseMysqlBackupsFilterArgs{...} }
type GetDatabaseMysqlBackupsFilterArrayInput interface {
	pulumi.Input

	ToGetDatabaseMysqlBackupsFilterArrayOutput() GetDatabaseMysqlBackupsFilterArrayOutput
	ToGetDatabaseMysqlBackupsFilterArrayOutputWithContext(context.Context) GetDatabaseMysqlBackupsFilterArrayOutput
}

type GetDatabaseMysqlBackupsFilterArray []GetDatabaseMysqlBackupsFilterInput

func (GetDatabaseMysqlBackupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseMysqlBackupsFilter)(nil)).Elem()
}

func (i GetDatabaseMysqlBackupsFilterArray) ToGetDatabaseMysqlBackupsFilterArrayOutput() GetDatabaseMysqlBackupsFilterArrayOutput {
	return i.ToGetDatabaseMysqlBackupsFilterArrayOutputWithContext(context.Background())
}

func (i GetDatabaseMysqlBackupsFilterArray) ToGetDatabaseMysqlBackupsFilterArrayOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseMysqlBackupsFilterArrayOutput)
}

func (i GetDatabaseMysqlBackupsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseMysqlBackupsFilter] {
	return pulumix.Output[[]GetDatabaseMysqlBackupsFilter]{
		OutputState: i.ToGetDatabaseMysqlBackupsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseMysqlBackupsFilterOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlBackupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlBackupsFilter)(nil)).Elem()
}

func (o GetDatabaseMysqlBackupsFilterOutput) ToGetDatabaseMysqlBackupsFilterOutput() GetDatabaseMysqlBackupsFilterOutput {
	return o
}

func (o GetDatabaseMysqlBackupsFilterOutput) ToGetDatabaseMysqlBackupsFilterOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsFilterOutput {
	return o
}

func (o GetDatabaseMysqlBackupsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseMysqlBackupsFilter] {
	return pulumix.Output[GetDatabaseMysqlBackupsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetDatabaseMysqlBackupsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by.
func (o GetDatabaseMysqlBackupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetDatabaseMysqlBackupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDatabaseMysqlBackupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlBackupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseMysqlBackupsFilter)(nil)).Elem()
}

func (o GetDatabaseMysqlBackupsFilterArrayOutput) ToGetDatabaseMysqlBackupsFilterArrayOutput() GetDatabaseMysqlBackupsFilterArrayOutput {
	return o
}

func (o GetDatabaseMysqlBackupsFilterArrayOutput) ToGetDatabaseMysqlBackupsFilterArrayOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsFilterArrayOutput {
	return o
}

func (o GetDatabaseMysqlBackupsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseMysqlBackupsFilter] {
	return pulumix.Output[[]GetDatabaseMysqlBackupsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseMysqlBackupsFilterArrayOutput) Index(i pulumi.IntInput) GetDatabaseMysqlBackupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseMysqlBackupsFilter {
		return vs[0].([]GetDatabaseMysqlBackupsFilter)[vs[1].(int)]
	}).(GetDatabaseMysqlBackupsFilterOutput)
}

type GetDatabaseMysqlUpdate struct {
	DayOfWeek   string `pulumi:"dayOfWeek"`
	Duration    int    `pulumi:"duration"`
	Frequency   string `pulumi:"frequency"`
	HourOfDay   int    `pulumi:"hourOfDay"`
	WeekOfMonth int    `pulumi:"weekOfMonth"`
}

// GetDatabaseMysqlUpdateInput is an input type that accepts GetDatabaseMysqlUpdateArgs and GetDatabaseMysqlUpdateOutput values.
// You can construct a concrete instance of `GetDatabaseMysqlUpdateInput` via:
//
//	GetDatabaseMysqlUpdateArgs{...}
type GetDatabaseMysqlUpdateInput interface {
	pulumi.Input

	ToGetDatabaseMysqlUpdateOutput() GetDatabaseMysqlUpdateOutput
	ToGetDatabaseMysqlUpdateOutputWithContext(context.Context) GetDatabaseMysqlUpdateOutput
}

type GetDatabaseMysqlUpdateArgs struct {
	DayOfWeek   pulumi.StringInput `pulumi:"dayOfWeek"`
	Duration    pulumi.IntInput    `pulumi:"duration"`
	Frequency   pulumi.StringInput `pulumi:"frequency"`
	HourOfDay   pulumi.IntInput    `pulumi:"hourOfDay"`
	WeekOfMonth pulumi.IntInput    `pulumi:"weekOfMonth"`
}

func (GetDatabaseMysqlUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlUpdate)(nil)).Elem()
}

func (i GetDatabaseMysqlUpdateArgs) ToGetDatabaseMysqlUpdateOutput() GetDatabaseMysqlUpdateOutput {
	return i.ToGetDatabaseMysqlUpdateOutputWithContext(context.Background())
}

func (i GetDatabaseMysqlUpdateArgs) ToGetDatabaseMysqlUpdateOutputWithContext(ctx context.Context) GetDatabaseMysqlUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseMysqlUpdateOutput)
}

func (i GetDatabaseMysqlUpdateArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseMysqlUpdate] {
	return pulumix.Output[GetDatabaseMysqlUpdate]{
		OutputState: i.ToGetDatabaseMysqlUpdateOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseMysqlUpdateArrayInput is an input type that accepts GetDatabaseMysqlUpdateArray and GetDatabaseMysqlUpdateArrayOutput values.
// You can construct a concrete instance of `GetDatabaseMysqlUpdateArrayInput` via:
//
//	GetDatabaseMysqlUpdateArray{ GetDatabaseMysqlUpdateArgs{...} }
type GetDatabaseMysqlUpdateArrayInput interface {
	pulumi.Input

	ToGetDatabaseMysqlUpdateArrayOutput() GetDatabaseMysqlUpdateArrayOutput
	ToGetDatabaseMysqlUpdateArrayOutputWithContext(context.Context) GetDatabaseMysqlUpdateArrayOutput
}

type GetDatabaseMysqlUpdateArray []GetDatabaseMysqlUpdateInput

func (GetDatabaseMysqlUpdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseMysqlUpdate)(nil)).Elem()
}

func (i GetDatabaseMysqlUpdateArray) ToGetDatabaseMysqlUpdateArrayOutput() GetDatabaseMysqlUpdateArrayOutput {
	return i.ToGetDatabaseMysqlUpdateArrayOutputWithContext(context.Background())
}

func (i GetDatabaseMysqlUpdateArray) ToGetDatabaseMysqlUpdateArrayOutputWithContext(ctx context.Context) GetDatabaseMysqlUpdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseMysqlUpdateArrayOutput)
}

func (i GetDatabaseMysqlUpdateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseMysqlUpdate] {
	return pulumix.Output[[]GetDatabaseMysqlUpdate]{
		OutputState: i.ToGetDatabaseMysqlUpdateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseMysqlUpdateOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlUpdate)(nil)).Elem()
}

func (o GetDatabaseMysqlUpdateOutput) ToGetDatabaseMysqlUpdateOutput() GetDatabaseMysqlUpdateOutput {
	return o
}

func (o GetDatabaseMysqlUpdateOutput) ToGetDatabaseMysqlUpdateOutputWithContext(ctx context.Context) GetDatabaseMysqlUpdateOutput {
	return o
}

func (o GetDatabaseMysqlUpdateOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseMysqlUpdate] {
	return pulumix.Output[GetDatabaseMysqlUpdate]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseMysqlUpdateOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlUpdate) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

func (o GetDatabaseMysqlUpdateOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseMysqlUpdate) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetDatabaseMysqlUpdateOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlUpdate) string { return v.Frequency }).(pulumi.StringOutput)
}

func (o GetDatabaseMysqlUpdateOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseMysqlUpdate) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetDatabaseMysqlUpdateOutput) WeekOfMonth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseMysqlUpdate) int { return v.WeekOfMonth }).(pulumi.IntOutput)
}

type GetDatabaseMysqlUpdateArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlUpdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseMysqlUpdate)(nil)).Elem()
}

func (o GetDatabaseMysqlUpdateArrayOutput) ToGetDatabaseMysqlUpdateArrayOutput() GetDatabaseMysqlUpdateArrayOutput {
	return o
}

func (o GetDatabaseMysqlUpdateArrayOutput) ToGetDatabaseMysqlUpdateArrayOutputWithContext(ctx context.Context) GetDatabaseMysqlUpdateArrayOutput {
	return o
}

func (o GetDatabaseMysqlUpdateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseMysqlUpdate] {
	return pulumix.Output[[]GetDatabaseMysqlUpdate]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseMysqlUpdateArrayOutput) Index(i pulumi.IntInput) GetDatabaseMysqlUpdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseMysqlUpdate {
		return vs[0].([]GetDatabaseMysqlUpdate)[vs[1].(int)]
	}).(GetDatabaseMysqlUpdateOutput)
}

type GetDatabasePostgresqlUpdate struct {
	DayOfWeek   string `pulumi:"dayOfWeek"`
	Duration    int    `pulumi:"duration"`
	Frequency   string `pulumi:"frequency"`
	HourOfDay   int    `pulumi:"hourOfDay"`
	WeekOfMonth int    `pulumi:"weekOfMonth"`
}

// GetDatabasePostgresqlUpdateInput is an input type that accepts GetDatabasePostgresqlUpdateArgs and GetDatabasePostgresqlUpdateOutput values.
// You can construct a concrete instance of `GetDatabasePostgresqlUpdateInput` via:
//
//	GetDatabasePostgresqlUpdateArgs{...}
type GetDatabasePostgresqlUpdateInput interface {
	pulumi.Input

	ToGetDatabasePostgresqlUpdateOutput() GetDatabasePostgresqlUpdateOutput
	ToGetDatabasePostgresqlUpdateOutputWithContext(context.Context) GetDatabasePostgresqlUpdateOutput
}

type GetDatabasePostgresqlUpdateArgs struct {
	DayOfWeek   pulumi.StringInput `pulumi:"dayOfWeek"`
	Duration    pulumi.IntInput    `pulumi:"duration"`
	Frequency   pulumi.StringInput `pulumi:"frequency"`
	HourOfDay   pulumi.IntInput    `pulumi:"hourOfDay"`
	WeekOfMonth pulumi.IntInput    `pulumi:"weekOfMonth"`
}

func (GetDatabasePostgresqlUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasePostgresqlUpdate)(nil)).Elem()
}

func (i GetDatabasePostgresqlUpdateArgs) ToGetDatabasePostgresqlUpdateOutput() GetDatabasePostgresqlUpdateOutput {
	return i.ToGetDatabasePostgresqlUpdateOutputWithContext(context.Background())
}

func (i GetDatabasePostgresqlUpdateArgs) ToGetDatabasePostgresqlUpdateOutputWithContext(ctx context.Context) GetDatabasePostgresqlUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasePostgresqlUpdateOutput)
}

func (i GetDatabasePostgresqlUpdateArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabasePostgresqlUpdate] {
	return pulumix.Output[GetDatabasePostgresqlUpdate]{
		OutputState: i.ToGetDatabasePostgresqlUpdateOutputWithContext(ctx).OutputState,
	}
}

// GetDatabasePostgresqlUpdateArrayInput is an input type that accepts GetDatabasePostgresqlUpdateArray and GetDatabasePostgresqlUpdateArrayOutput values.
// You can construct a concrete instance of `GetDatabasePostgresqlUpdateArrayInput` via:
//
//	GetDatabasePostgresqlUpdateArray{ GetDatabasePostgresqlUpdateArgs{...} }
type GetDatabasePostgresqlUpdateArrayInput interface {
	pulumi.Input

	ToGetDatabasePostgresqlUpdateArrayOutput() GetDatabasePostgresqlUpdateArrayOutput
	ToGetDatabasePostgresqlUpdateArrayOutputWithContext(context.Context) GetDatabasePostgresqlUpdateArrayOutput
}

type GetDatabasePostgresqlUpdateArray []GetDatabasePostgresqlUpdateInput

func (GetDatabasePostgresqlUpdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasePostgresqlUpdate)(nil)).Elem()
}

func (i GetDatabasePostgresqlUpdateArray) ToGetDatabasePostgresqlUpdateArrayOutput() GetDatabasePostgresqlUpdateArrayOutput {
	return i.ToGetDatabasePostgresqlUpdateArrayOutputWithContext(context.Background())
}

func (i GetDatabasePostgresqlUpdateArray) ToGetDatabasePostgresqlUpdateArrayOutputWithContext(ctx context.Context) GetDatabasePostgresqlUpdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasePostgresqlUpdateArrayOutput)
}

func (i GetDatabasePostgresqlUpdateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabasePostgresqlUpdate] {
	return pulumix.Output[[]GetDatabasePostgresqlUpdate]{
		OutputState: i.ToGetDatabasePostgresqlUpdateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabasePostgresqlUpdateOutput struct{ *pulumi.OutputState }

func (GetDatabasePostgresqlUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasePostgresqlUpdate)(nil)).Elem()
}

func (o GetDatabasePostgresqlUpdateOutput) ToGetDatabasePostgresqlUpdateOutput() GetDatabasePostgresqlUpdateOutput {
	return o
}

func (o GetDatabasePostgresqlUpdateOutput) ToGetDatabasePostgresqlUpdateOutputWithContext(ctx context.Context) GetDatabasePostgresqlUpdateOutput {
	return o
}

func (o GetDatabasePostgresqlUpdateOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabasePostgresqlUpdate] {
	return pulumix.Output[GetDatabasePostgresqlUpdate]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabasePostgresqlUpdateOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasePostgresqlUpdate) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

func (o GetDatabasePostgresqlUpdateOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasePostgresqlUpdate) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetDatabasePostgresqlUpdateOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasePostgresqlUpdate) string { return v.Frequency }).(pulumi.StringOutput)
}

func (o GetDatabasePostgresqlUpdateOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasePostgresqlUpdate) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetDatabasePostgresqlUpdateOutput) WeekOfMonth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasePostgresqlUpdate) int { return v.WeekOfMonth }).(pulumi.IntOutput)
}

type GetDatabasePostgresqlUpdateArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasePostgresqlUpdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasePostgresqlUpdate)(nil)).Elem()
}

func (o GetDatabasePostgresqlUpdateArrayOutput) ToGetDatabasePostgresqlUpdateArrayOutput() GetDatabasePostgresqlUpdateArrayOutput {
	return o
}

func (o GetDatabasePostgresqlUpdateArrayOutput) ToGetDatabasePostgresqlUpdateArrayOutputWithContext(ctx context.Context) GetDatabasePostgresqlUpdateArrayOutput {
	return o
}

func (o GetDatabasePostgresqlUpdateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabasePostgresqlUpdate] {
	return pulumix.Output[[]GetDatabasePostgresqlUpdate]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabasePostgresqlUpdateArrayOutput) Index(i pulumi.IntInput) GetDatabasePostgresqlUpdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasePostgresqlUpdate {
		return vs[0].([]GetDatabasePostgresqlUpdate)[vs[1].(int)]
	}).(GetDatabasePostgresqlUpdateOutput)
}

type GetDatabasesDatabase struct {
	// A list of IP addresses that can access the Managed Database.
	AllowLists []string `pulumi:"allowLists"`
	// The number of Linode Instance nodes deployed to the Managed Database.
	ClusterSize int `pulumi:"clusterSize"`
	// When this Managed Database was created.
	Created string `pulumi:"created"`
	// Whether the Managed Databases is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The Managed Database engine.
	Engine string `pulumi:"engine"`
	// The primary host for the Managed Database.
	HostPrimary string `pulumi:"hostPrimary"`
	// The secondary/private network host for the Managed Database.
	HostSecondary string `pulumi:"hostSecondary"`
	// The ID of the Managed Database.
	Id          int    `pulumi:"id"`
	InstanceUri string `pulumi:"instanceUri"`
	// A unique, user-defined string referring to the Managed Database.
	Label string `pulumi:"label"`
	// The region to use for the Managed Database.
	Region string `pulumi:"region"`
	// The replication method used for the Managed Database.
	ReplicationType string `pulumi:"replicationType"`
	// Whether to require SSL credentials to establish a connection to the Managed Database.
	SslConnection bool `pulumi:"sslConnection"`
	// The operating status of the Managed Database.
	Status string `pulumi:"status"`
	// The Linode Instance type used for the nodes of the  Managed Database instance.
	Type string `pulumi:"type"`
	// When this Managed Database was last updated.
	Updated string `pulumi:"updated"`
	// The Managed Database engine version.
	Version string `pulumi:"version"`
}

// GetDatabasesDatabaseInput is an input type that accepts GetDatabasesDatabaseArgs and GetDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseInput` via:
//
//	GetDatabasesDatabaseArgs{...}
type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// A list of IP addresses that can access the Managed Database.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The number of Linode Instance nodes deployed to the Managed Database.
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// When this Managed Database was created.
	Created pulumi.StringInput `pulumi:"created"`
	// Whether the Managed Databases is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The Managed Database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The primary host for the Managed Database.
	HostPrimary pulumi.StringInput `pulumi:"hostPrimary"`
	// The secondary/private network host for the Managed Database.
	HostSecondary pulumi.StringInput `pulumi:"hostSecondary"`
	// The ID of the Managed Database.
	Id          pulumi.IntInput    `pulumi:"id"`
	InstanceUri pulumi.StringInput `pulumi:"instanceUri"`
	// A unique, user-defined string referring to the Managed Database.
	Label pulumi.StringInput `pulumi:"label"`
	// The region to use for the Managed Database.
	Region pulumi.StringInput `pulumi:"region"`
	// The replication method used for the Managed Database.
	ReplicationType pulumi.StringInput `pulumi:"replicationType"`
	// Whether to require SSL credentials to establish a connection to the Managed Database.
	SslConnection pulumi.BoolInput `pulumi:"sslConnection"`
	// The operating status of the Managed Database.
	Status pulumi.StringInput `pulumi:"status"`
	// The Linode Instance type used for the nodes of the  Managed Database instance.
	Type pulumi.StringInput `pulumi:"type"`
	// When this Managed Database was last updated.
	Updated pulumi.StringInput `pulumi:"updated"`
	// The Managed Database engine version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

func (i GetDatabasesDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabasesDatabase] {
	return pulumix.Output[GetDatabasesDatabase]{
		OutputState: i.ToGetDatabasesDatabaseOutputWithContext(ctx).OutputState,
	}
}

// GetDatabasesDatabaseArrayInput is an input type that accepts GetDatabasesDatabaseArray and GetDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseArrayInput` via:
//
//	GetDatabasesDatabaseArray{ GetDatabasesDatabaseArgs{...} }
type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

func (i GetDatabasesDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabasesDatabase] {
	return pulumix.Output[[]GetDatabasesDatabase]{
		OutputState: i.ToGetDatabasesDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabasesDatabase] {
	return pulumix.Output[GetDatabasesDatabase]{
		OutputState: o.OutputState,
	}
}

// A list of IP addresses that can access the Managed Database.
func (o GetDatabasesDatabaseOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of Linode Instance nodes deployed to the Managed Database.
func (o GetDatabasesDatabaseOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// When this Managed Database was created.
func (o GetDatabasesDatabaseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Created }).(pulumi.StringOutput)
}

// Whether the Managed Databases is encrypted.
func (o GetDatabasesDatabaseOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The Managed Database engine.
func (o GetDatabasesDatabaseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Engine }).(pulumi.StringOutput)
}

// The primary host for the Managed Database.
func (o GetDatabasesDatabaseOutput) HostPrimary() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.HostPrimary }).(pulumi.StringOutput)
}

// The secondary/private network host for the Managed Database.
func (o GetDatabasesDatabaseOutput) HostSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.HostSecondary }).(pulumi.StringOutput)
}

// The ID of the Managed Database.
func (o GetDatabasesDatabaseOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetDatabasesDatabaseOutput) InstanceUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.InstanceUri }).(pulumi.StringOutput)
}

// A unique, user-defined string referring to the Managed Database.
func (o GetDatabasesDatabaseOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Label }).(pulumi.StringOutput)
}

// The region to use for the Managed Database.
func (o GetDatabasesDatabaseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Region }).(pulumi.StringOutput)
}

// The replication method used for the Managed Database.
func (o GetDatabasesDatabaseOutput) ReplicationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.ReplicationType }).(pulumi.StringOutput)
}

// Whether to require SSL credentials to establish a connection to the Managed Database.
func (o GetDatabasesDatabaseOutput) SslConnection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) bool { return v.SslConnection }).(pulumi.BoolOutput)
}

// The operating status of the Managed Database.
func (o GetDatabasesDatabaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Status }).(pulumi.StringOutput)
}

// The Linode Instance type used for the nodes of the  Managed Database instance.
func (o GetDatabasesDatabaseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Type }).(pulumi.StringOutput)
}

// When this Managed Database was last updated.
func (o GetDatabasesDatabaseOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Updated }).(pulumi.StringOutput)
}

// The Managed Database engine version.
func (o GetDatabasesDatabaseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Version }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabasesDatabase] {
	return pulumix.Output[[]GetDatabasesDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetDatabasesFilterInput is an input type that accepts GetDatabasesFilterArgs and GetDatabasesFilterOutput values.
// You can construct a concrete instance of `GetDatabasesFilterInput` via:
//
//	GetDatabasesFilterArgs{...}
type GetDatabasesFilterInput interface {
	pulumi.Input

	ToGetDatabasesFilterOutput() GetDatabasesFilterOutput
	ToGetDatabasesFilterOutputWithContext(context.Context) GetDatabasesFilterOutput
}

type GetDatabasesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDatabasesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesFilter)(nil)).Elem()
}

func (i GetDatabasesFilterArgs) ToGetDatabasesFilterOutput() GetDatabasesFilterOutput {
	return i.ToGetDatabasesFilterOutputWithContext(context.Background())
}

func (i GetDatabasesFilterArgs) ToGetDatabasesFilterOutputWithContext(ctx context.Context) GetDatabasesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesFilterOutput)
}

func (i GetDatabasesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabasesFilter] {
	return pulumix.Output[GetDatabasesFilter]{
		OutputState: i.ToGetDatabasesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetDatabasesFilterArrayInput is an input type that accepts GetDatabasesFilterArray and GetDatabasesFilterArrayOutput values.
// You can construct a concrete instance of `GetDatabasesFilterArrayInput` via:
//
//	GetDatabasesFilterArray{ GetDatabasesFilterArgs{...} }
type GetDatabasesFilterArrayInput interface {
	pulumi.Input

	ToGetDatabasesFilterArrayOutput() GetDatabasesFilterArrayOutput
	ToGetDatabasesFilterArrayOutputWithContext(context.Context) GetDatabasesFilterArrayOutput
}

type GetDatabasesFilterArray []GetDatabasesFilterInput

func (GetDatabasesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesFilter)(nil)).Elem()
}

func (i GetDatabasesFilterArray) ToGetDatabasesFilterArrayOutput() GetDatabasesFilterArrayOutput {
	return i.ToGetDatabasesFilterArrayOutputWithContext(context.Background())
}

func (i GetDatabasesFilterArray) ToGetDatabasesFilterArrayOutputWithContext(ctx context.Context) GetDatabasesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesFilterArrayOutput)
}

func (i GetDatabasesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabasesFilter] {
	return pulumix.Output[[]GetDatabasesFilter]{
		OutputState: i.ToGetDatabasesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabasesFilterOutput struct{ *pulumi.OutputState }

func (GetDatabasesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesFilter)(nil)).Elem()
}

func (o GetDatabasesFilterOutput) ToGetDatabasesFilterOutput() GetDatabasesFilterOutput {
	return o
}

func (o GetDatabasesFilterOutput) ToGetDatabasesFilterOutputWithContext(ctx context.Context) GetDatabasesFilterOutput {
	return o
}

func (o GetDatabasesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabasesFilter] {
	return pulumix.Output[GetDatabasesFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetDatabasesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by.
func (o GetDatabasesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetDatabasesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDatabasesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesFilter)(nil)).Elem()
}

func (o GetDatabasesFilterArrayOutput) ToGetDatabasesFilterArrayOutput() GetDatabasesFilterArrayOutput {
	return o
}

func (o GetDatabasesFilterArrayOutput) ToGetDatabasesFilterArrayOutputWithContext(ctx context.Context) GetDatabasesFilterArrayOutput {
	return o
}

func (o GetDatabasesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabasesFilter] {
	return pulumix.Output[[]GetDatabasesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabasesFilterArrayOutput) Index(i pulumi.IntInput) GetDatabasesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesFilter {
		return vs[0].([]GetDatabasesFilter)[vs[1].(int)]
	}).(GetDatabasesFilterOutput)
}

type GetFirewallDeviceType struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId int `pulumi:"entityId"`
	// The Firewall's ID.
	Id int `pulumi:"id"`
	// The label of the underlying entity this device references.
	Label string `pulumi:"label"`
	// The type of Firewall Device.
	Type string `pulumi:"type"`
	// The URL of the underlying entity this device references.
	Url string `pulumi:"url"`
}

// GetFirewallDeviceTypeInput is an input type that accepts GetFirewallDeviceTypeArgs and GetFirewallDeviceTypeOutput values.
// You can construct a concrete instance of `GetFirewallDeviceTypeInput` via:
//
//	GetFirewallDeviceTypeArgs{...}
type GetFirewallDeviceTypeInput interface {
	pulumi.Input

	ToGetFirewallDeviceTypeOutput() GetFirewallDeviceTypeOutput
	ToGetFirewallDeviceTypeOutputWithContext(context.Context) GetFirewallDeviceTypeOutput
}

type GetFirewallDeviceTypeArgs struct {
	// The ID of the underlying entity this device references (i.e. the Linode's ID).
	EntityId pulumi.IntInput `pulumi:"entityId"`
	// The Firewall's ID.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of the underlying entity this device references.
	Label pulumi.StringInput `pulumi:"label"`
	// The type of Firewall Device.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of the underlying entity this device references.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetFirewallDeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDeviceType)(nil)).Elem()
}

func (i GetFirewallDeviceTypeArgs) ToGetFirewallDeviceTypeOutput() GetFirewallDeviceTypeOutput {
	return i.ToGetFirewallDeviceTypeOutputWithContext(context.Background())
}

func (i GetFirewallDeviceTypeArgs) ToGetFirewallDeviceTypeOutputWithContext(ctx context.Context) GetFirewallDeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDeviceTypeOutput)
}

func (i GetFirewallDeviceTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallDeviceType] {
	return pulumix.Output[GetFirewallDeviceType]{
		OutputState: i.ToGetFirewallDeviceTypeOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallDeviceTypeArrayInput is an input type that accepts GetFirewallDeviceTypeArray and GetFirewallDeviceTypeArrayOutput values.
// You can construct a concrete instance of `GetFirewallDeviceTypeArrayInput` via:
//
//	GetFirewallDeviceTypeArray{ GetFirewallDeviceTypeArgs{...} }
type GetFirewallDeviceTypeArrayInput interface {
	pulumi.Input

	ToGetFirewallDeviceTypeArrayOutput() GetFirewallDeviceTypeArrayOutput
	ToGetFirewallDeviceTypeArrayOutputWithContext(context.Context) GetFirewallDeviceTypeArrayOutput
}

type GetFirewallDeviceTypeArray []GetFirewallDeviceTypeInput

func (GetFirewallDeviceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDeviceType)(nil)).Elem()
}

func (i GetFirewallDeviceTypeArray) ToGetFirewallDeviceTypeArrayOutput() GetFirewallDeviceTypeArrayOutput {
	return i.ToGetFirewallDeviceTypeArrayOutputWithContext(context.Background())
}

func (i GetFirewallDeviceTypeArray) ToGetFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) GetFirewallDeviceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallDeviceTypeArrayOutput)
}

func (i GetFirewallDeviceTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallDeviceType] {
	return pulumix.Output[[]GetFirewallDeviceType]{
		OutputState: i.ToGetFirewallDeviceTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallDeviceTypeOutput struct{ *pulumi.OutputState }

func (GetFirewallDeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallDeviceType)(nil)).Elem()
}

func (o GetFirewallDeviceTypeOutput) ToGetFirewallDeviceTypeOutput() GetFirewallDeviceTypeOutput {
	return o
}

func (o GetFirewallDeviceTypeOutput) ToGetFirewallDeviceTypeOutputWithContext(ctx context.Context) GetFirewallDeviceTypeOutput {
	return o
}

func (o GetFirewallDeviceTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallDeviceType] {
	return pulumix.Output[GetFirewallDeviceType]{
		OutputState: o.OutputState,
	}
}

// The ID of the underlying entity this device references (i.e. the Linode's ID).
func (o GetFirewallDeviceTypeOutput) EntityId() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) int { return v.EntityId }).(pulumi.IntOutput)
}

// The Firewall's ID.
func (o GetFirewallDeviceTypeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) int { return v.Id }).(pulumi.IntOutput)
}

// The label of the underlying entity this device references.
func (o GetFirewallDeviceTypeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) string { return v.Label }).(pulumi.StringOutput)
}

// The type of Firewall Device.
func (o GetFirewallDeviceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of the underlying entity this device references.
func (o GetFirewallDeviceTypeOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallDeviceType) string { return v.Url }).(pulumi.StringOutput)
}

type GetFirewallDeviceTypeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallDeviceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallDeviceType)(nil)).Elem()
}

func (o GetFirewallDeviceTypeArrayOutput) ToGetFirewallDeviceTypeArrayOutput() GetFirewallDeviceTypeArrayOutput {
	return o
}

func (o GetFirewallDeviceTypeArrayOutput) ToGetFirewallDeviceTypeArrayOutputWithContext(ctx context.Context) GetFirewallDeviceTypeArrayOutput {
	return o
}

func (o GetFirewallDeviceTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallDeviceType] {
	return pulumix.Output[[]GetFirewallDeviceType]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallDeviceTypeArrayOutput) Index(i pulumi.IntInput) GetFirewallDeviceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallDeviceType {
		return vs[0].([]GetFirewallDeviceType)[vs[1].(int)]
	}).(GetFirewallDeviceTypeOutput)
}

type GetFirewallInbound struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s []string `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// GetFirewallInboundInput is an input type that accepts GetFirewallInboundArgs and GetFirewallInboundOutput values.
// You can construct a concrete instance of `GetFirewallInboundInput` via:
//
//	GetFirewallInboundArgs{...}
type GetFirewallInboundInput interface {
	pulumi.Input

	ToGetFirewallInboundOutput() GetFirewallInboundOutput
	ToGetFirewallInboundOutputWithContext(context.Context) GetFirewallInboundOutput
}

type GetFirewallInboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallInboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInbound)(nil)).Elem()
}

func (i GetFirewallInboundArgs) ToGetFirewallInboundOutput() GetFirewallInboundOutput {
	return i.ToGetFirewallInboundOutputWithContext(context.Background())
}

func (i GetFirewallInboundArgs) ToGetFirewallInboundOutputWithContext(ctx context.Context) GetFirewallInboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInboundOutput)
}

func (i GetFirewallInboundArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallInbound] {
	return pulumix.Output[GetFirewallInbound]{
		OutputState: i.ToGetFirewallInboundOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallInboundArrayInput is an input type that accepts GetFirewallInboundArray and GetFirewallInboundArrayOutput values.
// You can construct a concrete instance of `GetFirewallInboundArrayInput` via:
//
//	GetFirewallInboundArray{ GetFirewallInboundArgs{...} }
type GetFirewallInboundArrayInput interface {
	pulumi.Input

	ToGetFirewallInboundArrayOutput() GetFirewallInboundArrayOutput
	ToGetFirewallInboundArrayOutputWithContext(context.Context) GetFirewallInboundArrayOutput
}

type GetFirewallInboundArray []GetFirewallInboundInput

func (GetFirewallInboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInbound)(nil)).Elem()
}

func (i GetFirewallInboundArray) ToGetFirewallInboundArrayOutput() GetFirewallInboundArrayOutput {
	return i.ToGetFirewallInboundArrayOutputWithContext(context.Background())
}

func (i GetFirewallInboundArray) ToGetFirewallInboundArrayOutputWithContext(ctx context.Context) GetFirewallInboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInboundArrayOutput)
}

func (i GetFirewallInboundArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallInbound] {
	return pulumix.Output[[]GetFirewallInbound]{
		OutputState: i.ToGetFirewallInboundArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallInboundOutput struct{ *pulumi.OutputState }

func (GetFirewallInboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInbound)(nil)).Elem()
}

func (o GetFirewallInboundOutput) ToGetFirewallInboundOutput() GetFirewallInboundOutput {
	return o
}

func (o GetFirewallInboundOutput) ToGetFirewallInboundOutputWithContext(ctx context.Context) GetFirewallInboundOutput {
	return o
}

func (o GetFirewallInboundOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallInbound] {
	return pulumix.Output[GetFirewallInbound]{
		OutputState: o.OutputState,
	}
}

// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o GetFirewallInboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask format.
func (o GetFirewallInboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask format.
func (o GetFirewallInboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// The label of the underlying entity this device references.
func (o GetFirewallInboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o GetFirewallInboundOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Ports }).(pulumi.StringOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o GetFirewallInboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallInboundArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInbound)(nil)).Elem()
}

func (o GetFirewallInboundArrayOutput) ToGetFirewallInboundArrayOutput() GetFirewallInboundArrayOutput {
	return o
}

func (o GetFirewallInboundArrayOutput) ToGetFirewallInboundArrayOutputWithContext(ctx context.Context) GetFirewallInboundArrayOutput {
	return o
}

func (o GetFirewallInboundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallInbound] {
	return pulumix.Output[[]GetFirewallInbound]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallInboundArrayOutput) Index(i pulumi.IntInput) GetFirewallInboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInbound {
		return vs[0].([]GetFirewallInbound)[vs[1].(int)]
	}).(GetFirewallInboundOutput)
}

type GetFirewallOutbound struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action string `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s []string `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s []string `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label string `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports string `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol string `pulumi:"protocol"`
}

// GetFirewallOutboundInput is an input type that accepts GetFirewallOutboundArgs and GetFirewallOutboundOutput values.
// You can construct a concrete instance of `GetFirewallOutboundInput` via:
//
//	GetFirewallOutboundArgs{...}
type GetFirewallOutboundInput interface {
	pulumi.Input

	ToGetFirewallOutboundOutput() GetFirewallOutboundOutput
	ToGetFirewallOutboundOutputWithContext(context.Context) GetFirewallOutboundOutput
}

type GetFirewallOutboundArgs struct {
	// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of IPv4 addresses or networks. Must be in IP/mask format.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// A list of IPv6 addresses or networks. Must be in IP/mask format.
	Ipv6s pulumi.StringArrayInput `pulumi:"ipv6s"`
	// The label of the underlying entity this device references.
	Label pulumi.StringInput `pulumi:"label"`
	// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
	Ports pulumi.StringInput `pulumi:"ports"`
	// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallOutboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallOutbound)(nil)).Elem()
}

func (i GetFirewallOutboundArgs) ToGetFirewallOutboundOutput() GetFirewallOutboundOutput {
	return i.ToGetFirewallOutboundOutputWithContext(context.Background())
}

func (i GetFirewallOutboundArgs) ToGetFirewallOutboundOutputWithContext(ctx context.Context) GetFirewallOutboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallOutboundOutput)
}

func (i GetFirewallOutboundArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallOutbound] {
	return pulumix.Output[GetFirewallOutbound]{
		OutputState: i.ToGetFirewallOutboundOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallOutboundArrayInput is an input type that accepts GetFirewallOutboundArray and GetFirewallOutboundArrayOutput values.
// You can construct a concrete instance of `GetFirewallOutboundArrayInput` via:
//
//	GetFirewallOutboundArray{ GetFirewallOutboundArgs{...} }
type GetFirewallOutboundArrayInput interface {
	pulumi.Input

	ToGetFirewallOutboundArrayOutput() GetFirewallOutboundArrayOutput
	ToGetFirewallOutboundArrayOutputWithContext(context.Context) GetFirewallOutboundArrayOutput
}

type GetFirewallOutboundArray []GetFirewallOutboundInput

func (GetFirewallOutboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallOutbound)(nil)).Elem()
}

func (i GetFirewallOutboundArray) ToGetFirewallOutboundArrayOutput() GetFirewallOutboundArrayOutput {
	return i.ToGetFirewallOutboundArrayOutputWithContext(context.Background())
}

func (i GetFirewallOutboundArray) ToGetFirewallOutboundArrayOutputWithContext(ctx context.Context) GetFirewallOutboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallOutboundArrayOutput)
}

func (i GetFirewallOutboundArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallOutbound] {
	return pulumix.Output[[]GetFirewallOutbound]{
		OutputState: i.ToGetFirewallOutboundArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallOutboundOutput struct{ *pulumi.OutputState }

func (GetFirewallOutboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallOutbound)(nil)).Elem()
}

func (o GetFirewallOutboundOutput) ToGetFirewallOutboundOutput() GetFirewallOutboundOutput {
	return o
}

func (o GetFirewallOutboundOutput) ToGetFirewallOutboundOutputWithContext(ctx context.Context) GetFirewallOutboundOutput {
	return o
}

func (o GetFirewallOutboundOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallOutbound] {
	return pulumix.Output[GetFirewallOutbound]{
		OutputState: o.OutputState,
	}
}

// Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
func (o GetFirewallOutboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Action }).(pulumi.StringOutput)
}

// A list of IPv4 addresses or networks. Must be in IP/mask format.
func (o GetFirewallOutboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// A list of IPv6 addresses or networks. Must be in IP/mask format.
func (o GetFirewallOutboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// The label of the underlying entity this device references.
func (o GetFirewallOutboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Label }).(pulumi.StringOutput)
}

// A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
func (o GetFirewallOutboundOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Ports }).(pulumi.StringOutput)
}

// The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
func (o GetFirewallOutboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallOutboundArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallOutboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallOutbound)(nil)).Elem()
}

func (o GetFirewallOutboundArrayOutput) ToGetFirewallOutboundArrayOutput() GetFirewallOutboundArrayOutput {
	return o
}

func (o GetFirewallOutboundArrayOutput) ToGetFirewallOutboundArrayOutputWithContext(ctx context.Context) GetFirewallOutboundArrayOutput {
	return o
}

func (o GetFirewallOutboundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallOutbound] {
	return pulumix.Output[[]GetFirewallOutbound]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallOutboundArrayOutput) Index(i pulumi.IntInput) GetFirewallOutboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallOutbound {
		return vs[0].([]GetFirewallOutbound)[vs[1].(int)]
	}).(GetFirewallOutboundOutput)
}

type GetFirewallsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetFirewallsFilterInput is an input type that accepts GetFirewallsFilterArgs and GetFirewallsFilterOutput values.
// You can construct a concrete instance of `GetFirewallsFilterInput` via:
//
//	GetFirewallsFilterArgs{...}
type GetFirewallsFilterInput interface {
	pulumi.Input

	ToGetFirewallsFilterOutput() GetFirewallsFilterOutput
	ToGetFirewallsFilterOutputWithContext(context.Context) GetFirewallsFilterOutput
}

type GetFirewallsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetFirewallsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFilter)(nil)).Elem()
}

func (i GetFirewallsFilterArgs) ToGetFirewallsFilterOutput() GetFirewallsFilterOutput {
	return i.ToGetFirewallsFilterOutputWithContext(context.Background())
}

func (i GetFirewallsFilterArgs) ToGetFirewallsFilterOutputWithContext(ctx context.Context) GetFirewallsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFilterOutput)
}

func (i GetFirewallsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFilter] {
	return pulumix.Output[GetFirewallsFilter]{
		OutputState: i.ToGetFirewallsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallsFilterArrayInput is an input type that accepts GetFirewallsFilterArray and GetFirewallsFilterArrayOutput values.
// You can construct a concrete instance of `GetFirewallsFilterArrayInput` via:
//
//	GetFirewallsFilterArray{ GetFirewallsFilterArgs{...} }
type GetFirewallsFilterArrayInput interface {
	pulumi.Input

	ToGetFirewallsFilterArrayOutput() GetFirewallsFilterArrayOutput
	ToGetFirewallsFilterArrayOutputWithContext(context.Context) GetFirewallsFilterArrayOutput
}

type GetFirewallsFilterArray []GetFirewallsFilterInput

func (GetFirewallsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFilter)(nil)).Elem()
}

func (i GetFirewallsFilterArray) ToGetFirewallsFilterArrayOutput() GetFirewallsFilterArrayOutput {
	return i.ToGetFirewallsFilterArrayOutputWithContext(context.Background())
}

func (i GetFirewallsFilterArray) ToGetFirewallsFilterArrayOutputWithContext(ctx context.Context) GetFirewallsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFilterArrayOutput)
}

func (i GetFirewallsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFilter] {
	return pulumix.Output[[]GetFirewallsFilter]{
		OutputState: i.ToGetFirewallsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallsFilterOutput struct{ *pulumi.OutputState }

func (GetFirewallsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFilter)(nil)).Elem()
}

func (o GetFirewallsFilterOutput) ToGetFirewallsFilterOutput() GetFirewallsFilterOutput {
	return o
}

func (o GetFirewallsFilterOutput) ToGetFirewallsFilterOutputWithContext(ctx context.Context) GetFirewallsFilterOutput {
	return o
}

func (o GetFirewallsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFilter] {
	return pulumix.Output[GetFirewallsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetFirewallsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirewallsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetFirewallsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetFirewallsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetFirewallsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFilter)(nil)).Elem()
}

func (o GetFirewallsFilterArrayOutput) ToGetFirewallsFilterArrayOutput() GetFirewallsFilterArrayOutput {
	return o
}

func (o GetFirewallsFilterArrayOutput) ToGetFirewallsFilterArrayOutputWithContext(ctx context.Context) GetFirewallsFilterArrayOutput {
	return o
}

func (o GetFirewallsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFilter] {
	return pulumix.Output[[]GetFirewallsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFilterArrayOutput) Index(i pulumi.IntInput) GetFirewallsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsFilter {
		return vs[0].([]GetFirewallsFilter)[vs[1].(int)]
	}).(GetFirewallsFilterOutput)
}

type GetFirewallsFirewall struct {
	// When this firewall was created.
	Created string                       `pulumi:"created"`
	Devices []GetFirewallsFirewallDevice `pulumi:"devices"`
	// If true, the Firewall is inactive.
	Disabled bool `pulumi:"disabled"`
	// The unique ID assigned to this Firewall.
	Id int `pulumi:"id"`
	// The default behavior for inbound traffic.
	InboundPolicy string                        `pulumi:"inboundPolicy"`
	Inbounds      []GetFirewallsFirewallInbound `pulumi:"inbounds"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label string `pulumi:"label"`
	// The IDs of Linodes this firewall is applied to.
	Linodes       []int `pulumi:"linodes"`
	Nodebalancers []int `pulumi:"nodebalancers"`
	// The default behavior for outbound traffic.
	OutboundPolicy string                         `pulumi:"outboundPolicy"`
	Outbounds      []GetFirewallsFirewallOutbound `pulumi:"outbounds"`
	// The status of the firewall.
	Status string `pulumi:"status"`
	// An array of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `pulumi:"tags"`
	// When this firewall was last updated.
	Updated string `pulumi:"updated"`
}

// GetFirewallsFirewallInput is an input type that accepts GetFirewallsFirewallArgs and GetFirewallsFirewallOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallInput` via:
//
//	GetFirewallsFirewallArgs{...}
type GetFirewallsFirewallInput interface {
	pulumi.Input

	ToGetFirewallsFirewallOutput() GetFirewallsFirewallOutput
	ToGetFirewallsFirewallOutputWithContext(context.Context) GetFirewallsFirewallOutput
}

type GetFirewallsFirewallArgs struct {
	// When this firewall was created.
	Created pulumi.StringInput                   `pulumi:"created"`
	Devices GetFirewallsFirewallDeviceArrayInput `pulumi:"devices"`
	// If true, the Firewall is inactive.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	// The unique ID assigned to this Firewall.
	Id pulumi.IntInput `pulumi:"id"`
	// The default behavior for inbound traffic.
	InboundPolicy pulumi.StringInput                    `pulumi:"inboundPolicy"`
	Inbounds      GetFirewallsFirewallInboundArrayInput `pulumi:"inbounds"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label pulumi.StringInput `pulumi:"label"`
	// The IDs of Linodes this firewall is applied to.
	Linodes       pulumi.IntArrayInput `pulumi:"linodes"`
	Nodebalancers pulumi.IntArrayInput `pulumi:"nodebalancers"`
	// The default behavior for outbound traffic.
	OutboundPolicy pulumi.StringInput                     `pulumi:"outboundPolicy"`
	Outbounds      GetFirewallsFirewallOutboundArrayInput `pulumi:"outbounds"`
	// The status of the firewall.
	Status pulumi.StringInput `pulumi:"status"`
	// An array of tags applied to this object. Tags are for organizational purposes only.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// When this firewall was last updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetFirewallsFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewall)(nil)).Elem()
}

func (i GetFirewallsFirewallArgs) ToGetFirewallsFirewallOutput() GetFirewallsFirewallOutput {
	return i.ToGetFirewallsFirewallOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallArgs) ToGetFirewallsFirewallOutputWithContext(ctx context.Context) GetFirewallsFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallOutput)
}

func (i GetFirewallsFirewallArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewall] {
	return pulumix.Output[GetFirewallsFirewall]{
		OutputState: i.ToGetFirewallsFirewallOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallsFirewallArrayInput is an input type that accepts GetFirewallsFirewallArray and GetFirewallsFirewallArrayOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallArrayInput` via:
//
//	GetFirewallsFirewallArray{ GetFirewallsFirewallArgs{...} }
type GetFirewallsFirewallArrayInput interface {
	pulumi.Input

	ToGetFirewallsFirewallArrayOutput() GetFirewallsFirewallArrayOutput
	ToGetFirewallsFirewallArrayOutputWithContext(context.Context) GetFirewallsFirewallArrayOutput
}

type GetFirewallsFirewallArray []GetFirewallsFirewallInput

func (GetFirewallsFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewall)(nil)).Elem()
}

func (i GetFirewallsFirewallArray) ToGetFirewallsFirewallArrayOutput() GetFirewallsFirewallArrayOutput {
	return i.ToGetFirewallsFirewallArrayOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallArray) ToGetFirewallsFirewallArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallArrayOutput)
}

func (i GetFirewallsFirewallArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewall] {
	return pulumix.Output[[]GetFirewallsFirewall]{
		OutputState: i.ToGetFirewallsFirewallArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallsFirewallOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewall)(nil)).Elem()
}

func (o GetFirewallsFirewallOutput) ToGetFirewallsFirewallOutput() GetFirewallsFirewallOutput {
	return o
}

func (o GetFirewallsFirewallOutput) ToGetFirewallsFirewallOutputWithContext(ctx context.Context) GetFirewallsFirewallOutput {
	return o
}

func (o GetFirewallsFirewallOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewall] {
	return pulumix.Output[GetFirewallsFirewall]{
		OutputState: o.OutputState,
	}
}

// When this firewall was created.
func (o GetFirewallsFirewallOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallOutput) Devices() GetFirewallsFirewallDeviceArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) []GetFirewallsFirewallDevice { return v.Devices }).(GetFirewallsFirewallDeviceArrayOutput)
}

// If true, the Firewall is inactive.
func (o GetFirewallsFirewallOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// The unique ID assigned to this Firewall.
func (o GetFirewallsFirewallOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) int { return v.Id }).(pulumi.IntOutput)
}

// The default behavior for inbound traffic.
func (o GetFirewallsFirewallOutput) InboundPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) string { return v.InboundPolicy }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallOutput) Inbounds() GetFirewallsFirewallInboundArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) []GetFirewallsFirewallInbound { return v.Inbounds }).(GetFirewallsFirewallInboundArrayOutput)
}

// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
func (o GetFirewallsFirewallOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) string { return v.Label }).(pulumi.StringOutput)
}

// The IDs of Linodes this firewall is applied to.
func (o GetFirewallsFirewallOutput) Linodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) []int { return v.Linodes }).(pulumi.IntArrayOutput)
}

func (o GetFirewallsFirewallOutput) Nodebalancers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) []int { return v.Nodebalancers }).(pulumi.IntArrayOutput)
}

// The default behavior for outbound traffic.
func (o GetFirewallsFirewallOutput) OutboundPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) string { return v.OutboundPolicy }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallOutput) Outbounds() GetFirewallsFirewallOutboundArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) []GetFirewallsFirewallOutbound { return v.Outbounds }).(GetFirewallsFirewallOutboundArrayOutput)
}

// The status of the firewall.
func (o GetFirewallsFirewallOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) string { return v.Status }).(pulumi.StringOutput)
}

// An array of tags applied to this object. Tags are for organizational purposes only.
func (o GetFirewallsFirewallOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// When this firewall was last updated.
func (o GetFirewallsFirewallOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewall) string { return v.Updated }).(pulumi.StringOutput)
}

type GetFirewallsFirewallArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewall)(nil)).Elem()
}

func (o GetFirewallsFirewallArrayOutput) ToGetFirewallsFirewallArrayOutput() GetFirewallsFirewallArrayOutput {
	return o
}

func (o GetFirewallsFirewallArrayOutput) ToGetFirewallsFirewallArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallArrayOutput {
	return o
}

func (o GetFirewallsFirewallArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewall] {
	return pulumix.Output[[]GetFirewallsFirewall]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallArrayOutput) Index(i pulumi.IntInput) GetFirewallsFirewallOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsFirewall {
		return vs[0].([]GetFirewallsFirewall)[vs[1].(int)]
	}).(GetFirewallsFirewallOutput)
}

type GetFirewallsFirewallDevice struct {
	EntityId int `pulumi:"entityId"`
	// The unique ID assigned to this Firewall.
	Id int `pulumi:"id"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label string `pulumi:"label"`
	Type  string `pulumi:"type"`
	Url   string `pulumi:"url"`
}

// GetFirewallsFirewallDeviceInput is an input type that accepts GetFirewallsFirewallDeviceArgs and GetFirewallsFirewallDeviceOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallDeviceInput` via:
//
//	GetFirewallsFirewallDeviceArgs{...}
type GetFirewallsFirewallDeviceInput interface {
	pulumi.Input

	ToGetFirewallsFirewallDeviceOutput() GetFirewallsFirewallDeviceOutput
	ToGetFirewallsFirewallDeviceOutputWithContext(context.Context) GetFirewallsFirewallDeviceOutput
}

type GetFirewallsFirewallDeviceArgs struct {
	EntityId pulumi.IntInput `pulumi:"entityId"`
	// The unique ID assigned to this Firewall.
	Id pulumi.IntInput `pulumi:"id"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label pulumi.StringInput `pulumi:"label"`
	Type  pulumi.StringInput `pulumi:"type"`
	Url   pulumi.StringInput `pulumi:"url"`
}

func (GetFirewallsFirewallDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewallDevice)(nil)).Elem()
}

func (i GetFirewallsFirewallDeviceArgs) ToGetFirewallsFirewallDeviceOutput() GetFirewallsFirewallDeviceOutput {
	return i.ToGetFirewallsFirewallDeviceOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallDeviceArgs) ToGetFirewallsFirewallDeviceOutputWithContext(ctx context.Context) GetFirewallsFirewallDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallDeviceOutput)
}

func (i GetFirewallsFirewallDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewallDevice] {
	return pulumix.Output[GetFirewallsFirewallDevice]{
		OutputState: i.ToGetFirewallsFirewallDeviceOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallsFirewallDeviceArrayInput is an input type that accepts GetFirewallsFirewallDeviceArray and GetFirewallsFirewallDeviceArrayOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallDeviceArrayInput` via:
//
//	GetFirewallsFirewallDeviceArray{ GetFirewallsFirewallDeviceArgs{...} }
type GetFirewallsFirewallDeviceArrayInput interface {
	pulumi.Input

	ToGetFirewallsFirewallDeviceArrayOutput() GetFirewallsFirewallDeviceArrayOutput
	ToGetFirewallsFirewallDeviceArrayOutputWithContext(context.Context) GetFirewallsFirewallDeviceArrayOutput
}

type GetFirewallsFirewallDeviceArray []GetFirewallsFirewallDeviceInput

func (GetFirewallsFirewallDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewallDevice)(nil)).Elem()
}

func (i GetFirewallsFirewallDeviceArray) ToGetFirewallsFirewallDeviceArrayOutput() GetFirewallsFirewallDeviceArrayOutput {
	return i.ToGetFirewallsFirewallDeviceArrayOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallDeviceArray) ToGetFirewallsFirewallDeviceArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallDeviceArrayOutput)
}

func (i GetFirewallsFirewallDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewallDevice] {
	return pulumix.Output[[]GetFirewallsFirewallDevice]{
		OutputState: i.ToGetFirewallsFirewallDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallsFirewallDeviceOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewallDevice)(nil)).Elem()
}

func (o GetFirewallsFirewallDeviceOutput) ToGetFirewallsFirewallDeviceOutput() GetFirewallsFirewallDeviceOutput {
	return o
}

func (o GetFirewallsFirewallDeviceOutput) ToGetFirewallsFirewallDeviceOutputWithContext(ctx context.Context) GetFirewallsFirewallDeviceOutput {
	return o
}

func (o GetFirewallsFirewallDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewallDevice] {
	return pulumix.Output[GetFirewallsFirewallDevice]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallDeviceOutput) EntityId() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsFirewallDevice) int { return v.EntityId }).(pulumi.IntOutput)
}

// The unique ID assigned to this Firewall.
func (o GetFirewallsFirewallDeviceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsFirewallDevice) int { return v.Id }).(pulumi.IntOutput)
}

// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
func (o GetFirewallsFirewallDeviceOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallDevice) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallDeviceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallDevice) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallDeviceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallDevice) string { return v.Url }).(pulumi.StringOutput)
}

type GetFirewallsFirewallDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewallDevice)(nil)).Elem()
}

func (o GetFirewallsFirewallDeviceArrayOutput) ToGetFirewallsFirewallDeviceArrayOutput() GetFirewallsFirewallDeviceArrayOutput {
	return o
}

func (o GetFirewallsFirewallDeviceArrayOutput) ToGetFirewallsFirewallDeviceArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallDeviceArrayOutput {
	return o
}

func (o GetFirewallsFirewallDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewallDevice] {
	return pulumix.Output[[]GetFirewallsFirewallDevice]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallDeviceArrayOutput) Index(i pulumi.IntInput) GetFirewallsFirewallDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsFirewallDevice {
		return vs[0].([]GetFirewallsFirewallDevice)[vs[1].(int)]
	}).(GetFirewallsFirewallDeviceOutput)
}

type GetFirewallsFirewallInbound struct {
	Action string   `pulumi:"action"`
	Ipv4s  []string `pulumi:"ipv4s"`
	Ipv6s  []string `pulumi:"ipv6s"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label    string `pulumi:"label"`
	Ports    string `pulumi:"ports"`
	Protocol string `pulumi:"protocol"`
}

// GetFirewallsFirewallInboundInput is an input type that accepts GetFirewallsFirewallInboundArgs and GetFirewallsFirewallInboundOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallInboundInput` via:
//
//	GetFirewallsFirewallInboundArgs{...}
type GetFirewallsFirewallInboundInput interface {
	pulumi.Input

	ToGetFirewallsFirewallInboundOutput() GetFirewallsFirewallInboundOutput
	ToGetFirewallsFirewallInboundOutputWithContext(context.Context) GetFirewallsFirewallInboundOutput
}

type GetFirewallsFirewallInboundArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Ipv4s  pulumi.StringArrayInput `pulumi:"ipv4s"`
	Ipv6s  pulumi.StringArrayInput `pulumi:"ipv6s"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label    pulumi.StringInput `pulumi:"label"`
	Ports    pulumi.StringInput `pulumi:"ports"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallsFirewallInboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewallInbound)(nil)).Elem()
}

func (i GetFirewallsFirewallInboundArgs) ToGetFirewallsFirewallInboundOutput() GetFirewallsFirewallInboundOutput {
	return i.ToGetFirewallsFirewallInboundOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallInboundArgs) ToGetFirewallsFirewallInboundOutputWithContext(ctx context.Context) GetFirewallsFirewallInboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallInboundOutput)
}

func (i GetFirewallsFirewallInboundArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewallInbound] {
	return pulumix.Output[GetFirewallsFirewallInbound]{
		OutputState: i.ToGetFirewallsFirewallInboundOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallsFirewallInboundArrayInput is an input type that accepts GetFirewallsFirewallInboundArray and GetFirewallsFirewallInboundArrayOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallInboundArrayInput` via:
//
//	GetFirewallsFirewallInboundArray{ GetFirewallsFirewallInboundArgs{...} }
type GetFirewallsFirewallInboundArrayInput interface {
	pulumi.Input

	ToGetFirewallsFirewallInboundArrayOutput() GetFirewallsFirewallInboundArrayOutput
	ToGetFirewallsFirewallInboundArrayOutputWithContext(context.Context) GetFirewallsFirewallInboundArrayOutput
}

type GetFirewallsFirewallInboundArray []GetFirewallsFirewallInboundInput

func (GetFirewallsFirewallInboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewallInbound)(nil)).Elem()
}

func (i GetFirewallsFirewallInboundArray) ToGetFirewallsFirewallInboundArrayOutput() GetFirewallsFirewallInboundArrayOutput {
	return i.ToGetFirewallsFirewallInboundArrayOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallInboundArray) ToGetFirewallsFirewallInboundArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallInboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallInboundArrayOutput)
}

func (i GetFirewallsFirewallInboundArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewallInbound] {
	return pulumix.Output[[]GetFirewallsFirewallInbound]{
		OutputState: i.ToGetFirewallsFirewallInboundArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallsFirewallInboundOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallInboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewallInbound)(nil)).Elem()
}

func (o GetFirewallsFirewallInboundOutput) ToGetFirewallsFirewallInboundOutput() GetFirewallsFirewallInboundOutput {
	return o
}

func (o GetFirewallsFirewallInboundOutput) ToGetFirewallsFirewallInboundOutputWithContext(ctx context.Context) GetFirewallsFirewallInboundOutput {
	return o
}

func (o GetFirewallsFirewallInboundOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewallInbound] {
	return pulumix.Output[GetFirewallsFirewallInbound]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallInboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallInbound) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallInboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewallInbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

func (o GetFirewallsFirewallInboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewallInbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
func (o GetFirewallsFirewallInboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallInbound) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallInboundOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallInbound) string { return v.Ports }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallInboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallInbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallsFirewallInboundArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallInboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewallInbound)(nil)).Elem()
}

func (o GetFirewallsFirewallInboundArrayOutput) ToGetFirewallsFirewallInboundArrayOutput() GetFirewallsFirewallInboundArrayOutput {
	return o
}

func (o GetFirewallsFirewallInboundArrayOutput) ToGetFirewallsFirewallInboundArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallInboundArrayOutput {
	return o
}

func (o GetFirewallsFirewallInboundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewallInbound] {
	return pulumix.Output[[]GetFirewallsFirewallInbound]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallInboundArrayOutput) Index(i pulumi.IntInput) GetFirewallsFirewallInboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsFirewallInbound {
		return vs[0].([]GetFirewallsFirewallInbound)[vs[1].(int)]
	}).(GetFirewallsFirewallInboundOutput)
}

type GetFirewallsFirewallOutbound struct {
	Action string   `pulumi:"action"`
	Ipv4s  []string `pulumi:"ipv4s"`
	Ipv6s  []string `pulumi:"ipv6s"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label    string `pulumi:"label"`
	Ports    string `pulumi:"ports"`
	Protocol string `pulumi:"protocol"`
}

// GetFirewallsFirewallOutboundInput is an input type that accepts GetFirewallsFirewallOutboundArgs and GetFirewallsFirewallOutboundOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallOutboundInput` via:
//
//	GetFirewallsFirewallOutboundArgs{...}
type GetFirewallsFirewallOutboundInput interface {
	pulumi.Input

	ToGetFirewallsFirewallOutboundOutput() GetFirewallsFirewallOutboundOutput
	ToGetFirewallsFirewallOutboundOutputWithContext(context.Context) GetFirewallsFirewallOutboundOutput
}

type GetFirewallsFirewallOutboundArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Ipv4s  pulumi.StringArrayInput `pulumi:"ipv4s"`
	Ipv6s  pulumi.StringArrayInput `pulumi:"ipv6s"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	Label    pulumi.StringInput `pulumi:"label"`
	Ports    pulumi.StringInput `pulumi:"ports"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallsFirewallOutboundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewallOutbound)(nil)).Elem()
}

func (i GetFirewallsFirewallOutboundArgs) ToGetFirewallsFirewallOutboundOutput() GetFirewallsFirewallOutboundOutput {
	return i.ToGetFirewallsFirewallOutboundOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallOutboundArgs) ToGetFirewallsFirewallOutboundOutputWithContext(ctx context.Context) GetFirewallsFirewallOutboundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallOutboundOutput)
}

func (i GetFirewallsFirewallOutboundArgs) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewallOutbound] {
	return pulumix.Output[GetFirewallsFirewallOutbound]{
		OutputState: i.ToGetFirewallsFirewallOutboundOutputWithContext(ctx).OutputState,
	}
}

// GetFirewallsFirewallOutboundArrayInput is an input type that accepts GetFirewallsFirewallOutboundArray and GetFirewallsFirewallOutboundArrayOutput values.
// You can construct a concrete instance of `GetFirewallsFirewallOutboundArrayInput` via:
//
//	GetFirewallsFirewallOutboundArray{ GetFirewallsFirewallOutboundArgs{...} }
type GetFirewallsFirewallOutboundArrayInput interface {
	pulumi.Input

	ToGetFirewallsFirewallOutboundArrayOutput() GetFirewallsFirewallOutboundArrayOutput
	ToGetFirewallsFirewallOutboundArrayOutputWithContext(context.Context) GetFirewallsFirewallOutboundArrayOutput
}

type GetFirewallsFirewallOutboundArray []GetFirewallsFirewallOutboundInput

func (GetFirewallsFirewallOutboundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewallOutbound)(nil)).Elem()
}

func (i GetFirewallsFirewallOutboundArray) ToGetFirewallsFirewallOutboundArrayOutput() GetFirewallsFirewallOutboundArrayOutput {
	return i.ToGetFirewallsFirewallOutboundArrayOutputWithContext(context.Background())
}

func (i GetFirewallsFirewallOutboundArray) ToGetFirewallsFirewallOutboundArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallOutboundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsFirewallOutboundArrayOutput)
}

func (i GetFirewallsFirewallOutboundArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewallOutbound] {
	return pulumix.Output[[]GetFirewallsFirewallOutbound]{
		OutputState: i.ToGetFirewallsFirewallOutboundArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFirewallsFirewallOutboundOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallOutboundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsFirewallOutbound)(nil)).Elem()
}

func (o GetFirewallsFirewallOutboundOutput) ToGetFirewallsFirewallOutboundOutput() GetFirewallsFirewallOutboundOutput {
	return o
}

func (o GetFirewallsFirewallOutboundOutput) ToGetFirewallsFirewallOutboundOutputWithContext(ctx context.Context) GetFirewallsFirewallOutboundOutput {
	return o
}

func (o GetFirewallsFirewallOutboundOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallsFirewallOutbound] {
	return pulumix.Output[GetFirewallsFirewallOutbound]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallOutboundOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallOutbound) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallOutboundOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewallOutbound) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

func (o GetFirewallsFirewallOutboundOutput) Ipv6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallsFirewallOutbound) []string { return v.Ipv6s }).(pulumi.StringArrayOutput)
}

// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
func (o GetFirewallsFirewallOutboundOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallOutbound) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallOutboundOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallOutbound) string { return v.Ports }).(pulumi.StringOutput)
}

func (o GetFirewallsFirewallOutboundOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsFirewallOutbound) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallsFirewallOutboundArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsFirewallOutboundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsFirewallOutbound)(nil)).Elem()
}

func (o GetFirewallsFirewallOutboundArrayOutput) ToGetFirewallsFirewallOutboundArrayOutput() GetFirewallsFirewallOutboundArrayOutput {
	return o
}

func (o GetFirewallsFirewallOutboundArrayOutput) ToGetFirewallsFirewallOutboundArrayOutputWithContext(ctx context.Context) GetFirewallsFirewallOutboundArrayOutput {
	return o
}

func (o GetFirewallsFirewallOutboundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFirewallsFirewallOutbound] {
	return pulumix.Output[[]GetFirewallsFirewallOutbound]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallsFirewallOutboundArrayOutput) Index(i pulumi.IntInput) GetFirewallsFirewallOutboundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsFirewallOutbound {
		return vs[0].([]GetFirewallsFirewallOutbound)[vs[1].(int)]
	}).(GetFirewallsFirewallOutboundOutput)
}

type GetImagesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetImagesFilterInput is an input type that accepts GetImagesFilterArgs and GetImagesFilterOutput values.
// You can construct a concrete instance of `GetImagesFilterInput` via:
//
//	GetImagesFilterArgs{...}
type GetImagesFilterInput interface {
	pulumi.Input

	ToGetImagesFilterOutput() GetImagesFilterOutput
	ToGetImagesFilterOutputWithContext(context.Context) GetImagesFilterOutput
}

type GetImagesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return i.ToGetImagesFilterOutputWithContext(context.Background())
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterOutput)
}

func (i GetImagesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesFilter] {
	return pulumix.Output[GetImagesFilter]{
		OutputState: i.ToGetImagesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetImagesFilterArrayInput is an input type that accepts GetImagesFilterArray and GetImagesFilterArrayOutput values.
// You can construct a concrete instance of `GetImagesFilterArrayInput` via:
//
//	GetImagesFilterArray{ GetImagesFilterArgs{...} }
type GetImagesFilterArrayInput interface {
	pulumi.Input

	ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput
	ToGetImagesFilterArrayOutputWithContext(context.Context) GetImagesFilterArrayOutput
}

type GetImagesFilterArray []GetImagesFilterInput

func (GetImagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return i.ToGetImagesFilterArrayOutputWithContext(context.Background())
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterArrayOutput)
}

func (i GetImagesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesFilter] {
	return pulumix.Output[[]GetImagesFilter]{
		OutputState: i.ToGetImagesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesFilterOutput struct{ *pulumi.OutputState }

func (GetImagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesFilter] {
	return pulumix.Output[GetImagesFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetImagesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetImagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetImagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesFilter] {
	return pulumix.Output[[]GetImagesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesFilterArrayOutput) Index(i pulumi.IntInput) GetImagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesFilter {
		return vs[0].([]GetImagesFilter)[vs[1].(int)]
	}).(GetImagesFilterOutput)
}

type GetImagesImage struct {
	Capabilities []string `pulumi:"capabilities"`
	// When this Image was created.
	Created string `pulumi:"created"`
	// The name of the User who created this Image, or "linode" for official Images.
	CreatedBy string `pulumi:"createdBy"`
	// Whether or not this Image is deprecated. Will only be true for deprecated public Images.
	Deprecated bool `pulumi:"deprecated"`
	// A detailed description of this Image.
	Description string `pulumi:"description"`
	Expiry      string `pulumi:"expiry"`
	// The unique ID of this Image.  The ID of private images begin with `private/` followed by the numeric identifier of the private image, for example `private/12345`.
	Id string `pulumi:"id"`
	// True if the Image is public.
	IsPublic bool `pulumi:"isPublic"`
	// A short description of the Image.
	Label string `pulumi:"label"`
	// The minimum size this Image needs to deploy. Size is in MB. example: 2500
	Size int `pulumi:"size"`
	// The current status of this image. (`creating`, `pendingUpload`, `available`)
	Status string `pulumi:"status"`
	// How the Image was created. Manual Images can be created at any time. "Automatic" Images are created automatically from a deleted Linode. (`manual`, `automatic`)
	Type string `pulumi:"type"`
	// The upstream distribution vendor. `None` for private Images.
	Vendor string `pulumi:"vendor"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//	GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// When this Image was created.
	Created pulumi.StringInput `pulumi:"created"`
	// The name of the User who created this Image, or "linode" for official Images.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// Whether or not this Image is deprecated. Will only be true for deprecated public Images.
	Deprecated pulumi.BoolInput `pulumi:"deprecated"`
	// A detailed description of this Image.
	Description pulumi.StringInput `pulumi:"description"`
	Expiry      pulumi.StringInput `pulumi:"expiry"`
	// The unique ID of this Image.  The ID of private images begin with `private/` followed by the numeric identifier of the private image, for example `private/12345`.
	Id pulumi.StringInput `pulumi:"id"`
	// True if the Image is public.
	IsPublic pulumi.BoolInput `pulumi:"isPublic"`
	// A short description of the Image.
	Label pulumi.StringInput `pulumi:"label"`
	// The minimum size this Image needs to deploy. Size is in MB. example: 2500
	Size pulumi.IntInput `pulumi:"size"`
	// The current status of this image. (`creating`, `pendingUpload`, `available`)
	Status pulumi.StringInput `pulumi:"status"`
	// How the Image was created. Manual Images can be created at any time. "Automatic" Images are created automatically from a deleted Linode. (`manual`, `automatic`)
	Type pulumi.StringInput `pulumi:"type"`
	// The upstream distribution vendor. `None` for private Images.
	Vendor pulumi.StringInput `pulumi:"vendor"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

func (i GetImagesImageArgs) ToOutput(ctx context.Context) pulumix.Output[GetImagesImage] {
	return pulumix.Output[GetImagesImage]{
		OutputState: i.ToGetImagesImageOutputWithContext(ctx).OutputState,
	}
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//	GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

func (i GetImagesImageArray) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImage] {
	return pulumix.Output[[]GetImagesImage]{
		OutputState: i.ToGetImagesImageArrayOutputWithContext(ctx).OutputState,
	}
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesImage] {
	return pulumix.Output[GetImagesImage]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// When this Image was created.
func (o GetImagesImageOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Created }).(pulumi.StringOutput)
}

// The name of the User who created this Image, or "linode" for official Images.
func (o GetImagesImageOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Whether or not this Image is deprecated. Will only be true for deprecated public Images.
func (o GetImagesImageOutput) Deprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.Deprecated }).(pulumi.BoolOutput)
}

// A detailed description of this Image.
func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Expiry }).(pulumi.StringOutput)
}

// The unique ID of this Image.  The ID of private images begin with `private/` followed by the numeric identifier of the private image, for example `private/12345`.
func (o GetImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

// True if the Image is public.
func (o GetImagesImageOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

// A short description of the Image.
func (o GetImagesImageOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Label }).(pulumi.StringOutput)
}

// The minimum size this Image needs to deploy. Size is in MB. example: 2500
func (o GetImagesImageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.Size }).(pulumi.IntOutput)
}

// The current status of this image. (`creating`, `pendingUpload`, `available`)
func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

// How the Image was created. Manual Images can be created at any time. "Automatic" Images are created automatically from a deleted Linode. (`manual`, `automatic`)
func (o GetImagesImageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Type }).(pulumi.StringOutput)
}

// The upstream distribution vendor. `None` for private Images.
func (o GetImagesImageOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Vendor }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetImagesImage] {
	return pulumix.Output[[]GetImagesImage]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetInstanceBackupsAutomatic struct {
	Available bool `pulumi:"available"`
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs []string `pulumi:"configs"`
	// The date the Backup was taken.
	Created string                            `pulumi:"created"`
	Disks   []GetInstanceBackupsAutomaticDisk `pulumi:"disks"`
	// The date the Backup completed.
	Finished string `pulumi:"finished"`
	// The unique ID of this Backup.
	Id int `pulumi:"id"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status string `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type string `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated string `pulumi:"updated"`
}

// GetInstanceBackupsAutomaticInput is an input type that accepts GetInstanceBackupsAutomaticArgs and GetInstanceBackupsAutomaticOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticInput` via:
//
//	GetInstanceBackupsAutomaticArgs{...}
type GetInstanceBackupsAutomaticInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticOutput() GetInstanceBackupsAutomaticOutput
	ToGetInstanceBackupsAutomaticOutputWithContext(context.Context) GetInstanceBackupsAutomaticOutput
}

type GetInstanceBackupsAutomaticArgs struct {
	Available pulumi.BoolInput `pulumi:"available"`
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs pulumi.StringArrayInput `pulumi:"configs"`
	// The date the Backup was taken.
	Created pulumi.StringInput                        `pulumi:"created"`
	Disks   GetInstanceBackupsAutomaticDiskArrayInput `pulumi:"disks"`
	// The date the Backup completed.
	Finished pulumi.StringInput `pulumi:"finished"`
	// The unique ID of this Backup.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status pulumi.StringInput `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type pulumi.StringInput `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetInstanceBackupsAutomaticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticArgs) ToGetInstanceBackupsAutomaticOutput() GetInstanceBackupsAutomaticOutput {
	return i.ToGetInstanceBackupsAutomaticOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticArgs) ToGetInstanceBackupsAutomaticOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticOutput)
}

func (i GetInstanceBackupsAutomaticArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsAutomatic] {
	return pulumix.Output[GetInstanceBackupsAutomatic]{
		OutputState: i.ToGetInstanceBackupsAutomaticOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceBackupsAutomaticArrayInput is an input type that accepts GetInstanceBackupsAutomaticArray and GetInstanceBackupsAutomaticArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticArrayInput` via:
//
//	GetInstanceBackupsAutomaticArray{ GetInstanceBackupsAutomaticArgs{...} }
type GetInstanceBackupsAutomaticArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticArrayOutput() GetInstanceBackupsAutomaticArrayOutput
	ToGetInstanceBackupsAutomaticArrayOutputWithContext(context.Context) GetInstanceBackupsAutomaticArrayOutput
}

type GetInstanceBackupsAutomaticArray []GetInstanceBackupsAutomaticInput

func (GetInstanceBackupsAutomaticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticArray) ToGetInstanceBackupsAutomaticArrayOutput() GetInstanceBackupsAutomaticArrayOutput {
	return i.ToGetInstanceBackupsAutomaticArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticArray) ToGetInstanceBackupsAutomaticArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticArrayOutput)
}

func (i GetInstanceBackupsAutomaticArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsAutomatic] {
	return pulumix.Output[[]GetInstanceBackupsAutomatic]{
		OutputState: i.ToGetInstanceBackupsAutomaticArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceBackupsAutomaticOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticOutput) ToGetInstanceBackupsAutomaticOutput() GetInstanceBackupsAutomaticOutput {
	return o
}

func (o GetInstanceBackupsAutomaticOutput) ToGetInstanceBackupsAutomaticOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticOutput {
	return o
}

func (o GetInstanceBackupsAutomaticOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsAutomatic] {
	return pulumix.Output[GetInstanceBackupsAutomatic]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsAutomaticOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) bool { return v.Available }).(pulumi.BoolOutput)
}

// A list of the labels of the Configuration profiles that are part of the Backup.
func (o GetInstanceBackupsAutomaticOutput) Configs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) []string { return v.Configs }).(pulumi.StringArrayOutput)
}

// The date the Backup was taken.
func (o GetInstanceBackupsAutomaticOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetInstanceBackupsAutomaticOutput) Disks() GetInstanceBackupsAutomaticDiskArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) []GetInstanceBackupsAutomaticDisk { return v.Disks }).(GetInstanceBackupsAutomaticDiskArrayOutput)
}

// The date the Backup completed.
func (o GetInstanceBackupsAutomaticOutput) Finished() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Finished }).(pulumi.StringOutput)
}

// The unique ID of this Backup.
func (o GetInstanceBackupsAutomaticOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) int { return v.Id }).(pulumi.IntOutput)
}

// The label of this disk.
func (o GetInstanceBackupsAutomaticOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Label }).(pulumi.StringOutput)
}

// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
func (o GetInstanceBackupsAutomaticOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Status }).(pulumi.StringOutput)
}

// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
func (o GetInstanceBackupsAutomaticOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Type }).(pulumi.StringOutput)
}

// The date the Backup was most recently updated.
func (o GetInstanceBackupsAutomaticOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomatic) string { return v.Updated }).(pulumi.StringOutput)
}

type GetInstanceBackupsAutomaticArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomatic)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticArrayOutput) ToGetInstanceBackupsAutomaticArrayOutput() GetInstanceBackupsAutomaticArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticArrayOutput) ToGetInstanceBackupsAutomaticArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsAutomatic] {
	return pulumix.Output[[]GetInstanceBackupsAutomatic]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsAutomaticArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsAutomaticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsAutomatic {
		return vs[0].([]GetInstanceBackupsAutomatic)[vs[1].(int)]
	}).(GetInstanceBackupsAutomaticOutput)
}

type GetInstanceBackupsAutomaticDisk struct {
	// The filesystem of this disk.
	Filesystem string `pulumi:"filesystem"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The size of this disk.
	Size int `pulumi:"size"`
}

// GetInstanceBackupsAutomaticDiskInput is an input type that accepts GetInstanceBackupsAutomaticDiskArgs and GetInstanceBackupsAutomaticDiskOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticDiskInput` via:
//
//	GetInstanceBackupsAutomaticDiskArgs{...}
type GetInstanceBackupsAutomaticDiskInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticDiskOutput() GetInstanceBackupsAutomaticDiskOutput
	ToGetInstanceBackupsAutomaticDiskOutputWithContext(context.Context) GetInstanceBackupsAutomaticDiskOutput
}

type GetInstanceBackupsAutomaticDiskArgs struct {
	// The filesystem of this disk.
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of this disk.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstanceBackupsAutomaticDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticDiskArgs) ToGetInstanceBackupsAutomaticDiskOutput() GetInstanceBackupsAutomaticDiskOutput {
	return i.ToGetInstanceBackupsAutomaticDiskOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticDiskArgs) ToGetInstanceBackupsAutomaticDiskOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticDiskOutput)
}

func (i GetInstanceBackupsAutomaticDiskArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsAutomaticDisk] {
	return pulumix.Output[GetInstanceBackupsAutomaticDisk]{
		OutputState: i.ToGetInstanceBackupsAutomaticDiskOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceBackupsAutomaticDiskArrayInput is an input type that accepts GetInstanceBackupsAutomaticDiskArray and GetInstanceBackupsAutomaticDiskArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsAutomaticDiskArrayInput` via:
//
//	GetInstanceBackupsAutomaticDiskArray{ GetInstanceBackupsAutomaticDiskArgs{...} }
type GetInstanceBackupsAutomaticDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsAutomaticDiskArrayOutput() GetInstanceBackupsAutomaticDiskArrayOutput
	ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(context.Context) GetInstanceBackupsAutomaticDiskArrayOutput
}

type GetInstanceBackupsAutomaticDiskArray []GetInstanceBackupsAutomaticDiskInput

func (GetInstanceBackupsAutomaticDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (i GetInstanceBackupsAutomaticDiskArray) ToGetInstanceBackupsAutomaticDiskArrayOutput() GetInstanceBackupsAutomaticDiskArrayOutput {
	return i.ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsAutomaticDiskArray) ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsAutomaticDiskArrayOutput)
}

func (i GetInstanceBackupsAutomaticDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsAutomaticDisk] {
	return pulumix.Output[[]GetInstanceBackupsAutomaticDisk]{
		OutputState: i.ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceBackupsAutomaticDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticDiskOutput) ToGetInstanceBackupsAutomaticDiskOutput() GetInstanceBackupsAutomaticDiskOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskOutput) ToGetInstanceBackupsAutomaticDiskOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsAutomaticDisk] {
	return pulumix.Output[GetInstanceBackupsAutomaticDisk]{
		OutputState: o.OutputState,
	}
}

// The filesystem of this disk.
func (o GetInstanceBackupsAutomaticDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomaticDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The label of this disk.
func (o GetInstanceBackupsAutomaticDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomaticDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of this disk.
func (o GetInstanceBackupsAutomaticDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsAutomaticDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstanceBackupsAutomaticDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsAutomaticDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsAutomaticDisk)(nil)).Elem()
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) ToGetInstanceBackupsAutomaticDiskArrayOutput() GetInstanceBackupsAutomaticDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) ToGetInstanceBackupsAutomaticDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsAutomaticDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsAutomaticDisk] {
	return pulumix.Output[[]GetInstanceBackupsAutomaticDisk]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsAutomaticDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsAutomaticDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsAutomaticDisk {
		return vs[0].([]GetInstanceBackupsAutomaticDisk)[vs[1].(int)]
	}).(GetInstanceBackupsAutomaticDiskOutput)
}

type GetInstanceBackupsCurrent struct {
	Available bool `pulumi:"available"`
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs []string `pulumi:"configs"`
	// The date the Backup was taken.
	Created string                          `pulumi:"created"`
	Disks   []GetInstanceBackupsCurrentDisk `pulumi:"disks"`
	// The date the Backup completed.
	Finished string `pulumi:"finished"`
	// The unique ID of this Backup.
	Id int `pulumi:"id"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status string `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type string `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated string `pulumi:"updated"`
}

// GetInstanceBackupsCurrentInput is an input type that accepts GetInstanceBackupsCurrentArgs and GetInstanceBackupsCurrentOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentInput` via:
//
//	GetInstanceBackupsCurrentArgs{...}
type GetInstanceBackupsCurrentInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentOutput() GetInstanceBackupsCurrentOutput
	ToGetInstanceBackupsCurrentOutputWithContext(context.Context) GetInstanceBackupsCurrentOutput
}

type GetInstanceBackupsCurrentArgs struct {
	Available pulumi.BoolInput `pulumi:"available"`
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs pulumi.StringArrayInput `pulumi:"configs"`
	// The date the Backup was taken.
	Created pulumi.StringInput                      `pulumi:"created"`
	Disks   GetInstanceBackupsCurrentDiskArrayInput `pulumi:"disks"`
	// The date the Backup completed.
	Finished pulumi.StringInput `pulumi:"finished"`
	// The unique ID of this Backup.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status pulumi.StringInput `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type pulumi.StringInput `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetInstanceBackupsCurrentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrent)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentArgs) ToGetInstanceBackupsCurrentOutput() GetInstanceBackupsCurrentOutput {
	return i.ToGetInstanceBackupsCurrentOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentArgs) ToGetInstanceBackupsCurrentOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentOutput)
}

func (i GetInstanceBackupsCurrentArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsCurrent] {
	return pulumix.Output[GetInstanceBackupsCurrent]{
		OutputState: i.ToGetInstanceBackupsCurrentOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceBackupsCurrentArrayInput is an input type that accepts GetInstanceBackupsCurrentArray and GetInstanceBackupsCurrentArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentArrayInput` via:
//
//	GetInstanceBackupsCurrentArray{ GetInstanceBackupsCurrentArgs{...} }
type GetInstanceBackupsCurrentArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentArrayOutput() GetInstanceBackupsCurrentArrayOutput
	ToGetInstanceBackupsCurrentArrayOutputWithContext(context.Context) GetInstanceBackupsCurrentArrayOutput
}

type GetInstanceBackupsCurrentArray []GetInstanceBackupsCurrentInput

func (GetInstanceBackupsCurrentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrent)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentArray) ToGetInstanceBackupsCurrentArrayOutput() GetInstanceBackupsCurrentArrayOutput {
	return i.ToGetInstanceBackupsCurrentArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentArray) ToGetInstanceBackupsCurrentArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentArrayOutput)
}

func (i GetInstanceBackupsCurrentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsCurrent] {
	return pulumix.Output[[]GetInstanceBackupsCurrent]{
		OutputState: i.ToGetInstanceBackupsCurrentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceBackupsCurrentOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrent)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentOutput) ToGetInstanceBackupsCurrentOutput() GetInstanceBackupsCurrentOutput {
	return o
}

func (o GetInstanceBackupsCurrentOutput) ToGetInstanceBackupsCurrentOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentOutput {
	return o
}

func (o GetInstanceBackupsCurrentOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsCurrent] {
	return pulumix.Output[GetInstanceBackupsCurrent]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsCurrentOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) bool { return v.Available }).(pulumi.BoolOutput)
}

// A list of the labels of the Configuration profiles that are part of the Backup.
func (o GetInstanceBackupsCurrentOutput) Configs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) []string { return v.Configs }).(pulumi.StringArrayOutput)
}

// The date the Backup was taken.
func (o GetInstanceBackupsCurrentOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetInstanceBackupsCurrentOutput) Disks() GetInstanceBackupsCurrentDiskArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) []GetInstanceBackupsCurrentDisk { return v.Disks }).(GetInstanceBackupsCurrentDiskArrayOutput)
}

// The date the Backup completed.
func (o GetInstanceBackupsCurrentOutput) Finished() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Finished }).(pulumi.StringOutput)
}

// The unique ID of this Backup.
func (o GetInstanceBackupsCurrentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) int { return v.Id }).(pulumi.IntOutput)
}

// The label of this disk.
func (o GetInstanceBackupsCurrentOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Label }).(pulumi.StringOutput)
}

// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
func (o GetInstanceBackupsCurrentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Status }).(pulumi.StringOutput)
}

// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
func (o GetInstanceBackupsCurrentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Type }).(pulumi.StringOutput)
}

// The date the Backup was most recently updated.
func (o GetInstanceBackupsCurrentOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrent) string { return v.Updated }).(pulumi.StringOutput)
}

type GetInstanceBackupsCurrentArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrent)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentArrayOutput) ToGetInstanceBackupsCurrentArrayOutput() GetInstanceBackupsCurrentArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentArrayOutput) ToGetInstanceBackupsCurrentArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsCurrent] {
	return pulumix.Output[[]GetInstanceBackupsCurrent]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsCurrentArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsCurrentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsCurrent {
		return vs[0].([]GetInstanceBackupsCurrent)[vs[1].(int)]
	}).(GetInstanceBackupsCurrentOutput)
}

type GetInstanceBackupsCurrentDisk struct {
	// The filesystem of this disk.
	Filesystem string `pulumi:"filesystem"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The size of this disk.
	Size int `pulumi:"size"`
}

// GetInstanceBackupsCurrentDiskInput is an input type that accepts GetInstanceBackupsCurrentDiskArgs and GetInstanceBackupsCurrentDiskOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentDiskInput` via:
//
//	GetInstanceBackupsCurrentDiskArgs{...}
type GetInstanceBackupsCurrentDiskInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentDiskOutput() GetInstanceBackupsCurrentDiskOutput
	ToGetInstanceBackupsCurrentDiskOutputWithContext(context.Context) GetInstanceBackupsCurrentDiskOutput
}

type GetInstanceBackupsCurrentDiskArgs struct {
	// The filesystem of this disk.
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of this disk.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstanceBackupsCurrentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentDiskArgs) ToGetInstanceBackupsCurrentDiskOutput() GetInstanceBackupsCurrentDiskOutput {
	return i.ToGetInstanceBackupsCurrentDiskOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentDiskArgs) ToGetInstanceBackupsCurrentDiskOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentDiskOutput)
}

func (i GetInstanceBackupsCurrentDiskArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsCurrentDisk] {
	return pulumix.Output[GetInstanceBackupsCurrentDisk]{
		OutputState: i.ToGetInstanceBackupsCurrentDiskOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceBackupsCurrentDiskArrayInput is an input type that accepts GetInstanceBackupsCurrentDiskArray and GetInstanceBackupsCurrentDiskArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsCurrentDiskArrayInput` via:
//
//	GetInstanceBackupsCurrentDiskArray{ GetInstanceBackupsCurrentDiskArgs{...} }
type GetInstanceBackupsCurrentDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsCurrentDiskArrayOutput() GetInstanceBackupsCurrentDiskArrayOutput
	ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(context.Context) GetInstanceBackupsCurrentDiskArrayOutput
}

type GetInstanceBackupsCurrentDiskArray []GetInstanceBackupsCurrentDiskInput

func (GetInstanceBackupsCurrentDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (i GetInstanceBackupsCurrentDiskArray) ToGetInstanceBackupsCurrentDiskArrayOutput() GetInstanceBackupsCurrentDiskArrayOutput {
	return i.ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsCurrentDiskArray) ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsCurrentDiskArrayOutput)
}

func (i GetInstanceBackupsCurrentDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsCurrentDisk] {
	return pulumix.Output[[]GetInstanceBackupsCurrentDisk]{
		OutputState: i.ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceBackupsCurrentDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentDiskOutput) ToGetInstanceBackupsCurrentDiskOutput() GetInstanceBackupsCurrentDiskOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskOutput) ToGetInstanceBackupsCurrentDiskOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsCurrentDisk] {
	return pulumix.Output[GetInstanceBackupsCurrentDisk]{
		OutputState: o.OutputState,
	}
}

// The filesystem of this disk.
func (o GetInstanceBackupsCurrentDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrentDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The label of this disk.
func (o GetInstanceBackupsCurrentDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrentDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of this disk.
func (o GetInstanceBackupsCurrentDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsCurrentDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstanceBackupsCurrentDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsCurrentDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsCurrentDisk)(nil)).Elem()
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) ToGetInstanceBackupsCurrentDiskArrayOutput() GetInstanceBackupsCurrentDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) ToGetInstanceBackupsCurrentDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsCurrentDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsCurrentDisk] {
	return pulumix.Output[[]GetInstanceBackupsCurrentDisk]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsCurrentDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsCurrentDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsCurrentDisk {
		return vs[0].([]GetInstanceBackupsCurrentDisk)[vs[1].(int)]
	}).(GetInstanceBackupsCurrentDiskOutput)
}

type GetInstanceBackupsInProgress struct {
	Available bool `pulumi:"available"`
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs []string `pulumi:"configs"`
	// The date the Backup was taken.
	Created string                             `pulumi:"created"`
	Disks   []GetInstanceBackupsInProgressDisk `pulumi:"disks"`
	// The date the Backup completed.
	Finished string `pulumi:"finished"`
	// The unique ID of this Backup.
	Id int `pulumi:"id"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status string `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type string `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated string `pulumi:"updated"`
}

// GetInstanceBackupsInProgressInput is an input type that accepts GetInstanceBackupsInProgressArgs and GetInstanceBackupsInProgressOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressInput` via:
//
//	GetInstanceBackupsInProgressArgs{...}
type GetInstanceBackupsInProgressInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressOutput() GetInstanceBackupsInProgressOutput
	ToGetInstanceBackupsInProgressOutputWithContext(context.Context) GetInstanceBackupsInProgressOutput
}

type GetInstanceBackupsInProgressArgs struct {
	Available pulumi.BoolInput `pulumi:"available"`
	// A list of the labels of the Configuration profiles that are part of the Backup.
	Configs pulumi.StringArrayInput `pulumi:"configs"`
	// The date the Backup was taken.
	Created pulumi.StringInput                         `pulumi:"created"`
	Disks   GetInstanceBackupsInProgressDiskArrayInput `pulumi:"disks"`
	// The date the Backup completed.
	Finished pulumi.StringInput `pulumi:"finished"`
	// The unique ID of this Backup.
	Id pulumi.IntInput `pulumi:"id"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
	Status pulumi.StringInput `pulumi:"status"`
	// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
	Type pulumi.StringInput `pulumi:"type"`
	// The date the Backup was most recently updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetInstanceBackupsInProgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgress)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressArgs) ToGetInstanceBackupsInProgressOutput() GetInstanceBackupsInProgressOutput {
	return i.ToGetInstanceBackupsInProgressOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressArgs) ToGetInstanceBackupsInProgressOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressOutput)
}

func (i GetInstanceBackupsInProgressArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsInProgress] {
	return pulumix.Output[GetInstanceBackupsInProgress]{
		OutputState: i.ToGetInstanceBackupsInProgressOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceBackupsInProgressArrayInput is an input type that accepts GetInstanceBackupsInProgressArray and GetInstanceBackupsInProgressArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressArrayInput` via:
//
//	GetInstanceBackupsInProgressArray{ GetInstanceBackupsInProgressArgs{...} }
type GetInstanceBackupsInProgressArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressArrayOutput() GetInstanceBackupsInProgressArrayOutput
	ToGetInstanceBackupsInProgressArrayOutputWithContext(context.Context) GetInstanceBackupsInProgressArrayOutput
}

type GetInstanceBackupsInProgressArray []GetInstanceBackupsInProgressInput

func (GetInstanceBackupsInProgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgress)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressArray) ToGetInstanceBackupsInProgressArrayOutput() GetInstanceBackupsInProgressArrayOutput {
	return i.ToGetInstanceBackupsInProgressArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressArray) ToGetInstanceBackupsInProgressArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressArrayOutput)
}

func (i GetInstanceBackupsInProgressArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsInProgress] {
	return pulumix.Output[[]GetInstanceBackupsInProgress]{
		OutputState: i.ToGetInstanceBackupsInProgressArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceBackupsInProgressOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgress)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressOutput) ToGetInstanceBackupsInProgressOutput() GetInstanceBackupsInProgressOutput {
	return o
}

func (o GetInstanceBackupsInProgressOutput) ToGetInstanceBackupsInProgressOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressOutput {
	return o
}

func (o GetInstanceBackupsInProgressOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsInProgress] {
	return pulumix.Output[GetInstanceBackupsInProgress]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsInProgressOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) bool { return v.Available }).(pulumi.BoolOutput)
}

// A list of the labels of the Configuration profiles that are part of the Backup.
func (o GetInstanceBackupsInProgressOutput) Configs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) []string { return v.Configs }).(pulumi.StringArrayOutput)
}

// The date the Backup was taken.
func (o GetInstanceBackupsInProgressOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetInstanceBackupsInProgressOutput) Disks() GetInstanceBackupsInProgressDiskArrayOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) []GetInstanceBackupsInProgressDisk { return v.Disks }).(GetInstanceBackupsInProgressDiskArrayOutput)
}

// The date the Backup completed.
func (o GetInstanceBackupsInProgressOutput) Finished() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Finished }).(pulumi.StringOutput)
}

// The unique ID of this Backup.
func (o GetInstanceBackupsInProgressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) int { return v.Id }).(pulumi.IntOutput)
}

// The label of this disk.
func (o GetInstanceBackupsInProgressOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Label }).(pulumi.StringOutput)
}

// The current state of a specific Backup. (`paused`, `pending`, `running`, `needsPostProcessing`, `successful`, `failed`, `userAborted`)
func (o GetInstanceBackupsInProgressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Status }).(pulumi.StringOutput)
}

// This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time. (`auto`, `snapshot`)
func (o GetInstanceBackupsInProgressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Type }).(pulumi.StringOutput)
}

// The date the Backup was most recently updated.
func (o GetInstanceBackupsInProgressOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgress) string { return v.Updated }).(pulumi.StringOutput)
}

type GetInstanceBackupsInProgressArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgress)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressArrayOutput) ToGetInstanceBackupsInProgressArrayOutput() GetInstanceBackupsInProgressArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressArrayOutput) ToGetInstanceBackupsInProgressArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsInProgress] {
	return pulumix.Output[[]GetInstanceBackupsInProgress]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsInProgressArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsInProgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsInProgress {
		return vs[0].([]GetInstanceBackupsInProgress)[vs[1].(int)]
	}).(GetInstanceBackupsInProgressOutput)
}

type GetInstanceBackupsInProgressDisk struct {
	// The filesystem of this disk.
	Filesystem string `pulumi:"filesystem"`
	// The label of this disk.
	Label string `pulumi:"label"`
	// The size of this disk.
	Size int `pulumi:"size"`
}

// GetInstanceBackupsInProgressDiskInput is an input type that accepts GetInstanceBackupsInProgressDiskArgs and GetInstanceBackupsInProgressDiskOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressDiskInput` via:
//
//	GetInstanceBackupsInProgressDiskArgs{...}
type GetInstanceBackupsInProgressDiskInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressDiskOutput() GetInstanceBackupsInProgressDiskOutput
	ToGetInstanceBackupsInProgressDiskOutputWithContext(context.Context) GetInstanceBackupsInProgressDiskOutput
}

type GetInstanceBackupsInProgressDiskArgs struct {
	// The filesystem of this disk.
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The label of this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of this disk.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstanceBackupsInProgressDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressDiskArgs) ToGetInstanceBackupsInProgressDiskOutput() GetInstanceBackupsInProgressDiskOutput {
	return i.ToGetInstanceBackupsInProgressDiskOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressDiskArgs) ToGetInstanceBackupsInProgressDiskOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressDiskOutput)
}

func (i GetInstanceBackupsInProgressDiskArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsInProgressDisk] {
	return pulumix.Output[GetInstanceBackupsInProgressDisk]{
		OutputState: i.ToGetInstanceBackupsInProgressDiskOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceBackupsInProgressDiskArrayInput is an input type that accepts GetInstanceBackupsInProgressDiskArray and GetInstanceBackupsInProgressDiskArrayOutput values.
// You can construct a concrete instance of `GetInstanceBackupsInProgressDiskArrayInput` via:
//
//	GetInstanceBackupsInProgressDiskArray{ GetInstanceBackupsInProgressDiskArgs{...} }
type GetInstanceBackupsInProgressDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceBackupsInProgressDiskArrayOutput() GetInstanceBackupsInProgressDiskArrayOutput
	ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(context.Context) GetInstanceBackupsInProgressDiskArrayOutput
}

type GetInstanceBackupsInProgressDiskArray []GetInstanceBackupsInProgressDiskInput

func (GetInstanceBackupsInProgressDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (i GetInstanceBackupsInProgressDiskArray) ToGetInstanceBackupsInProgressDiskArrayOutput() GetInstanceBackupsInProgressDiskArrayOutput {
	return i.ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceBackupsInProgressDiskArray) ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceBackupsInProgressDiskArrayOutput)
}

func (i GetInstanceBackupsInProgressDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsInProgressDisk] {
	return pulumix.Output[[]GetInstanceBackupsInProgressDisk]{
		OutputState: i.ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceBackupsInProgressDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressDiskOutput) ToGetInstanceBackupsInProgressDiskOutput() GetInstanceBackupsInProgressDiskOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskOutput) ToGetInstanceBackupsInProgressDiskOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceBackupsInProgressDisk] {
	return pulumix.Output[GetInstanceBackupsInProgressDisk]{
		OutputState: o.OutputState,
	}
}

// The filesystem of this disk.
func (o GetInstanceBackupsInProgressDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgressDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The label of this disk.
func (o GetInstanceBackupsInProgressDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgressDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of this disk.
func (o GetInstanceBackupsInProgressDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceBackupsInProgressDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstanceBackupsInProgressDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceBackupsInProgressDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceBackupsInProgressDisk)(nil)).Elem()
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) ToGetInstanceBackupsInProgressDiskArrayOutput() GetInstanceBackupsInProgressDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) ToGetInstanceBackupsInProgressDiskArrayOutputWithContext(ctx context.Context) GetInstanceBackupsInProgressDiskArrayOutput {
	return o
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceBackupsInProgressDisk] {
	return pulumix.Output[[]GetInstanceBackupsInProgressDisk]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceBackupsInProgressDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceBackupsInProgressDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceBackupsInProgressDisk {
		return vs[0].([]GetInstanceBackupsInProgressDisk)[vs[1].(int)]
	}).(GetInstanceBackupsInProgressDiskOutput)
}

type GetInstanceNetworkingIpv4 struct {
	Privates []GetInstanceNetworkingIpv4Private `pulumi:"privates"`
	// Whether this is a public or private IP address.
	Publics   []GetInstanceNetworkingIpv4Public   `pulumi:"publics"`
	Reserveds []GetInstanceNetworkingIpv4Reserved `pulumi:"reserveds"`
	Shareds   []GetInstanceNetworkingIpv4Shared   `pulumi:"shareds"`
}

// GetInstanceNetworkingIpv4Input is an input type that accepts GetInstanceNetworkingIpv4Args and GetInstanceNetworkingIpv4Output values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4Input` via:
//
//	GetInstanceNetworkingIpv4Args{...}
type GetInstanceNetworkingIpv4Input interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4Output() GetInstanceNetworkingIpv4Output
	ToGetInstanceNetworkingIpv4OutputWithContext(context.Context) GetInstanceNetworkingIpv4Output
}

type GetInstanceNetworkingIpv4Args struct {
	Privates GetInstanceNetworkingIpv4PrivateArrayInput `pulumi:"privates"`
	// Whether this is a public or private IP address.
	Publics   GetInstanceNetworkingIpv4PublicArrayInput   `pulumi:"publics"`
	Reserveds GetInstanceNetworkingIpv4ReservedArrayInput `pulumi:"reserveds"`
	Shareds   GetInstanceNetworkingIpv4SharedArrayInput   `pulumi:"shareds"`
}

func (GetInstanceNetworkingIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4Args) ToGetInstanceNetworkingIpv4Output() GetInstanceNetworkingIpv4Output {
	return i.ToGetInstanceNetworkingIpv4OutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4Args) ToGetInstanceNetworkingIpv4OutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4Output)
}

func (i GetInstanceNetworkingIpv4Args) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4] {
	return pulumix.Output[GetInstanceNetworkingIpv4]{
		OutputState: i.ToGetInstanceNetworkingIpv4OutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv4ArrayInput is an input type that accepts GetInstanceNetworkingIpv4Array and GetInstanceNetworkingIpv4ArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4ArrayInput` via:
//
//	GetInstanceNetworkingIpv4Array{ GetInstanceNetworkingIpv4Args{...} }
type GetInstanceNetworkingIpv4ArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4ArrayOutput() GetInstanceNetworkingIpv4ArrayOutput
	ToGetInstanceNetworkingIpv4ArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv4ArrayOutput
}

type GetInstanceNetworkingIpv4Array []GetInstanceNetworkingIpv4Input

func (GetInstanceNetworkingIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4Array) ToGetInstanceNetworkingIpv4ArrayOutput() GetInstanceNetworkingIpv4ArrayOutput {
	return i.ToGetInstanceNetworkingIpv4ArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4Array) ToGetInstanceNetworkingIpv4ArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4ArrayOutput)
}

func (i GetInstanceNetworkingIpv4Array) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4]{
		OutputState: i.ToGetInstanceNetworkingIpv4ArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv4Output struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4Output) ToGetInstanceNetworkingIpv4Output() GetInstanceNetworkingIpv4Output {
	return o
}

func (o GetInstanceNetworkingIpv4Output) ToGetInstanceNetworkingIpv4OutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4Output {
	return o
}

func (o GetInstanceNetworkingIpv4Output) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4] {
	return pulumix.Output[GetInstanceNetworkingIpv4]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv4Output) Privates() GetInstanceNetworkingIpv4PrivateArrayOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4) []GetInstanceNetworkingIpv4Private { return v.Privates }).(GetInstanceNetworkingIpv4PrivateArrayOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv4Output) Publics() GetInstanceNetworkingIpv4PublicArrayOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4) []GetInstanceNetworkingIpv4Public { return v.Publics }).(GetInstanceNetworkingIpv4PublicArrayOutput)
}

func (o GetInstanceNetworkingIpv4Output) Reserveds() GetInstanceNetworkingIpv4ReservedArrayOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4) []GetInstanceNetworkingIpv4Reserved { return v.Reserveds }).(GetInstanceNetworkingIpv4ReservedArrayOutput)
}

func (o GetInstanceNetworkingIpv4Output) Shareds() GetInstanceNetworkingIpv4SharedArrayOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4) []GetInstanceNetworkingIpv4Shared { return v.Shareds }).(GetInstanceNetworkingIpv4SharedArrayOutput)
}

type GetInstanceNetworkingIpv4ArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4ArrayOutput) ToGetInstanceNetworkingIpv4ArrayOutput() GetInstanceNetworkingIpv4ArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4ArrayOutput) ToGetInstanceNetworkingIpv4ArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4ArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv4ArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv4 {
		return vs[0].([]GetInstanceNetworkingIpv4)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv4Output)
}

type GetInstanceNetworkingIpv4Private struct {
	// The address.
	Address string `pulumi:"address"`
	// The default gateway for this address.
	Gateway string `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId int `pulumi:"linodeId"`
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public bool `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns string `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// The subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
	// The type of address this is.
	Type string `pulumi:"type"`
}

// GetInstanceNetworkingIpv4PrivateInput is an input type that accepts GetInstanceNetworkingIpv4PrivateArgs and GetInstanceNetworkingIpv4PrivateOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4PrivateInput` via:
//
//	GetInstanceNetworkingIpv4PrivateArgs{...}
type GetInstanceNetworkingIpv4PrivateInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4PrivateOutput() GetInstanceNetworkingIpv4PrivateOutput
	ToGetInstanceNetworkingIpv4PrivateOutputWithContext(context.Context) GetInstanceNetworkingIpv4PrivateOutput
}

type GetInstanceNetworkingIpv4PrivateArgs struct {
	// The address.
	Address pulumi.StringInput `pulumi:"address"`
	// The default gateway for this address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public pulumi.BoolInput `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns pulumi.StringInput `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// The subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The type of address this is.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceNetworkingIpv4PrivateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Private)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4PrivateArgs) ToGetInstanceNetworkingIpv4PrivateOutput() GetInstanceNetworkingIpv4PrivateOutput {
	return i.ToGetInstanceNetworkingIpv4PrivateOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4PrivateArgs) ToGetInstanceNetworkingIpv4PrivateOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PrivateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4PrivateOutput)
}

func (i GetInstanceNetworkingIpv4PrivateArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Private] {
	return pulumix.Output[GetInstanceNetworkingIpv4Private]{
		OutputState: i.ToGetInstanceNetworkingIpv4PrivateOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv4PrivateArrayInput is an input type that accepts GetInstanceNetworkingIpv4PrivateArray and GetInstanceNetworkingIpv4PrivateArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4PrivateArrayInput` via:
//
//	GetInstanceNetworkingIpv4PrivateArray{ GetInstanceNetworkingIpv4PrivateArgs{...} }
type GetInstanceNetworkingIpv4PrivateArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4PrivateArrayOutput() GetInstanceNetworkingIpv4PrivateArrayOutput
	ToGetInstanceNetworkingIpv4PrivateArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv4PrivateArrayOutput
}

type GetInstanceNetworkingIpv4PrivateArray []GetInstanceNetworkingIpv4PrivateInput

func (GetInstanceNetworkingIpv4PrivateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Private)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4PrivateArray) ToGetInstanceNetworkingIpv4PrivateArrayOutput() GetInstanceNetworkingIpv4PrivateArrayOutput {
	return i.ToGetInstanceNetworkingIpv4PrivateArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4PrivateArray) ToGetInstanceNetworkingIpv4PrivateArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PrivateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4PrivateArrayOutput)
}

func (i GetInstanceNetworkingIpv4PrivateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Private] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Private]{
		OutputState: i.ToGetInstanceNetworkingIpv4PrivateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv4PrivateOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4PrivateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Private)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4PrivateOutput) ToGetInstanceNetworkingIpv4PrivateOutput() GetInstanceNetworkingIpv4PrivateOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PrivateOutput) ToGetInstanceNetworkingIpv4PrivateOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PrivateOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PrivateOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Private] {
	return pulumix.Output[GetInstanceNetworkingIpv4Private]{
		OutputState: o.OutputState,
	}
}

// The address.
func (o GetInstanceNetworkingIpv4PrivateOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) string { return v.Address }).(pulumi.StringOutput)
}

// The default gateway for this address.
func (o GetInstanceNetworkingIpv4PrivateOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) string { return v.Gateway }).(pulumi.StringOutput)
}

// The Linode instance's ID.
func (o GetInstanceNetworkingIpv4PrivateOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The network prefix.
func (o GetInstanceNetworkingIpv4PrivateOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) int { return v.Prefix }).(pulumi.IntOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv4PrivateOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) bool { return v.Public }).(pulumi.BoolOutput)
}

// The reverse DNS assigned to this address.
func (o GetInstanceNetworkingIpv4PrivateOutput) Rdns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) string { return v.Rdns }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv4PrivateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) string { return v.Region }).(pulumi.StringOutput)
}

// The subnet mask.
func (o GetInstanceNetworkingIpv4PrivateOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The type of address this is.
func (o GetInstanceNetworkingIpv4PrivateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Private) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceNetworkingIpv4PrivateArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4PrivateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Private)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4PrivateArrayOutput) ToGetInstanceNetworkingIpv4PrivateArrayOutput() GetInstanceNetworkingIpv4PrivateArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PrivateArrayOutput) ToGetInstanceNetworkingIpv4PrivateArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PrivateArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PrivateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Private] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Private]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv4PrivateArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv4PrivateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv4Private {
		return vs[0].([]GetInstanceNetworkingIpv4Private)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv4PrivateOutput)
}

type GetInstanceNetworkingIpv4Public struct {
	// The address.
	Address string `pulumi:"address"`
	// The default gateway for this address.
	Gateway string `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId int `pulumi:"linodeId"`
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public bool `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns string `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// The subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
	// The type of address this is.
	Type string `pulumi:"type"`
}

// GetInstanceNetworkingIpv4PublicInput is an input type that accepts GetInstanceNetworkingIpv4PublicArgs and GetInstanceNetworkingIpv4PublicOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4PublicInput` via:
//
//	GetInstanceNetworkingIpv4PublicArgs{...}
type GetInstanceNetworkingIpv4PublicInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4PublicOutput() GetInstanceNetworkingIpv4PublicOutput
	ToGetInstanceNetworkingIpv4PublicOutputWithContext(context.Context) GetInstanceNetworkingIpv4PublicOutput
}

type GetInstanceNetworkingIpv4PublicArgs struct {
	// The address.
	Address pulumi.StringInput `pulumi:"address"`
	// The default gateway for this address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public pulumi.BoolInput `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns pulumi.StringInput `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// The subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The type of address this is.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceNetworkingIpv4PublicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Public)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4PublicArgs) ToGetInstanceNetworkingIpv4PublicOutput() GetInstanceNetworkingIpv4PublicOutput {
	return i.ToGetInstanceNetworkingIpv4PublicOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4PublicArgs) ToGetInstanceNetworkingIpv4PublicOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PublicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4PublicOutput)
}

func (i GetInstanceNetworkingIpv4PublicArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Public] {
	return pulumix.Output[GetInstanceNetworkingIpv4Public]{
		OutputState: i.ToGetInstanceNetworkingIpv4PublicOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv4PublicArrayInput is an input type that accepts GetInstanceNetworkingIpv4PublicArray and GetInstanceNetworkingIpv4PublicArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4PublicArrayInput` via:
//
//	GetInstanceNetworkingIpv4PublicArray{ GetInstanceNetworkingIpv4PublicArgs{...} }
type GetInstanceNetworkingIpv4PublicArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4PublicArrayOutput() GetInstanceNetworkingIpv4PublicArrayOutput
	ToGetInstanceNetworkingIpv4PublicArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv4PublicArrayOutput
}

type GetInstanceNetworkingIpv4PublicArray []GetInstanceNetworkingIpv4PublicInput

func (GetInstanceNetworkingIpv4PublicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Public)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4PublicArray) ToGetInstanceNetworkingIpv4PublicArrayOutput() GetInstanceNetworkingIpv4PublicArrayOutput {
	return i.ToGetInstanceNetworkingIpv4PublicArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4PublicArray) ToGetInstanceNetworkingIpv4PublicArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PublicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4PublicArrayOutput)
}

func (i GetInstanceNetworkingIpv4PublicArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Public] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Public]{
		OutputState: i.ToGetInstanceNetworkingIpv4PublicArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv4PublicOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4PublicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Public)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4PublicOutput) ToGetInstanceNetworkingIpv4PublicOutput() GetInstanceNetworkingIpv4PublicOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PublicOutput) ToGetInstanceNetworkingIpv4PublicOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PublicOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PublicOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Public] {
	return pulumix.Output[GetInstanceNetworkingIpv4Public]{
		OutputState: o.OutputState,
	}
}

// The address.
func (o GetInstanceNetworkingIpv4PublicOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) string { return v.Address }).(pulumi.StringOutput)
}

// The default gateway for this address.
func (o GetInstanceNetworkingIpv4PublicOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) string { return v.Gateway }).(pulumi.StringOutput)
}

// The Linode instance's ID.
func (o GetInstanceNetworkingIpv4PublicOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The network prefix.
func (o GetInstanceNetworkingIpv4PublicOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) int { return v.Prefix }).(pulumi.IntOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv4PublicOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) bool { return v.Public }).(pulumi.BoolOutput)
}

// The reverse DNS assigned to this address.
func (o GetInstanceNetworkingIpv4PublicOutput) Rdns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) string { return v.Rdns }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv4PublicOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) string { return v.Region }).(pulumi.StringOutput)
}

// The subnet mask.
func (o GetInstanceNetworkingIpv4PublicOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The type of address this is.
func (o GetInstanceNetworkingIpv4PublicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Public) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceNetworkingIpv4PublicArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4PublicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Public)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4PublicArrayOutput) ToGetInstanceNetworkingIpv4PublicArrayOutput() GetInstanceNetworkingIpv4PublicArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PublicArrayOutput) ToGetInstanceNetworkingIpv4PublicArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4PublicArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4PublicArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Public] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Public]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv4PublicArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv4PublicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv4Public {
		return vs[0].([]GetInstanceNetworkingIpv4Public)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv4PublicOutput)
}

type GetInstanceNetworkingIpv4Reserved struct {
	// The address.
	Address string `pulumi:"address"`
	// The default gateway for this address.
	Gateway string `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId int `pulumi:"linodeId"`
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public bool `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns string `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// The subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
	// The type of address this is.
	Type string `pulumi:"type"`
}

// GetInstanceNetworkingIpv4ReservedInput is an input type that accepts GetInstanceNetworkingIpv4ReservedArgs and GetInstanceNetworkingIpv4ReservedOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4ReservedInput` via:
//
//	GetInstanceNetworkingIpv4ReservedArgs{...}
type GetInstanceNetworkingIpv4ReservedInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4ReservedOutput() GetInstanceNetworkingIpv4ReservedOutput
	ToGetInstanceNetworkingIpv4ReservedOutputWithContext(context.Context) GetInstanceNetworkingIpv4ReservedOutput
}

type GetInstanceNetworkingIpv4ReservedArgs struct {
	// The address.
	Address pulumi.StringInput `pulumi:"address"`
	// The default gateway for this address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public pulumi.BoolInput `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns pulumi.StringInput `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// The subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The type of address this is.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceNetworkingIpv4ReservedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Reserved)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4ReservedArgs) ToGetInstanceNetworkingIpv4ReservedOutput() GetInstanceNetworkingIpv4ReservedOutput {
	return i.ToGetInstanceNetworkingIpv4ReservedOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4ReservedArgs) ToGetInstanceNetworkingIpv4ReservedOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4ReservedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4ReservedOutput)
}

func (i GetInstanceNetworkingIpv4ReservedArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Reserved] {
	return pulumix.Output[GetInstanceNetworkingIpv4Reserved]{
		OutputState: i.ToGetInstanceNetworkingIpv4ReservedOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv4ReservedArrayInput is an input type that accepts GetInstanceNetworkingIpv4ReservedArray and GetInstanceNetworkingIpv4ReservedArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4ReservedArrayInput` via:
//
//	GetInstanceNetworkingIpv4ReservedArray{ GetInstanceNetworkingIpv4ReservedArgs{...} }
type GetInstanceNetworkingIpv4ReservedArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4ReservedArrayOutput() GetInstanceNetworkingIpv4ReservedArrayOutput
	ToGetInstanceNetworkingIpv4ReservedArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv4ReservedArrayOutput
}

type GetInstanceNetworkingIpv4ReservedArray []GetInstanceNetworkingIpv4ReservedInput

func (GetInstanceNetworkingIpv4ReservedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Reserved)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4ReservedArray) ToGetInstanceNetworkingIpv4ReservedArrayOutput() GetInstanceNetworkingIpv4ReservedArrayOutput {
	return i.ToGetInstanceNetworkingIpv4ReservedArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4ReservedArray) ToGetInstanceNetworkingIpv4ReservedArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4ReservedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4ReservedArrayOutput)
}

func (i GetInstanceNetworkingIpv4ReservedArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Reserved] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Reserved]{
		OutputState: i.ToGetInstanceNetworkingIpv4ReservedArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv4ReservedOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4ReservedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Reserved)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4ReservedOutput) ToGetInstanceNetworkingIpv4ReservedOutput() GetInstanceNetworkingIpv4ReservedOutput {
	return o
}

func (o GetInstanceNetworkingIpv4ReservedOutput) ToGetInstanceNetworkingIpv4ReservedOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4ReservedOutput {
	return o
}

func (o GetInstanceNetworkingIpv4ReservedOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Reserved] {
	return pulumix.Output[GetInstanceNetworkingIpv4Reserved]{
		OutputState: o.OutputState,
	}
}

// The address.
func (o GetInstanceNetworkingIpv4ReservedOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) string { return v.Address }).(pulumi.StringOutput)
}

// The default gateway for this address.
func (o GetInstanceNetworkingIpv4ReservedOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) string { return v.Gateway }).(pulumi.StringOutput)
}

// The Linode instance's ID.
func (o GetInstanceNetworkingIpv4ReservedOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The network prefix.
func (o GetInstanceNetworkingIpv4ReservedOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) int { return v.Prefix }).(pulumi.IntOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv4ReservedOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) bool { return v.Public }).(pulumi.BoolOutput)
}

// The reverse DNS assigned to this address.
func (o GetInstanceNetworkingIpv4ReservedOutput) Rdns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) string { return v.Rdns }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv4ReservedOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) string { return v.Region }).(pulumi.StringOutput)
}

// The subnet mask.
func (o GetInstanceNetworkingIpv4ReservedOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The type of address this is.
func (o GetInstanceNetworkingIpv4ReservedOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Reserved) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceNetworkingIpv4ReservedArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4ReservedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Reserved)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4ReservedArrayOutput) ToGetInstanceNetworkingIpv4ReservedArrayOutput() GetInstanceNetworkingIpv4ReservedArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4ReservedArrayOutput) ToGetInstanceNetworkingIpv4ReservedArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4ReservedArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4ReservedArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Reserved] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Reserved]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv4ReservedArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv4ReservedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv4Reserved {
		return vs[0].([]GetInstanceNetworkingIpv4Reserved)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv4ReservedOutput)
}

type GetInstanceNetworkingIpv4Shared struct {
	// The address.
	Address string `pulumi:"address"`
	// The default gateway for this address.
	Gateway string `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId int `pulumi:"linodeId"`
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public bool `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns string `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// The subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
	// The type of address this is.
	Type string `pulumi:"type"`
}

// GetInstanceNetworkingIpv4SharedInput is an input type that accepts GetInstanceNetworkingIpv4SharedArgs and GetInstanceNetworkingIpv4SharedOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4SharedInput` via:
//
//	GetInstanceNetworkingIpv4SharedArgs{...}
type GetInstanceNetworkingIpv4SharedInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4SharedOutput() GetInstanceNetworkingIpv4SharedOutput
	ToGetInstanceNetworkingIpv4SharedOutputWithContext(context.Context) GetInstanceNetworkingIpv4SharedOutput
}

type GetInstanceNetworkingIpv4SharedArgs struct {
	// The address.
	Address pulumi.StringInput `pulumi:"address"`
	// The default gateway for this address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public pulumi.BoolInput `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns pulumi.StringInput `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// The subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The type of address this is.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceNetworkingIpv4SharedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Shared)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4SharedArgs) ToGetInstanceNetworkingIpv4SharedOutput() GetInstanceNetworkingIpv4SharedOutput {
	return i.ToGetInstanceNetworkingIpv4SharedOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4SharedArgs) ToGetInstanceNetworkingIpv4SharedOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4SharedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4SharedOutput)
}

func (i GetInstanceNetworkingIpv4SharedArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Shared] {
	return pulumix.Output[GetInstanceNetworkingIpv4Shared]{
		OutputState: i.ToGetInstanceNetworkingIpv4SharedOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv4SharedArrayInput is an input type that accepts GetInstanceNetworkingIpv4SharedArray and GetInstanceNetworkingIpv4SharedArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv4SharedArrayInput` via:
//
//	GetInstanceNetworkingIpv4SharedArray{ GetInstanceNetworkingIpv4SharedArgs{...} }
type GetInstanceNetworkingIpv4SharedArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv4SharedArrayOutput() GetInstanceNetworkingIpv4SharedArrayOutput
	ToGetInstanceNetworkingIpv4SharedArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv4SharedArrayOutput
}

type GetInstanceNetworkingIpv4SharedArray []GetInstanceNetworkingIpv4SharedInput

func (GetInstanceNetworkingIpv4SharedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Shared)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv4SharedArray) ToGetInstanceNetworkingIpv4SharedArrayOutput() GetInstanceNetworkingIpv4SharedArrayOutput {
	return i.ToGetInstanceNetworkingIpv4SharedArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv4SharedArray) ToGetInstanceNetworkingIpv4SharedArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4SharedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv4SharedArrayOutput)
}

func (i GetInstanceNetworkingIpv4SharedArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Shared] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Shared]{
		OutputState: i.ToGetInstanceNetworkingIpv4SharedArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv4SharedOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4SharedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv4Shared)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4SharedOutput) ToGetInstanceNetworkingIpv4SharedOutput() GetInstanceNetworkingIpv4SharedOutput {
	return o
}

func (o GetInstanceNetworkingIpv4SharedOutput) ToGetInstanceNetworkingIpv4SharedOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4SharedOutput {
	return o
}

func (o GetInstanceNetworkingIpv4SharedOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv4Shared] {
	return pulumix.Output[GetInstanceNetworkingIpv4Shared]{
		OutputState: o.OutputState,
	}
}

// The address.
func (o GetInstanceNetworkingIpv4SharedOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) string { return v.Address }).(pulumi.StringOutput)
}

// The default gateway for this address.
func (o GetInstanceNetworkingIpv4SharedOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) string { return v.Gateway }).(pulumi.StringOutput)
}

// The Linode instance's ID.
func (o GetInstanceNetworkingIpv4SharedOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The network prefix.
func (o GetInstanceNetworkingIpv4SharedOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) int { return v.Prefix }).(pulumi.IntOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv4SharedOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) bool { return v.Public }).(pulumi.BoolOutput)
}

// The reverse DNS assigned to this address.
func (o GetInstanceNetworkingIpv4SharedOutput) Rdns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) string { return v.Rdns }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv4SharedOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) string { return v.Region }).(pulumi.StringOutput)
}

// The subnet mask.
func (o GetInstanceNetworkingIpv4SharedOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The type of address this is.
func (o GetInstanceNetworkingIpv4SharedOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv4Shared) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceNetworkingIpv4SharedArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv4SharedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv4Shared)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv4SharedArrayOutput) ToGetInstanceNetworkingIpv4SharedArrayOutput() GetInstanceNetworkingIpv4SharedArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4SharedArrayOutput) ToGetInstanceNetworkingIpv4SharedArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv4SharedArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv4SharedArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv4Shared] {
	return pulumix.Output[[]GetInstanceNetworkingIpv4Shared]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv4SharedArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv4SharedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv4Shared {
		return vs[0].([]GetInstanceNetworkingIpv4Shared)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv4SharedOutput)
}

type GetInstanceNetworkingIpv6 struct {
	Globals   []GetInstanceNetworkingIpv6Global  `pulumi:"globals"`
	LinkLocal GetInstanceNetworkingIpv6LinkLocal `pulumi:"linkLocal"`
	Slaac     GetInstanceNetworkingIpv6Slaac     `pulumi:"slaac"`
}

// GetInstanceNetworkingIpv6Input is an input type that accepts GetInstanceNetworkingIpv6Args and GetInstanceNetworkingIpv6Output values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv6Input` via:
//
//	GetInstanceNetworkingIpv6Args{...}
type GetInstanceNetworkingIpv6Input interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv6Output() GetInstanceNetworkingIpv6Output
	ToGetInstanceNetworkingIpv6OutputWithContext(context.Context) GetInstanceNetworkingIpv6Output
}

type GetInstanceNetworkingIpv6Args struct {
	Globals   GetInstanceNetworkingIpv6GlobalArrayInput `pulumi:"globals"`
	LinkLocal GetInstanceNetworkingIpv6LinkLocalInput   `pulumi:"linkLocal"`
	Slaac     GetInstanceNetworkingIpv6SlaacInput       `pulumi:"slaac"`
}

func (GetInstanceNetworkingIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv6Args) ToGetInstanceNetworkingIpv6Output() GetInstanceNetworkingIpv6Output {
	return i.ToGetInstanceNetworkingIpv6OutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv6Args) ToGetInstanceNetworkingIpv6OutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv6Output)
}

func (i GetInstanceNetworkingIpv6Args) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6] {
	return pulumix.Output[GetInstanceNetworkingIpv6]{
		OutputState: i.ToGetInstanceNetworkingIpv6OutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv6ArrayInput is an input type that accepts GetInstanceNetworkingIpv6Array and GetInstanceNetworkingIpv6ArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv6ArrayInput` via:
//
//	GetInstanceNetworkingIpv6Array{ GetInstanceNetworkingIpv6Args{...} }
type GetInstanceNetworkingIpv6ArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv6ArrayOutput() GetInstanceNetworkingIpv6ArrayOutput
	ToGetInstanceNetworkingIpv6ArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv6ArrayOutput
}

type GetInstanceNetworkingIpv6Array []GetInstanceNetworkingIpv6Input

func (GetInstanceNetworkingIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv6)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv6Array) ToGetInstanceNetworkingIpv6ArrayOutput() GetInstanceNetworkingIpv6ArrayOutput {
	return i.ToGetInstanceNetworkingIpv6ArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv6Array) ToGetInstanceNetworkingIpv6ArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv6ArrayOutput)
}

func (i GetInstanceNetworkingIpv6Array) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv6] {
	return pulumix.Output[[]GetInstanceNetworkingIpv6]{
		OutputState: i.ToGetInstanceNetworkingIpv6ArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv6Output struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv6Output) ToGetInstanceNetworkingIpv6Output() GetInstanceNetworkingIpv6Output {
	return o
}

func (o GetInstanceNetworkingIpv6Output) ToGetInstanceNetworkingIpv6OutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6Output {
	return o
}

func (o GetInstanceNetworkingIpv6Output) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6] {
	return pulumix.Output[GetInstanceNetworkingIpv6]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv6Output) Globals() GetInstanceNetworkingIpv6GlobalArrayOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6) []GetInstanceNetworkingIpv6Global { return v.Globals }).(GetInstanceNetworkingIpv6GlobalArrayOutput)
}

func (o GetInstanceNetworkingIpv6Output) LinkLocal() GetInstanceNetworkingIpv6LinkLocalOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6) GetInstanceNetworkingIpv6LinkLocal { return v.LinkLocal }).(GetInstanceNetworkingIpv6LinkLocalOutput)
}

func (o GetInstanceNetworkingIpv6Output) Slaac() GetInstanceNetworkingIpv6SlaacOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6) GetInstanceNetworkingIpv6Slaac { return v.Slaac }).(GetInstanceNetworkingIpv6SlaacOutput)
}

type GetInstanceNetworkingIpv6ArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv6)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv6ArrayOutput) ToGetInstanceNetworkingIpv6ArrayOutput() GetInstanceNetworkingIpv6ArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv6ArrayOutput) ToGetInstanceNetworkingIpv6ArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6ArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv6] {
	return pulumix.Output[[]GetInstanceNetworkingIpv6]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv6ArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv6 {
		return vs[0].([]GetInstanceNetworkingIpv6)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv6Output)
}

type GetInstanceNetworkingIpv6Global struct {
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// The IPv6 range of addresses in this pool.
	Range string `pulumi:"range"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// (Nullable) The last address in this block of IPv6 addresses.
	RouteTarget string `pulumi:"routeTarget"`
}

// GetInstanceNetworkingIpv6GlobalInput is an input type that accepts GetInstanceNetworkingIpv6GlobalArgs and GetInstanceNetworkingIpv6GlobalOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv6GlobalInput` via:
//
//	GetInstanceNetworkingIpv6GlobalArgs{...}
type GetInstanceNetworkingIpv6GlobalInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv6GlobalOutput() GetInstanceNetworkingIpv6GlobalOutput
	ToGetInstanceNetworkingIpv6GlobalOutputWithContext(context.Context) GetInstanceNetworkingIpv6GlobalOutput
}

type GetInstanceNetworkingIpv6GlobalArgs struct {
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// The IPv6 range of addresses in this pool.
	Range pulumi.StringInput `pulumi:"range"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// (Nullable) The last address in this block of IPv6 addresses.
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetInstanceNetworkingIpv6GlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6Global)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv6GlobalArgs) ToGetInstanceNetworkingIpv6GlobalOutput() GetInstanceNetworkingIpv6GlobalOutput {
	return i.ToGetInstanceNetworkingIpv6GlobalOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv6GlobalArgs) ToGetInstanceNetworkingIpv6GlobalOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6GlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv6GlobalOutput)
}

func (i GetInstanceNetworkingIpv6GlobalArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6Global] {
	return pulumix.Output[GetInstanceNetworkingIpv6Global]{
		OutputState: i.ToGetInstanceNetworkingIpv6GlobalOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceNetworkingIpv6GlobalArrayInput is an input type that accepts GetInstanceNetworkingIpv6GlobalArray and GetInstanceNetworkingIpv6GlobalArrayOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv6GlobalArrayInput` via:
//
//	GetInstanceNetworkingIpv6GlobalArray{ GetInstanceNetworkingIpv6GlobalArgs{...} }
type GetInstanceNetworkingIpv6GlobalArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv6GlobalArrayOutput() GetInstanceNetworkingIpv6GlobalArrayOutput
	ToGetInstanceNetworkingIpv6GlobalArrayOutputWithContext(context.Context) GetInstanceNetworkingIpv6GlobalArrayOutput
}

type GetInstanceNetworkingIpv6GlobalArray []GetInstanceNetworkingIpv6GlobalInput

func (GetInstanceNetworkingIpv6GlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv6Global)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv6GlobalArray) ToGetInstanceNetworkingIpv6GlobalArrayOutput() GetInstanceNetworkingIpv6GlobalArrayOutput {
	return i.ToGetInstanceNetworkingIpv6GlobalArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv6GlobalArray) ToGetInstanceNetworkingIpv6GlobalArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6GlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv6GlobalArrayOutput)
}

func (i GetInstanceNetworkingIpv6GlobalArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv6Global] {
	return pulumix.Output[[]GetInstanceNetworkingIpv6Global]{
		OutputState: i.ToGetInstanceNetworkingIpv6GlobalArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv6GlobalOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv6GlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6Global)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv6GlobalOutput) ToGetInstanceNetworkingIpv6GlobalOutput() GetInstanceNetworkingIpv6GlobalOutput {
	return o
}

func (o GetInstanceNetworkingIpv6GlobalOutput) ToGetInstanceNetworkingIpv6GlobalOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6GlobalOutput {
	return o
}

func (o GetInstanceNetworkingIpv6GlobalOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6Global] {
	return pulumix.Output[GetInstanceNetworkingIpv6Global]{
		OutputState: o.OutputState,
	}
}

// The network prefix.
func (o GetInstanceNetworkingIpv6GlobalOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Global) int { return v.Prefix }).(pulumi.IntOutput)
}

// The IPv6 range of addresses in this pool.
func (o GetInstanceNetworkingIpv6GlobalOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Global) string { return v.Range }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv6GlobalOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Global) string { return v.Region }).(pulumi.StringOutput)
}

// (Nullable) The last address in this block of IPv6 addresses.
func (o GetInstanceNetworkingIpv6GlobalOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Global) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetInstanceNetworkingIpv6GlobalArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv6GlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkingIpv6Global)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv6GlobalArrayOutput) ToGetInstanceNetworkingIpv6GlobalArrayOutput() GetInstanceNetworkingIpv6GlobalArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv6GlobalArrayOutput) ToGetInstanceNetworkingIpv6GlobalArrayOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6GlobalArrayOutput {
	return o
}

func (o GetInstanceNetworkingIpv6GlobalArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceNetworkingIpv6Global] {
	return pulumix.Output[[]GetInstanceNetworkingIpv6Global]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceNetworkingIpv6GlobalArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkingIpv6GlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceNetworkingIpv6Global {
		return vs[0].([]GetInstanceNetworkingIpv6Global)[vs[1].(int)]
	}).(GetInstanceNetworkingIpv6GlobalOutput)
}

type GetInstanceNetworkingIpv6LinkLocal struct {
	// The address.
	Address string `pulumi:"address"`
	// The default gateway for this address.
	Gateway string `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId int `pulumi:"linodeId"`
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public bool `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns string `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// The subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
	// The type of address this is.
	Type string `pulumi:"type"`
}

// GetInstanceNetworkingIpv6LinkLocalInput is an input type that accepts GetInstanceNetworkingIpv6LinkLocalArgs and GetInstanceNetworkingIpv6LinkLocalOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv6LinkLocalInput` via:
//
//	GetInstanceNetworkingIpv6LinkLocalArgs{...}
type GetInstanceNetworkingIpv6LinkLocalInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv6LinkLocalOutput() GetInstanceNetworkingIpv6LinkLocalOutput
	ToGetInstanceNetworkingIpv6LinkLocalOutputWithContext(context.Context) GetInstanceNetworkingIpv6LinkLocalOutput
}

type GetInstanceNetworkingIpv6LinkLocalArgs struct {
	// The address.
	Address pulumi.StringInput `pulumi:"address"`
	// The default gateway for this address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public pulumi.BoolInput `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns pulumi.StringInput `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// The subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The type of address this is.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceNetworkingIpv6LinkLocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6LinkLocal)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv6LinkLocalArgs) ToGetInstanceNetworkingIpv6LinkLocalOutput() GetInstanceNetworkingIpv6LinkLocalOutput {
	return i.ToGetInstanceNetworkingIpv6LinkLocalOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv6LinkLocalArgs) ToGetInstanceNetworkingIpv6LinkLocalOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6LinkLocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv6LinkLocalOutput)
}

func (i GetInstanceNetworkingIpv6LinkLocalArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6LinkLocal] {
	return pulumix.Output[GetInstanceNetworkingIpv6LinkLocal]{
		OutputState: i.ToGetInstanceNetworkingIpv6LinkLocalOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv6LinkLocalOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv6LinkLocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6LinkLocal)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv6LinkLocalOutput) ToGetInstanceNetworkingIpv6LinkLocalOutput() GetInstanceNetworkingIpv6LinkLocalOutput {
	return o
}

func (o GetInstanceNetworkingIpv6LinkLocalOutput) ToGetInstanceNetworkingIpv6LinkLocalOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6LinkLocalOutput {
	return o
}

func (o GetInstanceNetworkingIpv6LinkLocalOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6LinkLocal] {
	return pulumix.Output[GetInstanceNetworkingIpv6LinkLocal]{
		OutputState: o.OutputState,
	}
}

// The address.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) string { return v.Address }).(pulumi.StringOutput)
}

// The default gateway for this address.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) string { return v.Gateway }).(pulumi.StringOutput)
}

// The Linode instance's ID.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The network prefix.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) int { return v.Prefix }).(pulumi.IntOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) bool { return v.Public }).(pulumi.BoolOutput)
}

// The reverse DNS assigned to this address.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Rdns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) string { return v.Rdns }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) string { return v.Region }).(pulumi.StringOutput)
}

// The subnet mask.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The type of address this is.
func (o GetInstanceNetworkingIpv6LinkLocalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6LinkLocal) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceNetworkingIpv6Slaac struct {
	// The address.
	Address string `pulumi:"address"`
	// The default gateway for this address.
	Gateway string `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId int `pulumi:"linodeId"`
	// The network prefix.
	Prefix int `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public bool `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns string `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region string `pulumi:"region"`
	// The subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
	// The type of address this is.
	Type string `pulumi:"type"`
}

// GetInstanceNetworkingIpv6SlaacInput is an input type that accepts GetInstanceNetworkingIpv6SlaacArgs and GetInstanceNetworkingIpv6SlaacOutput values.
// You can construct a concrete instance of `GetInstanceNetworkingIpv6SlaacInput` via:
//
//	GetInstanceNetworkingIpv6SlaacArgs{...}
type GetInstanceNetworkingIpv6SlaacInput interface {
	pulumi.Input

	ToGetInstanceNetworkingIpv6SlaacOutput() GetInstanceNetworkingIpv6SlaacOutput
	ToGetInstanceNetworkingIpv6SlaacOutputWithContext(context.Context) GetInstanceNetworkingIpv6SlaacOutput
}

type GetInstanceNetworkingIpv6SlaacArgs struct {
	// The address.
	Address pulumi.StringInput `pulumi:"address"`
	// The default gateway for this address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The Linode instance's ID.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The network prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
	// Whether this is a public or private IP address.
	Public pulumi.BoolInput `pulumi:"public"`
	// The reverse DNS assigned to this address.
	Rdns pulumi.StringInput `pulumi:"rdns"`
	// (Filterable) The Region this address resides in.
	Region pulumi.StringInput `pulumi:"region"`
	// The subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The type of address this is.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceNetworkingIpv6SlaacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6Slaac)(nil)).Elem()
}

func (i GetInstanceNetworkingIpv6SlaacArgs) ToGetInstanceNetworkingIpv6SlaacOutput() GetInstanceNetworkingIpv6SlaacOutput {
	return i.ToGetInstanceNetworkingIpv6SlaacOutputWithContext(context.Background())
}

func (i GetInstanceNetworkingIpv6SlaacArgs) ToGetInstanceNetworkingIpv6SlaacOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6SlaacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkingIpv6SlaacOutput)
}

func (i GetInstanceNetworkingIpv6SlaacArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6Slaac] {
	return pulumix.Output[GetInstanceNetworkingIpv6Slaac]{
		OutputState: i.ToGetInstanceNetworkingIpv6SlaacOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceNetworkingIpv6SlaacOutput struct{ *pulumi.OutputState }

func (GetInstanceNetworkingIpv6SlaacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkingIpv6Slaac)(nil)).Elem()
}

func (o GetInstanceNetworkingIpv6SlaacOutput) ToGetInstanceNetworkingIpv6SlaacOutput() GetInstanceNetworkingIpv6SlaacOutput {
	return o
}

func (o GetInstanceNetworkingIpv6SlaacOutput) ToGetInstanceNetworkingIpv6SlaacOutputWithContext(ctx context.Context) GetInstanceNetworkingIpv6SlaacOutput {
	return o
}

func (o GetInstanceNetworkingIpv6SlaacOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceNetworkingIpv6Slaac] {
	return pulumix.Output[GetInstanceNetworkingIpv6Slaac]{
		OutputState: o.OutputState,
	}
}

// The address.
func (o GetInstanceNetworkingIpv6SlaacOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) string { return v.Address }).(pulumi.StringOutput)
}

// The default gateway for this address.
func (o GetInstanceNetworkingIpv6SlaacOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) string { return v.Gateway }).(pulumi.StringOutput)
}

// The Linode instance's ID.
func (o GetInstanceNetworkingIpv6SlaacOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The network prefix.
func (o GetInstanceNetworkingIpv6SlaacOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) int { return v.Prefix }).(pulumi.IntOutput)
}

// Whether this is a public or private IP address.
func (o GetInstanceNetworkingIpv6SlaacOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) bool { return v.Public }).(pulumi.BoolOutput)
}

// The reverse DNS assigned to this address.
func (o GetInstanceNetworkingIpv6SlaacOutput) Rdns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) string { return v.Rdns }).(pulumi.StringOutput)
}

// (Filterable) The Region this address resides in.
func (o GetInstanceNetworkingIpv6SlaacOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) string { return v.Region }).(pulumi.StringOutput)
}

// The subnet mask.
func (o GetInstanceNetworkingIpv6SlaacOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The type of address this is.
func (o GetInstanceNetworkingIpv6SlaacOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceNetworkingIpv6Slaac) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceTypeAddons struct {
	Backups []GetInstanceTypeAddonsBackup `pulumi:"backups"`
}

// GetInstanceTypeAddonsInput is an input type that accepts GetInstanceTypeAddonsArgs and GetInstanceTypeAddonsOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsInput` via:
//
//	GetInstanceTypeAddonsArgs{...}
type GetInstanceTypeAddonsInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsOutput() GetInstanceTypeAddonsOutput
	ToGetInstanceTypeAddonsOutputWithContext(context.Context) GetInstanceTypeAddonsOutput
}

type GetInstanceTypeAddonsArgs struct {
	Backups GetInstanceTypeAddonsBackupArrayInput `pulumi:"backups"`
}

func (GetInstanceTypeAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddons)(nil)).Elem()
}

func (i GetInstanceTypeAddonsArgs) ToGetInstanceTypeAddonsOutput() GetInstanceTypeAddonsOutput {
	return i.ToGetInstanceTypeAddonsOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsArgs) ToGetInstanceTypeAddonsOutputWithContext(ctx context.Context) GetInstanceTypeAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsOutput)
}

func (i GetInstanceTypeAddonsArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddons] {
	return pulumix.Output[GetInstanceTypeAddons]{
		OutputState: i.ToGetInstanceTypeAddonsOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypeAddonsOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddons)(nil)).Elem()
}

func (o GetInstanceTypeAddonsOutput) ToGetInstanceTypeAddonsOutput() GetInstanceTypeAddonsOutput {
	return o
}

func (o GetInstanceTypeAddonsOutput) ToGetInstanceTypeAddonsOutputWithContext(ctx context.Context) GetInstanceTypeAddonsOutput {
	return o
}

func (o GetInstanceTypeAddonsOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddons] {
	return pulumix.Output[GetInstanceTypeAddons]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsOutput) Backups() GetInstanceTypeAddonsBackupArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeAddons) []GetInstanceTypeAddonsBackup { return v.Backups }).(GetInstanceTypeAddonsBackupArrayOutput)
}

type GetInstanceTypeAddonsBackup struct {
	Prices       []GetInstanceTypeAddonsBackupPrice       `pulumi:"prices"`
	RegionPrices []GetInstanceTypeAddonsBackupRegionPrice `pulumi:"regionPrices"`
}

// GetInstanceTypeAddonsBackupInput is an input type that accepts GetInstanceTypeAddonsBackupArgs and GetInstanceTypeAddonsBackupOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupInput` via:
//
//	GetInstanceTypeAddonsBackupArgs{...}
type GetInstanceTypeAddonsBackupInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupOutput() GetInstanceTypeAddonsBackupOutput
	ToGetInstanceTypeAddonsBackupOutputWithContext(context.Context) GetInstanceTypeAddonsBackupOutput
}

type GetInstanceTypeAddonsBackupArgs struct {
	Prices       GetInstanceTypeAddonsBackupPriceArrayInput       `pulumi:"prices"`
	RegionPrices GetInstanceTypeAddonsBackupRegionPriceArrayInput `pulumi:"regionPrices"`
}

func (GetInstanceTypeAddonsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackup)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupArgs) ToGetInstanceTypeAddonsBackupOutput() GetInstanceTypeAddonsBackupOutput {
	return i.ToGetInstanceTypeAddonsBackupOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupArgs) ToGetInstanceTypeAddonsBackupOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupOutput)
}

func (i GetInstanceTypeAddonsBackupArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddonsBackup] {
	return pulumix.Output[GetInstanceTypeAddonsBackup]{
		OutputState: i.ToGetInstanceTypeAddonsBackupOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypeAddonsBackupArrayInput is an input type that accepts GetInstanceTypeAddonsBackupArray and GetInstanceTypeAddonsBackupArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupArrayInput` via:
//
//	GetInstanceTypeAddonsBackupArray{ GetInstanceTypeAddonsBackupArgs{...} }
type GetInstanceTypeAddonsBackupArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupArrayOutput() GetInstanceTypeAddonsBackupArrayOutput
	ToGetInstanceTypeAddonsBackupArrayOutputWithContext(context.Context) GetInstanceTypeAddonsBackupArrayOutput
}

type GetInstanceTypeAddonsBackupArray []GetInstanceTypeAddonsBackupInput

func (GetInstanceTypeAddonsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeAddonsBackup)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupArray) ToGetInstanceTypeAddonsBackupArrayOutput() GetInstanceTypeAddonsBackupArrayOutput {
	return i.ToGetInstanceTypeAddonsBackupArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupArray) ToGetInstanceTypeAddonsBackupArrayOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupArrayOutput)
}

func (i GetInstanceTypeAddonsBackupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeAddonsBackup] {
	return pulumix.Output[[]GetInstanceTypeAddonsBackup]{
		OutputState: i.ToGetInstanceTypeAddonsBackupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypeAddonsBackupOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackup)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupOutput) ToGetInstanceTypeAddonsBackupOutput() GetInstanceTypeAddonsBackupOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupOutput) ToGetInstanceTypeAddonsBackupOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddonsBackup] {
	return pulumix.Output[GetInstanceTypeAddonsBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsBackupOutput) Prices() GetInstanceTypeAddonsBackupPriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackup) []GetInstanceTypeAddonsBackupPrice { return v.Prices }).(GetInstanceTypeAddonsBackupPriceArrayOutput)
}

func (o GetInstanceTypeAddonsBackupOutput) RegionPrices() GetInstanceTypeAddonsBackupRegionPriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackup) []GetInstanceTypeAddonsBackupRegionPrice { return v.RegionPrices }).(GetInstanceTypeAddonsBackupRegionPriceArrayOutput)
}

type GetInstanceTypeAddonsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeAddonsBackup)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupArrayOutput) ToGetInstanceTypeAddonsBackupArrayOutput() GetInstanceTypeAddonsBackupArrayOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupArrayOutput) ToGetInstanceTypeAddonsBackupArrayOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupArrayOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeAddonsBackup] {
	return pulumix.Output[[]GetInstanceTypeAddonsBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsBackupArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeAddonsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeAddonsBackup {
		return vs[0].([]GetInstanceTypeAddonsBackup)[vs[1].(int)]
	}).(GetInstanceTypeAddonsBackupOutput)
}

type GetInstanceTypeAddonsBackupPrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypeAddonsBackupPriceInput is an input type that accepts GetInstanceTypeAddonsBackupPriceArgs and GetInstanceTypeAddonsBackupPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupPriceInput` via:
//
//	GetInstanceTypeAddonsBackupPriceArgs{...}
type GetInstanceTypeAddonsBackupPriceInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupPriceOutput() GetInstanceTypeAddonsBackupPriceOutput
	ToGetInstanceTypeAddonsBackupPriceOutputWithContext(context.Context) GetInstanceTypeAddonsBackupPriceOutput
}

type GetInstanceTypeAddonsBackupPriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypeAddonsBackupPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackupPrice)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupPriceArgs) ToGetInstanceTypeAddonsBackupPriceOutput() GetInstanceTypeAddonsBackupPriceOutput {
	return i.ToGetInstanceTypeAddonsBackupPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupPriceArgs) ToGetInstanceTypeAddonsBackupPriceOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupPriceOutput)
}

func (i GetInstanceTypeAddonsBackupPriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddonsBackupPrice] {
	return pulumix.Output[GetInstanceTypeAddonsBackupPrice]{
		OutputState: i.ToGetInstanceTypeAddonsBackupPriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypeAddonsBackupPriceArrayInput is an input type that accepts GetInstanceTypeAddonsBackupPriceArray and GetInstanceTypeAddonsBackupPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupPriceArrayInput` via:
//
//	GetInstanceTypeAddonsBackupPriceArray{ GetInstanceTypeAddonsBackupPriceArgs{...} }
type GetInstanceTypeAddonsBackupPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupPriceArrayOutput() GetInstanceTypeAddonsBackupPriceArrayOutput
	ToGetInstanceTypeAddonsBackupPriceArrayOutputWithContext(context.Context) GetInstanceTypeAddonsBackupPriceArrayOutput
}

type GetInstanceTypeAddonsBackupPriceArray []GetInstanceTypeAddonsBackupPriceInput

func (GetInstanceTypeAddonsBackupPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeAddonsBackupPrice)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupPriceArray) ToGetInstanceTypeAddonsBackupPriceArrayOutput() GetInstanceTypeAddonsBackupPriceArrayOutput {
	return i.ToGetInstanceTypeAddonsBackupPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupPriceArray) ToGetInstanceTypeAddonsBackupPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupPriceArrayOutput)
}

func (i GetInstanceTypeAddonsBackupPriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeAddonsBackupPrice] {
	return pulumix.Output[[]GetInstanceTypeAddonsBackupPrice]{
		OutputState: i.ToGetInstanceTypeAddonsBackupPriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypeAddonsBackupPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackupPrice)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupPriceOutput) ToGetInstanceTypeAddonsBackupPriceOutput() GetInstanceTypeAddonsBackupPriceOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupPriceOutput) ToGetInstanceTypeAddonsBackupPriceOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupPriceOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupPriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddonsBackupPrice] {
	return pulumix.Output[GetInstanceTypeAddonsBackupPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsBackupPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypeAddonsBackupPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypeAddonsBackupPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeAddonsBackupPrice)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupPriceArrayOutput) ToGetInstanceTypeAddonsBackupPriceArrayOutput() GetInstanceTypeAddonsBackupPriceArrayOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupPriceArrayOutput) ToGetInstanceTypeAddonsBackupPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupPriceArrayOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupPriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeAddonsBackupPrice] {
	return pulumix.Output[[]GetInstanceTypeAddonsBackupPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsBackupPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeAddonsBackupPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeAddonsBackupPrice {
		return vs[0].([]GetInstanceTypeAddonsBackupPrice)[vs[1].(int)]
	}).(GetInstanceTypeAddonsBackupPriceOutput)
}

type GetInstanceTypeAddonsBackupRegionPrice struct {
	Hourly float64 `pulumi:"hourly"`
	// Label used to identify instance type
	Id      string  `pulumi:"id"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypeAddonsBackupRegionPriceInput is an input type that accepts GetInstanceTypeAddonsBackupRegionPriceArgs and GetInstanceTypeAddonsBackupRegionPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupRegionPriceInput` via:
//
//	GetInstanceTypeAddonsBackupRegionPriceArgs{...}
type GetInstanceTypeAddonsBackupRegionPriceInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupRegionPriceOutput() GetInstanceTypeAddonsBackupRegionPriceOutput
	ToGetInstanceTypeAddonsBackupRegionPriceOutputWithContext(context.Context) GetInstanceTypeAddonsBackupRegionPriceOutput
}

type GetInstanceTypeAddonsBackupRegionPriceArgs struct {
	Hourly pulumi.Float64Input `pulumi:"hourly"`
	// Label used to identify instance type
	Id      pulumi.StringInput  `pulumi:"id"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypeAddonsBackupRegionPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackupRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupRegionPriceArgs) ToGetInstanceTypeAddonsBackupRegionPriceOutput() GetInstanceTypeAddonsBackupRegionPriceOutput {
	return i.ToGetInstanceTypeAddonsBackupRegionPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupRegionPriceArgs) ToGetInstanceTypeAddonsBackupRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupRegionPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupRegionPriceOutput)
}

func (i GetInstanceTypeAddonsBackupRegionPriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddonsBackupRegionPrice] {
	return pulumix.Output[GetInstanceTypeAddonsBackupRegionPrice]{
		OutputState: i.ToGetInstanceTypeAddonsBackupRegionPriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypeAddonsBackupRegionPriceArrayInput is an input type that accepts GetInstanceTypeAddonsBackupRegionPriceArray and GetInstanceTypeAddonsBackupRegionPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeAddonsBackupRegionPriceArrayInput` via:
//
//	GetInstanceTypeAddonsBackupRegionPriceArray{ GetInstanceTypeAddonsBackupRegionPriceArgs{...} }
type GetInstanceTypeAddonsBackupRegionPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeAddonsBackupRegionPriceArrayOutput() GetInstanceTypeAddonsBackupRegionPriceArrayOutput
	ToGetInstanceTypeAddonsBackupRegionPriceArrayOutputWithContext(context.Context) GetInstanceTypeAddonsBackupRegionPriceArrayOutput
}

type GetInstanceTypeAddonsBackupRegionPriceArray []GetInstanceTypeAddonsBackupRegionPriceInput

func (GetInstanceTypeAddonsBackupRegionPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeAddonsBackupRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypeAddonsBackupRegionPriceArray) ToGetInstanceTypeAddonsBackupRegionPriceArrayOutput() GetInstanceTypeAddonsBackupRegionPriceArrayOutput {
	return i.ToGetInstanceTypeAddonsBackupRegionPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeAddonsBackupRegionPriceArray) ToGetInstanceTypeAddonsBackupRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupRegionPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeAddonsBackupRegionPriceArrayOutput)
}

func (i GetInstanceTypeAddonsBackupRegionPriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeAddonsBackupRegionPrice] {
	return pulumix.Output[[]GetInstanceTypeAddonsBackupRegionPrice]{
		OutputState: i.ToGetInstanceTypeAddonsBackupRegionPriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypeAddonsBackupRegionPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupRegionPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeAddonsBackupRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupRegionPriceOutput) ToGetInstanceTypeAddonsBackupRegionPriceOutput() GetInstanceTypeAddonsBackupRegionPriceOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupRegionPriceOutput) ToGetInstanceTypeAddonsBackupRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupRegionPriceOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupRegionPriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeAddonsBackupRegionPrice] {
	return pulumix.Output[GetInstanceTypeAddonsBackupRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsBackupRegionPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupRegionPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

// Label used to identify instance type
func (o GetInstanceTypeAddonsBackupRegionPriceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupRegionPrice) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceTypeAddonsBackupRegionPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeAddonsBackupRegionPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypeAddonsBackupRegionPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeAddonsBackupRegionPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeAddonsBackupRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypeAddonsBackupRegionPriceArrayOutput) ToGetInstanceTypeAddonsBackupRegionPriceArrayOutput() GetInstanceTypeAddonsBackupRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupRegionPriceArrayOutput) ToGetInstanceTypeAddonsBackupRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypeAddonsBackupRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypeAddonsBackupRegionPriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeAddonsBackupRegionPrice] {
	return pulumix.Output[[]GetInstanceTypeAddonsBackupRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeAddonsBackupRegionPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeAddonsBackupRegionPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeAddonsBackupRegionPrice {
		return vs[0].([]GetInstanceTypeAddonsBackupRegionPrice)[vs[1].(int)]
	}).(GetInstanceTypeAddonsBackupRegionPriceOutput)
}

type GetInstanceTypePrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypePriceInput is an input type that accepts GetInstanceTypePriceArgs and GetInstanceTypePriceOutput values.
// You can construct a concrete instance of `GetInstanceTypePriceInput` via:
//
//	GetInstanceTypePriceArgs{...}
type GetInstanceTypePriceInput interface {
	pulumi.Input

	ToGetInstanceTypePriceOutput() GetInstanceTypePriceOutput
	ToGetInstanceTypePriceOutputWithContext(context.Context) GetInstanceTypePriceOutput
}

type GetInstanceTypePriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypePrice)(nil)).Elem()
}

func (i GetInstanceTypePriceArgs) ToGetInstanceTypePriceOutput() GetInstanceTypePriceOutput {
	return i.ToGetInstanceTypePriceOutputWithContext(context.Background())
}

func (i GetInstanceTypePriceArgs) ToGetInstanceTypePriceOutputWithContext(ctx context.Context) GetInstanceTypePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypePriceOutput)
}

func (i GetInstanceTypePriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypePrice] {
	return pulumix.Output[GetInstanceTypePrice]{
		OutputState: i.ToGetInstanceTypePriceOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypePriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypePrice)(nil)).Elem()
}

func (o GetInstanceTypePriceOutput) ToGetInstanceTypePriceOutput() GetInstanceTypePriceOutput {
	return o
}

func (o GetInstanceTypePriceOutput) ToGetInstanceTypePriceOutputWithContext(ctx context.Context) GetInstanceTypePriceOutput {
	return o
}

func (o GetInstanceTypePriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypePrice] {
	return pulumix.Output[GetInstanceTypePrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypePriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypePrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypePriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypePrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypeRegionPrice struct {
	Hourly float64 `pulumi:"hourly"`
	// Label used to identify instance type
	Id      string  `pulumi:"id"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypeRegionPriceInput is an input type that accepts GetInstanceTypeRegionPriceArgs and GetInstanceTypeRegionPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypeRegionPriceInput` via:
//
//	GetInstanceTypeRegionPriceArgs{...}
type GetInstanceTypeRegionPriceInput interface {
	pulumi.Input

	ToGetInstanceTypeRegionPriceOutput() GetInstanceTypeRegionPriceOutput
	ToGetInstanceTypeRegionPriceOutputWithContext(context.Context) GetInstanceTypeRegionPriceOutput
}

type GetInstanceTypeRegionPriceArgs struct {
	Hourly pulumi.Float64Input `pulumi:"hourly"`
	// Label used to identify instance type
	Id      pulumi.StringInput  `pulumi:"id"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypeRegionPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypeRegionPriceArgs) ToGetInstanceTypeRegionPriceOutput() GetInstanceTypeRegionPriceOutput {
	return i.ToGetInstanceTypeRegionPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypeRegionPriceArgs) ToGetInstanceTypeRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypeRegionPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeRegionPriceOutput)
}

func (i GetInstanceTypeRegionPriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeRegionPrice] {
	return pulumix.Output[GetInstanceTypeRegionPrice]{
		OutputState: i.ToGetInstanceTypeRegionPriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypeRegionPriceArrayInput is an input type that accepts GetInstanceTypeRegionPriceArray and GetInstanceTypeRegionPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeRegionPriceArrayInput` via:
//
//	GetInstanceTypeRegionPriceArray{ GetInstanceTypeRegionPriceArgs{...} }
type GetInstanceTypeRegionPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeRegionPriceArrayOutput() GetInstanceTypeRegionPriceArrayOutput
	ToGetInstanceTypeRegionPriceArrayOutputWithContext(context.Context) GetInstanceTypeRegionPriceArrayOutput
}

type GetInstanceTypeRegionPriceArray []GetInstanceTypeRegionPriceInput

func (GetInstanceTypeRegionPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypeRegionPriceArray) ToGetInstanceTypeRegionPriceArrayOutput() GetInstanceTypeRegionPriceArrayOutput {
	return i.ToGetInstanceTypeRegionPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeRegionPriceArray) ToGetInstanceTypeRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypeRegionPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeRegionPriceArrayOutput)
}

func (i GetInstanceTypeRegionPriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeRegionPrice] {
	return pulumix.Output[[]GetInstanceTypeRegionPrice]{
		OutputState: i.ToGetInstanceTypeRegionPriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypeRegionPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeRegionPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypeRegionPriceOutput) ToGetInstanceTypeRegionPriceOutput() GetInstanceTypeRegionPriceOutput {
	return o
}

func (o GetInstanceTypeRegionPriceOutput) ToGetInstanceTypeRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypeRegionPriceOutput {
	return o
}

func (o GetInstanceTypeRegionPriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeRegionPrice] {
	return pulumix.Output[GetInstanceTypeRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeRegionPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeRegionPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

// Label used to identify instance type
func (o GetInstanceTypeRegionPriceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeRegionPrice) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceTypeRegionPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypeRegionPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypeRegionPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeRegionPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypeRegionPriceArrayOutput) ToGetInstanceTypeRegionPriceArrayOutput() GetInstanceTypeRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypeRegionPriceArrayOutput) ToGetInstanceTypeRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypeRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypeRegionPriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypeRegionPrice] {
	return pulumix.Output[[]GetInstanceTypeRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeRegionPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeRegionPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeRegionPrice {
		return vs[0].([]GetInstanceTypeRegionPrice)[vs[1].(int)]
	}).(GetInstanceTypeRegionPriceOutput)
}

type GetInstanceTypesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetInstanceTypesFilterInput is an input type that accepts GetInstanceTypesFilterArgs and GetInstanceTypesFilterOutput values.
// You can construct a concrete instance of `GetInstanceTypesFilterInput` via:
//
//	GetInstanceTypesFilterArgs{...}
type GetInstanceTypesFilterInput interface {
	pulumi.Input

	ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput
	ToGetInstanceTypesFilterOutputWithContext(context.Context) GetInstanceTypesFilterOutput
}

type GetInstanceTypesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesFilter)(nil)).Elem()
}

func (i GetInstanceTypesFilterArgs) ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput {
	return i.ToGetInstanceTypesFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypesFilterArgs) ToGetInstanceTypesFilterOutputWithContext(ctx context.Context) GetInstanceTypesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesFilterOutput)
}

func (i GetInstanceTypesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesFilter] {
	return pulumix.Output[GetInstanceTypesFilter]{
		OutputState: i.ToGetInstanceTypesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesFilterArrayInput is an input type that accepts GetInstanceTypesFilterArray and GetInstanceTypesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesFilterArrayInput` via:
//
//	GetInstanceTypesFilterArray{ GetInstanceTypesFilterArgs{...} }
type GetInstanceTypesFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesFilterArrayOutput() GetInstanceTypesFilterArrayOutput
	ToGetInstanceTypesFilterArrayOutputWithContext(context.Context) GetInstanceTypesFilterArrayOutput
}

type GetInstanceTypesFilterArray []GetInstanceTypesFilterInput

func (GetInstanceTypesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesFilter)(nil)).Elem()
}

func (i GetInstanceTypesFilterArray) ToGetInstanceTypesFilterArrayOutput() GetInstanceTypesFilterArrayOutput {
	return i.ToGetInstanceTypesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesFilterArray) ToGetInstanceTypesFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesFilterArrayOutput)
}

func (i GetInstanceTypesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesFilter] {
	return pulumix.Output[[]GetInstanceTypesFilter]{
		OutputState: i.ToGetInstanceTypesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesFilter)(nil)).Elem()
}

func (o GetInstanceTypesFilterOutput) ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput {
	return o
}

func (o GetInstanceTypesFilterOutput) ToGetInstanceTypesFilterOutputWithContext(ctx context.Context) GetInstanceTypesFilterOutput {
	return o
}

func (o GetInstanceTypesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesFilter] {
	return pulumix.Output[GetInstanceTypesFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetInstanceTypesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTypesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetInstanceTypesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetInstanceTypesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesFilter)(nil)).Elem()
}

func (o GetInstanceTypesFilterArrayOutput) ToGetInstanceTypesFilterArrayOutput() GetInstanceTypesFilterArrayOutput {
	return o
}

func (o GetInstanceTypesFilterArrayOutput) ToGetInstanceTypesFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypesFilterArrayOutput {
	return o
}

func (o GetInstanceTypesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesFilter] {
	return pulumix.Output[[]GetInstanceTypesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesFilter {
		return vs[0].([]GetInstanceTypesFilter)[vs[1].(int)]
	}).(GetInstanceTypesFilterOutput)
}

type GetInstanceTypesType struct {
	Addons []GetInstanceTypesTypeAddon `pulumi:"addons"`
	// The class of the Linode Type. See all classes [here](https://www.linode.com/docs/api/linode-types/#type-view__responses).
	Class string `pulumi:"class"`
	// The Disk size, in MB, of the Linode Type.
	Disk int `pulumi:"disk"`
	// The ID representing the Linode Type.
	Id string `pulumi:"id"`
	// The Linode Type's label is for display purposes only.
	Label string `pulumi:"label"`
	// The amount of RAM included in this Linode Type.
	Memory int `pulumi:"memory"`
	// The Mbits outbound bandwidth allocation.
	NetworkOut   int                               `pulumi:"networkOut"`
	Prices       []GetInstanceTypesTypePrice       `pulumi:"prices"`
	RegionPrices []GetInstanceTypesTypeRegionPrice `pulumi:"regionPrices"`
	// The monthly outbound transfer amount, in MB.
	Transfer int `pulumi:"transfer"`
	// The number of VCPU cores this Linode Type offers.
	Vcpus int `pulumi:"vcpus"`
}

// GetInstanceTypesTypeInput is an input type that accepts GetInstanceTypesTypeArgs and GetInstanceTypesTypeOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeInput` via:
//
//	GetInstanceTypesTypeArgs{...}
type GetInstanceTypesTypeInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput
	ToGetInstanceTypesTypeOutputWithContext(context.Context) GetInstanceTypesTypeOutput
}

type GetInstanceTypesTypeArgs struct {
	Addons GetInstanceTypesTypeAddonArrayInput `pulumi:"addons"`
	// The class of the Linode Type. See all classes [here](https://www.linode.com/docs/api/linode-types/#type-view__responses).
	Class pulumi.StringInput `pulumi:"class"`
	// The Disk size, in MB, of the Linode Type.
	Disk pulumi.IntInput `pulumi:"disk"`
	// The ID representing the Linode Type.
	Id pulumi.StringInput `pulumi:"id"`
	// The Linode Type's label is for display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// The amount of RAM included in this Linode Type.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The Mbits outbound bandwidth allocation.
	NetworkOut   pulumi.IntInput                           `pulumi:"networkOut"`
	Prices       GetInstanceTypesTypePriceArrayInput       `pulumi:"prices"`
	RegionPrices GetInstanceTypesTypeRegionPriceArrayInput `pulumi:"regionPrices"`
	// The monthly outbound transfer amount, in MB.
	Transfer pulumi.IntInput `pulumi:"transfer"`
	// The number of VCPU cores this Linode Type offers.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
}

func (GetInstanceTypesTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesType)(nil)).Elem()
}

func (i GetInstanceTypesTypeArgs) ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput {
	return i.ToGetInstanceTypesTypeOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeArgs) ToGetInstanceTypesTypeOutputWithContext(ctx context.Context) GetInstanceTypesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeOutput)
}

func (i GetInstanceTypesTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesType] {
	return pulumix.Output[GetInstanceTypesType]{
		OutputState: i.ToGetInstanceTypesTypeOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypeArrayInput is an input type that accepts GetInstanceTypesTypeArray and GetInstanceTypesTypeArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeArrayInput` via:
//
//	GetInstanceTypesTypeArray{ GetInstanceTypesTypeArgs{...} }
type GetInstanceTypesTypeArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput
	ToGetInstanceTypesTypeArrayOutputWithContext(context.Context) GetInstanceTypesTypeArrayOutput
}

type GetInstanceTypesTypeArray []GetInstanceTypesTypeInput

func (GetInstanceTypesTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesType)(nil)).Elem()
}

func (i GetInstanceTypesTypeArray) ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput {
	return i.ToGetInstanceTypesTypeArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeArray) ToGetInstanceTypesTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeArrayOutput)
}

func (i GetInstanceTypesTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesType] {
	return pulumix.Output[[]GetInstanceTypesType]{
		OutputState: i.ToGetInstanceTypesTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypeOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesType)(nil)).Elem()
}

func (o GetInstanceTypesTypeOutput) ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput {
	return o
}

func (o GetInstanceTypesTypeOutput) ToGetInstanceTypesTypeOutputWithContext(ctx context.Context) GetInstanceTypesTypeOutput {
	return o
}

func (o GetInstanceTypesTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesType] {
	return pulumix.Output[GetInstanceTypesType]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeOutput) Addons() GetInstanceTypesTypeAddonArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesType) []GetInstanceTypesTypeAddon { return v.Addons }).(GetInstanceTypesTypeAddonArrayOutput)
}

// The class of the Linode Type. See all classes [here](https://www.linode.com/docs/api/linode-types/#type-view__responses).
func (o GetInstanceTypesTypeOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Class }).(pulumi.StringOutput)
}

// The Disk size, in MB, of the Linode Type.
func (o GetInstanceTypesTypeOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Disk }).(pulumi.IntOutput)
}

// The ID representing the Linode Type.
func (o GetInstanceTypesTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Id }).(pulumi.StringOutput)
}

// The Linode Type's label is for display purposes only.
func (o GetInstanceTypesTypeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Label }).(pulumi.StringOutput)
}

// The amount of RAM included in this Linode Type.
func (o GetInstanceTypesTypeOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Memory }).(pulumi.IntOutput)
}

// The Mbits outbound bandwidth allocation.
func (o GetInstanceTypesTypeOutput) NetworkOut() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.NetworkOut }).(pulumi.IntOutput)
}

func (o GetInstanceTypesTypeOutput) Prices() GetInstanceTypesTypePriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesType) []GetInstanceTypesTypePrice { return v.Prices }).(GetInstanceTypesTypePriceArrayOutput)
}

func (o GetInstanceTypesTypeOutput) RegionPrices() GetInstanceTypesTypeRegionPriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesType) []GetInstanceTypesTypeRegionPrice { return v.RegionPrices }).(GetInstanceTypesTypeRegionPriceArrayOutput)
}

// The monthly outbound transfer amount, in MB.
func (o GetInstanceTypesTypeOutput) Transfer() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Transfer }).(pulumi.IntOutput)
}

// The number of VCPU cores this Linode Type offers.
func (o GetInstanceTypesTypeOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetInstanceTypesTypeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesType)(nil)).Elem()
}

func (o GetInstanceTypesTypeArrayOutput) ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput {
	return o
}

func (o GetInstanceTypesTypeArrayOutput) ToGetInstanceTypesTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeArrayOutput {
	return o
}

func (o GetInstanceTypesTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesType] {
	return pulumix.Output[[]GetInstanceTypesType]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesType {
		return vs[0].([]GetInstanceTypesType)[vs[1].(int)]
	}).(GetInstanceTypesTypeOutput)
}

type GetInstanceTypesTypeAddon struct {
	Backups []GetInstanceTypesTypeAddonBackup `pulumi:"backups"`
}

// GetInstanceTypesTypeAddonInput is an input type that accepts GetInstanceTypesTypeAddonArgs and GetInstanceTypesTypeAddonOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonInput` via:
//
//	GetInstanceTypesTypeAddonArgs{...}
type GetInstanceTypesTypeAddonInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonOutput() GetInstanceTypesTypeAddonOutput
	ToGetInstanceTypesTypeAddonOutputWithContext(context.Context) GetInstanceTypesTypeAddonOutput
}

type GetInstanceTypesTypeAddonArgs struct {
	Backups GetInstanceTypesTypeAddonBackupArrayInput `pulumi:"backups"`
}

func (GetInstanceTypesTypeAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonArgs) ToGetInstanceTypesTypeAddonOutput() GetInstanceTypesTypeAddonOutput {
	return i.ToGetInstanceTypesTypeAddonOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonArgs) ToGetInstanceTypesTypeAddonOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonOutput)
}

func (i GetInstanceTypesTypeAddonArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddon] {
	return pulumix.Output[GetInstanceTypesTypeAddon]{
		OutputState: i.ToGetInstanceTypesTypeAddonOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypeAddonArrayInput is an input type that accepts GetInstanceTypesTypeAddonArray and GetInstanceTypesTypeAddonArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonArrayInput` via:
//
//	GetInstanceTypesTypeAddonArray{ GetInstanceTypesTypeAddonArgs{...} }
type GetInstanceTypesTypeAddonArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonArrayOutput() GetInstanceTypesTypeAddonArrayOutput
	ToGetInstanceTypesTypeAddonArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonArrayOutput
}

type GetInstanceTypesTypeAddonArray []GetInstanceTypesTypeAddonInput

func (GetInstanceTypesTypeAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonArray) ToGetInstanceTypesTypeAddonArrayOutput() GetInstanceTypesTypeAddonArrayOutput {
	return i.ToGetInstanceTypesTypeAddonArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonArray) ToGetInstanceTypesTypeAddonArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonArrayOutput)
}

func (i GetInstanceTypesTypeAddonArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddon] {
	return pulumix.Output[[]GetInstanceTypesTypeAddon]{
		OutputState: i.ToGetInstanceTypesTypeAddonArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypeAddonOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonOutput) ToGetInstanceTypesTypeAddonOutput() GetInstanceTypesTypeAddonOutput {
	return o
}

func (o GetInstanceTypesTypeAddonOutput) ToGetInstanceTypesTypeAddonOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonOutput {
	return o
}

func (o GetInstanceTypesTypeAddonOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddon] {
	return pulumix.Output[GetInstanceTypesTypeAddon]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonOutput) Backups() GetInstanceTypesTypeAddonBackupArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeAddon) []GetInstanceTypesTypeAddonBackup { return v.Backups }).(GetInstanceTypesTypeAddonBackupArrayOutput)
}

type GetInstanceTypesTypeAddonArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddon)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonArrayOutput) ToGetInstanceTypesTypeAddonArrayOutput() GetInstanceTypesTypeAddonArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonArrayOutput) ToGetInstanceTypesTypeAddonArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddon] {
	return pulumix.Output[[]GetInstanceTypesTypeAddon]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddon {
		return vs[0].([]GetInstanceTypesTypeAddon)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonOutput)
}

type GetInstanceTypesTypeAddonBackup struct {
	Prices       []GetInstanceTypesTypeAddonBackupPrice       `pulumi:"prices"`
	RegionPrices []GetInstanceTypesTypeAddonBackupRegionPrice `pulumi:"regionPrices"`
}

// GetInstanceTypesTypeAddonBackupInput is an input type that accepts GetInstanceTypesTypeAddonBackupArgs and GetInstanceTypesTypeAddonBackupOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupInput` via:
//
//	GetInstanceTypesTypeAddonBackupArgs{...}
type GetInstanceTypesTypeAddonBackupInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupOutput() GetInstanceTypesTypeAddonBackupOutput
	ToGetInstanceTypesTypeAddonBackupOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupOutput
}

type GetInstanceTypesTypeAddonBackupArgs struct {
	Prices       GetInstanceTypesTypeAddonBackupPriceArrayInput       `pulumi:"prices"`
	RegionPrices GetInstanceTypesTypeAddonBackupRegionPriceArrayInput `pulumi:"regionPrices"`
}

func (GetInstanceTypesTypeAddonBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupArgs) ToGetInstanceTypesTypeAddonBackupOutput() GetInstanceTypesTypeAddonBackupOutput {
	return i.ToGetInstanceTypesTypeAddonBackupOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupArgs) ToGetInstanceTypesTypeAddonBackupOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupOutput)
}

func (i GetInstanceTypesTypeAddonBackupArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddonBackup] {
	return pulumix.Output[GetInstanceTypesTypeAddonBackup]{
		OutputState: i.ToGetInstanceTypesTypeAddonBackupOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypeAddonBackupArrayInput is an input type that accepts GetInstanceTypesTypeAddonBackupArray and GetInstanceTypesTypeAddonBackupArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupArrayInput` via:
//
//	GetInstanceTypesTypeAddonBackupArray{ GetInstanceTypesTypeAddonBackupArgs{...} }
type GetInstanceTypesTypeAddonBackupArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupArrayOutput() GetInstanceTypesTypeAddonBackupArrayOutput
	ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupArrayOutput
}

type GetInstanceTypesTypeAddonBackupArray []GetInstanceTypesTypeAddonBackupInput

func (GetInstanceTypesTypeAddonBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupArray) ToGetInstanceTypesTypeAddonBackupArrayOutput() GetInstanceTypesTypeAddonBackupArrayOutput {
	return i.ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupArray) ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupArrayOutput)
}

func (i GetInstanceTypesTypeAddonBackupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddonBackup] {
	return pulumix.Output[[]GetInstanceTypesTypeAddonBackup]{
		OutputState: i.ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypeAddonBackupOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupOutput) ToGetInstanceTypesTypeAddonBackupOutput() GetInstanceTypesTypeAddonBackupOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupOutput) ToGetInstanceTypesTypeAddonBackupOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddonBackup] {
	return pulumix.Output[GetInstanceTypesTypeAddonBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonBackupOutput) Prices() GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackup) []GetInstanceTypesTypeAddonBackupPrice { return v.Prices }).(GetInstanceTypesTypeAddonBackupPriceArrayOutput)
}

func (o GetInstanceTypesTypeAddonBackupOutput) RegionPrices() GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackup) []GetInstanceTypesTypeAddonBackupRegionPrice {
		return v.RegionPrices
	}).(GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput)
}

type GetInstanceTypesTypeAddonBackupArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackup)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) ToGetInstanceTypesTypeAddonBackupArrayOutput() GetInstanceTypesTypeAddonBackupArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) ToGetInstanceTypesTypeAddonBackupArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddonBackup] {
	return pulumix.Output[[]GetInstanceTypesTypeAddonBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonBackupArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddonBackup {
		return vs[0].([]GetInstanceTypesTypeAddonBackup)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonBackupOutput)
}

type GetInstanceTypesTypeAddonBackupPrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypesTypeAddonBackupPriceInput is an input type that accepts GetInstanceTypesTypeAddonBackupPriceArgs and GetInstanceTypesTypeAddonBackupPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupPriceInput` via:
//
//	GetInstanceTypesTypeAddonBackupPriceArgs{...}
type GetInstanceTypesTypeAddonBackupPriceInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupPriceOutput() GetInstanceTypesTypeAddonBackupPriceOutput
	ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupPriceOutput
}

type GetInstanceTypesTypeAddonBackupPriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypesTypeAddonBackupPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupPriceArgs) ToGetInstanceTypesTypeAddonBackupPriceOutput() GetInstanceTypesTypeAddonBackupPriceOutput {
	return i.ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupPriceArgs) ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupPriceOutput)
}

func (i GetInstanceTypesTypeAddonBackupPriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddonBackupPrice] {
	return pulumix.Output[GetInstanceTypesTypeAddonBackupPrice]{
		OutputState: i.ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypeAddonBackupPriceArrayInput is an input type that accepts GetInstanceTypesTypeAddonBackupPriceArray and GetInstanceTypesTypeAddonBackupPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupPriceArrayInput` via:
//
//	GetInstanceTypesTypeAddonBackupPriceArray{ GetInstanceTypesTypeAddonBackupPriceArgs{...} }
type GetInstanceTypesTypeAddonBackupPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupPriceArrayOutput() GetInstanceTypesTypeAddonBackupPriceArrayOutput
	ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupPriceArrayOutput
}

type GetInstanceTypesTypeAddonBackupPriceArray []GetInstanceTypesTypeAddonBackupPriceInput

func (GetInstanceTypesTypeAddonBackupPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupPriceArray) ToGetInstanceTypesTypeAddonBackupPriceArrayOutput() GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return i.ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupPriceArray) ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupPriceArrayOutput)
}

func (i GetInstanceTypesTypeAddonBackupPriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddonBackupPrice] {
	return pulumix.Output[[]GetInstanceTypesTypeAddonBackupPrice]{
		OutputState: i.ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypeAddonBackupPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) ToGetInstanceTypesTypeAddonBackupPriceOutput() GetInstanceTypesTypeAddonBackupPriceOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) ToGetInstanceTypesTypeAddonBackupPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddonBackupPrice] {
	return pulumix.Output[GetInstanceTypesTypeAddonBackupPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypesTypeAddonBackupPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesTypeAddonBackupPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackupPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) ToGetInstanceTypesTypeAddonBackupPriceArrayOutput() GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) ToGetInstanceTypesTypeAddonBackupPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddonBackupPrice] {
	return pulumix.Output[[]GetInstanceTypesTypeAddonBackupPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonBackupPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonBackupPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddonBackupPrice {
		return vs[0].([]GetInstanceTypesTypeAddonBackupPrice)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonBackupPriceOutput)
}

type GetInstanceTypesTypeAddonBackupRegionPrice struct {
	Hourly float64 `pulumi:"hourly"`
	// The ID representing the Linode Type.
	Id      string  `pulumi:"id"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypesTypeAddonBackupRegionPriceInput is an input type that accepts GetInstanceTypesTypeAddonBackupRegionPriceArgs and GetInstanceTypesTypeAddonBackupRegionPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupRegionPriceInput` via:
//
//	GetInstanceTypesTypeAddonBackupRegionPriceArgs{...}
type GetInstanceTypesTypeAddonBackupRegionPriceInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupRegionPriceOutput() GetInstanceTypesTypeAddonBackupRegionPriceOutput
	ToGetInstanceTypesTypeAddonBackupRegionPriceOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupRegionPriceOutput
}

type GetInstanceTypesTypeAddonBackupRegionPriceArgs struct {
	Hourly pulumi.Float64Input `pulumi:"hourly"`
	// The ID representing the Linode Type.
	Id      pulumi.StringInput  `pulumi:"id"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypesTypeAddonBackupRegionPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackupRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupRegionPriceArgs) ToGetInstanceTypesTypeAddonBackupRegionPriceOutput() GetInstanceTypesTypeAddonBackupRegionPriceOutput {
	return i.ToGetInstanceTypesTypeAddonBackupRegionPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupRegionPriceArgs) ToGetInstanceTypesTypeAddonBackupRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupRegionPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupRegionPriceOutput)
}

func (i GetInstanceTypesTypeAddonBackupRegionPriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddonBackupRegionPrice] {
	return pulumix.Output[GetInstanceTypesTypeAddonBackupRegionPrice]{
		OutputState: i.ToGetInstanceTypesTypeAddonBackupRegionPriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypeAddonBackupRegionPriceArrayInput is an input type that accepts GetInstanceTypesTypeAddonBackupRegionPriceArray and GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeAddonBackupRegionPriceArrayInput` via:
//
//	GetInstanceTypesTypeAddonBackupRegionPriceArray{ GetInstanceTypesTypeAddonBackupRegionPriceArgs{...} }
type GetInstanceTypesTypeAddonBackupRegionPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutput() GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput
	ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutputWithContext(context.Context) GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput
}

type GetInstanceTypesTypeAddonBackupRegionPriceArray []GetInstanceTypesTypeAddonBackupRegionPriceInput

func (GetInstanceTypesTypeAddonBackupRegionPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackupRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeAddonBackupRegionPriceArray) ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutput() GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput {
	return i.ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeAddonBackupRegionPriceArray) ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput)
}

func (i GetInstanceTypesTypeAddonBackupRegionPriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddonBackupRegionPrice] {
	return pulumix.Output[[]GetInstanceTypesTypeAddonBackupRegionPrice]{
		OutputState: i.ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypeAddonBackupRegionPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupRegionPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeAddonBackupRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceOutput) ToGetInstanceTypesTypeAddonBackupRegionPriceOutput() GetInstanceTypesTypeAddonBackupRegionPriceOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceOutput) ToGetInstanceTypesTypeAddonBackupRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupRegionPriceOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeAddonBackupRegionPrice] {
	return pulumix.Output[GetInstanceTypesTypeAddonBackupRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupRegionPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

// The ID representing the Linode Type.
func (o GetInstanceTypesTypeAddonBackupRegionPriceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupRegionPrice) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeAddonBackupRegionPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeAddonBackupRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput) ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutput() GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput) ToGetInstanceTypesTypeAddonBackupRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeAddonBackupRegionPrice] {
	return pulumix.Output[[]GetInstanceTypesTypeAddonBackupRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeAddonBackupRegionPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeAddonBackupRegionPrice {
		return vs[0].([]GetInstanceTypesTypeAddonBackupRegionPrice)[vs[1].(int)]
	}).(GetInstanceTypesTypeAddonBackupRegionPriceOutput)
}

type GetInstanceTypesTypePrice struct {
	Hourly  float64 `pulumi:"hourly"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypesTypePriceInput is an input type that accepts GetInstanceTypesTypePriceArgs and GetInstanceTypesTypePriceOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypePriceInput` via:
//
//	GetInstanceTypesTypePriceArgs{...}
type GetInstanceTypesTypePriceInput interface {
	pulumi.Input

	ToGetInstanceTypesTypePriceOutput() GetInstanceTypesTypePriceOutput
	ToGetInstanceTypesTypePriceOutputWithContext(context.Context) GetInstanceTypesTypePriceOutput
}

type GetInstanceTypesTypePriceArgs struct {
	Hourly  pulumi.Float64Input `pulumi:"hourly"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypesTypePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypePrice)(nil)).Elem()
}

func (i GetInstanceTypesTypePriceArgs) ToGetInstanceTypesTypePriceOutput() GetInstanceTypesTypePriceOutput {
	return i.ToGetInstanceTypesTypePriceOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypePriceArgs) ToGetInstanceTypesTypePriceOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypePriceOutput)
}

func (i GetInstanceTypesTypePriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypePrice] {
	return pulumix.Output[GetInstanceTypesTypePrice]{
		OutputState: i.ToGetInstanceTypesTypePriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypePriceArrayInput is an input type that accepts GetInstanceTypesTypePriceArray and GetInstanceTypesTypePriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypePriceArrayInput` via:
//
//	GetInstanceTypesTypePriceArray{ GetInstanceTypesTypePriceArgs{...} }
type GetInstanceTypesTypePriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypePriceArrayOutput() GetInstanceTypesTypePriceArrayOutput
	ToGetInstanceTypesTypePriceArrayOutputWithContext(context.Context) GetInstanceTypesTypePriceArrayOutput
}

type GetInstanceTypesTypePriceArray []GetInstanceTypesTypePriceInput

func (GetInstanceTypesTypePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypePrice)(nil)).Elem()
}

func (i GetInstanceTypesTypePriceArray) ToGetInstanceTypesTypePriceArrayOutput() GetInstanceTypesTypePriceArrayOutput {
	return i.ToGetInstanceTypesTypePriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypePriceArray) ToGetInstanceTypesTypePriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypePriceArrayOutput)
}

func (i GetInstanceTypesTypePriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypePrice] {
	return pulumix.Output[[]GetInstanceTypesTypePrice]{
		OutputState: i.ToGetInstanceTypesTypePriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypePriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypePrice)(nil)).Elem()
}

func (o GetInstanceTypesTypePriceOutput) ToGetInstanceTypesTypePriceOutput() GetInstanceTypesTypePriceOutput {
	return o
}

func (o GetInstanceTypesTypePriceOutput) ToGetInstanceTypesTypePriceOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceOutput {
	return o
}

func (o GetInstanceTypesTypePriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypePrice] {
	return pulumix.Output[GetInstanceTypesTypePrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypePriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypePrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

func (o GetInstanceTypesTypePriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypePrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesTypePriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypePrice)(nil)).Elem()
}

func (o GetInstanceTypesTypePriceArrayOutput) ToGetInstanceTypesTypePriceArrayOutput() GetInstanceTypesTypePriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypePriceArrayOutput) ToGetInstanceTypesTypePriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypePriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypePriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypePrice] {
	return pulumix.Output[[]GetInstanceTypesTypePrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypePriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypePrice {
		return vs[0].([]GetInstanceTypesTypePrice)[vs[1].(int)]
	}).(GetInstanceTypesTypePriceOutput)
}

type GetInstanceTypesTypeRegionPrice struct {
	Hourly float64 `pulumi:"hourly"`
	// The ID representing the Linode Type.
	Id      string  `pulumi:"id"`
	Monthly float64 `pulumi:"monthly"`
}

// GetInstanceTypesTypeRegionPriceInput is an input type that accepts GetInstanceTypesTypeRegionPriceArgs and GetInstanceTypesTypeRegionPriceOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeRegionPriceInput` via:
//
//	GetInstanceTypesTypeRegionPriceArgs{...}
type GetInstanceTypesTypeRegionPriceInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeRegionPriceOutput() GetInstanceTypesTypeRegionPriceOutput
	ToGetInstanceTypesTypeRegionPriceOutputWithContext(context.Context) GetInstanceTypesTypeRegionPriceOutput
}

type GetInstanceTypesTypeRegionPriceArgs struct {
	Hourly pulumi.Float64Input `pulumi:"hourly"`
	// The ID representing the Linode Type.
	Id      pulumi.StringInput  `pulumi:"id"`
	Monthly pulumi.Float64Input `pulumi:"monthly"`
}

func (GetInstanceTypesTypeRegionPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeRegionPriceArgs) ToGetInstanceTypesTypeRegionPriceOutput() GetInstanceTypesTypeRegionPriceOutput {
	return i.ToGetInstanceTypesTypeRegionPriceOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeRegionPriceArgs) ToGetInstanceTypesTypeRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeRegionPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeRegionPriceOutput)
}

func (i GetInstanceTypesTypeRegionPriceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeRegionPrice] {
	return pulumix.Output[GetInstanceTypesTypeRegionPrice]{
		OutputState: i.ToGetInstanceTypesTypeRegionPriceOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceTypesTypeRegionPriceArrayInput is an input type that accepts GetInstanceTypesTypeRegionPriceArray and GetInstanceTypesTypeRegionPriceArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeRegionPriceArrayInput` via:
//
//	GetInstanceTypesTypeRegionPriceArray{ GetInstanceTypesTypeRegionPriceArgs{...} }
type GetInstanceTypesTypeRegionPriceArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeRegionPriceArrayOutput() GetInstanceTypesTypeRegionPriceArrayOutput
	ToGetInstanceTypesTypeRegionPriceArrayOutputWithContext(context.Context) GetInstanceTypesTypeRegionPriceArrayOutput
}

type GetInstanceTypesTypeRegionPriceArray []GetInstanceTypesTypeRegionPriceInput

func (GetInstanceTypesTypeRegionPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeRegionPrice)(nil)).Elem()
}

func (i GetInstanceTypesTypeRegionPriceArray) ToGetInstanceTypesTypeRegionPriceArrayOutput() GetInstanceTypesTypeRegionPriceArrayOutput {
	return i.ToGetInstanceTypesTypeRegionPriceArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeRegionPriceArray) ToGetInstanceTypesTypeRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeRegionPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeRegionPriceArrayOutput)
}

func (i GetInstanceTypesTypeRegionPriceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeRegionPrice] {
	return pulumix.Output[[]GetInstanceTypesTypeRegionPrice]{
		OutputState: i.ToGetInstanceTypesTypeRegionPriceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceTypesTypeRegionPriceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeRegionPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesTypeRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeRegionPriceOutput) ToGetInstanceTypesTypeRegionPriceOutput() GetInstanceTypesTypeRegionPriceOutput {
	return o
}

func (o GetInstanceTypesTypeRegionPriceOutput) ToGetInstanceTypesTypeRegionPriceOutputWithContext(ctx context.Context) GetInstanceTypesTypeRegionPriceOutput {
	return o
}

func (o GetInstanceTypesTypeRegionPriceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesTypeRegionPrice] {
	return pulumix.Output[GetInstanceTypesTypeRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeRegionPriceOutput) Hourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeRegionPrice) float64 { return v.Hourly }).(pulumi.Float64Output)
}

// The ID representing the Linode Type.
func (o GetInstanceTypesTypeRegionPriceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesTypeRegionPrice) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceTypesTypeRegionPriceOutput) Monthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesTypeRegionPrice) float64 { return v.Monthly }).(pulumi.Float64Output)
}

type GetInstanceTypesTypeRegionPriceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeRegionPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesTypeRegionPrice)(nil)).Elem()
}

func (o GetInstanceTypesTypeRegionPriceArrayOutput) ToGetInstanceTypesTypeRegionPriceArrayOutput() GetInstanceTypesTypeRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeRegionPriceArrayOutput) ToGetInstanceTypesTypeRegionPriceArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeRegionPriceArrayOutput {
	return o
}

func (o GetInstanceTypesTypeRegionPriceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceTypesTypeRegionPrice] {
	return pulumix.Output[[]GetInstanceTypesTypeRegionPrice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypesTypeRegionPriceArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeRegionPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesTypeRegionPrice {
		return vs[0].([]GetInstanceTypesTypeRegionPrice)[vs[1].(int)]
	}).(GetInstanceTypesTypeRegionPriceOutput)
}

type GetInstancesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//	GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

func (i GetInstancesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesFilter] {
	return pulumix.Output[GetInstancesFilter]{
		OutputState: i.ToGetInstancesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//	GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

func (i GetInstancesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesFilter] {
	return pulumix.Output[[]GetInstancesFilter]{
		OutputState: i.ToGetInstancesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesFilter] {
	return pulumix.Output[GetInstancesFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetInstancesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesFilter] {
	return pulumix.Output[[]GetInstancesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesInstance struct {
	Alerts          GetInstancesInstanceAlerts   `pulumi:"alerts"`
	Backups         []GetInstancesInstanceBackup `pulumi:"backups"`
	BootConfigLabel string                       `pulumi:"bootConfigLabel"`
	Configs         []GetInstancesInstanceConfig `pulumi:"configs"`
	Disks           []GetInstancesInstanceDisk   `pulumi:"disks"`
	// The display group of the Linode instance.
	Group       string `pulumi:"group"`
	HasUserData bool   `pulumi:"hasUserData"`
	HostUuid    string `pulumi:"hostUuid"`
	// The ID of the disk in the Linode API.
	Id int `pulumi:"id"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with `private/`. See [images](https://api.linode.com/v4/images) for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/images) (Requires a personal access token; docs [here](https://developers.linode.com/api/v4/images)). *This value can not be imported.* *Changing `image` forces the creation of a new Linode Instance.*
	Image string `pulumi:"image"`
	// A string containing the Linode's public IP address.
	IpAddress string `pulumi:"ipAddress"`
	// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
	Ipv4s []string `pulumi:"ipv4s"`
	// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.  The prefix (`/64`) is included in this attribute.
	Ipv6 string `pulumi:"ipv6"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label string `pulumi:"label"`
	// This Linode's Private IPv4 Address, if enabled.  The regional private IP address range, 192.168.128.0/17, is shared by all Linode Instances in a region.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc. See all regions [here](https://api.linode.com/v4/regions).
	Region string                     `pulumi:"region"`
	Specs  []GetInstancesInstanceSpec `pulumi:"specs"`
	// The status of the instance, indicating the current readiness state. (`running`, `offline`, ...)
	Status string `pulumi:"status"`
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize int `pulumi:"swapSize"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `pulumi:"tags"`
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc. See all types [here](https://api.linode.com/v4/linode/types).
	Type string `pulumi:"type"`
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled bool `pulumi:"watchdogEnabled"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	Alerts          GetInstancesInstanceAlertsInput      `pulumi:"alerts"`
	Backups         GetInstancesInstanceBackupArrayInput `pulumi:"backups"`
	BootConfigLabel pulumi.StringInput                   `pulumi:"bootConfigLabel"`
	Configs         GetInstancesInstanceConfigArrayInput `pulumi:"configs"`
	Disks           GetInstancesInstanceDiskArrayInput   `pulumi:"disks"`
	// The display group of the Linode instance.
	Group       pulumi.StringInput `pulumi:"group"`
	HasUserData pulumi.BoolInput   `pulumi:"hasUserData"`
	HostUuid    pulumi.StringInput `pulumi:"hostUuid"`
	// The ID of the disk in the Linode API.
	Id pulumi.IntInput `pulumi:"id"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with `private/`. See [images](https://api.linode.com/v4/images) for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/images) (Requires a personal access token; docs [here](https://developers.linode.com/api/v4/images)). *This value can not be imported.* *Changing `image` forces the creation of a new Linode Instance.*
	Image pulumi.StringInput `pulumi:"image"`
	// A string containing the Linode's public IP address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
	Ipv4s pulumi.StringArrayInput `pulumi:"ipv4s"`
	// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.  The prefix (`/64`) is included in this attribute.
	Ipv6 pulumi.StringInput `pulumi:"ipv6"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label pulumi.StringInput `pulumi:"label"`
	// This Linode's Private IPv4 Address, if enabled.  The regional private IP address range, 192.168.128.0/17, is shared by all Linode Instances in a region.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc. See all regions [here](https://api.linode.com/v4/regions).
	Region pulumi.StringInput                 `pulumi:"region"`
	Specs  GetInstancesInstanceSpecArrayInput `pulumi:"specs"`
	// The status of the instance, indicating the current readiness state. (`running`, `offline`, ...)
	Status pulumi.StringInput `pulumi:"status"`
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize pulumi.IntInput `pulumi:"swapSize"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc. See all types [here](https://api.linode.com/v4/linode/types).
	Type pulumi.StringInput `pulumi:"type"`
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled pulumi.BoolInput `pulumi:"watchdogEnabled"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

func (i GetInstancesInstanceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstance] {
	return pulumix.Output[GetInstancesInstance]{
		OutputState: i.ToGetInstancesInstanceOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

func (i GetInstancesInstanceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstance] {
	return pulumix.Output[[]GetInstancesInstance]{
		OutputState: i.ToGetInstancesInstanceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstance] {
	return pulumix.Output[GetInstancesInstance]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceOutput) Alerts() GetInstancesInstanceAlertsOutput {
	return o.ApplyT(func(v GetInstancesInstance) GetInstancesInstanceAlerts { return v.Alerts }).(GetInstancesInstanceAlertsOutput)
}

func (o GetInstancesInstanceOutput) Backups() GetInstancesInstanceBackupArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceBackup { return v.Backups }).(GetInstancesInstanceBackupArrayOutput)
}

func (o GetInstancesInstanceOutput) BootConfigLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.BootConfigLabel }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Configs() GetInstancesInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceConfig { return v.Configs }).(GetInstancesInstanceConfigArrayOutput)
}

func (o GetInstancesInstanceOutput) Disks() GetInstancesInstanceDiskArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceDisk { return v.Disks }).(GetInstancesInstanceDiskArrayOutput)
}

// The display group of the Linode instance.
func (o GetInstancesInstanceOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Group }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) HasUserData() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.HasUserData }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceOutput) HostUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.HostUuid }).(pulumi.StringOutput)
}

// The ID of the disk in the Linode API.
func (o GetInstancesInstanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.Id }).(pulumi.IntOutput)
}

// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with `private/`. See [images](https://api.linode.com/v4/images) for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/images) (Requires a personal access token; docs [here](https://developers.linode.com/api/v4/images)). *This value can not be imported.* *Changing `image` forces the creation of a new Linode Instance.*
func (o GetInstancesInstanceOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Image }).(pulumi.StringOutput)
}

// A string containing the Linode's public IP address.
func (o GetInstancesInstanceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.IpAddress }).(pulumi.StringOutput)
}

// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
func (o GetInstancesInstanceOutput) Ipv4s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.Ipv4s }).(pulumi.StringArrayOutput)
}

// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.  The prefix (`/64`) is included in this attribute.
func (o GetInstancesInstanceOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
func (o GetInstancesInstanceOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Label }).(pulumi.StringOutput)
}

// This Linode's Private IPv4 Address, if enabled.  The regional private IP address range, 192.168.128.0/17, is shared by all Linode Instances in a region.
func (o GetInstancesInstanceOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc. See all regions [here](https://api.linode.com/v4/regions).
func (o GetInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Specs() GetInstancesInstanceSpecArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceSpec { return v.Specs }).(GetInstancesInstanceSpecArrayOutput)
}

// The status of the instance, indicating the current readiness state. (`running`, `offline`, ...)
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
func (o GetInstancesInstanceOutput) SwapSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.SwapSize }).(pulumi.IntOutput)
}

// A list of tags applied to this object. Tags are for organizational purposes only.
func (o GetInstancesInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc. See all types [here](https://api.linode.com/v4/linode/types).
func (o GetInstancesInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Type }).(pulumi.StringOutput)
}

// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
func (o GetInstancesInstanceOutput) WatchdogEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.WatchdogEnabled }).(pulumi.BoolOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstance] {
	return pulumix.Output[[]GetInstancesInstance]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceAlerts struct {
	Cpu           int `pulumi:"cpu"`
	Io            int `pulumi:"io"`
	NetworkIn     int `pulumi:"networkIn"`
	NetworkOut    int `pulumi:"networkOut"`
	TransferQuota int `pulumi:"transferQuota"`
}

// GetInstancesInstanceAlertsInput is an input type that accepts GetInstancesInstanceAlertsArgs and GetInstancesInstanceAlertsOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAlertsInput` via:
//
//	GetInstancesInstanceAlertsArgs{...}
type GetInstancesInstanceAlertsInput interface {
	pulumi.Input

	ToGetInstancesInstanceAlertsOutput() GetInstancesInstanceAlertsOutput
	ToGetInstancesInstanceAlertsOutputWithContext(context.Context) GetInstancesInstanceAlertsOutput
}

type GetInstancesInstanceAlertsArgs struct {
	Cpu           pulumi.IntInput `pulumi:"cpu"`
	Io            pulumi.IntInput `pulumi:"io"`
	NetworkIn     pulumi.IntInput `pulumi:"networkIn"`
	NetworkOut    pulumi.IntInput `pulumi:"networkOut"`
	TransferQuota pulumi.IntInput `pulumi:"transferQuota"`
}

func (GetInstancesInstanceAlertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAlerts)(nil)).Elem()
}

func (i GetInstancesInstanceAlertsArgs) ToGetInstancesInstanceAlertsOutput() GetInstancesInstanceAlertsOutput {
	return i.ToGetInstancesInstanceAlertsOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAlertsArgs) ToGetInstancesInstanceAlertsOutputWithContext(ctx context.Context) GetInstancesInstanceAlertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAlertsOutput)
}

func (i GetInstancesInstanceAlertsArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceAlerts] {
	return pulumix.Output[GetInstancesInstanceAlerts]{
		OutputState: i.ToGetInstancesInstanceAlertsOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceAlertsOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAlerts)(nil)).Elem()
}

func (o GetInstancesInstanceAlertsOutput) ToGetInstancesInstanceAlertsOutput() GetInstancesInstanceAlertsOutput {
	return o
}

func (o GetInstancesInstanceAlertsOutput) ToGetInstancesInstanceAlertsOutputWithContext(ctx context.Context) GetInstancesInstanceAlertsOutput {
	return o
}

func (o GetInstancesInstanceAlertsOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceAlerts] {
	return pulumix.Output[GetInstancesInstanceAlerts]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceAlertsOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) Io() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.Io }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) NetworkIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.NetworkIn }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) NetworkOut() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.NetworkOut }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceAlertsOutput) TransferQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceAlerts) int { return v.TransferQuota }).(pulumi.IntOutput)
}

type GetInstancesInstanceBackup struct {
	Available bool `pulumi:"available"`
	// If this Linode has the Backup service enabled.
	Enabled   bool                                 `pulumi:"enabled"`
	Schedules []GetInstancesInstanceBackupSchedule `pulumi:"schedules"`
}

// GetInstancesInstanceBackupInput is an input type that accepts GetInstancesInstanceBackupArgs and GetInstancesInstanceBackupOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupInput` via:
//
//	GetInstancesInstanceBackupArgs{...}
type GetInstancesInstanceBackupInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupOutput() GetInstancesInstanceBackupOutput
	ToGetInstancesInstanceBackupOutputWithContext(context.Context) GetInstancesInstanceBackupOutput
}

type GetInstancesInstanceBackupArgs struct {
	Available pulumi.BoolInput `pulumi:"available"`
	// If this Linode has the Backup service enabled.
	Enabled   pulumi.BoolInput                             `pulumi:"enabled"`
	Schedules GetInstancesInstanceBackupScheduleArrayInput `pulumi:"schedules"`
}

func (GetInstancesInstanceBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackup)(nil)).Elem()
}

func (i GetInstancesInstanceBackupArgs) ToGetInstancesInstanceBackupOutput() GetInstancesInstanceBackupOutput {
	return i.ToGetInstancesInstanceBackupOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupArgs) ToGetInstancesInstanceBackupOutputWithContext(ctx context.Context) GetInstancesInstanceBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupOutput)
}

func (i GetInstancesInstanceBackupArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceBackup] {
	return pulumix.Output[GetInstancesInstanceBackup]{
		OutputState: i.ToGetInstancesInstanceBackupOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceBackupArrayInput is an input type that accepts GetInstancesInstanceBackupArray and GetInstancesInstanceBackupArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupArrayInput` via:
//
//	GetInstancesInstanceBackupArray{ GetInstancesInstanceBackupArgs{...} }
type GetInstancesInstanceBackupArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupArrayOutput() GetInstancesInstanceBackupArrayOutput
	ToGetInstancesInstanceBackupArrayOutputWithContext(context.Context) GetInstancesInstanceBackupArrayOutput
}

type GetInstancesInstanceBackupArray []GetInstancesInstanceBackupInput

func (GetInstancesInstanceBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackup)(nil)).Elem()
}

func (i GetInstancesInstanceBackupArray) ToGetInstancesInstanceBackupArrayOutput() GetInstancesInstanceBackupArrayOutput {
	return i.ToGetInstancesInstanceBackupArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupArray) ToGetInstancesInstanceBackupArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupArrayOutput)
}

func (i GetInstancesInstanceBackupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceBackup] {
	return pulumix.Output[[]GetInstancesInstanceBackup]{
		OutputState: i.ToGetInstancesInstanceBackupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceBackupOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackup)(nil)).Elem()
}

func (o GetInstancesInstanceBackupOutput) ToGetInstancesInstanceBackupOutput() GetInstancesInstanceBackupOutput {
	return o
}

func (o GetInstancesInstanceBackupOutput) ToGetInstancesInstanceBackupOutputWithContext(ctx context.Context) GetInstancesInstanceBackupOutput {
	return o
}

func (o GetInstancesInstanceBackupOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceBackup] {
	return pulumix.Output[GetInstancesInstanceBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceBackupOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackup) bool { return v.Available }).(pulumi.BoolOutput)
}

// If this Linode has the Backup service enabled.
func (o GetInstancesInstanceBackupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceBackupOutput) Schedules() GetInstancesInstanceBackupScheduleArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackup) []GetInstancesInstanceBackupSchedule { return v.Schedules }).(GetInstancesInstanceBackupScheduleArrayOutput)
}

type GetInstancesInstanceBackupArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackup)(nil)).Elem()
}

func (o GetInstancesInstanceBackupArrayOutput) ToGetInstancesInstanceBackupArrayOutput() GetInstancesInstanceBackupArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupArrayOutput) ToGetInstancesInstanceBackupArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceBackup] {
	return pulumix.Output[[]GetInstancesInstanceBackup]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceBackupArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceBackup {
		return vs[0].([]GetInstancesInstanceBackup)[vs[1].(int)]
	}).(GetInstancesInstanceBackupOutput)
}

type GetInstancesInstanceBackupSchedule struct {
	// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
	Day string `pulumi:"day"`
	// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
	Window string `pulumi:"window"`
}

// GetInstancesInstanceBackupScheduleInput is an input type that accepts GetInstancesInstanceBackupScheduleArgs and GetInstancesInstanceBackupScheduleOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupScheduleInput` via:
//
//	GetInstancesInstanceBackupScheduleArgs{...}
type GetInstancesInstanceBackupScheduleInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupScheduleOutput() GetInstancesInstanceBackupScheduleOutput
	ToGetInstancesInstanceBackupScheduleOutputWithContext(context.Context) GetInstancesInstanceBackupScheduleOutput
}

type GetInstancesInstanceBackupScheduleArgs struct {
	// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
	Day pulumi.StringInput `pulumi:"day"`
	// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
	Window pulumi.StringInput `pulumi:"window"`
}

func (GetInstancesInstanceBackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (i GetInstancesInstanceBackupScheduleArgs) ToGetInstancesInstanceBackupScheduleOutput() GetInstancesInstanceBackupScheduleOutput {
	return i.ToGetInstancesInstanceBackupScheduleOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupScheduleArgs) ToGetInstancesInstanceBackupScheduleOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupScheduleOutput)
}

func (i GetInstancesInstanceBackupScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceBackupSchedule] {
	return pulumix.Output[GetInstancesInstanceBackupSchedule]{
		OutputState: i.ToGetInstancesInstanceBackupScheduleOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceBackupScheduleArrayInput is an input type that accepts GetInstancesInstanceBackupScheduleArray and GetInstancesInstanceBackupScheduleArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupScheduleArrayInput` via:
//
//	GetInstancesInstanceBackupScheduleArray{ GetInstancesInstanceBackupScheduleArgs{...} }
type GetInstancesInstanceBackupScheduleArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupScheduleArrayOutput() GetInstancesInstanceBackupScheduleArrayOutput
	ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(context.Context) GetInstancesInstanceBackupScheduleArrayOutput
}

type GetInstancesInstanceBackupScheduleArray []GetInstancesInstanceBackupScheduleInput

func (GetInstancesInstanceBackupScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (i GetInstancesInstanceBackupScheduleArray) ToGetInstancesInstanceBackupScheduleArrayOutput() GetInstancesInstanceBackupScheduleArrayOutput {
	return i.ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupScheduleArray) ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupScheduleArrayOutput)
}

func (i GetInstancesInstanceBackupScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceBackupSchedule] {
	return pulumix.Output[[]GetInstancesInstanceBackupSchedule]{
		OutputState: i.ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceBackupScheduleOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (o GetInstancesInstanceBackupScheduleOutput) ToGetInstancesInstanceBackupScheduleOutput() GetInstancesInstanceBackupScheduleOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleOutput) ToGetInstancesInstanceBackupScheduleOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceBackupSchedule] {
	return pulumix.Output[GetInstancesInstanceBackupSchedule]{
		OutputState: o.OutputState,
	}
}

// The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
func (o GetInstancesInstanceBackupScheduleOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupSchedule) string { return v.Day }).(pulumi.StringOutput)
}

// The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
func (o GetInstancesInstanceBackupScheduleOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupSchedule) string { return v.Window }).(pulumi.StringOutput)
}

type GetInstancesInstanceBackupScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupSchedule)(nil)).Elem()
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) ToGetInstancesInstanceBackupScheduleArrayOutput() GetInstancesInstanceBackupScheduleArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) ToGetInstancesInstanceBackupScheduleArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupScheduleArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceBackupSchedule] {
	return pulumix.Output[[]GetInstancesInstanceBackupSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceBackupScheduleArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceBackupScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceBackupSchedule {
		return vs[0].([]GetInstancesInstanceBackupSchedule)[vs[1].(int)]
	}).(GetInstancesInstanceBackupScheduleOutput)
}

type GetInstancesInstanceConfig struct {
	// Arbitrary user comments about this `config`.
	Comments string `pulumi:"comments"`
	// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
	Devices []GetInstancesInstanceConfigDevice `pulumi:"devices"`
	// Helpers enabled when booting to this Linode Config.
	Helpers    []GetInstancesInstanceConfigHelper    `pulumi:"helpers"`
	Interfaces []GetInstancesInstanceConfigInterface `pulumi:"interfaces"`
	// A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
	Kernel string `pulumi:"kernel"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label string `pulumi:"label"`
	// Defaults to the total RAM of the Linode
	MemoryLimit int `pulumi:"memoryLimit"`
	// The root device to boot.
	RootDevice string `pulumi:"rootDevice"`
	// Defines the state of your Linode after booting.
	RunLevel string `pulumi:"runLevel"`
	// Controls the virtualization mode.
	VirtMode string `pulumi:"virtMode"`
}

// GetInstancesInstanceConfigInput is an input type that accepts GetInstancesInstanceConfigArgs and GetInstancesInstanceConfigOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigInput` via:
//
//	GetInstancesInstanceConfigArgs{...}
type GetInstancesInstanceConfigInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigOutput() GetInstancesInstanceConfigOutput
	ToGetInstancesInstanceConfigOutputWithContext(context.Context) GetInstancesInstanceConfigOutput
}

type GetInstancesInstanceConfigArgs struct {
	// Arbitrary user comments about this `config`.
	Comments pulumi.StringInput `pulumi:"comments"`
	// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
	Devices GetInstancesInstanceConfigDeviceArrayInput `pulumi:"devices"`
	// Helpers enabled when booting to this Linode Config.
	Helpers    GetInstancesInstanceConfigHelperArrayInput    `pulumi:"helpers"`
	Interfaces GetInstancesInstanceConfigInterfaceArrayInput `pulumi:"interfaces"`
	// A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
	Kernel pulumi.StringInput `pulumi:"kernel"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label pulumi.StringInput `pulumi:"label"`
	// Defaults to the total RAM of the Linode
	MemoryLimit pulumi.IntInput `pulumi:"memoryLimit"`
	// The root device to boot.
	RootDevice pulumi.StringInput `pulumi:"rootDevice"`
	// Defines the state of your Linode after booting.
	RunLevel pulumi.StringInput `pulumi:"runLevel"`
	// Controls the virtualization mode.
	VirtMode pulumi.StringInput `pulumi:"virtMode"`
}

func (GetInstancesInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfig)(nil)).Elem()
}

func (i GetInstancesInstanceConfigArgs) ToGetInstancesInstanceConfigOutput() GetInstancesInstanceConfigOutput {
	return i.ToGetInstancesInstanceConfigOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigArgs) ToGetInstancesInstanceConfigOutputWithContext(ctx context.Context) GetInstancesInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigOutput)
}

func (i GetInstancesInstanceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfig] {
	return pulumix.Output[GetInstancesInstanceConfig]{
		OutputState: i.ToGetInstancesInstanceConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigArrayInput is an input type that accepts GetInstancesInstanceConfigArray and GetInstancesInstanceConfigArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigArrayInput` via:
//
//	GetInstancesInstanceConfigArray{ GetInstancesInstanceConfigArgs{...} }
type GetInstancesInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigArrayOutput() GetInstancesInstanceConfigArrayOutput
	ToGetInstancesInstanceConfigArrayOutputWithContext(context.Context) GetInstancesInstanceConfigArrayOutput
}

type GetInstancesInstanceConfigArray []GetInstancesInstanceConfigInput

func (GetInstancesInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfig)(nil)).Elem()
}

func (i GetInstancesInstanceConfigArray) ToGetInstancesInstanceConfigArrayOutput() GetInstancesInstanceConfigArrayOutput {
	return i.ToGetInstancesInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigArray) ToGetInstancesInstanceConfigArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigArrayOutput)
}

func (i GetInstancesInstanceConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfig] {
	return pulumix.Output[[]GetInstancesInstanceConfig]{
		OutputState: i.ToGetInstancesInstanceConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfig)(nil)).Elem()
}

func (o GetInstancesInstanceConfigOutput) ToGetInstancesInstanceConfigOutput() GetInstancesInstanceConfigOutput {
	return o
}

func (o GetInstancesInstanceConfigOutput) ToGetInstancesInstanceConfigOutputWithContext(ctx context.Context) GetInstancesInstanceConfigOutput {
	return o
}

func (o GetInstancesInstanceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfig] {
	return pulumix.Output[GetInstancesInstanceConfig]{
		OutputState: o.OutputState,
	}
}

// Arbitrary user comments about this `config`.
func (o GetInstancesInstanceConfigOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.Comments }).(pulumi.StringOutput)
}

// A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
func (o GetInstancesInstanceConfigOutput) Devices() GetInstancesInstanceConfigDeviceArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) []GetInstancesInstanceConfigDevice { return v.Devices }).(GetInstancesInstanceConfigDeviceArrayOutput)
}

// Helpers enabled when booting to this Linode Config.
func (o GetInstancesInstanceConfigOutput) Helpers() GetInstancesInstanceConfigHelperArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) []GetInstancesInstanceConfigHelper { return v.Helpers }).(GetInstancesInstanceConfigHelperArrayOutput)
}

func (o GetInstancesInstanceConfigOutput) Interfaces() GetInstancesInstanceConfigInterfaceArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) []GetInstancesInstanceConfigInterface { return v.Interfaces }).(GetInstancesInstanceConfigInterfaceArrayOutput)
}

// A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
func (o GetInstancesInstanceConfigOutput) Kernel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.Kernel }).(pulumi.StringOutput)
}

// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
func (o GetInstancesInstanceConfigOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.Label }).(pulumi.StringOutput)
}

// Defaults to the total RAM of the Linode
func (o GetInstancesInstanceConfigOutput) MemoryLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) int { return v.MemoryLimit }).(pulumi.IntOutput)
}

// The root device to boot.
func (o GetInstancesInstanceConfigOutput) RootDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.RootDevice }).(pulumi.StringOutput)
}

// Defines the state of your Linode after booting.
func (o GetInstancesInstanceConfigOutput) RunLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.RunLevel }).(pulumi.StringOutput)
}

// Controls the virtualization mode.
func (o GetInstancesInstanceConfigOutput) VirtMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfig) string { return v.VirtMode }).(pulumi.StringOutput)
}

type GetInstancesInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfig)(nil)).Elem()
}

func (o GetInstancesInstanceConfigArrayOutput) ToGetInstancesInstanceConfigArrayOutput() GetInstancesInstanceConfigArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigArrayOutput) ToGetInstancesInstanceConfigArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfig] {
	return pulumix.Output[[]GetInstancesInstanceConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfig {
		return vs[0].([]GetInstancesInstanceConfig)[vs[1].(int)]
	}).(GetInstancesInstanceConfigOutput)
}

type GetInstancesInstanceConfigDevice struct {
	// ... `sdh` -  The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
	Sdas []GetInstancesInstanceConfigDeviceSda `pulumi:"sdas"`
	Sdbs []GetInstancesInstanceConfigDeviceSdb `pulumi:"sdbs"`
	Sdcs []GetInstancesInstanceConfigDeviceSdc `pulumi:"sdcs"`
	Sdds []GetInstancesInstanceConfigDeviceSdd `pulumi:"sdds"`
	Sdes []GetInstancesInstanceConfigDeviceSde `pulumi:"sdes"`
	Sdfs []GetInstancesInstanceConfigDeviceSdf `pulumi:"sdfs"`
	Sdgs []GetInstancesInstanceConfigDeviceSdg `pulumi:"sdgs"`
	Sdhs []GetInstancesInstanceConfigDeviceSdh `pulumi:"sdhs"`
}

// GetInstancesInstanceConfigDeviceInput is an input type that accepts GetInstancesInstanceConfigDeviceArgs and GetInstancesInstanceConfigDeviceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceInput` via:
//
//	GetInstancesInstanceConfigDeviceArgs{...}
type GetInstancesInstanceConfigDeviceInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceOutput() GetInstancesInstanceConfigDeviceOutput
	ToGetInstancesInstanceConfigDeviceOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceOutput
}

type GetInstancesInstanceConfigDeviceArgs struct {
	// ... `sdh` -  The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
	Sdas GetInstancesInstanceConfigDeviceSdaArrayInput `pulumi:"sdas"`
	Sdbs GetInstancesInstanceConfigDeviceSdbArrayInput `pulumi:"sdbs"`
	Sdcs GetInstancesInstanceConfigDeviceSdcArrayInput `pulumi:"sdcs"`
	Sdds GetInstancesInstanceConfigDeviceSddArrayInput `pulumi:"sdds"`
	Sdes GetInstancesInstanceConfigDeviceSdeArrayInput `pulumi:"sdes"`
	Sdfs GetInstancesInstanceConfigDeviceSdfArrayInput `pulumi:"sdfs"`
	Sdgs GetInstancesInstanceConfigDeviceSdgArrayInput `pulumi:"sdgs"`
	Sdhs GetInstancesInstanceConfigDeviceSdhArrayInput `pulumi:"sdhs"`
}

func (GetInstancesInstanceConfigDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceArgs) ToGetInstancesInstanceConfigDeviceOutput() GetInstancesInstanceConfigDeviceOutput {
	return i.ToGetInstancesInstanceConfigDeviceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceArgs) ToGetInstancesInstanceConfigDeviceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceOutput)
}

func (i GetInstancesInstanceConfigDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDevice] {
	return pulumix.Output[GetInstancesInstanceConfigDevice]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceArray and GetInstancesInstanceConfigDeviceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceArray{ GetInstancesInstanceConfigDeviceArgs{...} }
type GetInstancesInstanceConfigDeviceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceArrayOutput() GetInstancesInstanceConfigDeviceArrayOutput
	ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceArrayOutput
}

type GetInstancesInstanceConfigDeviceArray []GetInstancesInstanceConfigDeviceInput

func (GetInstancesInstanceConfigDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceArray) ToGetInstancesInstanceConfigDeviceArrayOutput() GetInstancesInstanceConfigDeviceArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceArray) ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDevice] {
	return pulumix.Output[[]GetInstancesInstanceConfigDevice]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceOutput) ToGetInstancesInstanceConfigDeviceOutput() GetInstancesInstanceConfigDeviceOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceOutput) ToGetInstancesInstanceConfigDeviceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDevice] {
	return pulumix.Output[GetInstancesInstanceConfigDevice]{
		OutputState: o.OutputState,
	}
}

// ... `sdh` -  The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
func (o GetInstancesInstanceConfigDeviceOutput) Sdas() GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSda { return v.Sdas }).(GetInstancesInstanceConfigDeviceSdaArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdbs() GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdb { return v.Sdbs }).(GetInstancesInstanceConfigDeviceSdbArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdcs() GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdc { return v.Sdcs }).(GetInstancesInstanceConfigDeviceSdcArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdds() GetInstancesInstanceConfigDeviceSddArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdd { return v.Sdds }).(GetInstancesInstanceConfigDeviceSddArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdes() GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSde { return v.Sdes }).(GetInstancesInstanceConfigDeviceSdeArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdfs() GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdf { return v.Sdfs }).(GetInstancesInstanceConfigDeviceSdfArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdgs() GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdg { return v.Sdgs }).(GetInstancesInstanceConfigDeviceSdgArrayOutput)
}

func (o GetInstancesInstanceConfigDeviceOutput) Sdhs() GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDevice) []GetInstancesInstanceConfigDeviceSdh { return v.Sdhs }).(GetInstancesInstanceConfigDeviceSdhArrayOutput)
}

type GetInstancesInstanceConfigDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDevice)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) ToGetInstancesInstanceConfigDeviceArrayOutput() GetInstancesInstanceConfigDeviceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) ToGetInstancesInstanceConfigDeviceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDevice] {
	return pulumix.Output[[]GetInstancesInstanceConfigDevice]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDevice {
		return vs[0].([]GetInstancesInstanceConfigDevice)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceOutput)
}

type GetInstancesInstanceConfigDeviceSda struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdaInput is an input type that accepts GetInstancesInstanceConfigDeviceSdaArgs and GetInstancesInstanceConfigDeviceSdaOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdaInput` via:
//
//	GetInstancesInstanceConfigDeviceSdaArgs{...}
type GetInstancesInstanceConfigDeviceSdaInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdaOutput() GetInstancesInstanceConfigDeviceSdaOutput
	ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdaOutput
}

type GetInstancesInstanceConfigDeviceSdaArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdaArgs) ToGetInstancesInstanceConfigDeviceSdaOutput() GetInstancesInstanceConfigDeviceSdaOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdaArgs) ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdaOutput)
}

func (i GetInstancesInstanceConfigDeviceSdaArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSda] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSda]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdaArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdaArray and GetInstancesInstanceConfigDeviceSdaArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdaArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdaArray{ GetInstancesInstanceConfigDeviceSdaArgs{...} }
type GetInstancesInstanceConfigDeviceSdaArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdaArrayOutput() GetInstancesInstanceConfigDeviceSdaArrayOutput
	ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdaArrayOutput
}

type GetInstancesInstanceConfigDeviceSdaArray []GetInstancesInstanceConfigDeviceSdaInput

func (GetInstancesInstanceConfigDeviceSdaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdaArray) ToGetInstancesInstanceConfigDeviceSdaArrayOutput() GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdaArray) ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdaArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSda] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSda]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdaOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) ToGetInstancesInstanceConfigDeviceSdaOutput() GetInstancesInstanceConfigDeviceSdaOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) ToGetInstancesInstanceConfigDeviceSdaOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSda] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSda]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdaOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSda) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdaOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSda) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdaOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSda) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdaArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSda)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) ToGetInstancesInstanceConfigDeviceSdaArrayOutput() GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) ToGetInstancesInstanceConfigDeviceSdaArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdaArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSda] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSda]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdaArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSda {
		return vs[0].([]GetInstancesInstanceConfigDeviceSda)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdaOutput)
}

type GetInstancesInstanceConfigDeviceSdb struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdbInput is an input type that accepts GetInstancesInstanceConfigDeviceSdbArgs and GetInstancesInstanceConfigDeviceSdbOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdbInput` via:
//
//	GetInstancesInstanceConfigDeviceSdbArgs{...}
type GetInstancesInstanceConfigDeviceSdbInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdbOutput() GetInstancesInstanceConfigDeviceSdbOutput
	ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdbOutput
}

type GetInstancesInstanceConfigDeviceSdbArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdbArgs) ToGetInstancesInstanceConfigDeviceSdbOutput() GetInstancesInstanceConfigDeviceSdbOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdbArgs) ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdbOutput)
}

func (i GetInstancesInstanceConfigDeviceSdbArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdb] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdb]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdbArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdbArray and GetInstancesInstanceConfigDeviceSdbArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdbArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdbArray{ GetInstancesInstanceConfigDeviceSdbArgs{...} }
type GetInstancesInstanceConfigDeviceSdbArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdbArrayOutput() GetInstancesInstanceConfigDeviceSdbArrayOutput
	ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdbArrayOutput
}

type GetInstancesInstanceConfigDeviceSdbArray []GetInstancesInstanceConfigDeviceSdbInput

func (GetInstancesInstanceConfigDeviceSdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdbArray) ToGetInstancesInstanceConfigDeviceSdbArrayOutput() GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdbArray) ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdbArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdbArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdb] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdb]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdbOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) ToGetInstancesInstanceConfigDeviceSdbOutput() GetInstancesInstanceConfigDeviceSdbOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) ToGetInstancesInstanceConfigDeviceSdbOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdb] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdb]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdbOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdb) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdbOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdb) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdbOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdb) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdbArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdb)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) ToGetInstancesInstanceConfigDeviceSdbArrayOutput() GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) ToGetInstancesInstanceConfigDeviceSdbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdbArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdb] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdb]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdbArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdb {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdb)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdbOutput)
}

type GetInstancesInstanceConfigDeviceSdc struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdcInput is an input type that accepts GetInstancesInstanceConfigDeviceSdcArgs and GetInstancesInstanceConfigDeviceSdcOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdcInput` via:
//
//	GetInstancesInstanceConfigDeviceSdcArgs{...}
type GetInstancesInstanceConfigDeviceSdcInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdcOutput() GetInstancesInstanceConfigDeviceSdcOutput
	ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdcOutput
}

type GetInstancesInstanceConfigDeviceSdcArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdcArgs) ToGetInstancesInstanceConfigDeviceSdcOutput() GetInstancesInstanceConfigDeviceSdcOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdcArgs) ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdcOutput)
}

func (i GetInstancesInstanceConfigDeviceSdcArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdc] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdc]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdcArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdcArray and GetInstancesInstanceConfigDeviceSdcArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdcArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdcArray{ GetInstancesInstanceConfigDeviceSdcArgs{...} }
type GetInstancesInstanceConfigDeviceSdcArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdcArrayOutput() GetInstancesInstanceConfigDeviceSdcArrayOutput
	ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdcArrayOutput
}

type GetInstancesInstanceConfigDeviceSdcArray []GetInstancesInstanceConfigDeviceSdcInput

func (GetInstancesInstanceConfigDeviceSdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdcArray) ToGetInstancesInstanceConfigDeviceSdcArrayOutput() GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdcArray) ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdcArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdcArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdc] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdc]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdcOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) ToGetInstancesInstanceConfigDeviceSdcOutput() GetInstancesInstanceConfigDeviceSdcOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) ToGetInstancesInstanceConfigDeviceSdcOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdc] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdc]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdcOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdc) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdcOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdc) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdcOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdc) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdcArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdc)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) ToGetInstancesInstanceConfigDeviceSdcArrayOutput() GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) ToGetInstancesInstanceConfigDeviceSdcArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdcArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdc] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdc]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdcArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdc {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdc)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdcOutput)
}

type GetInstancesInstanceConfigDeviceSdd struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSddInput is an input type that accepts GetInstancesInstanceConfigDeviceSddArgs and GetInstancesInstanceConfigDeviceSddOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSddInput` via:
//
//	GetInstancesInstanceConfigDeviceSddArgs{...}
type GetInstancesInstanceConfigDeviceSddInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSddOutput() GetInstancesInstanceConfigDeviceSddOutput
	ToGetInstancesInstanceConfigDeviceSddOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSddOutput
}

type GetInstancesInstanceConfigDeviceSddArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSddArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSddArgs) ToGetInstancesInstanceConfigDeviceSddOutput() GetInstancesInstanceConfigDeviceSddOutput {
	return i.ToGetInstancesInstanceConfigDeviceSddOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSddArgs) ToGetInstancesInstanceConfigDeviceSddOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSddOutput)
}

func (i GetInstancesInstanceConfigDeviceSddArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdd] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdd]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSddOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSddArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSddArray and GetInstancesInstanceConfigDeviceSddArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSddArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSddArray{ GetInstancesInstanceConfigDeviceSddArgs{...} }
type GetInstancesInstanceConfigDeviceSddArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSddArrayOutput() GetInstancesInstanceConfigDeviceSddArrayOutput
	ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSddArrayOutput
}

type GetInstancesInstanceConfigDeviceSddArray []GetInstancesInstanceConfigDeviceSddInput

func (GetInstancesInstanceConfigDeviceSddArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSddArray) ToGetInstancesInstanceConfigDeviceSddArrayOutput() GetInstancesInstanceConfigDeviceSddArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSddArray) ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSddArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSddArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdd] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdd]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSddOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSddOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSddOutput) ToGetInstancesInstanceConfigDeviceSddOutput() GetInstancesInstanceConfigDeviceSddOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddOutput) ToGetInstancesInstanceConfigDeviceSddOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdd] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdd]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSddOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdd) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSddOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdd) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSddOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdd) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSddArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSddArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdd)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) ToGetInstancesInstanceConfigDeviceSddArrayOutput() GetInstancesInstanceConfigDeviceSddArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) ToGetInstancesInstanceConfigDeviceSddArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSddArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdd] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdd]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSddArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSddOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdd {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdd)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSddOutput)
}

type GetInstancesInstanceConfigDeviceSde struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdeInput is an input type that accepts GetInstancesInstanceConfigDeviceSdeArgs and GetInstancesInstanceConfigDeviceSdeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdeInput` via:
//
//	GetInstancesInstanceConfigDeviceSdeArgs{...}
type GetInstancesInstanceConfigDeviceSdeInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdeOutput() GetInstancesInstanceConfigDeviceSdeOutput
	ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdeOutput
}

type GetInstancesInstanceConfigDeviceSdeArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdeArgs) ToGetInstancesInstanceConfigDeviceSdeOutput() GetInstancesInstanceConfigDeviceSdeOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdeArgs) ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdeOutput)
}

func (i GetInstancesInstanceConfigDeviceSdeArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSde] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSde]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdeArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdeArray and GetInstancesInstanceConfigDeviceSdeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdeArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdeArray{ GetInstancesInstanceConfigDeviceSdeArgs{...} }
type GetInstancesInstanceConfigDeviceSdeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdeArrayOutput() GetInstancesInstanceConfigDeviceSdeArrayOutput
	ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdeArrayOutput
}

type GetInstancesInstanceConfigDeviceSdeArray []GetInstancesInstanceConfigDeviceSdeInput

func (GetInstancesInstanceConfigDeviceSdeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdeArray) ToGetInstancesInstanceConfigDeviceSdeArrayOutput() GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdeArray) ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdeArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSde] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSde]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) ToGetInstancesInstanceConfigDeviceSdeOutput() GetInstancesInstanceConfigDeviceSdeOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) ToGetInstancesInstanceConfigDeviceSdeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSde] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSde]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdeOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSde) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdeOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSde) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdeOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSde) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSde)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) ToGetInstancesInstanceConfigDeviceSdeArrayOutput() GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) ToGetInstancesInstanceConfigDeviceSdeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSde] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSde]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSde {
		return vs[0].([]GetInstancesInstanceConfigDeviceSde)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdeOutput)
}

type GetInstancesInstanceConfigDeviceSdf struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdfInput is an input type that accepts GetInstancesInstanceConfigDeviceSdfArgs and GetInstancesInstanceConfigDeviceSdfOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdfInput` via:
//
//	GetInstancesInstanceConfigDeviceSdfArgs{...}
type GetInstancesInstanceConfigDeviceSdfInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdfOutput() GetInstancesInstanceConfigDeviceSdfOutput
	ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdfOutput
}

type GetInstancesInstanceConfigDeviceSdfArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdfArgs) ToGetInstancesInstanceConfigDeviceSdfOutput() GetInstancesInstanceConfigDeviceSdfOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdfArgs) ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdfOutput)
}

func (i GetInstancesInstanceConfigDeviceSdfArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdf] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdf]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdfArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdfArray and GetInstancesInstanceConfigDeviceSdfArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdfArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdfArray{ GetInstancesInstanceConfigDeviceSdfArgs{...} }
type GetInstancesInstanceConfigDeviceSdfArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdfArrayOutput() GetInstancesInstanceConfigDeviceSdfArrayOutput
	ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdfArrayOutput
}

type GetInstancesInstanceConfigDeviceSdfArray []GetInstancesInstanceConfigDeviceSdfInput

func (GetInstancesInstanceConfigDeviceSdfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdfArray) ToGetInstancesInstanceConfigDeviceSdfArrayOutput() GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdfArray) ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdfArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdfArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdf] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdf]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdfOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) ToGetInstancesInstanceConfigDeviceSdfOutput() GetInstancesInstanceConfigDeviceSdfOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) ToGetInstancesInstanceConfigDeviceSdfOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdf] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdf]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdfOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdf) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdfOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdf) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdfOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdf) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdfArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdf)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) ToGetInstancesInstanceConfigDeviceSdfArrayOutput() GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) ToGetInstancesInstanceConfigDeviceSdfArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdfArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdf] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdf]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdfArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdf {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdf)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdfOutput)
}

type GetInstancesInstanceConfigDeviceSdg struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdgInput is an input type that accepts GetInstancesInstanceConfigDeviceSdgArgs and GetInstancesInstanceConfigDeviceSdgOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdgInput` via:
//
//	GetInstancesInstanceConfigDeviceSdgArgs{...}
type GetInstancesInstanceConfigDeviceSdgInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdgOutput() GetInstancesInstanceConfigDeviceSdgOutput
	ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdgOutput
}

type GetInstancesInstanceConfigDeviceSdgArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdgArgs) ToGetInstancesInstanceConfigDeviceSdgOutput() GetInstancesInstanceConfigDeviceSdgOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdgArgs) ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdgOutput)
}

func (i GetInstancesInstanceConfigDeviceSdgArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdg] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdg]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdgArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdgArray and GetInstancesInstanceConfigDeviceSdgArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdgArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdgArray{ GetInstancesInstanceConfigDeviceSdgArgs{...} }
type GetInstancesInstanceConfigDeviceSdgArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdgArrayOutput() GetInstancesInstanceConfigDeviceSdgArrayOutput
	ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdgArrayOutput
}

type GetInstancesInstanceConfigDeviceSdgArray []GetInstancesInstanceConfigDeviceSdgInput

func (GetInstancesInstanceConfigDeviceSdgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdgArray) ToGetInstancesInstanceConfigDeviceSdgArrayOutput() GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdgArray) ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdgArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdgArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdg] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdg]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdgOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) ToGetInstancesInstanceConfigDeviceSdgOutput() GetInstancesInstanceConfigDeviceSdgOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) ToGetInstancesInstanceConfigDeviceSdgOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdg] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdg]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdgOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdg) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdgOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdg) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdgOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdg) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdgArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdg)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) ToGetInstancesInstanceConfigDeviceSdgArrayOutput() GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) ToGetInstancesInstanceConfigDeviceSdgArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdgArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdg] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdg]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdgArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdg {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdg)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdgOutput)
}

type GetInstancesInstanceConfigDeviceSdh struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId int `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel *string `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId *int `pulumi:"volumeId"`
}

// GetInstancesInstanceConfigDeviceSdhInput is an input type that accepts GetInstancesInstanceConfigDeviceSdhArgs and GetInstancesInstanceConfigDeviceSdhOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdhInput` via:
//
//	GetInstancesInstanceConfigDeviceSdhArgs{...}
type GetInstancesInstanceConfigDeviceSdhInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdhOutput() GetInstancesInstanceConfigDeviceSdhOutput
	ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdhOutput
}

type GetInstancesInstanceConfigDeviceSdhArgs struct {
	// The Disk ID of the associated `diskLabel`, if used
	DiskId pulumi.IntInput `pulumi:"diskId"`
	// The `label` of the `disk` to map to this `device` slot.
	DiskLabel pulumi.StringPtrInput `pulumi:"diskLabel"`
	// The Volume ID to map to this `device` slot.
	VolumeId pulumi.IntPtrInput `pulumi:"volumeId"`
}

func (GetInstancesInstanceConfigDeviceSdhArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdhArgs) ToGetInstancesInstanceConfigDeviceSdhOutput() GetInstancesInstanceConfigDeviceSdhOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdhArgs) ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdhOutput)
}

func (i GetInstancesInstanceConfigDeviceSdhArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdh] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdh]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigDeviceSdhArrayInput is an input type that accepts GetInstancesInstanceConfigDeviceSdhArray and GetInstancesInstanceConfigDeviceSdhArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigDeviceSdhArrayInput` via:
//
//	GetInstancesInstanceConfigDeviceSdhArray{ GetInstancesInstanceConfigDeviceSdhArgs{...} }
type GetInstancesInstanceConfigDeviceSdhArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigDeviceSdhArrayOutput() GetInstancesInstanceConfigDeviceSdhArrayOutput
	ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(context.Context) GetInstancesInstanceConfigDeviceSdhArrayOutput
}

type GetInstancesInstanceConfigDeviceSdhArray []GetInstancesInstanceConfigDeviceSdhInput

func (GetInstancesInstanceConfigDeviceSdhArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (i GetInstancesInstanceConfigDeviceSdhArray) ToGetInstancesInstanceConfigDeviceSdhArrayOutput() GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return i.ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigDeviceSdhArray) ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigDeviceSdhArrayOutput)
}

func (i GetInstancesInstanceConfigDeviceSdhArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdh] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdh]{
		OutputState: i.ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigDeviceSdhOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdhOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) ToGetInstancesInstanceConfigDeviceSdhOutput() GetInstancesInstanceConfigDeviceSdhOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) ToGetInstancesInstanceConfigDeviceSdhOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigDeviceSdh] {
	return pulumix.Output[GetInstancesInstanceConfigDeviceSdh]{
		OutputState: o.OutputState,
	}
}

// The Disk ID of the associated `diskLabel`, if used
func (o GetInstancesInstanceConfigDeviceSdhOutput) DiskId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdh) int { return v.DiskId }).(pulumi.IntOutput)
}

// The `label` of the `disk` to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdhOutput) DiskLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdh) *string { return v.DiskLabel }).(pulumi.StringPtrOutput)
}

// The Volume ID to map to this `device` slot.
func (o GetInstancesInstanceConfigDeviceSdhOutput) VolumeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigDeviceSdh) *int { return v.VolumeId }).(pulumi.IntPtrOutput)
}

type GetInstancesInstanceConfigDeviceSdhArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigDeviceSdhArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigDeviceSdh)(nil)).Elem()
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) ToGetInstancesInstanceConfigDeviceSdhArrayOutput() GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) ToGetInstancesInstanceConfigDeviceSdhArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigDeviceSdhArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigDeviceSdh] {
	return pulumix.Output[[]GetInstancesInstanceConfigDeviceSdh]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigDeviceSdhArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigDeviceSdhOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigDeviceSdh {
		return vs[0].([]GetInstancesInstanceConfigDeviceSdh)[vs[1].(int)]
	}).(GetInstancesInstanceConfigDeviceSdhOutput)
}

type GetInstancesInstanceConfigHelper struct {
	DevtmpfsAutomount bool `pulumi:"devtmpfsAutomount"`
	// Controls the behavior of the Linode Config's Distribution Helper setting.
	Distro bool `pulumi:"distro"`
	// Creates a modules dependency file for the Kernel you run.
	ModulesDep bool `pulumi:"modulesDep"`
	// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
	Network bool `pulumi:"network"`
	// Disables updatedb cron job to avoid disk thrashing.
	UpdatedbDisabled bool `pulumi:"updatedbDisabled"`
}

// GetInstancesInstanceConfigHelperInput is an input type that accepts GetInstancesInstanceConfigHelperArgs and GetInstancesInstanceConfigHelperOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigHelperInput` via:
//
//	GetInstancesInstanceConfigHelperArgs{...}
type GetInstancesInstanceConfigHelperInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigHelperOutput() GetInstancesInstanceConfigHelperOutput
	ToGetInstancesInstanceConfigHelperOutputWithContext(context.Context) GetInstancesInstanceConfigHelperOutput
}

type GetInstancesInstanceConfigHelperArgs struct {
	DevtmpfsAutomount pulumi.BoolInput `pulumi:"devtmpfsAutomount"`
	// Controls the behavior of the Linode Config's Distribution Helper setting.
	Distro pulumi.BoolInput `pulumi:"distro"`
	// Creates a modules dependency file for the Kernel you run.
	ModulesDep pulumi.BoolInput `pulumi:"modulesDep"`
	// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
	Network pulumi.BoolInput `pulumi:"network"`
	// Disables updatedb cron job to avoid disk thrashing.
	UpdatedbDisabled pulumi.BoolInput `pulumi:"updatedbDisabled"`
}

func (GetInstancesInstanceConfigHelperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (i GetInstancesInstanceConfigHelperArgs) ToGetInstancesInstanceConfigHelperOutput() GetInstancesInstanceConfigHelperOutput {
	return i.ToGetInstancesInstanceConfigHelperOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigHelperArgs) ToGetInstancesInstanceConfigHelperOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigHelperOutput)
}

func (i GetInstancesInstanceConfigHelperArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigHelper] {
	return pulumix.Output[GetInstancesInstanceConfigHelper]{
		OutputState: i.ToGetInstancesInstanceConfigHelperOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigHelperArrayInput is an input type that accepts GetInstancesInstanceConfigHelperArray and GetInstancesInstanceConfigHelperArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigHelperArrayInput` via:
//
//	GetInstancesInstanceConfigHelperArray{ GetInstancesInstanceConfigHelperArgs{...} }
type GetInstancesInstanceConfigHelperArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigHelperArrayOutput() GetInstancesInstanceConfigHelperArrayOutput
	ToGetInstancesInstanceConfigHelperArrayOutputWithContext(context.Context) GetInstancesInstanceConfigHelperArrayOutput
}

type GetInstancesInstanceConfigHelperArray []GetInstancesInstanceConfigHelperInput

func (GetInstancesInstanceConfigHelperArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (i GetInstancesInstanceConfigHelperArray) ToGetInstancesInstanceConfigHelperArrayOutput() GetInstancesInstanceConfigHelperArrayOutput {
	return i.ToGetInstancesInstanceConfigHelperArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigHelperArray) ToGetInstancesInstanceConfigHelperArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigHelperArrayOutput)
}

func (i GetInstancesInstanceConfigHelperArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigHelper] {
	return pulumix.Output[[]GetInstancesInstanceConfigHelper]{
		OutputState: i.ToGetInstancesInstanceConfigHelperArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigHelperOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigHelperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (o GetInstancesInstanceConfigHelperOutput) ToGetInstancesInstanceConfigHelperOutput() GetInstancesInstanceConfigHelperOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperOutput) ToGetInstancesInstanceConfigHelperOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigHelper] {
	return pulumix.Output[GetInstancesInstanceConfigHelper]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigHelperOutput) DevtmpfsAutomount() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.DevtmpfsAutomount }).(pulumi.BoolOutput)
}

// Controls the behavior of the Linode Config's Distribution Helper setting.
func (o GetInstancesInstanceConfigHelperOutput) Distro() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.Distro }).(pulumi.BoolOutput)
}

// Creates a modules dependency file for the Kernel you run.
func (o GetInstancesInstanceConfigHelperOutput) ModulesDep() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.ModulesDep }).(pulumi.BoolOutput)
}

// Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
func (o GetInstancesInstanceConfigHelperOutput) Network() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.Network }).(pulumi.BoolOutput)
}

// Disables updatedb cron job to avoid disk thrashing.
func (o GetInstancesInstanceConfigHelperOutput) UpdatedbDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigHelper) bool { return v.UpdatedbDisabled }).(pulumi.BoolOutput)
}

type GetInstancesInstanceConfigHelperArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigHelperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigHelper)(nil)).Elem()
}

func (o GetInstancesInstanceConfigHelperArrayOutput) ToGetInstancesInstanceConfigHelperArrayOutput() GetInstancesInstanceConfigHelperArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperArrayOutput) ToGetInstancesInstanceConfigHelperArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigHelperArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigHelperArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigHelper] {
	return pulumix.Output[[]GetInstancesInstanceConfigHelper]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigHelperArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigHelperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigHelper {
		return vs[0].([]GetInstancesInstanceConfigHelper)[vs[1].(int)]
	}).(GetInstancesInstanceConfigHelperOutput)
}

type GetInstancesInstanceConfigInterface struct {
	// (Optional) This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress *string `pulumi:"ipamAddress"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label *string `pulumi:"label"`
	// (Required) The type of interface. (`public`, `vlan`)
	Purpose *string `pulumi:"purpose"`
}

// GetInstancesInstanceConfigInterfaceInput is an input type that accepts GetInstancesInstanceConfigInterfaceArgs and GetInstancesInstanceConfigInterfaceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigInterfaceInput` via:
//
//	GetInstancesInstanceConfigInterfaceArgs{...}
type GetInstancesInstanceConfigInterfaceInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigInterfaceOutput() GetInstancesInstanceConfigInterfaceOutput
	ToGetInstancesInstanceConfigInterfaceOutputWithContext(context.Context) GetInstancesInstanceConfigInterfaceOutput
}

type GetInstancesInstanceConfigInterfaceArgs struct {
	// (Optional) This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
	IpamAddress pulumi.StringPtrInput `pulumi:"ipamAddress"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// (Required) The type of interface. (`public`, `vlan`)
	Purpose pulumi.StringPtrInput `pulumi:"purpose"`
}

func (GetInstancesInstanceConfigInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (i GetInstancesInstanceConfigInterfaceArgs) ToGetInstancesInstanceConfigInterfaceOutput() GetInstancesInstanceConfigInterfaceOutput {
	return i.ToGetInstancesInstanceConfigInterfaceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigInterfaceArgs) ToGetInstancesInstanceConfigInterfaceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigInterfaceOutput)
}

func (i GetInstancesInstanceConfigInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigInterface] {
	return pulumix.Output[GetInstancesInstanceConfigInterface]{
		OutputState: i.ToGetInstancesInstanceConfigInterfaceOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceConfigInterfaceArrayInput is an input type that accepts GetInstancesInstanceConfigInterfaceArray and GetInstancesInstanceConfigInterfaceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigInterfaceArrayInput` via:
//
//	GetInstancesInstanceConfigInterfaceArray{ GetInstancesInstanceConfigInterfaceArgs{...} }
type GetInstancesInstanceConfigInterfaceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigInterfaceArrayOutput() GetInstancesInstanceConfigInterfaceArrayOutput
	ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(context.Context) GetInstancesInstanceConfigInterfaceArrayOutput
}

type GetInstancesInstanceConfigInterfaceArray []GetInstancesInstanceConfigInterfaceInput

func (GetInstancesInstanceConfigInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (i GetInstancesInstanceConfigInterfaceArray) ToGetInstancesInstanceConfigInterfaceArrayOutput() GetInstancesInstanceConfigInterfaceArrayOutput {
	return i.ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigInterfaceArray) ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigInterfaceArrayOutput)
}

func (i GetInstancesInstanceConfigInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigInterface] {
	return pulumix.Output[[]GetInstancesInstanceConfigInterface]{
		OutputState: i.ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceConfigInterfaceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (o GetInstancesInstanceConfigInterfaceOutput) ToGetInstancesInstanceConfigInterfaceOutput() GetInstancesInstanceConfigInterfaceOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceOutput) ToGetInstancesInstanceConfigInterfaceOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceConfigInterface] {
	return pulumix.Output[GetInstancesInstanceConfigInterface]{
		OutputState: o.OutputState,
	}
}

// (Optional) This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
func (o GetInstancesInstanceConfigInterfaceOutput) IpamAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigInterface) *string { return v.IpamAddress }).(pulumi.StringPtrOutput)
}

// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
func (o GetInstancesInstanceConfigInterfaceOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigInterface) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// (Required) The type of interface. (`public`, `vlan`)
func (o GetInstancesInstanceConfigInterfaceOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigInterface) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

type GetInstancesInstanceConfigInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigInterface)(nil)).Elem()
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) ToGetInstancesInstanceConfigInterfaceArrayOutput() GetInstancesInstanceConfigInterfaceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) ToGetInstancesInstanceConfigInterfaceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigInterfaceArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceConfigInterface] {
	return pulumix.Output[[]GetInstancesInstanceConfigInterface]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceConfigInterfaceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigInterface {
		return vs[0].([]GetInstancesInstanceConfigInterface)[vs[1].(int)]
	}).(GetInstancesInstanceConfigInterfaceOutput)
}

type GetInstancesInstanceDisk struct {
	// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
	Filesystem string `pulumi:"filesystem"`
	// The ID of the disk in the Linode API.
	Id int `pulumi:"id"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label string `pulumi:"label"`
	// The size of the Disk in MB.
	Size int `pulumi:"size"`
}

// GetInstancesInstanceDiskInput is an input type that accepts GetInstancesInstanceDiskArgs and GetInstancesInstanceDiskOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDiskInput` via:
//
//	GetInstancesInstanceDiskArgs{...}
type GetInstancesInstanceDiskInput interface {
	pulumi.Input

	ToGetInstancesInstanceDiskOutput() GetInstancesInstanceDiskOutput
	ToGetInstancesInstanceDiskOutputWithContext(context.Context) GetInstancesInstanceDiskOutput
}

type GetInstancesInstanceDiskArgs struct {
	// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The ID of the disk in the Linode API.
	Id pulumi.IntInput `pulumi:"id"`
	// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of the Disk in MB.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetInstancesInstanceDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDisk)(nil)).Elem()
}

func (i GetInstancesInstanceDiskArgs) ToGetInstancesInstanceDiskOutput() GetInstancesInstanceDiskOutput {
	return i.ToGetInstancesInstanceDiskOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDiskArgs) ToGetInstancesInstanceDiskOutputWithContext(ctx context.Context) GetInstancesInstanceDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDiskOutput)
}

func (i GetInstancesInstanceDiskArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceDisk] {
	return pulumix.Output[GetInstancesInstanceDisk]{
		OutputState: i.ToGetInstancesInstanceDiskOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceDiskArrayInput is an input type that accepts GetInstancesInstanceDiskArray and GetInstancesInstanceDiskArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDiskArrayInput` via:
//
//	GetInstancesInstanceDiskArray{ GetInstancesInstanceDiskArgs{...} }
type GetInstancesInstanceDiskArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceDiskArrayOutput() GetInstancesInstanceDiskArrayOutput
	ToGetInstancesInstanceDiskArrayOutputWithContext(context.Context) GetInstancesInstanceDiskArrayOutput
}

type GetInstancesInstanceDiskArray []GetInstancesInstanceDiskInput

func (GetInstancesInstanceDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDisk)(nil)).Elem()
}

func (i GetInstancesInstanceDiskArray) ToGetInstancesInstanceDiskArrayOutput() GetInstancesInstanceDiskArrayOutput {
	return i.ToGetInstancesInstanceDiskArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDiskArray) ToGetInstancesInstanceDiskArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDiskArrayOutput)
}

func (i GetInstancesInstanceDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceDisk] {
	return pulumix.Output[[]GetInstancesInstanceDisk]{
		OutputState: i.ToGetInstancesInstanceDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceDiskOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDisk)(nil)).Elem()
}

func (o GetInstancesInstanceDiskOutput) ToGetInstancesInstanceDiskOutput() GetInstancesInstanceDiskOutput {
	return o
}

func (o GetInstancesInstanceDiskOutput) ToGetInstancesInstanceDiskOutputWithContext(ctx context.Context) GetInstancesInstanceDiskOutput {
	return o
}

func (o GetInstancesInstanceDiskOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceDisk] {
	return pulumix.Output[GetInstancesInstanceDisk]{
		OutputState: o.OutputState,
	}
}

// The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
func (o GetInstancesInstanceDiskOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The ID of the disk in the Linode API.
func (o GetInstancesInstanceDiskOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) int { return v.Id }).(pulumi.IntOutput)
}

// (Optional) The name of this interface. If the interface is a `vlan`, a label is required. Must be undefined for `public` purpose interfaces.
func (o GetInstancesInstanceDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of the Disk in MB.
func (o GetInstancesInstanceDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetInstancesInstanceDiskArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDisk)(nil)).Elem()
}

func (o GetInstancesInstanceDiskArrayOutput) ToGetInstancesInstanceDiskArrayOutput() GetInstancesInstanceDiskArrayOutput {
	return o
}

func (o GetInstancesInstanceDiskArrayOutput) ToGetInstancesInstanceDiskArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDiskArrayOutput {
	return o
}

func (o GetInstancesInstanceDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceDisk] {
	return pulumix.Output[[]GetInstancesInstanceDisk]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceDiskArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceDisk {
		return vs[0].([]GetInstancesInstanceDisk)[vs[1].(int)]
	}).(GetInstancesInstanceDiskOutput)
}

type GetInstancesInstanceSpec struct {
	Disk     int `pulumi:"disk"`
	Memory   int `pulumi:"memory"`
	Transfer int `pulumi:"transfer"`
	Vcpus    int `pulumi:"vcpus"`
}

// GetInstancesInstanceSpecInput is an input type that accepts GetInstancesInstanceSpecArgs and GetInstancesInstanceSpecOutput values.
// You can construct a concrete instance of `GetInstancesInstanceSpecInput` via:
//
//	GetInstancesInstanceSpecArgs{...}
type GetInstancesInstanceSpecInput interface {
	pulumi.Input

	ToGetInstancesInstanceSpecOutput() GetInstancesInstanceSpecOutput
	ToGetInstancesInstanceSpecOutputWithContext(context.Context) GetInstancesInstanceSpecOutput
}

type GetInstancesInstanceSpecArgs struct {
	Disk     pulumi.IntInput `pulumi:"disk"`
	Memory   pulumi.IntInput `pulumi:"memory"`
	Transfer pulumi.IntInput `pulumi:"transfer"`
	Vcpus    pulumi.IntInput `pulumi:"vcpus"`
}

func (GetInstancesInstanceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceSpec)(nil)).Elem()
}

func (i GetInstancesInstanceSpecArgs) ToGetInstancesInstanceSpecOutput() GetInstancesInstanceSpecOutput {
	return i.ToGetInstancesInstanceSpecOutputWithContext(context.Background())
}

func (i GetInstancesInstanceSpecArgs) ToGetInstancesInstanceSpecOutputWithContext(ctx context.Context) GetInstancesInstanceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceSpecOutput)
}

func (i GetInstancesInstanceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceSpec] {
	return pulumix.Output[GetInstancesInstanceSpec]{
		OutputState: i.ToGetInstancesInstanceSpecOutputWithContext(ctx).OutputState,
	}
}

// GetInstancesInstanceSpecArrayInput is an input type that accepts GetInstancesInstanceSpecArray and GetInstancesInstanceSpecArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceSpecArrayInput` via:
//
//	GetInstancesInstanceSpecArray{ GetInstancesInstanceSpecArgs{...} }
type GetInstancesInstanceSpecArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceSpecArrayOutput() GetInstancesInstanceSpecArrayOutput
	ToGetInstancesInstanceSpecArrayOutputWithContext(context.Context) GetInstancesInstanceSpecArrayOutput
}

type GetInstancesInstanceSpecArray []GetInstancesInstanceSpecInput

func (GetInstancesInstanceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceSpec)(nil)).Elem()
}

func (i GetInstancesInstanceSpecArray) ToGetInstancesInstanceSpecArrayOutput() GetInstancesInstanceSpecArrayOutput {
	return i.ToGetInstancesInstanceSpecArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceSpecArray) ToGetInstancesInstanceSpecArrayOutputWithContext(ctx context.Context) GetInstancesInstanceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceSpecArrayOutput)
}

func (i GetInstancesInstanceSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceSpec] {
	return pulumix.Output[[]GetInstancesInstanceSpec]{
		OutputState: i.ToGetInstancesInstanceSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstancesInstanceSpecOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceSpec)(nil)).Elem()
}

func (o GetInstancesInstanceSpecOutput) ToGetInstancesInstanceSpecOutput() GetInstancesInstanceSpecOutput {
	return o
}

func (o GetInstancesInstanceSpecOutput) ToGetInstancesInstanceSpecOutputWithContext(ctx context.Context) GetInstancesInstanceSpecOutput {
	return o
}

func (o GetInstancesInstanceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesInstanceSpec] {
	return pulumix.Output[GetInstancesInstanceSpec]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceSpecOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceSpecOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceSpecOutput) Transfer() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Transfer }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceSpecOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceSpec) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetInstancesInstanceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceSpec)(nil)).Elem()
}

func (o GetInstancesInstanceSpecArrayOutput) ToGetInstancesInstanceSpecArrayOutput() GetInstancesInstanceSpecArrayOutput {
	return o
}

func (o GetInstancesInstanceSpecArrayOutput) ToGetInstancesInstanceSpecArrayOutputWithContext(ctx context.Context) GetInstancesInstanceSpecArrayOutput {
	return o
}

func (o GetInstancesInstanceSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstancesInstanceSpec] {
	return pulumix.Output[[]GetInstancesInstanceSpec]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesInstanceSpecArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceSpec {
		return vs[0].([]GetInstancesInstanceSpec)[vs[1].(int)]
	}).(GetInstancesInstanceSpecOutput)
}

type GetKernelsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetKernelsFilterInput is an input type that accepts GetKernelsFilterArgs and GetKernelsFilterOutput values.
// You can construct a concrete instance of `GetKernelsFilterInput` via:
//
//	GetKernelsFilterArgs{...}
type GetKernelsFilterInput interface {
	pulumi.Input

	ToGetKernelsFilterOutput() GetKernelsFilterOutput
	ToGetKernelsFilterOutputWithContext(context.Context) GetKernelsFilterOutput
}

type GetKernelsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKernelsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKernelsFilter)(nil)).Elem()
}

func (i GetKernelsFilterArgs) ToGetKernelsFilterOutput() GetKernelsFilterOutput {
	return i.ToGetKernelsFilterOutputWithContext(context.Background())
}

func (i GetKernelsFilterArgs) ToGetKernelsFilterOutputWithContext(ctx context.Context) GetKernelsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKernelsFilterOutput)
}

func (i GetKernelsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetKernelsFilter] {
	return pulumix.Output[GetKernelsFilter]{
		OutputState: i.ToGetKernelsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetKernelsFilterArrayInput is an input type that accepts GetKernelsFilterArray and GetKernelsFilterArrayOutput values.
// You can construct a concrete instance of `GetKernelsFilterArrayInput` via:
//
//	GetKernelsFilterArray{ GetKernelsFilterArgs{...} }
type GetKernelsFilterArrayInput interface {
	pulumi.Input

	ToGetKernelsFilterArrayOutput() GetKernelsFilterArrayOutput
	ToGetKernelsFilterArrayOutputWithContext(context.Context) GetKernelsFilterArrayOutput
}

type GetKernelsFilterArray []GetKernelsFilterInput

func (GetKernelsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKernelsFilter)(nil)).Elem()
}

func (i GetKernelsFilterArray) ToGetKernelsFilterArrayOutput() GetKernelsFilterArrayOutput {
	return i.ToGetKernelsFilterArrayOutputWithContext(context.Background())
}

func (i GetKernelsFilterArray) ToGetKernelsFilterArrayOutputWithContext(ctx context.Context) GetKernelsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKernelsFilterArrayOutput)
}

func (i GetKernelsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKernelsFilter] {
	return pulumix.Output[[]GetKernelsFilter]{
		OutputState: i.ToGetKernelsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKernelsFilterOutput struct{ *pulumi.OutputState }

func (GetKernelsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKernelsFilter)(nil)).Elem()
}

func (o GetKernelsFilterOutput) ToGetKernelsFilterOutput() GetKernelsFilterOutput {
	return o
}

func (o GetKernelsFilterOutput) ToGetKernelsFilterOutputWithContext(ctx context.Context) GetKernelsFilterOutput {
	return o
}

func (o GetKernelsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetKernelsFilter] {
	return pulumix.Output[GetKernelsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetKernelsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKernelsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetKernelsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetKernelsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKernelsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKernelsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKernelsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKernelsFilter)(nil)).Elem()
}

func (o GetKernelsFilterArrayOutput) ToGetKernelsFilterArrayOutput() GetKernelsFilterArrayOutput {
	return o
}

func (o GetKernelsFilterArrayOutput) ToGetKernelsFilterArrayOutputWithContext(ctx context.Context) GetKernelsFilterArrayOutput {
	return o
}

func (o GetKernelsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKernelsFilter] {
	return pulumix.Output[[]GetKernelsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetKernelsFilterArrayOutput) Index(i pulumi.IntInput) GetKernelsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKernelsFilter {
		return vs[0].([]GetKernelsFilter)[vs[1].(int)]
	}).(GetKernelsFilterOutput)
}

type GetKernelsKernel struct {
	// The architecture of this Kernel.
	Architecture string `pulumi:"architecture"`
	Built        string `pulumi:"built"`
	// Whether or not this Kernel is deprecated.
	Deprecated bool `pulumi:"deprecated"`
	// The unique ID of this Kernel.
	Id string `pulumi:"id"`
	// If this Kernel is suitable for KVM Linodes.
	Kvm bool `pulumi:"kvm"`
	// The friendly name of this Kernel.
	Label string `pulumi:"label"`
	// If this Kernel is suitable for paravirtualized operations.
	Pvops bool `pulumi:"pvops"`
	// Linux Kernel version
	Version string `pulumi:"version"`
	// If this Kernel is suitable for Xen Linodes.
	Xen bool `pulumi:"xen"`
}

// GetKernelsKernelInput is an input type that accepts GetKernelsKernelArgs and GetKernelsKernelOutput values.
// You can construct a concrete instance of `GetKernelsKernelInput` via:
//
//	GetKernelsKernelArgs{...}
type GetKernelsKernelInput interface {
	pulumi.Input

	ToGetKernelsKernelOutput() GetKernelsKernelOutput
	ToGetKernelsKernelOutputWithContext(context.Context) GetKernelsKernelOutput
}

type GetKernelsKernelArgs struct {
	// The architecture of this Kernel.
	Architecture pulumi.StringInput `pulumi:"architecture"`
	Built        pulumi.StringInput `pulumi:"built"`
	// Whether or not this Kernel is deprecated.
	Deprecated pulumi.BoolInput `pulumi:"deprecated"`
	// The unique ID of this Kernel.
	Id pulumi.StringInput `pulumi:"id"`
	// If this Kernel is suitable for KVM Linodes.
	Kvm pulumi.BoolInput `pulumi:"kvm"`
	// The friendly name of this Kernel.
	Label pulumi.StringInput `pulumi:"label"`
	// If this Kernel is suitable for paravirtualized operations.
	Pvops pulumi.BoolInput `pulumi:"pvops"`
	// Linux Kernel version
	Version pulumi.StringInput `pulumi:"version"`
	// If this Kernel is suitable for Xen Linodes.
	Xen pulumi.BoolInput `pulumi:"xen"`
}

func (GetKernelsKernelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKernelsKernel)(nil)).Elem()
}

func (i GetKernelsKernelArgs) ToGetKernelsKernelOutput() GetKernelsKernelOutput {
	return i.ToGetKernelsKernelOutputWithContext(context.Background())
}

func (i GetKernelsKernelArgs) ToGetKernelsKernelOutputWithContext(ctx context.Context) GetKernelsKernelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKernelsKernelOutput)
}

func (i GetKernelsKernelArgs) ToOutput(ctx context.Context) pulumix.Output[GetKernelsKernel] {
	return pulumix.Output[GetKernelsKernel]{
		OutputState: i.ToGetKernelsKernelOutputWithContext(ctx).OutputState,
	}
}

// GetKernelsKernelArrayInput is an input type that accepts GetKernelsKernelArray and GetKernelsKernelArrayOutput values.
// You can construct a concrete instance of `GetKernelsKernelArrayInput` via:
//
//	GetKernelsKernelArray{ GetKernelsKernelArgs{...} }
type GetKernelsKernelArrayInput interface {
	pulumi.Input

	ToGetKernelsKernelArrayOutput() GetKernelsKernelArrayOutput
	ToGetKernelsKernelArrayOutputWithContext(context.Context) GetKernelsKernelArrayOutput
}

type GetKernelsKernelArray []GetKernelsKernelInput

func (GetKernelsKernelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKernelsKernel)(nil)).Elem()
}

func (i GetKernelsKernelArray) ToGetKernelsKernelArrayOutput() GetKernelsKernelArrayOutput {
	return i.ToGetKernelsKernelArrayOutputWithContext(context.Background())
}

func (i GetKernelsKernelArray) ToGetKernelsKernelArrayOutputWithContext(ctx context.Context) GetKernelsKernelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKernelsKernelArrayOutput)
}

func (i GetKernelsKernelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetKernelsKernel] {
	return pulumix.Output[[]GetKernelsKernel]{
		OutputState: i.ToGetKernelsKernelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetKernelsKernelOutput struct{ *pulumi.OutputState }

func (GetKernelsKernelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKernelsKernel)(nil)).Elem()
}

func (o GetKernelsKernelOutput) ToGetKernelsKernelOutput() GetKernelsKernelOutput {
	return o
}

func (o GetKernelsKernelOutput) ToGetKernelsKernelOutputWithContext(ctx context.Context) GetKernelsKernelOutput {
	return o
}

func (o GetKernelsKernelOutput) ToOutput(ctx context.Context) pulumix.Output[GetKernelsKernel] {
	return pulumix.Output[GetKernelsKernel]{
		OutputState: o.OutputState,
	}
}

// The architecture of this Kernel.
func (o GetKernelsKernelOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelsKernel) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetKernelsKernelOutput) Built() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelsKernel) string { return v.Built }).(pulumi.StringOutput)
}

// Whether or not this Kernel is deprecated.
func (o GetKernelsKernelOutput) Deprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelsKernel) bool { return v.Deprecated }).(pulumi.BoolOutput)
}

// The unique ID of this Kernel.
func (o GetKernelsKernelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelsKernel) string { return v.Id }).(pulumi.StringOutput)
}

// If this Kernel is suitable for KVM Linodes.
func (o GetKernelsKernelOutput) Kvm() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelsKernel) bool { return v.Kvm }).(pulumi.BoolOutput)
}

// The friendly name of this Kernel.
func (o GetKernelsKernelOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelsKernel) string { return v.Label }).(pulumi.StringOutput)
}

// If this Kernel is suitable for paravirtualized operations.
func (o GetKernelsKernelOutput) Pvops() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelsKernel) bool { return v.Pvops }).(pulumi.BoolOutput)
}

// Linux Kernel version
func (o GetKernelsKernelOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelsKernel) string { return v.Version }).(pulumi.StringOutput)
}

// If this Kernel is suitable for Xen Linodes.
func (o GetKernelsKernelOutput) Xen() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelsKernel) bool { return v.Xen }).(pulumi.BoolOutput)
}

type GetKernelsKernelArrayOutput struct{ *pulumi.OutputState }

func (GetKernelsKernelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKernelsKernel)(nil)).Elem()
}

func (o GetKernelsKernelArrayOutput) ToGetKernelsKernelArrayOutput() GetKernelsKernelArrayOutput {
	return o
}

func (o GetKernelsKernelArrayOutput) ToGetKernelsKernelArrayOutputWithContext(ctx context.Context) GetKernelsKernelArrayOutput {
	return o
}

func (o GetKernelsKernelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetKernelsKernel] {
	return pulumix.Output[[]GetKernelsKernel]{
		OutputState: o.OutputState,
	}
}

func (o GetKernelsKernelArrayOutput) Index(i pulumi.IntInput) GetKernelsKernelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKernelsKernel {
		return vs[0].([]GetKernelsKernel)[vs[1].(int)]
	}).(GetKernelsKernelOutput)
}

type GetLkeClusterControlPlane struct {
	HighAvailability bool `pulumi:"highAvailability"`
}

// GetLkeClusterControlPlaneInput is an input type that accepts GetLkeClusterControlPlaneArgs and GetLkeClusterControlPlaneOutput values.
// You can construct a concrete instance of `GetLkeClusterControlPlaneInput` via:
//
//	GetLkeClusterControlPlaneArgs{...}
type GetLkeClusterControlPlaneInput interface {
	pulumi.Input

	ToGetLkeClusterControlPlaneOutput() GetLkeClusterControlPlaneOutput
	ToGetLkeClusterControlPlaneOutputWithContext(context.Context) GetLkeClusterControlPlaneOutput
}

type GetLkeClusterControlPlaneArgs struct {
	HighAvailability pulumi.BoolInput `pulumi:"highAvailability"`
}

func (GetLkeClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterControlPlane)(nil)).Elem()
}

func (i GetLkeClusterControlPlaneArgs) ToGetLkeClusterControlPlaneOutput() GetLkeClusterControlPlaneOutput {
	return i.ToGetLkeClusterControlPlaneOutputWithContext(context.Background())
}

func (i GetLkeClusterControlPlaneArgs) ToGetLkeClusterControlPlaneOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterControlPlaneOutput)
}

func (i GetLkeClusterControlPlaneArgs) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterControlPlane] {
	return pulumix.Output[GetLkeClusterControlPlane]{
		OutputState: i.ToGetLkeClusterControlPlaneOutputWithContext(ctx).OutputState,
	}
}

// GetLkeClusterControlPlaneArrayInput is an input type that accepts GetLkeClusterControlPlaneArray and GetLkeClusterControlPlaneArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterControlPlaneArrayInput` via:
//
//	GetLkeClusterControlPlaneArray{ GetLkeClusterControlPlaneArgs{...} }
type GetLkeClusterControlPlaneArrayInput interface {
	pulumi.Input

	ToGetLkeClusterControlPlaneArrayOutput() GetLkeClusterControlPlaneArrayOutput
	ToGetLkeClusterControlPlaneArrayOutputWithContext(context.Context) GetLkeClusterControlPlaneArrayOutput
}

type GetLkeClusterControlPlaneArray []GetLkeClusterControlPlaneInput

func (GetLkeClusterControlPlaneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterControlPlane)(nil)).Elem()
}

func (i GetLkeClusterControlPlaneArray) ToGetLkeClusterControlPlaneArrayOutput() GetLkeClusterControlPlaneArrayOutput {
	return i.ToGetLkeClusterControlPlaneArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterControlPlaneArray) ToGetLkeClusterControlPlaneArrayOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterControlPlaneArrayOutput)
}

func (i GetLkeClusterControlPlaneArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterControlPlane] {
	return pulumix.Output[[]GetLkeClusterControlPlane]{
		OutputState: i.ToGetLkeClusterControlPlaneArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLkeClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (GetLkeClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterControlPlane)(nil)).Elem()
}

func (o GetLkeClusterControlPlaneOutput) ToGetLkeClusterControlPlaneOutput() GetLkeClusterControlPlaneOutput {
	return o
}

func (o GetLkeClusterControlPlaneOutput) ToGetLkeClusterControlPlaneOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneOutput {
	return o
}

func (o GetLkeClusterControlPlaneOutput) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterControlPlane] {
	return pulumix.Output[GetLkeClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

func (o GetLkeClusterControlPlaneOutput) HighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLkeClusterControlPlane) bool { return v.HighAvailability }).(pulumi.BoolOutput)
}

type GetLkeClusterControlPlaneArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterControlPlaneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterControlPlane)(nil)).Elem()
}

func (o GetLkeClusterControlPlaneArrayOutput) ToGetLkeClusterControlPlaneArrayOutput() GetLkeClusterControlPlaneArrayOutput {
	return o
}

func (o GetLkeClusterControlPlaneArrayOutput) ToGetLkeClusterControlPlaneArrayOutputWithContext(ctx context.Context) GetLkeClusterControlPlaneArrayOutput {
	return o
}

func (o GetLkeClusterControlPlaneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterControlPlane] {
	return pulumix.Output[[]GetLkeClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

func (o GetLkeClusterControlPlaneArrayOutput) Index(i pulumi.IntInput) GetLkeClusterControlPlaneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterControlPlane {
		return vs[0].([]GetLkeClusterControlPlane)[vs[1].(int)]
	}).(GetLkeClusterControlPlaneOutput)
}

type GetLkeClusterPool struct {
	// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
	Autoscalers []GetLkeClusterPoolAutoscaler `pulumi:"autoscalers"`
	// The number of nodes in the Node Pool.
	Count int `pulumi:"count"`
	// The LKE Cluster's ID.
	Id int `pulumi:"id"`
	// The nodes in the Node Pool.
	Nodes []GetLkeClusterPoolNode `pulumi:"nodes"`
	// The linode type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type string `pulumi:"type"`
}

// GetLkeClusterPoolInput is an input type that accepts GetLkeClusterPoolArgs and GetLkeClusterPoolOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolInput` via:
//
//	GetLkeClusterPoolArgs{...}
type GetLkeClusterPoolInput interface {
	pulumi.Input

	ToGetLkeClusterPoolOutput() GetLkeClusterPoolOutput
	ToGetLkeClusterPoolOutputWithContext(context.Context) GetLkeClusterPoolOutput
}

type GetLkeClusterPoolArgs struct {
	// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
	Autoscalers GetLkeClusterPoolAutoscalerArrayInput `pulumi:"autoscalers"`
	// The number of nodes in the Node Pool.
	Count pulumi.IntInput `pulumi:"count"`
	// The LKE Cluster's ID.
	Id pulumi.IntInput `pulumi:"id"`
	// The nodes in the Node Pool.
	Nodes GetLkeClusterPoolNodeArrayInput `pulumi:"nodes"`
	// The linode type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLkeClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPool)(nil)).Elem()
}

func (i GetLkeClusterPoolArgs) ToGetLkeClusterPoolOutput() GetLkeClusterPoolOutput {
	return i.ToGetLkeClusterPoolOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolArgs) ToGetLkeClusterPoolOutputWithContext(ctx context.Context) GetLkeClusterPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolOutput)
}

func (i GetLkeClusterPoolArgs) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterPool] {
	return pulumix.Output[GetLkeClusterPool]{
		OutputState: i.ToGetLkeClusterPoolOutputWithContext(ctx).OutputState,
	}
}

// GetLkeClusterPoolArrayInput is an input type that accepts GetLkeClusterPoolArray and GetLkeClusterPoolArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolArrayInput` via:
//
//	GetLkeClusterPoolArray{ GetLkeClusterPoolArgs{...} }
type GetLkeClusterPoolArrayInput interface {
	pulumi.Input

	ToGetLkeClusterPoolArrayOutput() GetLkeClusterPoolArrayOutput
	ToGetLkeClusterPoolArrayOutputWithContext(context.Context) GetLkeClusterPoolArrayOutput
}

type GetLkeClusterPoolArray []GetLkeClusterPoolInput

func (GetLkeClusterPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPool)(nil)).Elem()
}

func (i GetLkeClusterPoolArray) ToGetLkeClusterPoolArrayOutput() GetLkeClusterPoolArrayOutput {
	return i.ToGetLkeClusterPoolArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolArray) ToGetLkeClusterPoolArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolArrayOutput)
}

func (i GetLkeClusterPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterPool] {
	return pulumix.Output[[]GetLkeClusterPool]{
		OutputState: i.ToGetLkeClusterPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLkeClusterPoolOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPool)(nil)).Elem()
}

func (o GetLkeClusterPoolOutput) ToGetLkeClusterPoolOutput() GetLkeClusterPoolOutput {
	return o
}

func (o GetLkeClusterPoolOutput) ToGetLkeClusterPoolOutputWithContext(ctx context.Context) GetLkeClusterPoolOutput {
	return o
}

func (o GetLkeClusterPoolOutput) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterPool] {
	return pulumix.Output[GetLkeClusterPool]{
		OutputState: o.OutputState,
	}
}

// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
func (o GetLkeClusterPoolOutput) Autoscalers() GetLkeClusterPoolAutoscalerArrayOutput {
	return o.ApplyT(func(v GetLkeClusterPool) []GetLkeClusterPoolAutoscaler { return v.Autoscalers }).(GetLkeClusterPoolAutoscalerArrayOutput)
}

// The number of nodes in the Node Pool.
func (o GetLkeClusterPoolOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPool) int { return v.Count }).(pulumi.IntOutput)
}

// The LKE Cluster's ID.
func (o GetLkeClusterPoolOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPool) int { return v.Id }).(pulumi.IntOutput)
}

// The nodes in the Node Pool.
func (o GetLkeClusterPoolOutput) Nodes() GetLkeClusterPoolNodeArrayOutput {
	return o.ApplyT(func(v GetLkeClusterPool) []GetLkeClusterPoolNode { return v.Nodes }).(GetLkeClusterPoolNodeArrayOutput)
}

// The linode type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
func (o GetLkeClusterPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeClusterPool) string { return v.Type }).(pulumi.StringOutput)
}

type GetLkeClusterPoolArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPool)(nil)).Elem()
}

func (o GetLkeClusterPoolArrayOutput) ToGetLkeClusterPoolArrayOutput() GetLkeClusterPoolArrayOutput {
	return o
}

func (o GetLkeClusterPoolArrayOutput) ToGetLkeClusterPoolArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolArrayOutput {
	return o
}

func (o GetLkeClusterPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterPool] {
	return pulumix.Output[[]GetLkeClusterPool]{
		OutputState: o.OutputState,
	}
}

func (o GetLkeClusterPoolArrayOutput) Index(i pulumi.IntInput) GetLkeClusterPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterPool {
		return vs[0].([]GetLkeClusterPool)[vs[1].(int)]
	}).(GetLkeClusterPoolOutput)
}

type GetLkeClusterPoolAutoscaler struct {
	// The maximum number of nodes to autoscale to.
	Max int `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min int `pulumi:"min"`
}

// GetLkeClusterPoolAutoscalerInput is an input type that accepts GetLkeClusterPoolAutoscalerArgs and GetLkeClusterPoolAutoscalerOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolAutoscalerInput` via:
//
//	GetLkeClusterPoolAutoscalerArgs{...}
type GetLkeClusterPoolAutoscalerInput interface {
	pulumi.Input

	ToGetLkeClusterPoolAutoscalerOutput() GetLkeClusterPoolAutoscalerOutput
	ToGetLkeClusterPoolAutoscalerOutputWithContext(context.Context) GetLkeClusterPoolAutoscalerOutput
}

type GetLkeClusterPoolAutoscalerArgs struct {
	// The maximum number of nodes to autoscale to.
	Max pulumi.IntInput `pulumi:"max"`
	// The minimum number of nodes to autoscale to.
	Min pulumi.IntInput `pulumi:"min"`
}

func (GetLkeClusterPoolAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i GetLkeClusterPoolAutoscalerArgs) ToGetLkeClusterPoolAutoscalerOutput() GetLkeClusterPoolAutoscalerOutput {
	return i.ToGetLkeClusterPoolAutoscalerOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolAutoscalerArgs) ToGetLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolAutoscalerOutput)
}

func (i GetLkeClusterPoolAutoscalerArgs) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterPoolAutoscaler] {
	return pulumix.Output[GetLkeClusterPoolAutoscaler]{
		OutputState: i.ToGetLkeClusterPoolAutoscalerOutputWithContext(ctx).OutputState,
	}
}

// GetLkeClusterPoolAutoscalerArrayInput is an input type that accepts GetLkeClusterPoolAutoscalerArray and GetLkeClusterPoolAutoscalerArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolAutoscalerArrayInput` via:
//
//	GetLkeClusterPoolAutoscalerArray{ GetLkeClusterPoolAutoscalerArgs{...} }
type GetLkeClusterPoolAutoscalerArrayInput interface {
	pulumi.Input

	ToGetLkeClusterPoolAutoscalerArrayOutput() GetLkeClusterPoolAutoscalerArrayOutput
	ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(context.Context) GetLkeClusterPoolAutoscalerArrayOutput
}

type GetLkeClusterPoolAutoscalerArray []GetLkeClusterPoolAutoscalerInput

func (GetLkeClusterPoolAutoscalerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (i GetLkeClusterPoolAutoscalerArray) ToGetLkeClusterPoolAutoscalerArrayOutput() GetLkeClusterPoolAutoscalerArrayOutput {
	return i.ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolAutoscalerArray) ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolAutoscalerArrayOutput)
}

func (i GetLkeClusterPoolAutoscalerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterPoolAutoscaler] {
	return pulumix.Output[[]GetLkeClusterPoolAutoscaler]{
		OutputState: i.ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLkeClusterPoolAutoscalerOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o GetLkeClusterPoolAutoscalerOutput) ToGetLkeClusterPoolAutoscalerOutput() GetLkeClusterPoolAutoscalerOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerOutput) ToGetLkeClusterPoolAutoscalerOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerOutput) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterPoolAutoscaler] {
	return pulumix.Output[GetLkeClusterPoolAutoscaler]{
		OutputState: o.OutputState,
	}
}

// The maximum number of nodes to autoscale to.
func (o GetLkeClusterPoolAutoscalerOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPoolAutoscaler) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum number of nodes to autoscale to.
func (o GetLkeClusterPoolAutoscalerOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPoolAutoscaler) int { return v.Min }).(pulumi.IntOutput)
}

type GetLkeClusterPoolAutoscalerArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolAutoscalerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolAutoscaler)(nil)).Elem()
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) ToGetLkeClusterPoolAutoscalerArrayOutput() GetLkeClusterPoolAutoscalerArrayOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) ToGetLkeClusterPoolAutoscalerArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolAutoscalerArrayOutput {
	return o
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterPoolAutoscaler] {
	return pulumix.Output[[]GetLkeClusterPoolAutoscaler]{
		OutputState: o.OutputState,
	}
}

func (o GetLkeClusterPoolAutoscalerArrayOutput) Index(i pulumi.IntInput) GetLkeClusterPoolAutoscalerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterPoolAutoscaler {
		return vs[0].([]GetLkeClusterPoolAutoscaler)[vs[1].(int)]
	}).(GetLkeClusterPoolAutoscalerOutput)
}

type GetLkeClusterPoolNode struct {
	// The LKE Cluster's ID.
	Id string `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId int `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status string `pulumi:"status"`
}

// GetLkeClusterPoolNodeInput is an input type that accepts GetLkeClusterPoolNodeArgs and GetLkeClusterPoolNodeOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolNodeInput` via:
//
//	GetLkeClusterPoolNodeArgs{...}
type GetLkeClusterPoolNodeInput interface {
	pulumi.Input

	ToGetLkeClusterPoolNodeOutput() GetLkeClusterPoolNodeOutput
	ToGetLkeClusterPoolNodeOutputWithContext(context.Context) GetLkeClusterPoolNodeOutput
}

type GetLkeClusterPoolNodeArgs struct {
	// The LKE Cluster's ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the underlying Linode instance.
	InstanceId pulumi.IntInput `pulumi:"instanceId"`
	// The status of the node. (`ready`, `notReady`)
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLkeClusterPoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolNode)(nil)).Elem()
}

func (i GetLkeClusterPoolNodeArgs) ToGetLkeClusterPoolNodeOutput() GetLkeClusterPoolNodeOutput {
	return i.ToGetLkeClusterPoolNodeOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolNodeArgs) ToGetLkeClusterPoolNodeOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolNodeOutput)
}

func (i GetLkeClusterPoolNodeArgs) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterPoolNode] {
	return pulumix.Output[GetLkeClusterPoolNode]{
		OutputState: i.ToGetLkeClusterPoolNodeOutputWithContext(ctx).OutputState,
	}
}

// GetLkeClusterPoolNodeArrayInput is an input type that accepts GetLkeClusterPoolNodeArray and GetLkeClusterPoolNodeArrayOutput values.
// You can construct a concrete instance of `GetLkeClusterPoolNodeArrayInput` via:
//
//	GetLkeClusterPoolNodeArray{ GetLkeClusterPoolNodeArgs{...} }
type GetLkeClusterPoolNodeArrayInput interface {
	pulumi.Input

	ToGetLkeClusterPoolNodeArrayOutput() GetLkeClusterPoolNodeArrayOutput
	ToGetLkeClusterPoolNodeArrayOutputWithContext(context.Context) GetLkeClusterPoolNodeArrayOutput
}

type GetLkeClusterPoolNodeArray []GetLkeClusterPoolNodeInput

func (GetLkeClusterPoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolNode)(nil)).Elem()
}

func (i GetLkeClusterPoolNodeArray) ToGetLkeClusterPoolNodeArrayOutput() GetLkeClusterPoolNodeArrayOutput {
	return i.ToGetLkeClusterPoolNodeArrayOutputWithContext(context.Background())
}

func (i GetLkeClusterPoolNodeArray) ToGetLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeClusterPoolNodeArrayOutput)
}

func (i GetLkeClusterPoolNodeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterPoolNode] {
	return pulumix.Output[[]GetLkeClusterPoolNode]{
		OutputState: i.ToGetLkeClusterPoolNodeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLkeClusterPoolNodeOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeClusterPoolNode)(nil)).Elem()
}

func (o GetLkeClusterPoolNodeOutput) ToGetLkeClusterPoolNodeOutput() GetLkeClusterPoolNodeOutput {
	return o
}

func (o GetLkeClusterPoolNodeOutput) ToGetLkeClusterPoolNodeOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeOutput {
	return o
}

func (o GetLkeClusterPoolNodeOutput) ToOutput(ctx context.Context) pulumix.Output[GetLkeClusterPoolNode] {
	return pulumix.Output[GetLkeClusterPoolNode]{
		OutputState: o.OutputState,
	}
}

// The LKE Cluster's ID.
func (o GetLkeClusterPoolNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeClusterPoolNode) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the underlying Linode instance.
func (o GetLkeClusterPoolNodeOutput) InstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLkeClusterPoolNode) int { return v.InstanceId }).(pulumi.IntOutput)
}

// The status of the node. (`ready`, `notReady`)
func (o GetLkeClusterPoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeClusterPoolNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetLkeClusterPoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetLkeClusterPoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeClusterPoolNode)(nil)).Elem()
}

func (o GetLkeClusterPoolNodeArrayOutput) ToGetLkeClusterPoolNodeArrayOutput() GetLkeClusterPoolNodeArrayOutput {
	return o
}

func (o GetLkeClusterPoolNodeArrayOutput) ToGetLkeClusterPoolNodeArrayOutputWithContext(ctx context.Context) GetLkeClusterPoolNodeArrayOutput {
	return o
}

func (o GetLkeClusterPoolNodeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeClusterPoolNode] {
	return pulumix.Output[[]GetLkeClusterPoolNode]{
		OutputState: o.OutputState,
	}
}

func (o GetLkeClusterPoolNodeArrayOutput) Index(i pulumi.IntInput) GetLkeClusterPoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeClusterPoolNode {
		return vs[0].([]GetLkeClusterPoolNode)[vs[1].(int)]
	}).(GetLkeClusterPoolNodeOutput)
}

type GetLkeVersionsVersion struct {
	// The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
	Id string `pulumi:"id"`
}

// GetLkeVersionsVersionInput is an input type that accepts GetLkeVersionsVersionArgs and GetLkeVersionsVersionOutput values.
// You can construct a concrete instance of `GetLkeVersionsVersionInput` via:
//
//	GetLkeVersionsVersionArgs{...}
type GetLkeVersionsVersionInput interface {
	pulumi.Input

	ToGetLkeVersionsVersionOutput() GetLkeVersionsVersionOutput
	ToGetLkeVersionsVersionOutputWithContext(context.Context) GetLkeVersionsVersionOutput
}

type GetLkeVersionsVersionArgs struct {
	// The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLkeVersionsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeVersionsVersion)(nil)).Elem()
}

func (i GetLkeVersionsVersionArgs) ToGetLkeVersionsVersionOutput() GetLkeVersionsVersionOutput {
	return i.ToGetLkeVersionsVersionOutputWithContext(context.Background())
}

func (i GetLkeVersionsVersionArgs) ToGetLkeVersionsVersionOutputWithContext(ctx context.Context) GetLkeVersionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeVersionsVersionOutput)
}

func (i GetLkeVersionsVersionArgs) ToOutput(ctx context.Context) pulumix.Output[GetLkeVersionsVersion] {
	return pulumix.Output[GetLkeVersionsVersion]{
		OutputState: i.ToGetLkeVersionsVersionOutputWithContext(ctx).OutputState,
	}
}

// GetLkeVersionsVersionArrayInput is an input type that accepts GetLkeVersionsVersionArray and GetLkeVersionsVersionArrayOutput values.
// You can construct a concrete instance of `GetLkeVersionsVersionArrayInput` via:
//
//	GetLkeVersionsVersionArray{ GetLkeVersionsVersionArgs{...} }
type GetLkeVersionsVersionArrayInput interface {
	pulumi.Input

	ToGetLkeVersionsVersionArrayOutput() GetLkeVersionsVersionArrayOutput
	ToGetLkeVersionsVersionArrayOutputWithContext(context.Context) GetLkeVersionsVersionArrayOutput
}

type GetLkeVersionsVersionArray []GetLkeVersionsVersionInput

func (GetLkeVersionsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeVersionsVersion)(nil)).Elem()
}

func (i GetLkeVersionsVersionArray) ToGetLkeVersionsVersionArrayOutput() GetLkeVersionsVersionArrayOutput {
	return i.ToGetLkeVersionsVersionArrayOutputWithContext(context.Background())
}

func (i GetLkeVersionsVersionArray) ToGetLkeVersionsVersionArrayOutputWithContext(ctx context.Context) GetLkeVersionsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLkeVersionsVersionArrayOutput)
}

func (i GetLkeVersionsVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeVersionsVersion] {
	return pulumix.Output[[]GetLkeVersionsVersion]{
		OutputState: i.ToGetLkeVersionsVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLkeVersionsVersionOutput struct{ *pulumi.OutputState }

func (GetLkeVersionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLkeVersionsVersion)(nil)).Elem()
}

func (o GetLkeVersionsVersionOutput) ToGetLkeVersionsVersionOutput() GetLkeVersionsVersionOutput {
	return o
}

func (o GetLkeVersionsVersionOutput) ToGetLkeVersionsVersionOutputWithContext(ctx context.Context) GetLkeVersionsVersionOutput {
	return o
}

func (o GetLkeVersionsVersionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLkeVersionsVersion] {
	return pulumix.Output[GetLkeVersionsVersion]{
		OutputState: o.OutputState,
	}
}

// The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
func (o GetLkeVersionsVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLkeVersionsVersion) string { return v.Id }).(pulumi.StringOutput)
}

type GetLkeVersionsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetLkeVersionsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLkeVersionsVersion)(nil)).Elem()
}

func (o GetLkeVersionsVersionArrayOutput) ToGetLkeVersionsVersionArrayOutput() GetLkeVersionsVersionArrayOutput {
	return o
}

func (o GetLkeVersionsVersionArrayOutput) ToGetLkeVersionsVersionArrayOutputWithContext(ctx context.Context) GetLkeVersionsVersionArrayOutput {
	return o
}

func (o GetLkeVersionsVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLkeVersionsVersion] {
	return pulumix.Output[[]GetLkeVersionsVersion]{
		OutputState: o.OutputState,
	}
}

func (o GetLkeVersionsVersionArrayOutput) Index(i pulumi.IntInput) GetLkeVersionsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLkeVersionsVersion {
		return vs[0].([]GetLkeVersionsVersion)[vs[1].(int)]
	}).(GetLkeVersionsVersionOutput)
}

type GetNodeBalancerConfigNodeStatus struct {
	// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
	Down int `pulumi:"down"`
	// The number of backends considered to be 'UP' and healthy, and that are serving requests.
	Up int `pulumi:"up"`
}

// GetNodeBalancerConfigNodeStatusInput is an input type that accepts GetNodeBalancerConfigNodeStatusArgs and GetNodeBalancerConfigNodeStatusOutput values.
// You can construct a concrete instance of `GetNodeBalancerConfigNodeStatusInput` via:
//
//	GetNodeBalancerConfigNodeStatusArgs{...}
type GetNodeBalancerConfigNodeStatusInput interface {
	pulumi.Input

	ToGetNodeBalancerConfigNodeStatusOutput() GetNodeBalancerConfigNodeStatusOutput
	ToGetNodeBalancerConfigNodeStatusOutputWithContext(context.Context) GetNodeBalancerConfigNodeStatusOutput
}

type GetNodeBalancerConfigNodeStatusArgs struct {
	// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
	Down pulumi.IntInput `pulumi:"down"`
	// The number of backends considered to be 'UP' and healthy, and that are serving requests.
	Up pulumi.IntInput `pulumi:"up"`
}

func (GetNodeBalancerConfigNodeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i GetNodeBalancerConfigNodeStatusArgs) ToGetNodeBalancerConfigNodeStatusOutput() GetNodeBalancerConfigNodeStatusOutput {
	return i.ToGetNodeBalancerConfigNodeStatusOutputWithContext(context.Background())
}

func (i GetNodeBalancerConfigNodeStatusArgs) ToGetNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerConfigNodeStatusOutput)
}

func (i GetNodeBalancerConfigNodeStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetNodeBalancerConfigNodeStatus] {
	return pulumix.Output[GetNodeBalancerConfigNodeStatus]{
		OutputState: i.ToGetNodeBalancerConfigNodeStatusOutputWithContext(ctx).OutputState,
	}
}

// GetNodeBalancerConfigNodeStatusArrayInput is an input type that accepts GetNodeBalancerConfigNodeStatusArray and GetNodeBalancerConfigNodeStatusArrayOutput values.
// You can construct a concrete instance of `GetNodeBalancerConfigNodeStatusArrayInput` via:
//
//	GetNodeBalancerConfigNodeStatusArray{ GetNodeBalancerConfigNodeStatusArgs{...} }
type GetNodeBalancerConfigNodeStatusArrayInput interface {
	pulumi.Input

	ToGetNodeBalancerConfigNodeStatusArrayOutput() GetNodeBalancerConfigNodeStatusArrayOutput
	ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Context) GetNodeBalancerConfigNodeStatusArrayOutput
}

type GetNodeBalancerConfigNodeStatusArray []GetNodeBalancerConfigNodeStatusInput

func (GetNodeBalancerConfigNodeStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (i GetNodeBalancerConfigNodeStatusArray) ToGetNodeBalancerConfigNodeStatusArrayOutput() GetNodeBalancerConfigNodeStatusArrayOutput {
	return i.ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(context.Background())
}

func (i GetNodeBalancerConfigNodeStatusArray) ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerConfigNodeStatusArrayOutput)
}

func (i GetNodeBalancerConfigNodeStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNodeBalancerConfigNodeStatus] {
	return pulumix.Output[[]GetNodeBalancerConfigNodeStatus]{
		OutputState: i.ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNodeBalancerConfigNodeStatusOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerConfigNodeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o GetNodeBalancerConfigNodeStatusOutput) ToGetNodeBalancerConfigNodeStatusOutput() GetNodeBalancerConfigNodeStatusOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusOutput) ToGetNodeBalancerConfigNodeStatusOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetNodeBalancerConfigNodeStatus] {
	return pulumix.Output[GetNodeBalancerConfigNodeStatus]{
		OutputState: o.OutputState,
	}
}

// The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
func (o GetNodeBalancerConfigNodeStatusOutput) Down() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeBalancerConfigNodeStatus) int { return v.Down }).(pulumi.IntOutput)
}

// The number of backends considered to be 'UP' and healthy, and that are serving requests.
func (o GetNodeBalancerConfigNodeStatusOutput) Up() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeBalancerConfigNodeStatus) int { return v.Up }).(pulumi.IntOutput)
}

type GetNodeBalancerConfigNodeStatusArrayOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerConfigNodeStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerConfigNodeStatus)(nil)).Elem()
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) ToGetNodeBalancerConfigNodeStatusArrayOutput() GetNodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) ToGetNodeBalancerConfigNodeStatusArrayOutputWithContext(ctx context.Context) GetNodeBalancerConfigNodeStatusArrayOutput {
	return o
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNodeBalancerConfigNodeStatus] {
	return pulumix.Output[[]GetNodeBalancerConfigNodeStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetNodeBalancerConfigNodeStatusArrayOutput) Index(i pulumi.IntInput) GetNodeBalancerConfigNodeStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeBalancerConfigNodeStatus {
		return vs[0].([]GetNodeBalancerConfigNodeStatus)[vs[1].(int)]
	}).(GetNodeBalancerConfigNodeStatusOutput)
}

type GetNodeBalancerTransfer struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In float64 `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out float64 `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total float64 `pulumi:"total"`
}

// GetNodeBalancerTransferInput is an input type that accepts GetNodeBalancerTransferArgs and GetNodeBalancerTransferOutput values.
// You can construct a concrete instance of `GetNodeBalancerTransferInput` via:
//
//	GetNodeBalancerTransferArgs{...}
type GetNodeBalancerTransferInput interface {
	pulumi.Input

	ToGetNodeBalancerTransferOutput() GetNodeBalancerTransferOutput
	ToGetNodeBalancerTransferOutputWithContext(context.Context) GetNodeBalancerTransferOutput
}

type GetNodeBalancerTransferArgs struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In pulumi.Float64Input `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out pulumi.Float64Input `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetNodeBalancerTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerTransfer)(nil)).Elem()
}

func (i GetNodeBalancerTransferArgs) ToGetNodeBalancerTransferOutput() GetNodeBalancerTransferOutput {
	return i.ToGetNodeBalancerTransferOutputWithContext(context.Background())
}

func (i GetNodeBalancerTransferArgs) ToGetNodeBalancerTransferOutputWithContext(ctx context.Context) GetNodeBalancerTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerTransferOutput)
}

func (i GetNodeBalancerTransferArgs) ToOutput(ctx context.Context) pulumix.Output[GetNodeBalancerTransfer] {
	return pulumix.Output[GetNodeBalancerTransfer]{
		OutputState: i.ToGetNodeBalancerTransferOutputWithContext(ctx).OutputState,
	}
}

// GetNodeBalancerTransferArrayInput is an input type that accepts GetNodeBalancerTransferArray and GetNodeBalancerTransferArrayOutput values.
// You can construct a concrete instance of `GetNodeBalancerTransferArrayInput` via:
//
//	GetNodeBalancerTransferArray{ GetNodeBalancerTransferArgs{...} }
type GetNodeBalancerTransferArrayInput interface {
	pulumi.Input

	ToGetNodeBalancerTransferArrayOutput() GetNodeBalancerTransferArrayOutput
	ToGetNodeBalancerTransferArrayOutputWithContext(context.Context) GetNodeBalancerTransferArrayOutput
}

type GetNodeBalancerTransferArray []GetNodeBalancerTransferInput

func (GetNodeBalancerTransferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerTransfer)(nil)).Elem()
}

func (i GetNodeBalancerTransferArray) ToGetNodeBalancerTransferArrayOutput() GetNodeBalancerTransferArrayOutput {
	return i.ToGetNodeBalancerTransferArrayOutputWithContext(context.Background())
}

func (i GetNodeBalancerTransferArray) ToGetNodeBalancerTransferArrayOutputWithContext(ctx context.Context) GetNodeBalancerTransferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeBalancerTransferArrayOutput)
}

func (i GetNodeBalancerTransferArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNodeBalancerTransfer] {
	return pulumix.Output[[]GetNodeBalancerTransfer]{
		OutputState: i.ToGetNodeBalancerTransferArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNodeBalancerTransferOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeBalancerTransfer)(nil)).Elem()
}

func (o GetNodeBalancerTransferOutput) ToGetNodeBalancerTransferOutput() GetNodeBalancerTransferOutput {
	return o
}

func (o GetNodeBalancerTransferOutput) ToGetNodeBalancerTransferOutputWithContext(ctx context.Context) GetNodeBalancerTransferOutput {
	return o
}

func (o GetNodeBalancerTransferOutput) ToOutput(ctx context.Context) pulumix.Output[GetNodeBalancerTransfer] {
	return pulumix.Output[GetNodeBalancerTransfer]{
		OutputState: o.OutputState,
	}
}

// The total transfer, in MB, used by this NodeBalancer for the current month
func (o GetNodeBalancerTransferOutput) In() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodeBalancerTransfer) float64 { return v.In }).(pulumi.Float64Output)
}

// The total inbound transfer, in MB, used for this NodeBalancer for the current month
func (o GetNodeBalancerTransferOutput) Out() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodeBalancerTransfer) float64 { return v.Out }).(pulumi.Float64Output)
}

// The total outbound transfer, in MB, used for this NodeBalancer for the current month
func (o GetNodeBalancerTransferOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodeBalancerTransfer) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetNodeBalancerTransferArrayOutput struct{ *pulumi.OutputState }

func (GetNodeBalancerTransferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeBalancerTransfer)(nil)).Elem()
}

func (o GetNodeBalancerTransferArrayOutput) ToGetNodeBalancerTransferArrayOutput() GetNodeBalancerTransferArrayOutput {
	return o
}

func (o GetNodeBalancerTransferArrayOutput) ToGetNodeBalancerTransferArrayOutputWithContext(ctx context.Context) GetNodeBalancerTransferArrayOutput {
	return o
}

func (o GetNodeBalancerTransferArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNodeBalancerTransfer] {
	return pulumix.Output[[]GetNodeBalancerTransfer]{
		OutputState: o.OutputState,
	}
}

func (o GetNodeBalancerTransferArrayOutput) Index(i pulumi.IntInput) GetNodeBalancerTransferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeBalancerTransfer {
		return vs[0].([]GetNodeBalancerTransfer)[vs[1].(int)]
	}).(GetNodeBalancerTransferOutput)
}

type GetNodebalancersFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetNodebalancersFilterInput is an input type that accepts GetNodebalancersFilterArgs and GetNodebalancersFilterOutput values.
// You can construct a concrete instance of `GetNodebalancersFilterInput` via:
//
//	GetNodebalancersFilterArgs{...}
type GetNodebalancersFilterInput interface {
	pulumi.Input

	ToGetNodebalancersFilterOutput() GetNodebalancersFilterOutput
	ToGetNodebalancersFilterOutputWithContext(context.Context) GetNodebalancersFilterOutput
}

type GetNodebalancersFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNodebalancersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodebalancersFilter)(nil)).Elem()
}

func (i GetNodebalancersFilterArgs) ToGetNodebalancersFilterOutput() GetNodebalancersFilterOutput {
	return i.ToGetNodebalancersFilterOutputWithContext(context.Background())
}

func (i GetNodebalancersFilterArgs) ToGetNodebalancersFilterOutputWithContext(ctx context.Context) GetNodebalancersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodebalancersFilterOutput)
}

func (i GetNodebalancersFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetNodebalancersFilter] {
	return pulumix.Output[GetNodebalancersFilter]{
		OutputState: i.ToGetNodebalancersFilterOutputWithContext(ctx).OutputState,
	}
}

// GetNodebalancersFilterArrayInput is an input type that accepts GetNodebalancersFilterArray and GetNodebalancersFilterArrayOutput values.
// You can construct a concrete instance of `GetNodebalancersFilterArrayInput` via:
//
//	GetNodebalancersFilterArray{ GetNodebalancersFilterArgs{...} }
type GetNodebalancersFilterArrayInput interface {
	pulumi.Input

	ToGetNodebalancersFilterArrayOutput() GetNodebalancersFilterArrayOutput
	ToGetNodebalancersFilterArrayOutputWithContext(context.Context) GetNodebalancersFilterArrayOutput
}

type GetNodebalancersFilterArray []GetNodebalancersFilterInput

func (GetNodebalancersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodebalancersFilter)(nil)).Elem()
}

func (i GetNodebalancersFilterArray) ToGetNodebalancersFilterArrayOutput() GetNodebalancersFilterArrayOutput {
	return i.ToGetNodebalancersFilterArrayOutputWithContext(context.Background())
}

func (i GetNodebalancersFilterArray) ToGetNodebalancersFilterArrayOutputWithContext(ctx context.Context) GetNodebalancersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodebalancersFilterArrayOutput)
}

func (i GetNodebalancersFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNodebalancersFilter] {
	return pulumix.Output[[]GetNodebalancersFilter]{
		OutputState: i.ToGetNodebalancersFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNodebalancersFilterOutput struct{ *pulumi.OutputState }

func (GetNodebalancersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodebalancersFilter)(nil)).Elem()
}

func (o GetNodebalancersFilterOutput) ToGetNodebalancersFilterOutput() GetNodebalancersFilterOutput {
	return o
}

func (o GetNodebalancersFilterOutput) ToGetNodebalancersFilterOutputWithContext(ctx context.Context) GetNodebalancersFilterOutput {
	return o
}

func (o GetNodebalancersFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNodebalancersFilter] {
	return pulumix.Output[GetNodebalancersFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetNodebalancersFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodebalancersFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetNodebalancersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetNodebalancersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodebalancersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNodebalancersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNodebalancersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodebalancersFilter)(nil)).Elem()
}

func (o GetNodebalancersFilterArrayOutput) ToGetNodebalancersFilterArrayOutput() GetNodebalancersFilterArrayOutput {
	return o
}

func (o GetNodebalancersFilterArrayOutput) ToGetNodebalancersFilterArrayOutputWithContext(ctx context.Context) GetNodebalancersFilterArrayOutput {
	return o
}

func (o GetNodebalancersFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNodebalancersFilter] {
	return pulumix.Output[[]GetNodebalancersFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetNodebalancersFilterArrayOutput) Index(i pulumi.IntInput) GetNodebalancersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodebalancersFilter {
		return vs[0].([]GetNodebalancersFilter)[vs[1].(int)]
	}).(GetNodebalancersFilterOutput)
}

type GetNodebalancersNodebalancer struct {
	// Throttle connections per second (0-20)
	ClientConnThrottle int `pulumi:"clientConnThrottle"`
	// When this Linode NodeBalancer was created
	Created string `pulumi:"created"`
	// This NodeBalancer's hostname, ending with .ip.linodeusercontent.com
	Hostname string `pulumi:"hostname"`
	// The Linode NodeBalancer's unique ID
	Id int `pulumi:"id"`
	// The Public IPv4 Address of this NodeBalancer
	Ipv4 string `pulumi:"ipv4"`
	// The Public IPv6 Address of this NodeBalancer
	Ipv6 string `pulumi:"ipv6"`
	// The label of the Linode NodeBalancer
	Label string `pulumi:"label"`
	// The Region where this Linode NodeBalancer is located. NodeBalancers only support backends in the same Region.
	Region string `pulumi:"region"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags      []string                               `pulumi:"tags"`
	Transfers []GetNodebalancersNodebalancerTransfer `pulumi:"transfers"`
	// When this Linode NodeBalancer was last updated
	Updated string `pulumi:"updated"`
}

// GetNodebalancersNodebalancerInput is an input type that accepts GetNodebalancersNodebalancerArgs and GetNodebalancersNodebalancerOutput values.
// You can construct a concrete instance of `GetNodebalancersNodebalancerInput` via:
//
//	GetNodebalancersNodebalancerArgs{...}
type GetNodebalancersNodebalancerInput interface {
	pulumi.Input

	ToGetNodebalancersNodebalancerOutput() GetNodebalancersNodebalancerOutput
	ToGetNodebalancersNodebalancerOutputWithContext(context.Context) GetNodebalancersNodebalancerOutput
}

type GetNodebalancersNodebalancerArgs struct {
	// Throttle connections per second (0-20)
	ClientConnThrottle pulumi.IntInput `pulumi:"clientConnThrottle"`
	// When this Linode NodeBalancer was created
	Created pulumi.StringInput `pulumi:"created"`
	// This NodeBalancer's hostname, ending with .ip.linodeusercontent.com
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The Linode NodeBalancer's unique ID
	Id pulumi.IntInput `pulumi:"id"`
	// The Public IPv4 Address of this NodeBalancer
	Ipv4 pulumi.StringInput `pulumi:"ipv4"`
	// The Public IPv6 Address of this NodeBalancer
	Ipv6 pulumi.StringInput `pulumi:"ipv6"`
	// The label of the Linode NodeBalancer
	Label pulumi.StringInput `pulumi:"label"`
	// The Region where this Linode NodeBalancer is located. NodeBalancers only support backends in the same Region.
	Region pulumi.StringInput `pulumi:"region"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags      pulumi.StringArrayInput                        `pulumi:"tags"`
	Transfers GetNodebalancersNodebalancerTransferArrayInput `pulumi:"transfers"`
	// When this Linode NodeBalancer was last updated
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetNodebalancersNodebalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodebalancersNodebalancer)(nil)).Elem()
}

func (i GetNodebalancersNodebalancerArgs) ToGetNodebalancersNodebalancerOutput() GetNodebalancersNodebalancerOutput {
	return i.ToGetNodebalancersNodebalancerOutputWithContext(context.Background())
}

func (i GetNodebalancersNodebalancerArgs) ToGetNodebalancersNodebalancerOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodebalancersNodebalancerOutput)
}

func (i GetNodebalancersNodebalancerArgs) ToOutput(ctx context.Context) pulumix.Output[GetNodebalancersNodebalancer] {
	return pulumix.Output[GetNodebalancersNodebalancer]{
		OutputState: i.ToGetNodebalancersNodebalancerOutputWithContext(ctx).OutputState,
	}
}

// GetNodebalancersNodebalancerArrayInput is an input type that accepts GetNodebalancersNodebalancerArray and GetNodebalancersNodebalancerArrayOutput values.
// You can construct a concrete instance of `GetNodebalancersNodebalancerArrayInput` via:
//
//	GetNodebalancersNodebalancerArray{ GetNodebalancersNodebalancerArgs{...} }
type GetNodebalancersNodebalancerArrayInput interface {
	pulumi.Input

	ToGetNodebalancersNodebalancerArrayOutput() GetNodebalancersNodebalancerArrayOutput
	ToGetNodebalancersNodebalancerArrayOutputWithContext(context.Context) GetNodebalancersNodebalancerArrayOutput
}

type GetNodebalancersNodebalancerArray []GetNodebalancersNodebalancerInput

func (GetNodebalancersNodebalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodebalancersNodebalancer)(nil)).Elem()
}

func (i GetNodebalancersNodebalancerArray) ToGetNodebalancersNodebalancerArrayOutput() GetNodebalancersNodebalancerArrayOutput {
	return i.ToGetNodebalancersNodebalancerArrayOutputWithContext(context.Background())
}

func (i GetNodebalancersNodebalancerArray) ToGetNodebalancersNodebalancerArrayOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodebalancersNodebalancerArrayOutput)
}

func (i GetNodebalancersNodebalancerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNodebalancersNodebalancer] {
	return pulumix.Output[[]GetNodebalancersNodebalancer]{
		OutputState: i.ToGetNodebalancersNodebalancerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNodebalancersNodebalancerOutput struct{ *pulumi.OutputState }

func (GetNodebalancersNodebalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodebalancersNodebalancer)(nil)).Elem()
}

func (o GetNodebalancersNodebalancerOutput) ToGetNodebalancersNodebalancerOutput() GetNodebalancersNodebalancerOutput {
	return o
}

func (o GetNodebalancersNodebalancerOutput) ToGetNodebalancersNodebalancerOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerOutput {
	return o
}

func (o GetNodebalancersNodebalancerOutput) ToOutput(ctx context.Context) pulumix.Output[GetNodebalancersNodebalancer] {
	return pulumix.Output[GetNodebalancersNodebalancer]{
		OutputState: o.OutputState,
	}
}

// Throttle connections per second (0-20)
func (o GetNodebalancersNodebalancerOutput) ClientConnThrottle() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) int { return v.ClientConnThrottle }).(pulumi.IntOutput)
}

// When this Linode NodeBalancer was created
func (o GetNodebalancersNodebalancerOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Created }).(pulumi.StringOutput)
}

// This NodeBalancer's hostname, ending with .ip.linodeusercontent.com
func (o GetNodebalancersNodebalancerOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Hostname }).(pulumi.StringOutput)
}

// The Linode NodeBalancer's unique ID
func (o GetNodebalancersNodebalancerOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) int { return v.Id }).(pulumi.IntOutput)
}

// The Public IPv4 Address of this NodeBalancer
func (o GetNodebalancersNodebalancerOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Ipv4 }).(pulumi.StringOutput)
}

// The Public IPv6 Address of this NodeBalancer
func (o GetNodebalancersNodebalancerOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// The label of the Linode NodeBalancer
func (o GetNodebalancersNodebalancerOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Label }).(pulumi.StringOutput)
}

// The Region where this Linode NodeBalancer is located. NodeBalancers only support backends in the same Region.
func (o GetNodebalancersNodebalancerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Region }).(pulumi.StringOutput)
}

// A list of tags applied to this object. Tags are for organizational purposes only.
func (o GetNodebalancersNodebalancerOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetNodebalancersNodebalancerOutput) Transfers() GetNodebalancersNodebalancerTransferArrayOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) []GetNodebalancersNodebalancerTransfer { return v.Transfers }).(GetNodebalancersNodebalancerTransferArrayOutput)
}

// When this Linode NodeBalancer was last updated
func (o GetNodebalancersNodebalancerOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodebalancersNodebalancer) string { return v.Updated }).(pulumi.StringOutput)
}

type GetNodebalancersNodebalancerArrayOutput struct{ *pulumi.OutputState }

func (GetNodebalancersNodebalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodebalancersNodebalancer)(nil)).Elem()
}

func (o GetNodebalancersNodebalancerArrayOutput) ToGetNodebalancersNodebalancerArrayOutput() GetNodebalancersNodebalancerArrayOutput {
	return o
}

func (o GetNodebalancersNodebalancerArrayOutput) ToGetNodebalancersNodebalancerArrayOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerArrayOutput {
	return o
}

func (o GetNodebalancersNodebalancerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNodebalancersNodebalancer] {
	return pulumix.Output[[]GetNodebalancersNodebalancer]{
		OutputState: o.OutputState,
	}
}

func (o GetNodebalancersNodebalancerArrayOutput) Index(i pulumi.IntInput) GetNodebalancersNodebalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodebalancersNodebalancer {
		return vs[0].([]GetNodebalancersNodebalancer)[vs[1].(int)]
	}).(GetNodebalancersNodebalancerOutput)
}

type GetNodebalancersNodebalancerTransfer struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In float64 `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out float64 `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total float64 `pulumi:"total"`
}

// GetNodebalancersNodebalancerTransferInput is an input type that accepts GetNodebalancersNodebalancerTransferArgs and GetNodebalancersNodebalancerTransferOutput values.
// You can construct a concrete instance of `GetNodebalancersNodebalancerTransferInput` via:
//
//	GetNodebalancersNodebalancerTransferArgs{...}
type GetNodebalancersNodebalancerTransferInput interface {
	pulumi.Input

	ToGetNodebalancersNodebalancerTransferOutput() GetNodebalancersNodebalancerTransferOutput
	ToGetNodebalancersNodebalancerTransferOutputWithContext(context.Context) GetNodebalancersNodebalancerTransferOutput
}

type GetNodebalancersNodebalancerTransferArgs struct {
	// The total transfer, in MB, used by this NodeBalancer for the current month
	In pulumi.Float64Input `pulumi:"in"`
	// The total inbound transfer, in MB, used for this NodeBalancer for the current month
	Out pulumi.Float64Input `pulumi:"out"`
	// The total outbound transfer, in MB, used for this NodeBalancer for the current month
	Total pulumi.Float64Input `pulumi:"total"`
}

func (GetNodebalancersNodebalancerTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodebalancersNodebalancerTransfer)(nil)).Elem()
}

func (i GetNodebalancersNodebalancerTransferArgs) ToGetNodebalancersNodebalancerTransferOutput() GetNodebalancersNodebalancerTransferOutput {
	return i.ToGetNodebalancersNodebalancerTransferOutputWithContext(context.Background())
}

func (i GetNodebalancersNodebalancerTransferArgs) ToGetNodebalancersNodebalancerTransferOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodebalancersNodebalancerTransferOutput)
}

func (i GetNodebalancersNodebalancerTransferArgs) ToOutput(ctx context.Context) pulumix.Output[GetNodebalancersNodebalancerTransfer] {
	return pulumix.Output[GetNodebalancersNodebalancerTransfer]{
		OutputState: i.ToGetNodebalancersNodebalancerTransferOutputWithContext(ctx).OutputState,
	}
}

// GetNodebalancersNodebalancerTransferArrayInput is an input type that accepts GetNodebalancersNodebalancerTransferArray and GetNodebalancersNodebalancerTransferArrayOutput values.
// You can construct a concrete instance of `GetNodebalancersNodebalancerTransferArrayInput` via:
//
//	GetNodebalancersNodebalancerTransferArray{ GetNodebalancersNodebalancerTransferArgs{...} }
type GetNodebalancersNodebalancerTransferArrayInput interface {
	pulumi.Input

	ToGetNodebalancersNodebalancerTransferArrayOutput() GetNodebalancersNodebalancerTransferArrayOutput
	ToGetNodebalancersNodebalancerTransferArrayOutputWithContext(context.Context) GetNodebalancersNodebalancerTransferArrayOutput
}

type GetNodebalancersNodebalancerTransferArray []GetNodebalancersNodebalancerTransferInput

func (GetNodebalancersNodebalancerTransferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodebalancersNodebalancerTransfer)(nil)).Elem()
}

func (i GetNodebalancersNodebalancerTransferArray) ToGetNodebalancersNodebalancerTransferArrayOutput() GetNodebalancersNodebalancerTransferArrayOutput {
	return i.ToGetNodebalancersNodebalancerTransferArrayOutputWithContext(context.Background())
}

func (i GetNodebalancersNodebalancerTransferArray) ToGetNodebalancersNodebalancerTransferArrayOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerTransferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodebalancersNodebalancerTransferArrayOutput)
}

func (i GetNodebalancersNodebalancerTransferArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNodebalancersNodebalancerTransfer] {
	return pulumix.Output[[]GetNodebalancersNodebalancerTransfer]{
		OutputState: i.ToGetNodebalancersNodebalancerTransferArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNodebalancersNodebalancerTransferOutput struct{ *pulumi.OutputState }

func (GetNodebalancersNodebalancerTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodebalancersNodebalancerTransfer)(nil)).Elem()
}

func (o GetNodebalancersNodebalancerTransferOutput) ToGetNodebalancersNodebalancerTransferOutput() GetNodebalancersNodebalancerTransferOutput {
	return o
}

func (o GetNodebalancersNodebalancerTransferOutput) ToGetNodebalancersNodebalancerTransferOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerTransferOutput {
	return o
}

func (o GetNodebalancersNodebalancerTransferOutput) ToOutput(ctx context.Context) pulumix.Output[GetNodebalancersNodebalancerTransfer] {
	return pulumix.Output[GetNodebalancersNodebalancerTransfer]{
		OutputState: o.OutputState,
	}
}

// The total transfer, in MB, used by this NodeBalancer for the current month
func (o GetNodebalancersNodebalancerTransferOutput) In() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodebalancersNodebalancerTransfer) float64 { return v.In }).(pulumi.Float64Output)
}

// The total inbound transfer, in MB, used for this NodeBalancer for the current month
func (o GetNodebalancersNodebalancerTransferOutput) Out() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodebalancersNodebalancerTransfer) float64 { return v.Out }).(pulumi.Float64Output)
}

// The total outbound transfer, in MB, used for this NodeBalancer for the current month
func (o GetNodebalancersNodebalancerTransferOutput) Total() pulumi.Float64Output {
	return o.ApplyT(func(v GetNodebalancersNodebalancerTransfer) float64 { return v.Total }).(pulumi.Float64Output)
}

type GetNodebalancersNodebalancerTransferArrayOutput struct{ *pulumi.OutputState }

func (GetNodebalancersNodebalancerTransferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodebalancersNodebalancerTransfer)(nil)).Elem()
}

func (o GetNodebalancersNodebalancerTransferArrayOutput) ToGetNodebalancersNodebalancerTransferArrayOutput() GetNodebalancersNodebalancerTransferArrayOutput {
	return o
}

func (o GetNodebalancersNodebalancerTransferArrayOutput) ToGetNodebalancersNodebalancerTransferArrayOutputWithContext(ctx context.Context) GetNodebalancersNodebalancerTransferArrayOutput {
	return o
}

func (o GetNodebalancersNodebalancerTransferArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNodebalancersNodebalancerTransfer] {
	return pulumix.Output[[]GetNodebalancersNodebalancerTransfer]{
		OutputState: o.OutputState,
	}
}

func (o GetNodebalancersNodebalancerTransferArrayOutput) Index(i pulumi.IntInput) GetNodebalancersNodebalancerTransferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodebalancersNodebalancerTransfer {
		return vs[0].([]GetNodebalancersNodebalancerTransfer)[vs[1].(int)]
	}).(GetNodebalancersNodebalancerTransferOutput)
}

type GetProfileReferrals struct {
	Code      string  `pulumi:"code"`
	Completed int     `pulumi:"completed"`
	Credit    float64 `pulumi:"credit"`
	Pending   int     `pulumi:"pending"`
	Total     int     `pulumi:"total"`
	Url       string  `pulumi:"url"`
}

// GetProfileReferralsInput is an input type that accepts GetProfileReferralsArgs and GetProfileReferralsOutput values.
// You can construct a concrete instance of `GetProfileReferralsInput` via:
//
//	GetProfileReferralsArgs{...}
type GetProfileReferralsInput interface {
	pulumi.Input

	ToGetProfileReferralsOutput() GetProfileReferralsOutput
	ToGetProfileReferralsOutputWithContext(context.Context) GetProfileReferralsOutput
}

type GetProfileReferralsArgs struct {
	Code      pulumi.StringInput  `pulumi:"code"`
	Completed pulumi.IntInput     `pulumi:"completed"`
	Credit    pulumi.Float64Input `pulumi:"credit"`
	Pending   pulumi.IntInput     `pulumi:"pending"`
	Total     pulumi.IntInput     `pulumi:"total"`
	Url       pulumi.StringInput  `pulumi:"url"`
}

func (GetProfileReferralsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileReferrals)(nil)).Elem()
}

func (i GetProfileReferralsArgs) ToGetProfileReferralsOutput() GetProfileReferralsOutput {
	return i.ToGetProfileReferralsOutputWithContext(context.Background())
}

func (i GetProfileReferralsArgs) ToGetProfileReferralsOutputWithContext(ctx context.Context) GetProfileReferralsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileReferralsOutput)
}

func (i GetProfileReferralsArgs) ToOutput(ctx context.Context) pulumix.Output[GetProfileReferrals] {
	return pulumix.Output[GetProfileReferrals]{
		OutputState: i.ToGetProfileReferralsOutputWithContext(ctx).OutputState,
	}
}

type GetProfileReferralsOutput struct{ *pulumi.OutputState }

func (GetProfileReferralsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileReferrals)(nil)).Elem()
}

func (o GetProfileReferralsOutput) ToGetProfileReferralsOutput() GetProfileReferralsOutput {
	return o
}

func (o GetProfileReferralsOutput) ToGetProfileReferralsOutputWithContext(ctx context.Context) GetProfileReferralsOutput {
	return o
}

func (o GetProfileReferralsOutput) ToOutput(ctx context.Context) pulumix.Output[GetProfileReferrals] {
	return pulumix.Output[GetProfileReferrals]{
		OutputState: o.OutputState,
	}
}

func (o GetProfileReferralsOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileReferrals) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetProfileReferralsOutput) Completed() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileReferrals) int { return v.Completed }).(pulumi.IntOutput)
}

func (o GetProfileReferralsOutput) Credit() pulumi.Float64Output {
	return o.ApplyT(func(v GetProfileReferrals) float64 { return v.Credit }).(pulumi.Float64Output)
}

func (o GetProfileReferralsOutput) Pending() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileReferrals) int { return v.Pending }).(pulumi.IntOutput)
}

func (o GetProfileReferralsOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileReferrals) int { return v.Total }).(pulumi.IntOutput)
}

func (o GetProfileReferralsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileReferrals) string { return v.Url }).(pulumi.StringOutput)
}

type GetRegionResolver struct {
	// The IPv4 addresses for this region’s DNS resolvers, separated by commas.
	Ipv4 string `pulumi:"ipv4"`
	// The IPv6 addresses for this region’s DNS resolvers, separated by commas.
	Ipv6 string `pulumi:"ipv6"`
}

// GetRegionResolverInput is an input type that accepts GetRegionResolverArgs and GetRegionResolverOutput values.
// You can construct a concrete instance of `GetRegionResolverInput` via:
//
//	GetRegionResolverArgs{...}
type GetRegionResolverInput interface {
	pulumi.Input

	ToGetRegionResolverOutput() GetRegionResolverOutput
	ToGetRegionResolverOutputWithContext(context.Context) GetRegionResolverOutput
}

type GetRegionResolverArgs struct {
	// The IPv4 addresses for this region’s DNS resolvers, separated by commas.
	Ipv4 pulumi.StringInput `pulumi:"ipv4"`
	// The IPv6 addresses for this region’s DNS resolvers, separated by commas.
	Ipv6 pulumi.StringInput `pulumi:"ipv6"`
}

func (GetRegionResolverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResolver)(nil)).Elem()
}

func (i GetRegionResolverArgs) ToGetRegionResolverOutput() GetRegionResolverOutput {
	return i.ToGetRegionResolverOutputWithContext(context.Background())
}

func (i GetRegionResolverArgs) ToGetRegionResolverOutputWithContext(ctx context.Context) GetRegionResolverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionResolverOutput)
}

func (i GetRegionResolverArgs) ToOutput(ctx context.Context) pulumix.Output[GetRegionResolver] {
	return pulumix.Output[GetRegionResolver]{
		OutputState: i.ToGetRegionResolverOutputWithContext(ctx).OutputState,
	}
}

// GetRegionResolverArrayInput is an input type that accepts GetRegionResolverArray and GetRegionResolverArrayOutput values.
// You can construct a concrete instance of `GetRegionResolverArrayInput` via:
//
//	GetRegionResolverArray{ GetRegionResolverArgs{...} }
type GetRegionResolverArrayInput interface {
	pulumi.Input

	ToGetRegionResolverArrayOutput() GetRegionResolverArrayOutput
	ToGetRegionResolverArrayOutputWithContext(context.Context) GetRegionResolverArrayOutput
}

type GetRegionResolverArray []GetRegionResolverInput

func (GetRegionResolverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionResolver)(nil)).Elem()
}

func (i GetRegionResolverArray) ToGetRegionResolverArrayOutput() GetRegionResolverArrayOutput {
	return i.ToGetRegionResolverArrayOutputWithContext(context.Background())
}

func (i GetRegionResolverArray) ToGetRegionResolverArrayOutputWithContext(ctx context.Context) GetRegionResolverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionResolverArrayOutput)
}

func (i GetRegionResolverArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionResolver] {
	return pulumix.Output[[]GetRegionResolver]{
		OutputState: i.ToGetRegionResolverArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRegionResolverOutput struct{ *pulumi.OutputState }

func (GetRegionResolverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResolver)(nil)).Elem()
}

func (o GetRegionResolverOutput) ToGetRegionResolverOutput() GetRegionResolverOutput {
	return o
}

func (o GetRegionResolverOutput) ToGetRegionResolverOutputWithContext(ctx context.Context) GetRegionResolverOutput {
	return o
}

func (o GetRegionResolverOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionResolver] {
	return pulumix.Output[GetRegionResolver]{
		OutputState: o.OutputState,
	}
}

// The IPv4 addresses for this region’s DNS resolvers, separated by commas.
func (o GetRegionResolverOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResolver) string { return v.Ipv4 }).(pulumi.StringOutput)
}

// The IPv6 addresses for this region’s DNS resolvers, separated by commas.
func (o GetRegionResolverOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResolver) string { return v.Ipv6 }).(pulumi.StringOutput)
}

type GetRegionResolverArrayOutput struct{ *pulumi.OutputState }

func (GetRegionResolverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionResolver)(nil)).Elem()
}

func (o GetRegionResolverArrayOutput) ToGetRegionResolverArrayOutput() GetRegionResolverArrayOutput {
	return o
}

func (o GetRegionResolverArrayOutput) ToGetRegionResolverArrayOutputWithContext(ctx context.Context) GetRegionResolverArrayOutput {
	return o
}

func (o GetRegionResolverArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionResolver] {
	return pulumix.Output[[]GetRegionResolver]{
		OutputState: o.OutputState,
	}
}

func (o GetRegionResolverArrayOutput) Index(i pulumi.IntInput) GetRegionResolverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionResolver {
		return vs[0].([]GetRegionResolver)[vs[1].(int)]
	}).(GetRegionResolverOutput)
}

type GetRegionsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetRegionsFilterInput is an input type that accepts GetRegionsFilterArgs and GetRegionsFilterOutput values.
// You can construct a concrete instance of `GetRegionsFilterInput` via:
//
//	GetRegionsFilterArgs{...}
type GetRegionsFilterInput interface {
	pulumi.Input

	ToGetRegionsFilterOutput() GetRegionsFilterOutput
	ToGetRegionsFilterOutputWithContext(context.Context) GetRegionsFilterOutput
}

type GetRegionsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRegionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return i.ToGetRegionsFilterOutputWithContext(context.Background())
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterOutput)
}

func (i GetRegionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetRegionsFilter] {
	return pulumix.Output[GetRegionsFilter]{
		OutputState: i.ToGetRegionsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetRegionsFilterArrayInput is an input type that accepts GetRegionsFilterArray and GetRegionsFilterArrayOutput values.
// You can construct a concrete instance of `GetRegionsFilterArrayInput` via:
//
//	GetRegionsFilterArray{ GetRegionsFilterArgs{...} }
type GetRegionsFilterArrayInput interface {
	pulumi.Input

	ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput
	ToGetRegionsFilterArrayOutputWithContext(context.Context) GetRegionsFilterArrayOutput
}

type GetRegionsFilterArray []GetRegionsFilterInput

func (GetRegionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArray) ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput {
	return i.ToGetRegionsFilterArrayOutputWithContext(context.Background())
}

func (i GetRegionsFilterArray) ToGetRegionsFilterArrayOutputWithContext(ctx context.Context) GetRegionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterArrayOutput)
}

func (i GetRegionsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsFilter] {
	return pulumix.Output[[]GetRegionsFilter]{
		OutputState: i.ToGetRegionsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRegionsFilterOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return o
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return o
}

func (o GetRegionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionsFilter] {
	return pulumix.Output[GetRegionsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetRegionsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetRegionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetRegionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRegionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterArrayOutput) ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput {
	return o
}

func (o GetRegionsFilterArrayOutput) ToGetRegionsFilterArrayOutputWithContext(ctx context.Context) GetRegionsFilterArrayOutput {
	return o
}

func (o GetRegionsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsFilter] {
	return pulumix.Output[[]GetRegionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetRegionsFilterArrayOutput) Index(i pulumi.IntInput) GetRegionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsFilter {
		return vs[0].([]GetRegionsFilter)[vs[1].(int)]
	}).(GetRegionsFilterOutput)
}

type GetRegionsRegion struct {
	// A list of capabilities of this region.
	Capabilities []string `pulumi:"capabilities"`
	// The country the region resides in.
	Country string `pulumi:"country"`
	Id      string `pulumi:"id"`
	// Detailed location information for this Region, including city, state or region, and country.
	Label     string                     `pulumi:"label"`
	Resolvers []GetRegionsRegionResolver `pulumi:"resolvers"`
	// This region’s current operational status (ok or outage).
	Status string `pulumi:"status"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// A list of capabilities of this region.
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// The country the region resides in.
	Country pulumi.StringInput `pulumi:"country"`
	Id      pulumi.StringInput `pulumi:"id"`
	// Detailed location information for this Region, including city, state or region, and country.
	Label     pulumi.StringInput                 `pulumi:"label"`
	Resolvers GetRegionsRegionResolverArrayInput `pulumi:"resolvers"`
	// This region’s current operational status (ok or outage).
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

func (i GetRegionsRegionArgs) ToOutput(ctx context.Context) pulumix.Output[GetRegionsRegion] {
	return pulumix.Output[GetRegionsRegion]{
		OutputState: i.ToGetRegionsRegionOutputWithContext(ctx).OutputState,
	}
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

func (i GetRegionsRegionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsRegion] {
	return pulumix.Output[[]GetRegionsRegion]{
		OutputState: i.ToGetRegionsRegionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionsRegion] {
	return pulumix.Output[GetRegionsRegion]{
		OutputState: o.OutputState,
	}
}

// A list of capabilities of this region.
func (o GetRegionsRegionOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// The country the region resides in.
func (o GetRegionsRegionOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Country }).(pulumi.StringOutput)
}

func (o GetRegionsRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Id }).(pulumi.StringOutput)
}

// Detailed location information for this Region, including city, state or region, and country.
func (o GetRegionsRegionOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetRegionsRegionOutput) Resolvers() GetRegionsRegionResolverArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []GetRegionsRegionResolver { return v.Resolvers }).(GetRegionsRegionResolverArrayOutput)
}

// This region’s current operational status (ok or outage).
func (o GetRegionsRegionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Status }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsRegion] {
	return pulumix.Output[[]GetRegionsRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetRegionsRegionResolver struct {
	// The IPv4 addresses for this region’s DNS resolvers, separated by commas.
	Ipv4 string `pulumi:"ipv4"`
	// The IPv6 addresses for this region’s DNS resolvers, separated by commas.
	Ipv6 string `pulumi:"ipv6"`
}

// GetRegionsRegionResolverInput is an input type that accepts GetRegionsRegionResolverArgs and GetRegionsRegionResolverOutput values.
// You can construct a concrete instance of `GetRegionsRegionResolverInput` via:
//
//	GetRegionsRegionResolverArgs{...}
type GetRegionsRegionResolverInput interface {
	pulumi.Input

	ToGetRegionsRegionResolverOutput() GetRegionsRegionResolverOutput
	ToGetRegionsRegionResolverOutputWithContext(context.Context) GetRegionsRegionResolverOutput
}

type GetRegionsRegionResolverArgs struct {
	// The IPv4 addresses for this region’s DNS resolvers, separated by commas.
	Ipv4 pulumi.StringInput `pulumi:"ipv4"`
	// The IPv6 addresses for this region’s DNS resolvers, separated by commas.
	Ipv6 pulumi.StringInput `pulumi:"ipv6"`
}

func (GetRegionsRegionResolverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionResolver)(nil)).Elem()
}

func (i GetRegionsRegionResolverArgs) ToGetRegionsRegionResolverOutput() GetRegionsRegionResolverOutput {
	return i.ToGetRegionsRegionResolverOutputWithContext(context.Background())
}

func (i GetRegionsRegionResolverArgs) ToGetRegionsRegionResolverOutputWithContext(ctx context.Context) GetRegionsRegionResolverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionResolverOutput)
}

func (i GetRegionsRegionResolverArgs) ToOutput(ctx context.Context) pulumix.Output[GetRegionsRegionResolver] {
	return pulumix.Output[GetRegionsRegionResolver]{
		OutputState: i.ToGetRegionsRegionResolverOutputWithContext(ctx).OutputState,
	}
}

// GetRegionsRegionResolverArrayInput is an input type that accepts GetRegionsRegionResolverArray and GetRegionsRegionResolverArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionResolverArrayInput` via:
//
//	GetRegionsRegionResolverArray{ GetRegionsRegionResolverArgs{...} }
type GetRegionsRegionResolverArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionResolverArrayOutput() GetRegionsRegionResolverArrayOutput
	ToGetRegionsRegionResolverArrayOutputWithContext(context.Context) GetRegionsRegionResolverArrayOutput
}

type GetRegionsRegionResolverArray []GetRegionsRegionResolverInput

func (GetRegionsRegionResolverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionResolver)(nil)).Elem()
}

func (i GetRegionsRegionResolverArray) ToGetRegionsRegionResolverArrayOutput() GetRegionsRegionResolverArrayOutput {
	return i.ToGetRegionsRegionResolverArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionResolverArray) ToGetRegionsRegionResolverArrayOutputWithContext(ctx context.Context) GetRegionsRegionResolverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionResolverArrayOutput)
}

func (i GetRegionsRegionResolverArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsRegionResolver] {
	return pulumix.Output[[]GetRegionsRegionResolver]{
		OutputState: i.ToGetRegionsRegionResolverArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRegionsRegionResolverOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionResolverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionResolver)(nil)).Elem()
}

func (o GetRegionsRegionResolverOutput) ToGetRegionsRegionResolverOutput() GetRegionsRegionResolverOutput {
	return o
}

func (o GetRegionsRegionResolverOutput) ToGetRegionsRegionResolverOutputWithContext(ctx context.Context) GetRegionsRegionResolverOutput {
	return o
}

func (o GetRegionsRegionResolverOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionsRegionResolver] {
	return pulumix.Output[GetRegionsRegionResolver]{
		OutputState: o.OutputState,
	}
}

// The IPv4 addresses for this region’s DNS resolvers, separated by commas.
func (o GetRegionsRegionResolverOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionResolver) string { return v.Ipv4 }).(pulumi.StringOutput)
}

// The IPv6 addresses for this region’s DNS resolvers, separated by commas.
func (o GetRegionsRegionResolverOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionResolver) string { return v.Ipv6 }).(pulumi.StringOutput)
}

type GetRegionsRegionResolverArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionResolverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionResolver)(nil)).Elem()
}

func (o GetRegionsRegionResolverArrayOutput) ToGetRegionsRegionResolverArrayOutput() GetRegionsRegionResolverArrayOutput {
	return o
}

func (o GetRegionsRegionResolverArrayOutput) ToGetRegionsRegionResolverArrayOutputWithContext(ctx context.Context) GetRegionsRegionResolverArrayOutput {
	return o
}

func (o GetRegionsRegionResolverArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsRegionResolver] {
	return pulumix.Output[[]GetRegionsRegionResolver]{
		OutputState: o.OutputState,
	}
}

func (o GetRegionsRegionResolverArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionResolverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegionResolver {
		return vs[0].([]GetRegionsRegionResolver)[vs[1].(int)]
	}).(GetRegionsRegionResolverOutput)
}

type GetSshkeysFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetSshkeysFilterInput is an input type that accepts GetSshkeysFilterArgs and GetSshkeysFilterOutput values.
// You can construct a concrete instance of `GetSshkeysFilterInput` via:
//
//	GetSshkeysFilterArgs{...}
type GetSshkeysFilterInput interface {
	pulumi.Input

	ToGetSshkeysFilterOutput() GetSshkeysFilterOutput
	ToGetSshkeysFilterOutputWithContext(context.Context) GetSshkeysFilterOutput
}

type GetSshkeysFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSshkeysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshkeysFilter)(nil)).Elem()
}

func (i GetSshkeysFilterArgs) ToGetSshkeysFilterOutput() GetSshkeysFilterOutput {
	return i.ToGetSshkeysFilterOutputWithContext(context.Background())
}

func (i GetSshkeysFilterArgs) ToGetSshkeysFilterOutputWithContext(ctx context.Context) GetSshkeysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshkeysFilterOutput)
}

func (i GetSshkeysFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetSshkeysFilter] {
	return pulumix.Output[GetSshkeysFilter]{
		OutputState: i.ToGetSshkeysFilterOutputWithContext(ctx).OutputState,
	}
}

// GetSshkeysFilterArrayInput is an input type that accepts GetSshkeysFilterArray and GetSshkeysFilterArrayOutput values.
// You can construct a concrete instance of `GetSshkeysFilterArrayInput` via:
//
//	GetSshkeysFilterArray{ GetSshkeysFilterArgs{...} }
type GetSshkeysFilterArrayInput interface {
	pulumi.Input

	ToGetSshkeysFilterArrayOutput() GetSshkeysFilterArrayOutput
	ToGetSshkeysFilterArrayOutputWithContext(context.Context) GetSshkeysFilterArrayOutput
}

type GetSshkeysFilterArray []GetSshkeysFilterInput

func (GetSshkeysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshkeysFilter)(nil)).Elem()
}

func (i GetSshkeysFilterArray) ToGetSshkeysFilterArrayOutput() GetSshkeysFilterArrayOutput {
	return i.ToGetSshkeysFilterArrayOutputWithContext(context.Background())
}

func (i GetSshkeysFilterArray) ToGetSshkeysFilterArrayOutputWithContext(ctx context.Context) GetSshkeysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshkeysFilterArrayOutput)
}

func (i GetSshkeysFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSshkeysFilter] {
	return pulumix.Output[[]GetSshkeysFilter]{
		OutputState: i.ToGetSshkeysFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSshkeysFilterOutput struct{ *pulumi.OutputState }

func (GetSshkeysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshkeysFilter)(nil)).Elem()
}

func (o GetSshkeysFilterOutput) ToGetSshkeysFilterOutput() GetSshkeysFilterOutput {
	return o
}

func (o GetSshkeysFilterOutput) ToGetSshkeysFilterOutputWithContext(ctx context.Context) GetSshkeysFilterOutput {
	return o
}

func (o GetSshkeysFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetSshkeysFilter] {
	return pulumix.Output[GetSshkeysFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetSshkeysFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSshkeysFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetSshkeysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshkeysFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetSshkeysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSshkeysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSshkeysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSshkeysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshkeysFilter)(nil)).Elem()
}

func (o GetSshkeysFilterArrayOutput) ToGetSshkeysFilterArrayOutput() GetSshkeysFilterArrayOutput {
	return o
}

func (o GetSshkeysFilterArrayOutput) ToGetSshkeysFilterArrayOutputWithContext(ctx context.Context) GetSshkeysFilterArrayOutput {
	return o
}

func (o GetSshkeysFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSshkeysFilter] {
	return pulumix.Output[[]GetSshkeysFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetSshkeysFilterArrayOutput) Index(i pulumi.IntInput) GetSshkeysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSshkeysFilter {
		return vs[0].([]GetSshkeysFilter)[vs[1].(int)]
	}).(GetSshkeysFilterOutput)
}

type GetSshkeysSshkey struct {
	// The date this key was added.
	Created string `pulumi:"created"`
	// The ID of the SSH Key.
	Id *string `pulumi:"id"`
	// The label of the SSH Key.
	Label string `pulumi:"label"`
	// The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.
	SshKey string `pulumi:"sshKey"`
}

// GetSshkeysSshkeyInput is an input type that accepts GetSshkeysSshkeyArgs and GetSshkeysSshkeyOutput values.
// You can construct a concrete instance of `GetSshkeysSshkeyInput` via:
//
//	GetSshkeysSshkeyArgs{...}
type GetSshkeysSshkeyInput interface {
	pulumi.Input

	ToGetSshkeysSshkeyOutput() GetSshkeysSshkeyOutput
	ToGetSshkeysSshkeyOutputWithContext(context.Context) GetSshkeysSshkeyOutput
}

type GetSshkeysSshkeyArgs struct {
	// The date this key was added.
	Created pulumi.StringInput `pulumi:"created"`
	// The ID of the SSH Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The label of the SSH Key.
	Label pulumi.StringInput `pulumi:"label"`
	// The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.
	SshKey pulumi.StringInput `pulumi:"sshKey"`
}

func (GetSshkeysSshkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshkeysSshkey)(nil)).Elem()
}

func (i GetSshkeysSshkeyArgs) ToGetSshkeysSshkeyOutput() GetSshkeysSshkeyOutput {
	return i.ToGetSshkeysSshkeyOutputWithContext(context.Background())
}

func (i GetSshkeysSshkeyArgs) ToGetSshkeysSshkeyOutputWithContext(ctx context.Context) GetSshkeysSshkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshkeysSshkeyOutput)
}

func (i GetSshkeysSshkeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetSshkeysSshkey] {
	return pulumix.Output[GetSshkeysSshkey]{
		OutputState: i.ToGetSshkeysSshkeyOutputWithContext(ctx).OutputState,
	}
}

// GetSshkeysSshkeyArrayInput is an input type that accepts GetSshkeysSshkeyArray and GetSshkeysSshkeyArrayOutput values.
// You can construct a concrete instance of `GetSshkeysSshkeyArrayInput` via:
//
//	GetSshkeysSshkeyArray{ GetSshkeysSshkeyArgs{...} }
type GetSshkeysSshkeyArrayInput interface {
	pulumi.Input

	ToGetSshkeysSshkeyArrayOutput() GetSshkeysSshkeyArrayOutput
	ToGetSshkeysSshkeyArrayOutputWithContext(context.Context) GetSshkeysSshkeyArrayOutput
}

type GetSshkeysSshkeyArray []GetSshkeysSshkeyInput

func (GetSshkeysSshkeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshkeysSshkey)(nil)).Elem()
}

func (i GetSshkeysSshkeyArray) ToGetSshkeysSshkeyArrayOutput() GetSshkeysSshkeyArrayOutput {
	return i.ToGetSshkeysSshkeyArrayOutputWithContext(context.Background())
}

func (i GetSshkeysSshkeyArray) ToGetSshkeysSshkeyArrayOutputWithContext(ctx context.Context) GetSshkeysSshkeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshkeysSshkeyArrayOutput)
}

func (i GetSshkeysSshkeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSshkeysSshkey] {
	return pulumix.Output[[]GetSshkeysSshkey]{
		OutputState: i.ToGetSshkeysSshkeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSshkeysSshkeyOutput struct{ *pulumi.OutputState }

func (GetSshkeysSshkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshkeysSshkey)(nil)).Elem()
}

func (o GetSshkeysSshkeyOutput) ToGetSshkeysSshkeyOutput() GetSshkeysSshkeyOutput {
	return o
}

func (o GetSshkeysSshkeyOutput) ToGetSshkeysSshkeyOutputWithContext(ctx context.Context) GetSshkeysSshkeyOutput {
	return o
}

func (o GetSshkeysSshkeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetSshkeysSshkey] {
	return pulumix.Output[GetSshkeysSshkey]{
		OutputState: o.OutputState,
	}
}

// The date this key was added.
func (o GetSshkeysSshkeyOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshkeysSshkey) string { return v.Created }).(pulumi.StringOutput)
}

// The ID of the SSH Key.
func (o GetSshkeysSshkeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSshkeysSshkey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The label of the SSH Key.
func (o GetSshkeysSshkeyOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshkeysSshkey) string { return v.Label }).(pulumi.StringOutput)
}

// The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.
func (o GetSshkeysSshkeyOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshkeysSshkey) string { return v.SshKey }).(pulumi.StringOutput)
}

type GetSshkeysSshkeyArrayOutput struct{ *pulumi.OutputState }

func (GetSshkeysSshkeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshkeysSshkey)(nil)).Elem()
}

func (o GetSshkeysSshkeyArrayOutput) ToGetSshkeysSshkeyArrayOutput() GetSshkeysSshkeyArrayOutput {
	return o
}

func (o GetSshkeysSshkeyArrayOutput) ToGetSshkeysSshkeyArrayOutputWithContext(ctx context.Context) GetSshkeysSshkeyArrayOutput {
	return o
}

func (o GetSshkeysSshkeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSshkeysSshkey] {
	return pulumix.Output[[]GetSshkeysSshkey]{
		OutputState: o.OutputState,
	}
}

func (o GetSshkeysSshkeyArrayOutput) Index(i pulumi.IntInput) GetSshkeysSshkeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSshkeysSshkey {
		return vs[0].([]GetSshkeysSshkey)[vs[1].(int)]
	}).(GetSshkeysSshkeyOutput)
}

type GetStackScriptUserDefinedField struct {
	// The default value. If not specified, this value will be used.
	Default string `pulumi:"default"`
	// An example value for the field.
	Example string `pulumi:"example"`
	// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
	Label string `pulumi:"label"`
	// A list of acceptable values for the field in any quantity, combination or order.
	ManyOf string `pulumi:"manyOf"`
	// The name of the field.
	Name string `pulumi:"name"`
	// A list of acceptable single values for the field.
	OneOf string `pulumi:"oneOf"`
}

// GetStackScriptUserDefinedFieldInput is an input type that accepts GetStackScriptUserDefinedFieldArgs and GetStackScriptUserDefinedFieldOutput values.
// You can construct a concrete instance of `GetStackScriptUserDefinedFieldInput` via:
//
//	GetStackScriptUserDefinedFieldArgs{...}
type GetStackScriptUserDefinedFieldInput interface {
	pulumi.Input

	ToGetStackScriptUserDefinedFieldOutput() GetStackScriptUserDefinedFieldOutput
	ToGetStackScriptUserDefinedFieldOutputWithContext(context.Context) GetStackScriptUserDefinedFieldOutput
}

type GetStackScriptUserDefinedFieldArgs struct {
	// The default value. If not specified, this value will be used.
	Default pulumi.StringInput `pulumi:"default"`
	// An example value for the field.
	Example pulumi.StringInput `pulumi:"example"`
	// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
	Label pulumi.StringInput `pulumi:"label"`
	// A list of acceptable values for the field in any quantity, combination or order.
	ManyOf pulumi.StringInput `pulumi:"manyOf"`
	// The name of the field.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of acceptable single values for the field.
	OneOf pulumi.StringInput `pulumi:"oneOf"`
}

func (GetStackScriptUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptUserDefinedFieldArgs) ToGetStackScriptUserDefinedFieldOutput() GetStackScriptUserDefinedFieldOutput {
	return i.ToGetStackScriptUserDefinedFieldOutputWithContext(context.Background())
}

func (i GetStackScriptUserDefinedFieldArgs) ToGetStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptUserDefinedFieldOutput)
}

func (i GetStackScriptUserDefinedFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptUserDefinedField] {
	return pulumix.Output[GetStackScriptUserDefinedField]{
		OutputState: i.ToGetStackScriptUserDefinedFieldOutputWithContext(ctx).OutputState,
	}
}

// GetStackScriptUserDefinedFieldArrayInput is an input type that accepts GetStackScriptUserDefinedFieldArray and GetStackScriptUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `GetStackScriptUserDefinedFieldArrayInput` via:
//
//	GetStackScriptUserDefinedFieldArray{ GetStackScriptUserDefinedFieldArgs{...} }
type GetStackScriptUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToGetStackScriptUserDefinedFieldArrayOutput() GetStackScriptUserDefinedFieldArrayOutput
	ToGetStackScriptUserDefinedFieldArrayOutputWithContext(context.Context) GetStackScriptUserDefinedFieldArrayOutput
}

type GetStackScriptUserDefinedFieldArray []GetStackScriptUserDefinedFieldInput

func (GetStackScriptUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptUserDefinedFieldArray) ToGetStackScriptUserDefinedFieldArrayOutput() GetStackScriptUserDefinedFieldArrayOutput {
	return i.ToGetStackScriptUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i GetStackScriptUserDefinedFieldArray) ToGetStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptUserDefinedFieldArrayOutput)
}

func (i GetStackScriptUserDefinedFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptUserDefinedField] {
	return pulumix.Output[[]GetStackScriptUserDefinedField]{
		OutputState: i.ToGetStackScriptUserDefinedFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackScriptUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (GetStackScriptUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptUserDefinedFieldOutput) ToGetStackScriptUserDefinedFieldOutput() GetStackScriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldOutput) ToGetStackScriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptUserDefinedField] {
	return pulumix.Output[GetStackScriptUserDefinedField]{
		OutputState: o.OutputState,
	}
}

// The default value. If not specified, this value will be used.
func (o GetStackScriptUserDefinedFieldOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Default }).(pulumi.StringOutput)
}

// An example value for the field.
func (o GetStackScriptUserDefinedFieldOutput) Example() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Example }).(pulumi.StringOutput)
}

// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
func (o GetStackScriptUserDefinedFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Label }).(pulumi.StringOutput)
}

// A list of acceptable values for the field in any quantity, combination or order.
func (o GetStackScriptUserDefinedFieldOutput) ManyOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.ManyOf }).(pulumi.StringOutput)
}

// The name of the field.
func (o GetStackScriptUserDefinedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.Name }).(pulumi.StringOutput)
}

// A list of acceptable single values for the field.
func (o GetStackScriptUserDefinedFieldOutput) OneOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptUserDefinedField) string { return v.OneOf }).(pulumi.StringOutput)
}

type GetStackScriptUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptUserDefinedFieldArrayOutput) ToGetStackScriptUserDefinedFieldArrayOutput() GetStackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldArrayOutput) ToGetStackScriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptUserDefinedFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptUserDefinedField] {
	return pulumix.Output[[]GetStackScriptUserDefinedField]{
		OutputState: o.OutputState,
	}
}

func (o GetStackScriptUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) GetStackScriptUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptUserDefinedField {
		return vs[0].([]GetStackScriptUserDefinedField)[vs[1].(int)]
	}).(GetStackScriptUserDefinedFieldOutput)
}

type GetStackScriptsFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetStackScriptsFilterInput is an input type that accepts GetStackScriptsFilterArgs and GetStackScriptsFilterOutput values.
// You can construct a concrete instance of `GetStackScriptsFilterInput` via:
//
//	GetStackScriptsFilterArgs{...}
type GetStackScriptsFilterInput interface {
	pulumi.Input

	ToGetStackScriptsFilterOutput() GetStackScriptsFilterOutput
	ToGetStackScriptsFilterOutputWithContext(context.Context) GetStackScriptsFilterOutput
}

type GetStackScriptsFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStackScriptsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsFilter)(nil)).Elem()
}

func (i GetStackScriptsFilterArgs) ToGetStackScriptsFilterOutput() GetStackScriptsFilterOutput {
	return i.ToGetStackScriptsFilterOutputWithContext(context.Background())
}

func (i GetStackScriptsFilterArgs) ToGetStackScriptsFilterOutputWithContext(ctx context.Context) GetStackScriptsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsFilterOutput)
}

func (i GetStackScriptsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptsFilter] {
	return pulumix.Output[GetStackScriptsFilter]{
		OutputState: i.ToGetStackScriptsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetStackScriptsFilterArrayInput is an input type that accepts GetStackScriptsFilterArray and GetStackScriptsFilterArrayOutput values.
// You can construct a concrete instance of `GetStackScriptsFilterArrayInput` via:
//
//	GetStackScriptsFilterArray{ GetStackScriptsFilterArgs{...} }
type GetStackScriptsFilterArrayInput interface {
	pulumi.Input

	ToGetStackScriptsFilterArrayOutput() GetStackScriptsFilterArrayOutput
	ToGetStackScriptsFilterArrayOutputWithContext(context.Context) GetStackScriptsFilterArrayOutput
}

type GetStackScriptsFilterArray []GetStackScriptsFilterInput

func (GetStackScriptsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsFilter)(nil)).Elem()
}

func (i GetStackScriptsFilterArray) ToGetStackScriptsFilterArrayOutput() GetStackScriptsFilterArrayOutput {
	return i.ToGetStackScriptsFilterArrayOutputWithContext(context.Background())
}

func (i GetStackScriptsFilterArray) ToGetStackScriptsFilterArrayOutputWithContext(ctx context.Context) GetStackScriptsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsFilterArrayOutput)
}

func (i GetStackScriptsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptsFilter] {
	return pulumix.Output[[]GetStackScriptsFilter]{
		OutputState: i.ToGetStackScriptsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackScriptsFilterOutput struct{ *pulumi.OutputState }

func (GetStackScriptsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsFilter)(nil)).Elem()
}

func (o GetStackScriptsFilterOutput) ToGetStackScriptsFilterOutput() GetStackScriptsFilterOutput {
	return o
}

func (o GetStackScriptsFilterOutput) ToGetStackScriptsFilterOutputWithContext(ctx context.Context) GetStackScriptsFilterOutput {
	return o
}

func (o GetStackScriptsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptsFilter] {
	return pulumix.Output[GetStackScriptsFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetStackScriptsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStackScriptsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetStackScriptsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetStackScriptsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackScriptsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStackScriptsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsFilter)(nil)).Elem()
}

func (o GetStackScriptsFilterArrayOutput) ToGetStackScriptsFilterArrayOutput() GetStackScriptsFilterArrayOutput {
	return o
}

func (o GetStackScriptsFilterArrayOutput) ToGetStackScriptsFilterArrayOutputWithContext(ctx context.Context) GetStackScriptsFilterArrayOutput {
	return o
}

func (o GetStackScriptsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptsFilter] {
	return pulumix.Output[[]GetStackScriptsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetStackScriptsFilterArrayOutput) Index(i pulumi.IntInput) GetStackScriptsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptsFilter {
		return vs[0].([]GetStackScriptsFilter)[vs[1].(int)]
	}).(GetStackScriptsFilterOutput)
}

type GetStackScriptsStackscript struct {
	// The date this StackScript was created.
	Created string `pulumi:"created"`
	// Count of currently active, deployed Linodes created from this StackScript.
	DeploymentsActive int `pulumi:"deploymentsActive"`
	// The total number of times this StackScript has been deployed.
	DeploymentsTotal int `pulumi:"deploymentsTotal"`
	// A description for the StackScript.
	Description string `pulumi:"description"`
	// The unique ID of the StackScript.
	Id string `pulumi:"id"`
	// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
	Images []string `pulumi:"images"`
	// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private.
	IsPublic bool `pulumi:"isPublic"`
	// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
	Label string `pulumi:"label"`
	// This field allows you to add notes for the set of revisions made to this StackScript.
	RevNote string `pulumi:"revNote"`
	// The script to execute when provisioning a new Linode with this StackScript.
	Script string `pulumi:"script"`
	// The date this StackScript was updated.
	Updated string `pulumi:"updated"`
	// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment.
	UserDefinedFields []GetStackScriptsStackscriptUserDefinedField `pulumi:"userDefinedFields"`
	// The Gravatar ID for the User who created the StackScript.
	UserGravatarId string `pulumi:"userGravatarId"`
	// The User who created the StackScript.
	Username string `pulumi:"username"`
}

// GetStackScriptsStackscriptInput is an input type that accepts GetStackScriptsStackscriptArgs and GetStackScriptsStackscriptOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptInput` via:
//
//	GetStackScriptsStackscriptArgs{...}
type GetStackScriptsStackscriptInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptOutput() GetStackScriptsStackscriptOutput
	ToGetStackScriptsStackscriptOutputWithContext(context.Context) GetStackScriptsStackscriptOutput
}

type GetStackScriptsStackscriptArgs struct {
	// The date this StackScript was created.
	Created pulumi.StringInput `pulumi:"created"`
	// Count of currently active, deployed Linodes created from this StackScript.
	DeploymentsActive pulumi.IntInput `pulumi:"deploymentsActive"`
	// The total number of times this StackScript has been deployed.
	DeploymentsTotal pulumi.IntInput `pulumi:"deploymentsTotal"`
	// A description for the StackScript.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID of the StackScript.
	Id pulumi.StringInput `pulumi:"id"`
	// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
	Images pulumi.StringArrayInput `pulumi:"images"`
	// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private.
	IsPublic pulumi.BoolInput `pulumi:"isPublic"`
	// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
	Label pulumi.StringInput `pulumi:"label"`
	// This field allows you to add notes for the set of revisions made to this StackScript.
	RevNote pulumi.StringInput `pulumi:"revNote"`
	// The script to execute when provisioning a new Linode with this StackScript.
	Script pulumi.StringInput `pulumi:"script"`
	// The date this StackScript was updated.
	Updated pulumi.StringInput `pulumi:"updated"`
	// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment.
	UserDefinedFields GetStackScriptsStackscriptUserDefinedFieldArrayInput `pulumi:"userDefinedFields"`
	// The Gravatar ID for the User who created the StackScript.
	UserGravatarId pulumi.StringInput `pulumi:"userGravatarId"`
	// The User who created the StackScript.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetStackScriptsStackscriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscript)(nil)).Elem()
}

func (i GetStackScriptsStackscriptArgs) ToGetStackScriptsStackscriptOutput() GetStackScriptsStackscriptOutput {
	return i.ToGetStackScriptsStackscriptOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptArgs) ToGetStackScriptsStackscriptOutputWithContext(ctx context.Context) GetStackScriptsStackscriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptOutput)
}

func (i GetStackScriptsStackscriptArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptsStackscript] {
	return pulumix.Output[GetStackScriptsStackscript]{
		OutputState: i.ToGetStackScriptsStackscriptOutputWithContext(ctx).OutputState,
	}
}

// GetStackScriptsStackscriptArrayInput is an input type that accepts GetStackScriptsStackscriptArray and GetStackScriptsStackscriptArrayOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptArrayInput` via:
//
//	GetStackScriptsStackscriptArray{ GetStackScriptsStackscriptArgs{...} }
type GetStackScriptsStackscriptArrayInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptArrayOutput() GetStackScriptsStackscriptArrayOutput
	ToGetStackScriptsStackscriptArrayOutputWithContext(context.Context) GetStackScriptsStackscriptArrayOutput
}

type GetStackScriptsStackscriptArray []GetStackScriptsStackscriptInput

func (GetStackScriptsStackscriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscript)(nil)).Elem()
}

func (i GetStackScriptsStackscriptArray) ToGetStackScriptsStackscriptArrayOutput() GetStackScriptsStackscriptArrayOutput {
	return i.ToGetStackScriptsStackscriptArrayOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptArray) ToGetStackScriptsStackscriptArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptArrayOutput)
}

func (i GetStackScriptsStackscriptArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptsStackscript] {
	return pulumix.Output[[]GetStackScriptsStackscript]{
		OutputState: i.ToGetStackScriptsStackscriptArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackScriptsStackscriptOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscript)(nil)).Elem()
}

func (o GetStackScriptsStackscriptOutput) ToGetStackScriptsStackscriptOutput() GetStackScriptsStackscriptOutput {
	return o
}

func (o GetStackScriptsStackscriptOutput) ToGetStackScriptsStackscriptOutputWithContext(ctx context.Context) GetStackScriptsStackscriptOutput {
	return o
}

func (o GetStackScriptsStackscriptOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptsStackscript] {
	return pulumix.Output[GetStackScriptsStackscript]{
		OutputState: o.OutputState,
	}
}

// The date this StackScript was created.
func (o GetStackScriptsStackscriptOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Created }).(pulumi.StringOutput)
}

// Count of currently active, deployed Linodes created from this StackScript.
func (o GetStackScriptsStackscriptOutput) DeploymentsActive() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) int { return v.DeploymentsActive }).(pulumi.IntOutput)
}

// The total number of times this StackScript has been deployed.
func (o GetStackScriptsStackscriptOutput) DeploymentsTotal() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) int { return v.DeploymentsTotal }).(pulumi.IntOutput)
}

// A description for the StackScript.
func (o GetStackScriptsStackscriptOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID of the StackScript.
func (o GetStackScriptsStackscriptOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Id }).(pulumi.StringOutput)
}

// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
func (o GetStackScriptsStackscriptOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private.
func (o GetStackScriptsStackscriptOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
func (o GetStackScriptsStackscriptOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Label }).(pulumi.StringOutput)
}

// This field allows you to add notes for the set of revisions made to this StackScript.
func (o GetStackScriptsStackscriptOutput) RevNote() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.RevNote }).(pulumi.StringOutput)
}

// The script to execute when provisioning a new Linode with this StackScript.
func (o GetStackScriptsStackscriptOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Script }).(pulumi.StringOutput)
}

// The date this StackScript was updated.
func (o GetStackScriptsStackscriptOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Updated }).(pulumi.StringOutput)
}

// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment.
func (o GetStackScriptsStackscriptOutput) UserDefinedFields() GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) []GetStackScriptsStackscriptUserDefinedField {
		return v.UserDefinedFields
	}).(GetStackScriptsStackscriptUserDefinedFieldArrayOutput)
}

// The Gravatar ID for the User who created the StackScript.
func (o GetStackScriptsStackscriptOutput) UserGravatarId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.UserGravatarId }).(pulumi.StringOutput)
}

// The User who created the StackScript.
func (o GetStackScriptsStackscriptOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscript) string { return v.Username }).(pulumi.StringOutput)
}

type GetStackScriptsStackscriptArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscript)(nil)).Elem()
}

func (o GetStackScriptsStackscriptArrayOutput) ToGetStackScriptsStackscriptArrayOutput() GetStackScriptsStackscriptArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptArrayOutput) ToGetStackScriptsStackscriptArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptsStackscript] {
	return pulumix.Output[[]GetStackScriptsStackscript]{
		OutputState: o.OutputState,
	}
}

func (o GetStackScriptsStackscriptArrayOutput) Index(i pulumi.IntInput) GetStackScriptsStackscriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptsStackscript {
		return vs[0].([]GetStackScriptsStackscript)[vs[1].(int)]
	}).(GetStackScriptsStackscriptOutput)
}

type GetStackScriptsStackscriptUserDefinedField struct {
	// The default value. If not specified, this value will be used.
	Default string `pulumi:"default"`
	// An example value for the field.
	Example string `pulumi:"example"`
	// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
	Label string `pulumi:"label"`
	// A list of acceptable values for the field in any quantity, combination or order.
	ManyOf string `pulumi:"manyOf"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of acceptable single values for the field.
	OneOf string `pulumi:"oneOf"`
}

// GetStackScriptsStackscriptUserDefinedFieldInput is an input type that accepts GetStackScriptsStackscriptUserDefinedFieldArgs and GetStackScriptsStackscriptUserDefinedFieldOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptUserDefinedFieldInput` via:
//
//	GetStackScriptsStackscriptUserDefinedFieldArgs{...}
type GetStackScriptsStackscriptUserDefinedFieldInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptUserDefinedFieldOutput() GetStackScriptsStackscriptUserDefinedFieldOutput
	ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(context.Context) GetStackScriptsStackscriptUserDefinedFieldOutput
}

type GetStackScriptsStackscriptUserDefinedFieldArgs struct {
	// The default value. If not specified, this value will be used.
	Default pulumi.StringInput `pulumi:"default"`
	// An example value for the field.
	Example pulumi.StringInput `pulumi:"example"`
	// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
	Label pulumi.StringInput `pulumi:"label"`
	// A list of acceptable values for the field in any quantity, combination or order.
	ManyOf pulumi.StringInput `pulumi:"manyOf"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of acceptable single values for the field.
	OneOf pulumi.StringInput `pulumi:"oneOf"`
}

func (GetStackScriptsStackscriptUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptsStackscriptUserDefinedFieldArgs) ToGetStackScriptsStackscriptUserDefinedFieldOutput() GetStackScriptsStackscriptUserDefinedFieldOutput {
	return i.ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptUserDefinedFieldArgs) ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptUserDefinedFieldOutput)
}

func (i GetStackScriptsStackscriptUserDefinedFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptsStackscriptUserDefinedField] {
	return pulumix.Output[GetStackScriptsStackscriptUserDefinedField]{
		OutputState: i.ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(ctx).OutputState,
	}
}

// GetStackScriptsStackscriptUserDefinedFieldArrayInput is an input type that accepts GetStackScriptsStackscriptUserDefinedFieldArray and GetStackScriptsStackscriptUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `GetStackScriptsStackscriptUserDefinedFieldArrayInput` via:
//
//	GetStackScriptsStackscriptUserDefinedFieldArray{ GetStackScriptsStackscriptUserDefinedFieldArgs{...} }
type GetStackScriptsStackscriptUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToGetStackScriptsStackscriptUserDefinedFieldArrayOutput() GetStackScriptsStackscriptUserDefinedFieldArrayOutput
	ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(context.Context) GetStackScriptsStackscriptUserDefinedFieldArrayOutput
}

type GetStackScriptsStackscriptUserDefinedFieldArray []GetStackScriptsStackscriptUserDefinedFieldInput

func (GetStackScriptsStackscriptUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (i GetStackScriptsStackscriptUserDefinedFieldArray) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutput() GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return i.ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i GetStackScriptsStackscriptUserDefinedFieldArray) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackScriptsStackscriptUserDefinedFieldArrayOutput)
}

func (i GetStackScriptsStackscriptUserDefinedFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptsStackscriptUserDefinedField] {
	return pulumix.Output[[]GetStackScriptsStackscriptUserDefinedField]{
		OutputState: i.ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackScriptsStackscriptUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ToGetStackScriptsStackscriptUserDefinedFieldOutput() GetStackScriptsStackscriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ToGetStackScriptsStackscriptUserDefinedFieldOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackScriptsStackscriptUserDefinedField] {
	return pulumix.Output[GetStackScriptsStackscriptUserDefinedField]{
		OutputState: o.OutputState,
	}
}

// The default value. If not specified, this value will be used.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Default }).(pulumi.StringOutput)
}

// An example value for the field.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Example() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Example }).(pulumi.StringOutput)
}

// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Label }).(pulumi.StringOutput)
}

// A list of acceptable values for the field in any quantity, combination or order.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) ManyOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.ManyOf }).(pulumi.StringOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.Name }).(pulumi.StringOutput)
}

// A list of acceptable single values for the field.
func (o GetStackScriptsStackscriptUserDefinedFieldOutput) OneOf() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackScriptsStackscriptUserDefinedField) string { return v.OneOf }).(pulumi.StringOutput)
}

type GetStackScriptsStackscriptUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackScriptsStackscriptUserDefinedField)(nil)).Elem()
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutput() GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ToGetStackScriptsStackscriptUserDefinedFieldArrayOutputWithContext(ctx context.Context) GetStackScriptsStackscriptUserDefinedFieldArrayOutput {
	return o
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackScriptsStackscriptUserDefinedField] {
	return pulumix.Output[[]GetStackScriptsStackscriptUserDefinedField]{
		OutputState: o.OutputState,
	}
}

func (o GetStackScriptsStackscriptUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) GetStackScriptsStackscriptUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackScriptsStackscriptUserDefinedField {
		return vs[0].([]GetStackScriptsStackscriptUserDefinedField)[vs[1].(int)]
	}).(GetStackScriptsStackscriptUserDefinedFieldOutput)
}

type GetUserDatabaseGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserDatabaseGrantInput is an input type that accepts GetUserDatabaseGrantArgs and GetUserDatabaseGrantOutput values.
// You can construct a concrete instance of `GetUserDatabaseGrantInput` via:
//
//	GetUserDatabaseGrantArgs{...}
type GetUserDatabaseGrantInput interface {
	pulumi.Input

	ToGetUserDatabaseGrantOutput() GetUserDatabaseGrantOutput
	ToGetUserDatabaseGrantOutputWithContext(context.Context) GetUserDatabaseGrantOutput
}

type GetUserDatabaseGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserDatabaseGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserDatabaseGrant)(nil)).Elem()
}

func (i GetUserDatabaseGrantArgs) ToGetUserDatabaseGrantOutput() GetUserDatabaseGrantOutput {
	return i.ToGetUserDatabaseGrantOutputWithContext(context.Background())
}

func (i GetUserDatabaseGrantArgs) ToGetUserDatabaseGrantOutputWithContext(ctx context.Context) GetUserDatabaseGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserDatabaseGrantOutput)
}

func (i GetUserDatabaseGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserDatabaseGrant] {
	return pulumix.Output[GetUserDatabaseGrant]{
		OutputState: i.ToGetUserDatabaseGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserDatabaseGrantArrayInput is an input type that accepts GetUserDatabaseGrantArray and GetUserDatabaseGrantArrayOutput values.
// You can construct a concrete instance of `GetUserDatabaseGrantArrayInput` via:
//
//	GetUserDatabaseGrantArray{ GetUserDatabaseGrantArgs{...} }
type GetUserDatabaseGrantArrayInput interface {
	pulumi.Input

	ToGetUserDatabaseGrantArrayOutput() GetUserDatabaseGrantArrayOutput
	ToGetUserDatabaseGrantArrayOutputWithContext(context.Context) GetUserDatabaseGrantArrayOutput
}

type GetUserDatabaseGrantArray []GetUserDatabaseGrantInput

func (GetUserDatabaseGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserDatabaseGrant)(nil)).Elem()
}

func (i GetUserDatabaseGrantArray) ToGetUserDatabaseGrantArrayOutput() GetUserDatabaseGrantArrayOutput {
	return i.ToGetUserDatabaseGrantArrayOutputWithContext(context.Background())
}

func (i GetUserDatabaseGrantArray) ToGetUserDatabaseGrantArrayOutputWithContext(ctx context.Context) GetUserDatabaseGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserDatabaseGrantArrayOutput)
}

func (i GetUserDatabaseGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserDatabaseGrant] {
	return pulumix.Output[[]GetUserDatabaseGrant]{
		OutputState: i.ToGetUserDatabaseGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserDatabaseGrantOutput struct{ *pulumi.OutputState }

func (GetUserDatabaseGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserDatabaseGrant)(nil)).Elem()
}

func (o GetUserDatabaseGrantOutput) ToGetUserDatabaseGrantOutput() GetUserDatabaseGrantOutput {
	return o
}

func (o GetUserDatabaseGrantOutput) ToGetUserDatabaseGrantOutputWithContext(ctx context.Context) GetUserDatabaseGrantOutput {
	return o
}

func (o GetUserDatabaseGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserDatabaseGrant] {
	return pulumix.Output[GetUserDatabaseGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserDatabaseGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserDatabaseGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserDatabaseGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDatabaseGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserDatabaseGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDatabaseGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserDatabaseGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserDatabaseGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserDatabaseGrant)(nil)).Elem()
}

func (o GetUserDatabaseGrantArrayOutput) ToGetUserDatabaseGrantArrayOutput() GetUserDatabaseGrantArrayOutput {
	return o
}

func (o GetUserDatabaseGrantArrayOutput) ToGetUserDatabaseGrantArrayOutputWithContext(ctx context.Context) GetUserDatabaseGrantArrayOutput {
	return o
}

func (o GetUserDatabaseGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserDatabaseGrant] {
	return pulumix.Output[[]GetUserDatabaseGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserDatabaseGrantArrayOutput) Index(i pulumi.IntInput) GetUserDatabaseGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserDatabaseGrant {
		return vs[0].([]GetUserDatabaseGrant)[vs[1].(int)]
	}).(GetUserDatabaseGrantOutput)
}

type GetUserDomainGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserDomainGrantInput is an input type that accepts GetUserDomainGrantArgs and GetUserDomainGrantOutput values.
// You can construct a concrete instance of `GetUserDomainGrantInput` via:
//
//	GetUserDomainGrantArgs{...}
type GetUserDomainGrantInput interface {
	pulumi.Input

	ToGetUserDomainGrantOutput() GetUserDomainGrantOutput
	ToGetUserDomainGrantOutputWithContext(context.Context) GetUserDomainGrantOutput
}

type GetUserDomainGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserDomainGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserDomainGrant)(nil)).Elem()
}

func (i GetUserDomainGrantArgs) ToGetUserDomainGrantOutput() GetUserDomainGrantOutput {
	return i.ToGetUserDomainGrantOutputWithContext(context.Background())
}

func (i GetUserDomainGrantArgs) ToGetUserDomainGrantOutputWithContext(ctx context.Context) GetUserDomainGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserDomainGrantOutput)
}

func (i GetUserDomainGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserDomainGrant] {
	return pulumix.Output[GetUserDomainGrant]{
		OutputState: i.ToGetUserDomainGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserDomainGrantArrayInput is an input type that accepts GetUserDomainGrantArray and GetUserDomainGrantArrayOutput values.
// You can construct a concrete instance of `GetUserDomainGrantArrayInput` via:
//
//	GetUserDomainGrantArray{ GetUserDomainGrantArgs{...} }
type GetUserDomainGrantArrayInput interface {
	pulumi.Input

	ToGetUserDomainGrantArrayOutput() GetUserDomainGrantArrayOutput
	ToGetUserDomainGrantArrayOutputWithContext(context.Context) GetUserDomainGrantArrayOutput
}

type GetUserDomainGrantArray []GetUserDomainGrantInput

func (GetUserDomainGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserDomainGrant)(nil)).Elem()
}

func (i GetUserDomainGrantArray) ToGetUserDomainGrantArrayOutput() GetUserDomainGrantArrayOutput {
	return i.ToGetUserDomainGrantArrayOutputWithContext(context.Background())
}

func (i GetUserDomainGrantArray) ToGetUserDomainGrantArrayOutputWithContext(ctx context.Context) GetUserDomainGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserDomainGrantArrayOutput)
}

func (i GetUserDomainGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserDomainGrant] {
	return pulumix.Output[[]GetUserDomainGrant]{
		OutputState: i.ToGetUserDomainGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserDomainGrantOutput struct{ *pulumi.OutputState }

func (GetUserDomainGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserDomainGrant)(nil)).Elem()
}

func (o GetUserDomainGrantOutput) ToGetUserDomainGrantOutput() GetUserDomainGrantOutput {
	return o
}

func (o GetUserDomainGrantOutput) ToGetUserDomainGrantOutputWithContext(ctx context.Context) GetUserDomainGrantOutput {
	return o
}

func (o GetUserDomainGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserDomainGrant] {
	return pulumix.Output[GetUserDomainGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserDomainGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserDomainGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserDomainGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserDomainGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserDomainGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserDomainGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserDomainGrant)(nil)).Elem()
}

func (o GetUserDomainGrantArrayOutput) ToGetUserDomainGrantArrayOutput() GetUserDomainGrantArrayOutput {
	return o
}

func (o GetUserDomainGrantArrayOutput) ToGetUserDomainGrantArrayOutputWithContext(ctx context.Context) GetUserDomainGrantArrayOutput {
	return o
}

func (o GetUserDomainGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserDomainGrant] {
	return pulumix.Output[[]GetUserDomainGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserDomainGrantArrayOutput) Index(i pulumi.IntInput) GetUserDomainGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserDomainGrant {
		return vs[0].([]GetUserDomainGrant)[vs[1].(int)]
	}).(GetUserDomainGrantOutput)
}

type GetUserFirewallGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserFirewallGrantInput is an input type that accepts GetUserFirewallGrantArgs and GetUserFirewallGrantOutput values.
// You can construct a concrete instance of `GetUserFirewallGrantInput` via:
//
//	GetUserFirewallGrantArgs{...}
type GetUserFirewallGrantInput interface {
	pulumi.Input

	ToGetUserFirewallGrantOutput() GetUserFirewallGrantOutput
	ToGetUserFirewallGrantOutputWithContext(context.Context) GetUserFirewallGrantOutput
}

type GetUserFirewallGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserFirewallGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserFirewallGrant)(nil)).Elem()
}

func (i GetUserFirewallGrantArgs) ToGetUserFirewallGrantOutput() GetUserFirewallGrantOutput {
	return i.ToGetUserFirewallGrantOutputWithContext(context.Background())
}

func (i GetUserFirewallGrantArgs) ToGetUserFirewallGrantOutputWithContext(ctx context.Context) GetUserFirewallGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserFirewallGrantOutput)
}

func (i GetUserFirewallGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserFirewallGrant] {
	return pulumix.Output[GetUserFirewallGrant]{
		OutputState: i.ToGetUserFirewallGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserFirewallGrantArrayInput is an input type that accepts GetUserFirewallGrantArray and GetUserFirewallGrantArrayOutput values.
// You can construct a concrete instance of `GetUserFirewallGrantArrayInput` via:
//
//	GetUserFirewallGrantArray{ GetUserFirewallGrantArgs{...} }
type GetUserFirewallGrantArrayInput interface {
	pulumi.Input

	ToGetUserFirewallGrantArrayOutput() GetUserFirewallGrantArrayOutput
	ToGetUserFirewallGrantArrayOutputWithContext(context.Context) GetUserFirewallGrantArrayOutput
}

type GetUserFirewallGrantArray []GetUserFirewallGrantInput

func (GetUserFirewallGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserFirewallGrant)(nil)).Elem()
}

func (i GetUserFirewallGrantArray) ToGetUserFirewallGrantArrayOutput() GetUserFirewallGrantArrayOutput {
	return i.ToGetUserFirewallGrantArrayOutputWithContext(context.Background())
}

func (i GetUserFirewallGrantArray) ToGetUserFirewallGrantArrayOutputWithContext(ctx context.Context) GetUserFirewallGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserFirewallGrantArrayOutput)
}

func (i GetUserFirewallGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserFirewallGrant] {
	return pulumix.Output[[]GetUserFirewallGrant]{
		OutputState: i.ToGetUserFirewallGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserFirewallGrantOutput struct{ *pulumi.OutputState }

func (GetUserFirewallGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserFirewallGrant)(nil)).Elem()
}

func (o GetUserFirewallGrantOutput) ToGetUserFirewallGrantOutput() GetUserFirewallGrantOutput {
	return o
}

func (o GetUserFirewallGrantOutput) ToGetUserFirewallGrantOutputWithContext(ctx context.Context) GetUserFirewallGrantOutput {
	return o
}

func (o GetUserFirewallGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserFirewallGrant] {
	return pulumix.Output[GetUserFirewallGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserFirewallGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserFirewallGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserFirewallGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserFirewallGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserFirewallGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserFirewallGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserFirewallGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserFirewallGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserFirewallGrant)(nil)).Elem()
}

func (o GetUserFirewallGrantArrayOutput) ToGetUserFirewallGrantArrayOutput() GetUserFirewallGrantArrayOutput {
	return o
}

func (o GetUserFirewallGrantArrayOutput) ToGetUserFirewallGrantArrayOutputWithContext(ctx context.Context) GetUserFirewallGrantArrayOutput {
	return o
}

func (o GetUserFirewallGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserFirewallGrant] {
	return pulumix.Output[[]GetUserFirewallGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserFirewallGrantArrayOutput) Index(i pulumi.IntInput) GetUserFirewallGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserFirewallGrant {
		return vs[0].([]GetUserFirewallGrant)[vs[1].(int)]
	}).(GetUserFirewallGrantOutput)
}

type GetUserGlobalGrant struct {
	// The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users. (`readOnly`, `readWrite`)
	AccountAccess string `pulumi:"accountAccess"`
	// If true, this User may add Managed Databases.
	AddDatabases bool `pulumi:"addDatabases"`
	// If true, this User may add Domains.
	AddDomains bool `pulumi:"addDomains"`
	// If true, this User may add Firewalls.
	AddFirewalls bool `pulumi:"addFirewalls"`
	// If true, this User may add Images.
	AddImages bool `pulumi:"addImages"`
	// If true, this User may create Linodes.
	AddLinodes bool `pulumi:"addLinodes"`
	// If true, this User may create Longview clients and view the current plan.
	AddLongview bool `pulumi:"addLongview"`
	// If true, this User may add NodeBalancers.
	AddNodebalancers bool `pulumi:"addNodebalancers"`
	AddStackscripts  bool `pulumi:"addStackscripts"`
	// If true, this User may add Volumes.
	AddVolumes bool `pulumi:"addVolumes"`
	// If true, this User may cancel the entire Account.
	CancelAccount bool `pulumi:"cancelAccount"`
	// If true, this User may manage the Account’s Longview subscription.
	LongviewSubscription bool `pulumi:"longviewSubscription"`
}

// GetUserGlobalGrantInput is an input type that accepts GetUserGlobalGrantArgs and GetUserGlobalGrantOutput values.
// You can construct a concrete instance of `GetUserGlobalGrantInput` via:
//
//	GetUserGlobalGrantArgs{...}
type GetUserGlobalGrantInput interface {
	pulumi.Input

	ToGetUserGlobalGrantOutput() GetUserGlobalGrantOutput
	ToGetUserGlobalGrantOutputWithContext(context.Context) GetUserGlobalGrantOutput
}

type GetUserGlobalGrantArgs struct {
	// The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users. (`readOnly`, `readWrite`)
	AccountAccess pulumi.StringInput `pulumi:"accountAccess"`
	// If true, this User may add Managed Databases.
	AddDatabases pulumi.BoolInput `pulumi:"addDatabases"`
	// If true, this User may add Domains.
	AddDomains pulumi.BoolInput `pulumi:"addDomains"`
	// If true, this User may add Firewalls.
	AddFirewalls pulumi.BoolInput `pulumi:"addFirewalls"`
	// If true, this User may add Images.
	AddImages pulumi.BoolInput `pulumi:"addImages"`
	// If true, this User may create Linodes.
	AddLinodes pulumi.BoolInput `pulumi:"addLinodes"`
	// If true, this User may create Longview clients and view the current plan.
	AddLongview pulumi.BoolInput `pulumi:"addLongview"`
	// If true, this User may add NodeBalancers.
	AddNodebalancers pulumi.BoolInput `pulumi:"addNodebalancers"`
	AddStackscripts  pulumi.BoolInput `pulumi:"addStackscripts"`
	// If true, this User may add Volumes.
	AddVolumes pulumi.BoolInput `pulumi:"addVolumes"`
	// If true, this User may cancel the entire Account.
	CancelAccount pulumi.BoolInput `pulumi:"cancelAccount"`
	// If true, this User may manage the Account’s Longview subscription.
	LongviewSubscription pulumi.BoolInput `pulumi:"longviewSubscription"`
}

func (GetUserGlobalGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGlobalGrant)(nil)).Elem()
}

func (i GetUserGlobalGrantArgs) ToGetUserGlobalGrantOutput() GetUserGlobalGrantOutput {
	return i.ToGetUserGlobalGrantOutputWithContext(context.Background())
}

func (i GetUserGlobalGrantArgs) ToGetUserGlobalGrantOutputWithContext(ctx context.Context) GetUserGlobalGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGlobalGrantOutput)
}

func (i GetUserGlobalGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserGlobalGrant] {
	return pulumix.Output[GetUserGlobalGrant]{
		OutputState: i.ToGetUserGlobalGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserGlobalGrantArrayInput is an input type that accepts GetUserGlobalGrantArray and GetUserGlobalGrantArrayOutput values.
// You can construct a concrete instance of `GetUserGlobalGrantArrayInput` via:
//
//	GetUserGlobalGrantArray{ GetUserGlobalGrantArgs{...} }
type GetUserGlobalGrantArrayInput interface {
	pulumi.Input

	ToGetUserGlobalGrantArrayOutput() GetUserGlobalGrantArrayOutput
	ToGetUserGlobalGrantArrayOutputWithContext(context.Context) GetUserGlobalGrantArrayOutput
}

type GetUserGlobalGrantArray []GetUserGlobalGrantInput

func (GetUserGlobalGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGlobalGrant)(nil)).Elem()
}

func (i GetUserGlobalGrantArray) ToGetUserGlobalGrantArrayOutput() GetUserGlobalGrantArrayOutput {
	return i.ToGetUserGlobalGrantArrayOutputWithContext(context.Background())
}

func (i GetUserGlobalGrantArray) ToGetUserGlobalGrantArrayOutputWithContext(ctx context.Context) GetUserGlobalGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGlobalGrantArrayOutput)
}

func (i GetUserGlobalGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserGlobalGrant] {
	return pulumix.Output[[]GetUserGlobalGrant]{
		OutputState: i.ToGetUserGlobalGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserGlobalGrantOutput struct{ *pulumi.OutputState }

func (GetUserGlobalGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGlobalGrant)(nil)).Elem()
}

func (o GetUserGlobalGrantOutput) ToGetUserGlobalGrantOutput() GetUserGlobalGrantOutput {
	return o
}

func (o GetUserGlobalGrantOutput) ToGetUserGlobalGrantOutputWithContext(ctx context.Context) GetUserGlobalGrantOutput {
	return o
}

func (o GetUserGlobalGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserGlobalGrant] {
	return pulumix.Output[GetUserGlobalGrant]{
		OutputState: o.OutputState,
	}
}

// The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users. (`readOnly`, `readWrite`)
func (o GetUserGlobalGrantOutput) AccountAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) string { return v.AccountAccess }).(pulumi.StringOutput)
}

// If true, this User may add Managed Databases.
func (o GetUserGlobalGrantOutput) AddDatabases() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddDatabases }).(pulumi.BoolOutput)
}

// If true, this User may add Domains.
func (o GetUserGlobalGrantOutput) AddDomains() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddDomains }).(pulumi.BoolOutput)
}

// If true, this User may add Firewalls.
func (o GetUserGlobalGrantOutput) AddFirewalls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddFirewalls }).(pulumi.BoolOutput)
}

// If true, this User may add Images.
func (o GetUserGlobalGrantOutput) AddImages() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddImages }).(pulumi.BoolOutput)
}

// If true, this User may create Linodes.
func (o GetUserGlobalGrantOutput) AddLinodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddLinodes }).(pulumi.BoolOutput)
}

// If true, this User may create Longview clients and view the current plan.
func (o GetUserGlobalGrantOutput) AddLongview() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddLongview }).(pulumi.BoolOutput)
}

// If true, this User may add NodeBalancers.
func (o GetUserGlobalGrantOutput) AddNodebalancers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddNodebalancers }).(pulumi.BoolOutput)
}

func (o GetUserGlobalGrantOutput) AddStackscripts() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddStackscripts }).(pulumi.BoolOutput)
}

// If true, this User may add Volumes.
func (o GetUserGlobalGrantOutput) AddVolumes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.AddVolumes }).(pulumi.BoolOutput)
}

// If true, this User may cancel the entire Account.
func (o GetUserGlobalGrantOutput) CancelAccount() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.CancelAccount }).(pulumi.BoolOutput)
}

// If true, this User may manage the Account’s Longview subscription.
func (o GetUserGlobalGrantOutput) LongviewSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserGlobalGrant) bool { return v.LongviewSubscription }).(pulumi.BoolOutput)
}

type GetUserGlobalGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserGlobalGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGlobalGrant)(nil)).Elem()
}

func (o GetUserGlobalGrantArrayOutput) ToGetUserGlobalGrantArrayOutput() GetUserGlobalGrantArrayOutput {
	return o
}

func (o GetUserGlobalGrantArrayOutput) ToGetUserGlobalGrantArrayOutputWithContext(ctx context.Context) GetUserGlobalGrantArrayOutput {
	return o
}

func (o GetUserGlobalGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserGlobalGrant] {
	return pulumix.Output[[]GetUserGlobalGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserGlobalGrantArrayOutput) Index(i pulumi.IntInput) GetUserGlobalGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGlobalGrant {
		return vs[0].([]GetUserGlobalGrant)[vs[1].(int)]
	}).(GetUserGlobalGrantOutput)
}

type GetUserImageGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserImageGrantInput is an input type that accepts GetUserImageGrantArgs and GetUserImageGrantOutput values.
// You can construct a concrete instance of `GetUserImageGrantInput` via:
//
//	GetUserImageGrantArgs{...}
type GetUserImageGrantInput interface {
	pulumi.Input

	ToGetUserImageGrantOutput() GetUserImageGrantOutput
	ToGetUserImageGrantOutputWithContext(context.Context) GetUserImageGrantOutput
}

type GetUserImageGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserImageGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserImageGrant)(nil)).Elem()
}

func (i GetUserImageGrantArgs) ToGetUserImageGrantOutput() GetUserImageGrantOutput {
	return i.ToGetUserImageGrantOutputWithContext(context.Background())
}

func (i GetUserImageGrantArgs) ToGetUserImageGrantOutputWithContext(ctx context.Context) GetUserImageGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserImageGrantOutput)
}

func (i GetUserImageGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserImageGrant] {
	return pulumix.Output[GetUserImageGrant]{
		OutputState: i.ToGetUserImageGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserImageGrantArrayInput is an input type that accepts GetUserImageGrantArray and GetUserImageGrantArrayOutput values.
// You can construct a concrete instance of `GetUserImageGrantArrayInput` via:
//
//	GetUserImageGrantArray{ GetUserImageGrantArgs{...} }
type GetUserImageGrantArrayInput interface {
	pulumi.Input

	ToGetUserImageGrantArrayOutput() GetUserImageGrantArrayOutput
	ToGetUserImageGrantArrayOutputWithContext(context.Context) GetUserImageGrantArrayOutput
}

type GetUserImageGrantArray []GetUserImageGrantInput

func (GetUserImageGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserImageGrant)(nil)).Elem()
}

func (i GetUserImageGrantArray) ToGetUserImageGrantArrayOutput() GetUserImageGrantArrayOutput {
	return i.ToGetUserImageGrantArrayOutputWithContext(context.Background())
}

func (i GetUserImageGrantArray) ToGetUserImageGrantArrayOutputWithContext(ctx context.Context) GetUserImageGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserImageGrantArrayOutput)
}

func (i GetUserImageGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserImageGrant] {
	return pulumix.Output[[]GetUserImageGrant]{
		OutputState: i.ToGetUserImageGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserImageGrantOutput struct{ *pulumi.OutputState }

func (GetUserImageGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserImageGrant)(nil)).Elem()
}

func (o GetUserImageGrantOutput) ToGetUserImageGrantOutput() GetUserImageGrantOutput {
	return o
}

func (o GetUserImageGrantOutput) ToGetUserImageGrantOutputWithContext(ctx context.Context) GetUserImageGrantOutput {
	return o
}

func (o GetUserImageGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserImageGrant] {
	return pulumix.Output[GetUserImageGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserImageGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserImageGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserImageGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserImageGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserImageGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserImageGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserImageGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserImageGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserImageGrant)(nil)).Elem()
}

func (o GetUserImageGrantArrayOutput) ToGetUserImageGrantArrayOutput() GetUserImageGrantArrayOutput {
	return o
}

func (o GetUserImageGrantArrayOutput) ToGetUserImageGrantArrayOutputWithContext(ctx context.Context) GetUserImageGrantArrayOutput {
	return o
}

func (o GetUserImageGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserImageGrant] {
	return pulumix.Output[[]GetUserImageGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserImageGrantArrayOutput) Index(i pulumi.IntInput) GetUserImageGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserImageGrant {
		return vs[0].([]GetUserImageGrant)[vs[1].(int)]
	}).(GetUserImageGrantOutput)
}

type GetUserLinodeGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserLinodeGrantInput is an input type that accepts GetUserLinodeGrantArgs and GetUserLinodeGrantOutput values.
// You can construct a concrete instance of `GetUserLinodeGrantInput` via:
//
//	GetUserLinodeGrantArgs{...}
type GetUserLinodeGrantInput interface {
	pulumi.Input

	ToGetUserLinodeGrantOutput() GetUserLinodeGrantOutput
	ToGetUserLinodeGrantOutputWithContext(context.Context) GetUserLinodeGrantOutput
}

type GetUserLinodeGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserLinodeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserLinodeGrant)(nil)).Elem()
}

func (i GetUserLinodeGrantArgs) ToGetUserLinodeGrantOutput() GetUserLinodeGrantOutput {
	return i.ToGetUserLinodeGrantOutputWithContext(context.Background())
}

func (i GetUserLinodeGrantArgs) ToGetUserLinodeGrantOutputWithContext(ctx context.Context) GetUserLinodeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserLinodeGrantOutput)
}

func (i GetUserLinodeGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserLinodeGrant] {
	return pulumix.Output[GetUserLinodeGrant]{
		OutputState: i.ToGetUserLinodeGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserLinodeGrantArrayInput is an input type that accepts GetUserLinodeGrantArray and GetUserLinodeGrantArrayOutput values.
// You can construct a concrete instance of `GetUserLinodeGrantArrayInput` via:
//
//	GetUserLinodeGrantArray{ GetUserLinodeGrantArgs{...} }
type GetUserLinodeGrantArrayInput interface {
	pulumi.Input

	ToGetUserLinodeGrantArrayOutput() GetUserLinodeGrantArrayOutput
	ToGetUserLinodeGrantArrayOutputWithContext(context.Context) GetUserLinodeGrantArrayOutput
}

type GetUserLinodeGrantArray []GetUserLinodeGrantInput

func (GetUserLinodeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserLinodeGrant)(nil)).Elem()
}

func (i GetUserLinodeGrantArray) ToGetUserLinodeGrantArrayOutput() GetUserLinodeGrantArrayOutput {
	return i.ToGetUserLinodeGrantArrayOutputWithContext(context.Background())
}

func (i GetUserLinodeGrantArray) ToGetUserLinodeGrantArrayOutputWithContext(ctx context.Context) GetUserLinodeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserLinodeGrantArrayOutput)
}

func (i GetUserLinodeGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserLinodeGrant] {
	return pulumix.Output[[]GetUserLinodeGrant]{
		OutputState: i.ToGetUserLinodeGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserLinodeGrantOutput struct{ *pulumi.OutputState }

func (GetUserLinodeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserLinodeGrant)(nil)).Elem()
}

func (o GetUserLinodeGrantOutput) ToGetUserLinodeGrantOutput() GetUserLinodeGrantOutput {
	return o
}

func (o GetUserLinodeGrantOutput) ToGetUserLinodeGrantOutputWithContext(ctx context.Context) GetUserLinodeGrantOutput {
	return o
}

func (o GetUserLinodeGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserLinodeGrant] {
	return pulumix.Output[GetUserLinodeGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserLinodeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserLinodeGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserLinodeGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserLinodeGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserLinodeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserLinodeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserLinodeGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserLinodeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserLinodeGrant)(nil)).Elem()
}

func (o GetUserLinodeGrantArrayOutput) ToGetUserLinodeGrantArrayOutput() GetUserLinodeGrantArrayOutput {
	return o
}

func (o GetUserLinodeGrantArrayOutput) ToGetUserLinodeGrantArrayOutputWithContext(ctx context.Context) GetUserLinodeGrantArrayOutput {
	return o
}

func (o GetUserLinodeGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserLinodeGrant] {
	return pulumix.Output[[]GetUserLinodeGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserLinodeGrantArrayOutput) Index(i pulumi.IntInput) GetUserLinodeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserLinodeGrant {
		return vs[0].([]GetUserLinodeGrant)[vs[1].(int)]
	}).(GetUserLinodeGrantOutput)
}

type GetUserLongviewGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserLongviewGrantInput is an input type that accepts GetUserLongviewGrantArgs and GetUserLongviewGrantOutput values.
// You can construct a concrete instance of `GetUserLongviewGrantInput` via:
//
//	GetUserLongviewGrantArgs{...}
type GetUserLongviewGrantInput interface {
	pulumi.Input

	ToGetUserLongviewGrantOutput() GetUserLongviewGrantOutput
	ToGetUserLongviewGrantOutputWithContext(context.Context) GetUserLongviewGrantOutput
}

type GetUserLongviewGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserLongviewGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserLongviewGrant)(nil)).Elem()
}

func (i GetUserLongviewGrantArgs) ToGetUserLongviewGrantOutput() GetUserLongviewGrantOutput {
	return i.ToGetUserLongviewGrantOutputWithContext(context.Background())
}

func (i GetUserLongviewGrantArgs) ToGetUserLongviewGrantOutputWithContext(ctx context.Context) GetUserLongviewGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserLongviewGrantOutput)
}

func (i GetUserLongviewGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserLongviewGrant] {
	return pulumix.Output[GetUserLongviewGrant]{
		OutputState: i.ToGetUserLongviewGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserLongviewGrantArrayInput is an input type that accepts GetUserLongviewGrantArray and GetUserLongviewGrantArrayOutput values.
// You can construct a concrete instance of `GetUserLongviewGrantArrayInput` via:
//
//	GetUserLongviewGrantArray{ GetUserLongviewGrantArgs{...} }
type GetUserLongviewGrantArrayInput interface {
	pulumi.Input

	ToGetUserLongviewGrantArrayOutput() GetUserLongviewGrantArrayOutput
	ToGetUserLongviewGrantArrayOutputWithContext(context.Context) GetUserLongviewGrantArrayOutput
}

type GetUserLongviewGrantArray []GetUserLongviewGrantInput

func (GetUserLongviewGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserLongviewGrant)(nil)).Elem()
}

func (i GetUserLongviewGrantArray) ToGetUserLongviewGrantArrayOutput() GetUserLongviewGrantArrayOutput {
	return i.ToGetUserLongviewGrantArrayOutputWithContext(context.Background())
}

func (i GetUserLongviewGrantArray) ToGetUserLongviewGrantArrayOutputWithContext(ctx context.Context) GetUserLongviewGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserLongviewGrantArrayOutput)
}

func (i GetUserLongviewGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserLongviewGrant] {
	return pulumix.Output[[]GetUserLongviewGrant]{
		OutputState: i.ToGetUserLongviewGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserLongviewGrantOutput struct{ *pulumi.OutputState }

func (GetUserLongviewGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserLongviewGrant)(nil)).Elem()
}

func (o GetUserLongviewGrantOutput) ToGetUserLongviewGrantOutput() GetUserLongviewGrantOutput {
	return o
}

func (o GetUserLongviewGrantOutput) ToGetUserLongviewGrantOutputWithContext(ctx context.Context) GetUserLongviewGrantOutput {
	return o
}

func (o GetUserLongviewGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserLongviewGrant] {
	return pulumix.Output[GetUserLongviewGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserLongviewGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserLongviewGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserLongviewGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserLongviewGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserLongviewGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserLongviewGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserLongviewGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserLongviewGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserLongviewGrant)(nil)).Elem()
}

func (o GetUserLongviewGrantArrayOutput) ToGetUserLongviewGrantArrayOutput() GetUserLongviewGrantArrayOutput {
	return o
}

func (o GetUserLongviewGrantArrayOutput) ToGetUserLongviewGrantArrayOutputWithContext(ctx context.Context) GetUserLongviewGrantArrayOutput {
	return o
}

func (o GetUserLongviewGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserLongviewGrant] {
	return pulumix.Output[[]GetUserLongviewGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserLongviewGrantArrayOutput) Index(i pulumi.IntInput) GetUserLongviewGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserLongviewGrant {
		return vs[0].([]GetUserLongviewGrant)[vs[1].(int)]
	}).(GetUserLongviewGrantOutput)
}

type GetUserNodebalancerGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserNodebalancerGrantInput is an input type that accepts GetUserNodebalancerGrantArgs and GetUserNodebalancerGrantOutput values.
// You can construct a concrete instance of `GetUserNodebalancerGrantInput` via:
//
//	GetUserNodebalancerGrantArgs{...}
type GetUserNodebalancerGrantInput interface {
	pulumi.Input

	ToGetUserNodebalancerGrantOutput() GetUserNodebalancerGrantOutput
	ToGetUserNodebalancerGrantOutputWithContext(context.Context) GetUserNodebalancerGrantOutput
}

type GetUserNodebalancerGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserNodebalancerGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserNodebalancerGrant)(nil)).Elem()
}

func (i GetUserNodebalancerGrantArgs) ToGetUserNodebalancerGrantOutput() GetUserNodebalancerGrantOutput {
	return i.ToGetUserNodebalancerGrantOutputWithContext(context.Background())
}

func (i GetUserNodebalancerGrantArgs) ToGetUserNodebalancerGrantOutputWithContext(ctx context.Context) GetUserNodebalancerGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserNodebalancerGrantOutput)
}

func (i GetUserNodebalancerGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserNodebalancerGrant] {
	return pulumix.Output[GetUserNodebalancerGrant]{
		OutputState: i.ToGetUserNodebalancerGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserNodebalancerGrantArrayInput is an input type that accepts GetUserNodebalancerGrantArray and GetUserNodebalancerGrantArrayOutput values.
// You can construct a concrete instance of `GetUserNodebalancerGrantArrayInput` via:
//
//	GetUserNodebalancerGrantArray{ GetUserNodebalancerGrantArgs{...} }
type GetUserNodebalancerGrantArrayInput interface {
	pulumi.Input

	ToGetUserNodebalancerGrantArrayOutput() GetUserNodebalancerGrantArrayOutput
	ToGetUserNodebalancerGrantArrayOutputWithContext(context.Context) GetUserNodebalancerGrantArrayOutput
}

type GetUserNodebalancerGrantArray []GetUserNodebalancerGrantInput

func (GetUserNodebalancerGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserNodebalancerGrant)(nil)).Elem()
}

func (i GetUserNodebalancerGrantArray) ToGetUserNodebalancerGrantArrayOutput() GetUserNodebalancerGrantArrayOutput {
	return i.ToGetUserNodebalancerGrantArrayOutputWithContext(context.Background())
}

func (i GetUserNodebalancerGrantArray) ToGetUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) GetUserNodebalancerGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserNodebalancerGrantArrayOutput)
}

func (i GetUserNodebalancerGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserNodebalancerGrant] {
	return pulumix.Output[[]GetUserNodebalancerGrant]{
		OutputState: i.ToGetUserNodebalancerGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserNodebalancerGrantOutput struct{ *pulumi.OutputState }

func (GetUserNodebalancerGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserNodebalancerGrant)(nil)).Elem()
}

func (o GetUserNodebalancerGrantOutput) ToGetUserNodebalancerGrantOutput() GetUserNodebalancerGrantOutput {
	return o
}

func (o GetUserNodebalancerGrantOutput) ToGetUserNodebalancerGrantOutputWithContext(ctx context.Context) GetUserNodebalancerGrantOutput {
	return o
}

func (o GetUserNodebalancerGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserNodebalancerGrant] {
	return pulumix.Output[GetUserNodebalancerGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserNodebalancerGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserNodebalancerGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserNodebalancerGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserNodebalancerGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserNodebalancerGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserNodebalancerGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserNodebalancerGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserNodebalancerGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserNodebalancerGrant)(nil)).Elem()
}

func (o GetUserNodebalancerGrantArrayOutput) ToGetUserNodebalancerGrantArrayOutput() GetUserNodebalancerGrantArrayOutput {
	return o
}

func (o GetUserNodebalancerGrantArrayOutput) ToGetUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) GetUserNodebalancerGrantArrayOutput {
	return o
}

func (o GetUserNodebalancerGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserNodebalancerGrant] {
	return pulumix.Output[[]GetUserNodebalancerGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserNodebalancerGrantArrayOutput) Index(i pulumi.IntInput) GetUserNodebalancerGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserNodebalancerGrant {
		return vs[0].([]GetUserNodebalancerGrant)[vs[1].(int)]
	}).(GetUserNodebalancerGrantOutput)
}

type GetUserStackscriptGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserStackscriptGrantInput is an input type that accepts GetUserStackscriptGrantArgs and GetUserStackscriptGrantOutput values.
// You can construct a concrete instance of `GetUserStackscriptGrantInput` via:
//
//	GetUserStackscriptGrantArgs{...}
type GetUserStackscriptGrantInput interface {
	pulumi.Input

	ToGetUserStackscriptGrantOutput() GetUserStackscriptGrantOutput
	ToGetUserStackscriptGrantOutputWithContext(context.Context) GetUserStackscriptGrantOutput
}

type GetUserStackscriptGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserStackscriptGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserStackscriptGrant)(nil)).Elem()
}

func (i GetUserStackscriptGrantArgs) ToGetUserStackscriptGrantOutput() GetUserStackscriptGrantOutput {
	return i.ToGetUserStackscriptGrantOutputWithContext(context.Background())
}

func (i GetUserStackscriptGrantArgs) ToGetUserStackscriptGrantOutputWithContext(ctx context.Context) GetUserStackscriptGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserStackscriptGrantOutput)
}

func (i GetUserStackscriptGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserStackscriptGrant] {
	return pulumix.Output[GetUserStackscriptGrant]{
		OutputState: i.ToGetUserStackscriptGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserStackscriptGrantArrayInput is an input type that accepts GetUserStackscriptGrantArray and GetUserStackscriptGrantArrayOutput values.
// You can construct a concrete instance of `GetUserStackscriptGrantArrayInput` via:
//
//	GetUserStackscriptGrantArray{ GetUserStackscriptGrantArgs{...} }
type GetUserStackscriptGrantArrayInput interface {
	pulumi.Input

	ToGetUserStackscriptGrantArrayOutput() GetUserStackscriptGrantArrayOutput
	ToGetUserStackscriptGrantArrayOutputWithContext(context.Context) GetUserStackscriptGrantArrayOutput
}

type GetUserStackscriptGrantArray []GetUserStackscriptGrantInput

func (GetUserStackscriptGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserStackscriptGrant)(nil)).Elem()
}

func (i GetUserStackscriptGrantArray) ToGetUserStackscriptGrantArrayOutput() GetUserStackscriptGrantArrayOutput {
	return i.ToGetUserStackscriptGrantArrayOutputWithContext(context.Background())
}

func (i GetUserStackscriptGrantArray) ToGetUserStackscriptGrantArrayOutputWithContext(ctx context.Context) GetUserStackscriptGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserStackscriptGrantArrayOutput)
}

func (i GetUserStackscriptGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserStackscriptGrant] {
	return pulumix.Output[[]GetUserStackscriptGrant]{
		OutputState: i.ToGetUserStackscriptGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserStackscriptGrantOutput struct{ *pulumi.OutputState }

func (GetUserStackscriptGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserStackscriptGrant)(nil)).Elem()
}

func (o GetUserStackscriptGrantOutput) ToGetUserStackscriptGrantOutput() GetUserStackscriptGrantOutput {
	return o
}

func (o GetUserStackscriptGrantOutput) ToGetUserStackscriptGrantOutputWithContext(ctx context.Context) GetUserStackscriptGrantOutput {
	return o
}

func (o GetUserStackscriptGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserStackscriptGrant] {
	return pulumix.Output[GetUserStackscriptGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserStackscriptGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserStackscriptGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserStackscriptGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserStackscriptGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserStackscriptGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserStackscriptGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserStackscriptGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserStackscriptGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserStackscriptGrant)(nil)).Elem()
}

func (o GetUserStackscriptGrantArrayOutput) ToGetUserStackscriptGrantArrayOutput() GetUserStackscriptGrantArrayOutput {
	return o
}

func (o GetUserStackscriptGrantArrayOutput) ToGetUserStackscriptGrantArrayOutputWithContext(ctx context.Context) GetUserStackscriptGrantArrayOutput {
	return o
}

func (o GetUserStackscriptGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserStackscriptGrant] {
	return pulumix.Output[[]GetUserStackscriptGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserStackscriptGrantArrayOutput) Index(i pulumi.IntInput) GetUserStackscriptGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserStackscriptGrant {
		return vs[0].([]GetUserStackscriptGrant)[vs[1].(int)]
	}).(GetUserStackscriptGrantOutput)
}

type GetUserVolumeGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions string `pulumi:"permissions"`
}

// GetUserVolumeGrantInput is an input type that accepts GetUserVolumeGrantArgs and GetUserVolumeGrantOutput values.
// You can construct a concrete instance of `GetUserVolumeGrantInput` via:
//
//	GetUserVolumeGrantArgs{...}
type GetUserVolumeGrantInput interface {
	pulumi.Input

	ToGetUserVolumeGrantOutput() GetUserVolumeGrantOutput
	ToGetUserVolumeGrantOutputWithContext(context.Context) GetUserVolumeGrantOutput
}

type GetUserVolumeGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUserVolumeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserVolumeGrant)(nil)).Elem()
}

func (i GetUserVolumeGrantArgs) ToGetUserVolumeGrantOutput() GetUserVolumeGrantOutput {
	return i.ToGetUserVolumeGrantOutputWithContext(context.Background())
}

func (i GetUserVolumeGrantArgs) ToGetUserVolumeGrantOutputWithContext(ctx context.Context) GetUserVolumeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserVolumeGrantOutput)
}

func (i GetUserVolumeGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserVolumeGrant] {
	return pulumix.Output[GetUserVolumeGrant]{
		OutputState: i.ToGetUserVolumeGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUserVolumeGrantArrayInput is an input type that accepts GetUserVolumeGrantArray and GetUserVolumeGrantArrayOutput values.
// You can construct a concrete instance of `GetUserVolumeGrantArrayInput` via:
//
//	GetUserVolumeGrantArray{ GetUserVolumeGrantArgs{...} }
type GetUserVolumeGrantArrayInput interface {
	pulumi.Input

	ToGetUserVolumeGrantArrayOutput() GetUserVolumeGrantArrayOutput
	ToGetUserVolumeGrantArrayOutputWithContext(context.Context) GetUserVolumeGrantArrayOutput
}

type GetUserVolumeGrantArray []GetUserVolumeGrantInput

func (GetUserVolumeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserVolumeGrant)(nil)).Elem()
}

func (i GetUserVolumeGrantArray) ToGetUserVolumeGrantArrayOutput() GetUserVolumeGrantArrayOutput {
	return i.ToGetUserVolumeGrantArrayOutputWithContext(context.Background())
}

func (i GetUserVolumeGrantArray) ToGetUserVolumeGrantArrayOutputWithContext(ctx context.Context) GetUserVolumeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserVolumeGrantArrayOutput)
}

func (i GetUserVolumeGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserVolumeGrant] {
	return pulumix.Output[[]GetUserVolumeGrant]{
		OutputState: i.ToGetUserVolumeGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserVolumeGrantOutput struct{ *pulumi.OutputState }

func (GetUserVolumeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserVolumeGrant)(nil)).Elem()
}

func (o GetUserVolumeGrantOutput) ToGetUserVolumeGrantOutput() GetUserVolumeGrantOutput {
	return o
}

func (o GetUserVolumeGrantOutput) ToGetUserVolumeGrantOutputWithContext(ctx context.Context) GetUserVolumeGrantOutput {
	return o
}

func (o GetUserVolumeGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserVolumeGrant] {
	return pulumix.Output[GetUserVolumeGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUserVolumeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserVolumeGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUserVolumeGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserVolumeGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access. (`readOnly`, `readWrite`)
func (o GetUserVolumeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserVolumeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUserVolumeGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUserVolumeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserVolumeGrant)(nil)).Elem()
}

func (o GetUserVolumeGrantArrayOutput) ToGetUserVolumeGrantArrayOutput() GetUserVolumeGrantArrayOutput {
	return o
}

func (o GetUserVolumeGrantArrayOutput) ToGetUserVolumeGrantArrayOutputWithContext(ctx context.Context) GetUserVolumeGrantArrayOutput {
	return o
}

func (o GetUserVolumeGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserVolumeGrant] {
	return pulumix.Output[[]GetUserVolumeGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUserVolumeGrantArrayOutput) Index(i pulumi.IntInput) GetUserVolumeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserVolumeGrant {
		return vs[0].([]GetUserVolumeGrant)[vs[1].(int)]
	}).(GetUserVolumeGrantOutput)
}

type GetUsersFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetUsersFilterInput is an input type that accepts GetUsersFilterArgs and GetUsersFilterOutput values.
// You can construct a concrete instance of `GetUsersFilterInput` via:
//
//	GetUsersFilterArgs{...}
type GetUsersFilterInput interface {
	pulumi.Input

	ToGetUsersFilterOutput() GetUsersFilterOutput
	ToGetUsersFilterOutputWithContext(context.Context) GetUsersFilterOutput
}

type GetUsersFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return i.ToGetUsersFilterOutputWithContext(context.Background())
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterOutput)
}

func (i GetUsersFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersFilter] {
	return pulumix.Output[GetUsersFilter]{
		OutputState: i.ToGetUsersFilterOutputWithContext(ctx).OutputState,
	}
}

// GetUsersFilterArrayInput is an input type that accepts GetUsersFilterArray and GetUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUsersFilterArrayInput` via:
//
//	GetUsersFilterArray{ GetUsersFilterArgs{...} }
type GetUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput
	ToGetUsersFilterArrayOutputWithContext(context.Context) GetUsersFilterArrayOutput
}

type GetUsersFilterArray []GetUsersFilterInput

func (GetUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return i.ToGetUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterArrayOutput)
}

func (i GetUsersFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersFilter] {
	return pulumix.Output[[]GetUsersFilter]{
		OutputState: i.ToGetUsersFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersFilter] {
	return pulumix.Output[GetUsersFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetUsersFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersFilter] {
	return pulumix.Output[[]GetUsersFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersFilter {
		return vs[0].([]GetUsersFilter)[vs[1].(int)]
	}).(GetUsersFilterOutput)
}

type GetUsersUser struct {
	DatabaseGrants []GetUsersUserDatabaseGrant `pulumi:"databaseGrants"`
	DomainGrants   []GetUsersUserDomainGrant   `pulumi:"domainGrants"`
	// The email address for this User, for account management communications, and may be used for other communications as configured.
	Email          string                      `pulumi:"email"`
	FirewallGrants []GetUsersUserFirewallGrant `pulumi:"firewallGrants"`
	GlobalGrants   []GetUsersUserGlobalGrant   `pulumi:"globalGrants"`
	// The ID of entity this grant applies to.
	Id                 string                          `pulumi:"id"`
	ImageGrants        []GetUsersUserImageGrant        `pulumi:"imageGrants"`
	LinodeGrants       []GetUsersUserLinodeGrant       `pulumi:"linodeGrants"`
	LongviewGrants     []GetUsersUserLongviewGrant     `pulumi:"longviewGrants"`
	NodebalancerGrants []GetUsersUserNodebalancerGrant `pulumi:"nodebalancerGrants"`
	// The date and time when this User’s current password was created. User passwords are first created during the Account sign-up process, and updated using the Reset Password webpage. null if this User has not created a password yet.
	PasswordCreated string `pulumi:"passwordCreated"`
	// If true, this User must be granted access to perform actions or access entities on this Account.
	Restricted bool `pulumi:"restricted"`
	// A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the authorizedUsers field of a create Linode, rebuild Linode, or create Disk request.
	SshKeys           []string                       `pulumi:"sshKeys"`
	StackscriptGrants []GetUsersUserStackscriptGrant `pulumi:"stackscriptGrants"`
	// A boolean value indicating if the User has Two Factor Authentication (TFA) enabled.
	TfaEnabled bool `pulumi:"tfaEnabled"`
	// This User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).
	Username string `pulumi:"username"`
	// The phone number verified for this User Profile with the Phone Number Verify command. null if this User Profile has no verified phone number.
	VerifiedPhoneNumber string                    `pulumi:"verifiedPhoneNumber"`
	VolumeGrants        []GetUsersUserVolumeGrant `pulumi:"volumeGrants"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	DatabaseGrants GetUsersUserDatabaseGrantArrayInput `pulumi:"databaseGrants"`
	DomainGrants   GetUsersUserDomainGrantArrayInput   `pulumi:"domainGrants"`
	// The email address for this User, for account management communications, and may be used for other communications as configured.
	Email          pulumi.StringInput                  `pulumi:"email"`
	FirewallGrants GetUsersUserFirewallGrantArrayInput `pulumi:"firewallGrants"`
	GlobalGrants   GetUsersUserGlobalGrantArrayInput   `pulumi:"globalGrants"`
	// The ID of entity this grant applies to.
	Id                 pulumi.StringInput                      `pulumi:"id"`
	ImageGrants        GetUsersUserImageGrantArrayInput        `pulumi:"imageGrants"`
	LinodeGrants       GetUsersUserLinodeGrantArrayInput       `pulumi:"linodeGrants"`
	LongviewGrants     GetUsersUserLongviewGrantArrayInput     `pulumi:"longviewGrants"`
	NodebalancerGrants GetUsersUserNodebalancerGrantArrayInput `pulumi:"nodebalancerGrants"`
	// The date and time when this User’s current password was created. User passwords are first created during the Account sign-up process, and updated using the Reset Password webpage. null if this User has not created a password yet.
	PasswordCreated pulumi.StringInput `pulumi:"passwordCreated"`
	// If true, this User must be granted access to perform actions or access entities on this Account.
	Restricted pulumi.BoolInput `pulumi:"restricted"`
	// A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the authorizedUsers field of a create Linode, rebuild Linode, or create Disk request.
	SshKeys           pulumi.StringArrayInput                `pulumi:"sshKeys"`
	StackscriptGrants GetUsersUserStackscriptGrantArrayInput `pulumi:"stackscriptGrants"`
	// A boolean value indicating if the User has Two Factor Authentication (TFA) enabled.
	TfaEnabled pulumi.BoolInput `pulumi:"tfaEnabled"`
	// This User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).
	Username pulumi.StringInput `pulumi:"username"`
	// The phone number verified for this User Profile with the Phone Number Verify command. null if this User Profile has no verified phone number.
	VerifiedPhoneNumber pulumi.StringInput                `pulumi:"verifiedPhoneNumber"`
	VolumeGrants        GetUsersUserVolumeGrantArrayInput `pulumi:"volumeGrants"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

func (i GetUsersUserArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUser] {
	return pulumix.Output[GetUsersUser]{
		OutputState: i.ToGetUsersUserOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

func (i GetUsersUserArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUser] {
	return pulumix.Output[[]GetUsersUser]{
		OutputState: i.ToGetUsersUserArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUser] {
	return pulumix.Output[GetUsersUser]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserOutput) DatabaseGrants() GetUsersUserDatabaseGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserDatabaseGrant { return v.DatabaseGrants }).(GetUsersUserDatabaseGrantArrayOutput)
}

func (o GetUsersUserOutput) DomainGrants() GetUsersUserDomainGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserDomainGrant { return v.DomainGrants }).(GetUsersUserDomainGrantArrayOutput)
}

// The email address for this User, for account management communications, and may be used for other communications as configured.
func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) FirewallGrants() GetUsersUserFirewallGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserFirewallGrant { return v.FirewallGrants }).(GetUsersUserFirewallGrantArrayOutput)
}

func (o GetUsersUserOutput) GlobalGrants() GetUsersUserGlobalGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserGlobalGrant { return v.GlobalGrants }).(GetUsersUserGlobalGrantArrayOutput)
}

// The ID of entity this grant applies to.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) ImageGrants() GetUsersUserImageGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserImageGrant { return v.ImageGrants }).(GetUsersUserImageGrantArrayOutput)
}

func (o GetUsersUserOutput) LinodeGrants() GetUsersUserLinodeGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserLinodeGrant { return v.LinodeGrants }).(GetUsersUserLinodeGrantArrayOutput)
}

func (o GetUsersUserOutput) LongviewGrants() GetUsersUserLongviewGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserLongviewGrant { return v.LongviewGrants }).(GetUsersUserLongviewGrantArrayOutput)
}

func (o GetUsersUserOutput) NodebalancerGrants() GetUsersUserNodebalancerGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserNodebalancerGrant { return v.NodebalancerGrants }).(GetUsersUserNodebalancerGrantArrayOutput)
}

// The date and time when this User’s current password was created. User passwords are first created during the Account sign-up process, and updated using the Reset Password webpage. null if this User has not created a password yet.
func (o GetUsersUserOutput) PasswordCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.PasswordCreated }).(pulumi.StringOutput)
}

// If true, this User must be granted access to perform actions or access entities on this Account.
func (o GetUsersUserOutput) Restricted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.Restricted }).(pulumi.BoolOutput)
}

// A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the authorizedUsers field of a create Linode, rebuild Linode, or create Disk request.
func (o GetUsersUserOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o GetUsersUserOutput) StackscriptGrants() GetUsersUserStackscriptGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserStackscriptGrant { return v.StackscriptGrants }).(GetUsersUserStackscriptGrantArrayOutput)
}

// A boolean value indicating if the User has Two Factor Authentication (TFA) enabled.
func (o GetUsersUserOutput) TfaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.TfaEnabled }).(pulumi.BoolOutput)
}

// This User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).
func (o GetUsersUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Username }).(pulumi.StringOutput)
}

// The phone number verified for this User Profile with the Phone Number Verify command. null if this User Profile has no verified phone number.
func (o GetUsersUserOutput) VerifiedPhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.VerifiedPhoneNumber }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) VolumeGrants() GetUsersUserVolumeGrantArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserVolumeGrant { return v.VolumeGrants }).(GetUsersUserVolumeGrantArrayOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUser] {
	return pulumix.Output[[]GetUsersUser]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

type GetUsersUserDatabaseGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserDatabaseGrantInput is an input type that accepts GetUsersUserDatabaseGrantArgs and GetUsersUserDatabaseGrantOutput values.
// You can construct a concrete instance of `GetUsersUserDatabaseGrantInput` via:
//
//	GetUsersUserDatabaseGrantArgs{...}
type GetUsersUserDatabaseGrantInput interface {
	pulumi.Input

	ToGetUsersUserDatabaseGrantOutput() GetUsersUserDatabaseGrantOutput
	ToGetUsersUserDatabaseGrantOutputWithContext(context.Context) GetUsersUserDatabaseGrantOutput
}

type GetUsersUserDatabaseGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserDatabaseGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserDatabaseGrant)(nil)).Elem()
}

func (i GetUsersUserDatabaseGrantArgs) ToGetUsersUserDatabaseGrantOutput() GetUsersUserDatabaseGrantOutput {
	return i.ToGetUsersUserDatabaseGrantOutputWithContext(context.Background())
}

func (i GetUsersUserDatabaseGrantArgs) ToGetUsersUserDatabaseGrantOutputWithContext(ctx context.Context) GetUsersUserDatabaseGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserDatabaseGrantOutput)
}

func (i GetUsersUserDatabaseGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserDatabaseGrant] {
	return pulumix.Output[GetUsersUserDatabaseGrant]{
		OutputState: i.ToGetUsersUserDatabaseGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserDatabaseGrantArrayInput is an input type that accepts GetUsersUserDatabaseGrantArray and GetUsersUserDatabaseGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserDatabaseGrantArrayInput` via:
//
//	GetUsersUserDatabaseGrantArray{ GetUsersUserDatabaseGrantArgs{...} }
type GetUsersUserDatabaseGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserDatabaseGrantArrayOutput() GetUsersUserDatabaseGrantArrayOutput
	ToGetUsersUserDatabaseGrantArrayOutputWithContext(context.Context) GetUsersUserDatabaseGrantArrayOutput
}

type GetUsersUserDatabaseGrantArray []GetUsersUserDatabaseGrantInput

func (GetUsersUserDatabaseGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserDatabaseGrant)(nil)).Elem()
}

func (i GetUsersUserDatabaseGrantArray) ToGetUsersUserDatabaseGrantArrayOutput() GetUsersUserDatabaseGrantArrayOutput {
	return i.ToGetUsersUserDatabaseGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserDatabaseGrantArray) ToGetUsersUserDatabaseGrantArrayOutputWithContext(ctx context.Context) GetUsersUserDatabaseGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserDatabaseGrantArrayOutput)
}

func (i GetUsersUserDatabaseGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserDatabaseGrant] {
	return pulumix.Output[[]GetUsersUserDatabaseGrant]{
		OutputState: i.ToGetUsersUserDatabaseGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserDatabaseGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserDatabaseGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserDatabaseGrant)(nil)).Elem()
}

func (o GetUsersUserDatabaseGrantOutput) ToGetUsersUserDatabaseGrantOutput() GetUsersUserDatabaseGrantOutput {
	return o
}

func (o GetUsersUserDatabaseGrantOutput) ToGetUsersUserDatabaseGrantOutputWithContext(ctx context.Context) GetUsersUserDatabaseGrantOutput {
	return o
}

func (o GetUsersUserDatabaseGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserDatabaseGrant] {
	return pulumix.Output[GetUsersUserDatabaseGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserDatabaseGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserDatabaseGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserDatabaseGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserDatabaseGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserDatabaseGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserDatabaseGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserDatabaseGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserDatabaseGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserDatabaseGrant)(nil)).Elem()
}

func (o GetUsersUserDatabaseGrantArrayOutput) ToGetUsersUserDatabaseGrantArrayOutput() GetUsersUserDatabaseGrantArrayOutput {
	return o
}

func (o GetUsersUserDatabaseGrantArrayOutput) ToGetUsersUserDatabaseGrantArrayOutputWithContext(ctx context.Context) GetUsersUserDatabaseGrantArrayOutput {
	return o
}

func (o GetUsersUserDatabaseGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserDatabaseGrant] {
	return pulumix.Output[[]GetUsersUserDatabaseGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserDatabaseGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserDatabaseGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserDatabaseGrant {
		return vs[0].([]GetUsersUserDatabaseGrant)[vs[1].(int)]
	}).(GetUsersUserDatabaseGrantOutput)
}

type GetUsersUserDomainGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserDomainGrantInput is an input type that accepts GetUsersUserDomainGrantArgs and GetUsersUserDomainGrantOutput values.
// You can construct a concrete instance of `GetUsersUserDomainGrantInput` via:
//
//	GetUsersUserDomainGrantArgs{...}
type GetUsersUserDomainGrantInput interface {
	pulumi.Input

	ToGetUsersUserDomainGrantOutput() GetUsersUserDomainGrantOutput
	ToGetUsersUserDomainGrantOutputWithContext(context.Context) GetUsersUserDomainGrantOutput
}

type GetUsersUserDomainGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserDomainGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserDomainGrant)(nil)).Elem()
}

func (i GetUsersUserDomainGrantArgs) ToGetUsersUserDomainGrantOutput() GetUsersUserDomainGrantOutput {
	return i.ToGetUsersUserDomainGrantOutputWithContext(context.Background())
}

func (i GetUsersUserDomainGrantArgs) ToGetUsersUserDomainGrantOutputWithContext(ctx context.Context) GetUsersUserDomainGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserDomainGrantOutput)
}

func (i GetUsersUserDomainGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserDomainGrant] {
	return pulumix.Output[GetUsersUserDomainGrant]{
		OutputState: i.ToGetUsersUserDomainGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserDomainGrantArrayInput is an input type that accepts GetUsersUserDomainGrantArray and GetUsersUserDomainGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserDomainGrantArrayInput` via:
//
//	GetUsersUserDomainGrantArray{ GetUsersUserDomainGrantArgs{...} }
type GetUsersUserDomainGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserDomainGrantArrayOutput() GetUsersUserDomainGrantArrayOutput
	ToGetUsersUserDomainGrantArrayOutputWithContext(context.Context) GetUsersUserDomainGrantArrayOutput
}

type GetUsersUserDomainGrantArray []GetUsersUserDomainGrantInput

func (GetUsersUserDomainGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserDomainGrant)(nil)).Elem()
}

func (i GetUsersUserDomainGrantArray) ToGetUsersUserDomainGrantArrayOutput() GetUsersUserDomainGrantArrayOutput {
	return i.ToGetUsersUserDomainGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserDomainGrantArray) ToGetUsersUserDomainGrantArrayOutputWithContext(ctx context.Context) GetUsersUserDomainGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserDomainGrantArrayOutput)
}

func (i GetUsersUserDomainGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserDomainGrant] {
	return pulumix.Output[[]GetUsersUserDomainGrant]{
		OutputState: i.ToGetUsersUserDomainGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserDomainGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserDomainGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserDomainGrant)(nil)).Elem()
}

func (o GetUsersUserDomainGrantOutput) ToGetUsersUserDomainGrantOutput() GetUsersUserDomainGrantOutput {
	return o
}

func (o GetUsersUserDomainGrantOutput) ToGetUsersUserDomainGrantOutputWithContext(ctx context.Context) GetUsersUserDomainGrantOutput {
	return o
}

func (o GetUsersUserDomainGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserDomainGrant] {
	return pulumix.Output[GetUsersUserDomainGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserDomainGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserDomainGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserDomainGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserDomainGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserDomainGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserDomainGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserDomainGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserDomainGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserDomainGrant)(nil)).Elem()
}

func (o GetUsersUserDomainGrantArrayOutput) ToGetUsersUserDomainGrantArrayOutput() GetUsersUserDomainGrantArrayOutput {
	return o
}

func (o GetUsersUserDomainGrantArrayOutput) ToGetUsersUserDomainGrantArrayOutputWithContext(ctx context.Context) GetUsersUserDomainGrantArrayOutput {
	return o
}

func (o GetUsersUserDomainGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserDomainGrant] {
	return pulumix.Output[[]GetUsersUserDomainGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserDomainGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserDomainGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserDomainGrant {
		return vs[0].([]GetUsersUserDomainGrant)[vs[1].(int)]
	}).(GetUsersUserDomainGrantOutput)
}

type GetUsersUserFirewallGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserFirewallGrantInput is an input type that accepts GetUsersUserFirewallGrantArgs and GetUsersUserFirewallGrantOutput values.
// You can construct a concrete instance of `GetUsersUserFirewallGrantInput` via:
//
//	GetUsersUserFirewallGrantArgs{...}
type GetUsersUserFirewallGrantInput interface {
	pulumi.Input

	ToGetUsersUserFirewallGrantOutput() GetUsersUserFirewallGrantOutput
	ToGetUsersUserFirewallGrantOutputWithContext(context.Context) GetUsersUserFirewallGrantOutput
}

type GetUsersUserFirewallGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserFirewallGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserFirewallGrant)(nil)).Elem()
}

func (i GetUsersUserFirewallGrantArgs) ToGetUsersUserFirewallGrantOutput() GetUsersUserFirewallGrantOutput {
	return i.ToGetUsersUserFirewallGrantOutputWithContext(context.Background())
}

func (i GetUsersUserFirewallGrantArgs) ToGetUsersUserFirewallGrantOutputWithContext(ctx context.Context) GetUsersUserFirewallGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserFirewallGrantOutput)
}

func (i GetUsersUserFirewallGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserFirewallGrant] {
	return pulumix.Output[GetUsersUserFirewallGrant]{
		OutputState: i.ToGetUsersUserFirewallGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserFirewallGrantArrayInput is an input type that accepts GetUsersUserFirewallGrantArray and GetUsersUserFirewallGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserFirewallGrantArrayInput` via:
//
//	GetUsersUserFirewallGrantArray{ GetUsersUserFirewallGrantArgs{...} }
type GetUsersUserFirewallGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserFirewallGrantArrayOutput() GetUsersUserFirewallGrantArrayOutput
	ToGetUsersUserFirewallGrantArrayOutputWithContext(context.Context) GetUsersUserFirewallGrantArrayOutput
}

type GetUsersUserFirewallGrantArray []GetUsersUserFirewallGrantInput

func (GetUsersUserFirewallGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserFirewallGrant)(nil)).Elem()
}

func (i GetUsersUserFirewallGrantArray) ToGetUsersUserFirewallGrantArrayOutput() GetUsersUserFirewallGrantArrayOutput {
	return i.ToGetUsersUserFirewallGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserFirewallGrantArray) ToGetUsersUserFirewallGrantArrayOutputWithContext(ctx context.Context) GetUsersUserFirewallGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserFirewallGrantArrayOutput)
}

func (i GetUsersUserFirewallGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserFirewallGrant] {
	return pulumix.Output[[]GetUsersUserFirewallGrant]{
		OutputState: i.ToGetUsersUserFirewallGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserFirewallGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserFirewallGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserFirewallGrant)(nil)).Elem()
}

func (o GetUsersUserFirewallGrantOutput) ToGetUsersUserFirewallGrantOutput() GetUsersUserFirewallGrantOutput {
	return o
}

func (o GetUsersUserFirewallGrantOutput) ToGetUsersUserFirewallGrantOutputWithContext(ctx context.Context) GetUsersUserFirewallGrantOutput {
	return o
}

func (o GetUsersUserFirewallGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserFirewallGrant] {
	return pulumix.Output[GetUsersUserFirewallGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserFirewallGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserFirewallGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserFirewallGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserFirewallGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserFirewallGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserFirewallGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserFirewallGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserFirewallGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserFirewallGrant)(nil)).Elem()
}

func (o GetUsersUserFirewallGrantArrayOutput) ToGetUsersUserFirewallGrantArrayOutput() GetUsersUserFirewallGrantArrayOutput {
	return o
}

func (o GetUsersUserFirewallGrantArrayOutput) ToGetUsersUserFirewallGrantArrayOutputWithContext(ctx context.Context) GetUsersUserFirewallGrantArrayOutput {
	return o
}

func (o GetUsersUserFirewallGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserFirewallGrant] {
	return pulumix.Output[[]GetUsersUserFirewallGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserFirewallGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserFirewallGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserFirewallGrant {
		return vs[0].([]GetUsersUserFirewallGrant)[vs[1].(int)]
	}).(GetUsersUserFirewallGrantOutput)
}

type GetUsersUserGlobalGrant struct {
	// The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users. (`readOnly`, `readWrite`)
	AccountAccess string `pulumi:"accountAccess"`
	// If true, this User may add Managed Databases.
	AddDatabases bool `pulumi:"addDatabases"`
	// If true, this User may add Domains.
	AddDomains bool `pulumi:"addDomains"`
	// If true, this User may add Firewalls.
	AddFirewalls bool `pulumi:"addFirewalls"`
	// If true, this User may add Images.
	AddImages bool `pulumi:"addImages"`
	// If true, this User may create Linodes.
	AddLinodes bool `pulumi:"addLinodes"`
	// If true, this User may create Longview clients and view the current plan.
	AddLongview bool `pulumi:"addLongview"`
	// If true, this User may add NodeBalancers.
	AddNodebalancers bool `pulumi:"addNodebalancers"`
	AddStackscripts  bool `pulumi:"addStackscripts"`
	// If true, this User may add Volumes.
	AddVolumes bool `pulumi:"addVolumes"`
	// If true, this User may cancel the entire Account.
	CancelAccount bool `pulumi:"cancelAccount"`
	// If true, this User may manage the Account’s Longview subscription.
	LongviewSubscription bool `pulumi:"longviewSubscription"`
}

// GetUsersUserGlobalGrantInput is an input type that accepts GetUsersUserGlobalGrantArgs and GetUsersUserGlobalGrantOutput values.
// You can construct a concrete instance of `GetUsersUserGlobalGrantInput` via:
//
//	GetUsersUserGlobalGrantArgs{...}
type GetUsersUserGlobalGrantInput interface {
	pulumi.Input

	ToGetUsersUserGlobalGrantOutput() GetUsersUserGlobalGrantOutput
	ToGetUsersUserGlobalGrantOutputWithContext(context.Context) GetUsersUserGlobalGrantOutput
}

type GetUsersUserGlobalGrantArgs struct {
	// The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users. (`readOnly`, `readWrite`)
	AccountAccess pulumi.StringInput `pulumi:"accountAccess"`
	// If true, this User may add Managed Databases.
	AddDatabases pulumi.BoolInput `pulumi:"addDatabases"`
	// If true, this User may add Domains.
	AddDomains pulumi.BoolInput `pulumi:"addDomains"`
	// If true, this User may add Firewalls.
	AddFirewalls pulumi.BoolInput `pulumi:"addFirewalls"`
	// If true, this User may add Images.
	AddImages pulumi.BoolInput `pulumi:"addImages"`
	// If true, this User may create Linodes.
	AddLinodes pulumi.BoolInput `pulumi:"addLinodes"`
	// If true, this User may create Longview clients and view the current plan.
	AddLongview pulumi.BoolInput `pulumi:"addLongview"`
	// If true, this User may add NodeBalancers.
	AddNodebalancers pulumi.BoolInput `pulumi:"addNodebalancers"`
	AddStackscripts  pulumi.BoolInput `pulumi:"addStackscripts"`
	// If true, this User may add Volumes.
	AddVolumes pulumi.BoolInput `pulumi:"addVolumes"`
	// If true, this User may cancel the entire Account.
	CancelAccount pulumi.BoolInput `pulumi:"cancelAccount"`
	// If true, this User may manage the Account’s Longview subscription.
	LongviewSubscription pulumi.BoolInput `pulumi:"longviewSubscription"`
}

func (GetUsersUserGlobalGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserGlobalGrant)(nil)).Elem()
}

func (i GetUsersUserGlobalGrantArgs) ToGetUsersUserGlobalGrantOutput() GetUsersUserGlobalGrantOutput {
	return i.ToGetUsersUserGlobalGrantOutputWithContext(context.Background())
}

func (i GetUsersUserGlobalGrantArgs) ToGetUsersUserGlobalGrantOutputWithContext(ctx context.Context) GetUsersUserGlobalGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserGlobalGrantOutput)
}

func (i GetUsersUserGlobalGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserGlobalGrant] {
	return pulumix.Output[GetUsersUserGlobalGrant]{
		OutputState: i.ToGetUsersUserGlobalGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserGlobalGrantArrayInput is an input type that accepts GetUsersUserGlobalGrantArray and GetUsersUserGlobalGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserGlobalGrantArrayInput` via:
//
//	GetUsersUserGlobalGrantArray{ GetUsersUserGlobalGrantArgs{...} }
type GetUsersUserGlobalGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserGlobalGrantArrayOutput() GetUsersUserGlobalGrantArrayOutput
	ToGetUsersUserGlobalGrantArrayOutputWithContext(context.Context) GetUsersUserGlobalGrantArrayOutput
}

type GetUsersUserGlobalGrantArray []GetUsersUserGlobalGrantInput

func (GetUsersUserGlobalGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserGlobalGrant)(nil)).Elem()
}

func (i GetUsersUserGlobalGrantArray) ToGetUsersUserGlobalGrantArrayOutput() GetUsersUserGlobalGrantArrayOutput {
	return i.ToGetUsersUserGlobalGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserGlobalGrantArray) ToGetUsersUserGlobalGrantArrayOutputWithContext(ctx context.Context) GetUsersUserGlobalGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserGlobalGrantArrayOutput)
}

func (i GetUsersUserGlobalGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserGlobalGrant] {
	return pulumix.Output[[]GetUsersUserGlobalGrant]{
		OutputState: i.ToGetUsersUserGlobalGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserGlobalGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserGlobalGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserGlobalGrant)(nil)).Elem()
}

func (o GetUsersUserGlobalGrantOutput) ToGetUsersUserGlobalGrantOutput() GetUsersUserGlobalGrantOutput {
	return o
}

func (o GetUsersUserGlobalGrantOutput) ToGetUsersUserGlobalGrantOutputWithContext(ctx context.Context) GetUsersUserGlobalGrantOutput {
	return o
}

func (o GetUsersUserGlobalGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserGlobalGrant] {
	return pulumix.Output[GetUsersUserGlobalGrant]{
		OutputState: o.OutputState,
	}
}

// The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users. (`readOnly`, `readWrite`)
func (o GetUsersUserGlobalGrantOutput) AccountAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) string { return v.AccountAccess }).(pulumi.StringOutput)
}

// If true, this User may add Managed Databases.
func (o GetUsersUserGlobalGrantOutput) AddDatabases() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddDatabases }).(pulumi.BoolOutput)
}

// If true, this User may add Domains.
func (o GetUsersUserGlobalGrantOutput) AddDomains() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddDomains }).(pulumi.BoolOutput)
}

// If true, this User may add Firewalls.
func (o GetUsersUserGlobalGrantOutput) AddFirewalls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddFirewalls }).(pulumi.BoolOutput)
}

// If true, this User may add Images.
func (o GetUsersUserGlobalGrantOutput) AddImages() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddImages }).(pulumi.BoolOutput)
}

// If true, this User may create Linodes.
func (o GetUsersUserGlobalGrantOutput) AddLinodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddLinodes }).(pulumi.BoolOutput)
}

// If true, this User may create Longview clients and view the current plan.
func (o GetUsersUserGlobalGrantOutput) AddLongview() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddLongview }).(pulumi.BoolOutput)
}

// If true, this User may add NodeBalancers.
func (o GetUsersUserGlobalGrantOutput) AddNodebalancers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddNodebalancers }).(pulumi.BoolOutput)
}

func (o GetUsersUserGlobalGrantOutput) AddStackscripts() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddStackscripts }).(pulumi.BoolOutput)
}

// If true, this User may add Volumes.
func (o GetUsersUserGlobalGrantOutput) AddVolumes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.AddVolumes }).(pulumi.BoolOutput)
}

// If true, this User may cancel the entire Account.
func (o GetUsersUserGlobalGrantOutput) CancelAccount() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.CancelAccount }).(pulumi.BoolOutput)
}

// If true, this User may manage the Account’s Longview subscription.
func (o GetUsersUserGlobalGrantOutput) LongviewSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUserGlobalGrant) bool { return v.LongviewSubscription }).(pulumi.BoolOutput)
}

type GetUsersUserGlobalGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserGlobalGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserGlobalGrant)(nil)).Elem()
}

func (o GetUsersUserGlobalGrantArrayOutput) ToGetUsersUserGlobalGrantArrayOutput() GetUsersUserGlobalGrantArrayOutput {
	return o
}

func (o GetUsersUserGlobalGrantArrayOutput) ToGetUsersUserGlobalGrantArrayOutputWithContext(ctx context.Context) GetUsersUserGlobalGrantArrayOutput {
	return o
}

func (o GetUsersUserGlobalGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserGlobalGrant] {
	return pulumix.Output[[]GetUsersUserGlobalGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserGlobalGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserGlobalGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserGlobalGrant {
		return vs[0].([]GetUsersUserGlobalGrant)[vs[1].(int)]
	}).(GetUsersUserGlobalGrantOutput)
}

type GetUsersUserImageGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserImageGrantInput is an input type that accepts GetUsersUserImageGrantArgs and GetUsersUserImageGrantOutput values.
// You can construct a concrete instance of `GetUsersUserImageGrantInput` via:
//
//	GetUsersUserImageGrantArgs{...}
type GetUsersUserImageGrantInput interface {
	pulumi.Input

	ToGetUsersUserImageGrantOutput() GetUsersUserImageGrantOutput
	ToGetUsersUserImageGrantOutputWithContext(context.Context) GetUsersUserImageGrantOutput
}

type GetUsersUserImageGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserImageGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserImageGrant)(nil)).Elem()
}

func (i GetUsersUserImageGrantArgs) ToGetUsersUserImageGrantOutput() GetUsersUserImageGrantOutput {
	return i.ToGetUsersUserImageGrantOutputWithContext(context.Background())
}

func (i GetUsersUserImageGrantArgs) ToGetUsersUserImageGrantOutputWithContext(ctx context.Context) GetUsersUserImageGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserImageGrantOutput)
}

func (i GetUsersUserImageGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserImageGrant] {
	return pulumix.Output[GetUsersUserImageGrant]{
		OutputState: i.ToGetUsersUserImageGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserImageGrantArrayInput is an input type that accepts GetUsersUserImageGrantArray and GetUsersUserImageGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserImageGrantArrayInput` via:
//
//	GetUsersUserImageGrantArray{ GetUsersUserImageGrantArgs{...} }
type GetUsersUserImageGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserImageGrantArrayOutput() GetUsersUserImageGrantArrayOutput
	ToGetUsersUserImageGrantArrayOutputWithContext(context.Context) GetUsersUserImageGrantArrayOutput
}

type GetUsersUserImageGrantArray []GetUsersUserImageGrantInput

func (GetUsersUserImageGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserImageGrant)(nil)).Elem()
}

func (i GetUsersUserImageGrantArray) ToGetUsersUserImageGrantArrayOutput() GetUsersUserImageGrantArrayOutput {
	return i.ToGetUsersUserImageGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserImageGrantArray) ToGetUsersUserImageGrantArrayOutputWithContext(ctx context.Context) GetUsersUserImageGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserImageGrantArrayOutput)
}

func (i GetUsersUserImageGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserImageGrant] {
	return pulumix.Output[[]GetUsersUserImageGrant]{
		OutputState: i.ToGetUsersUserImageGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserImageGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserImageGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserImageGrant)(nil)).Elem()
}

func (o GetUsersUserImageGrantOutput) ToGetUsersUserImageGrantOutput() GetUsersUserImageGrantOutput {
	return o
}

func (o GetUsersUserImageGrantOutput) ToGetUsersUserImageGrantOutputWithContext(ctx context.Context) GetUsersUserImageGrantOutput {
	return o
}

func (o GetUsersUserImageGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserImageGrant] {
	return pulumix.Output[GetUsersUserImageGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserImageGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserImageGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserImageGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserImageGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserImageGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserImageGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserImageGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserImageGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserImageGrant)(nil)).Elem()
}

func (o GetUsersUserImageGrantArrayOutput) ToGetUsersUserImageGrantArrayOutput() GetUsersUserImageGrantArrayOutput {
	return o
}

func (o GetUsersUserImageGrantArrayOutput) ToGetUsersUserImageGrantArrayOutputWithContext(ctx context.Context) GetUsersUserImageGrantArrayOutput {
	return o
}

func (o GetUsersUserImageGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserImageGrant] {
	return pulumix.Output[[]GetUsersUserImageGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserImageGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserImageGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserImageGrant {
		return vs[0].([]GetUsersUserImageGrant)[vs[1].(int)]
	}).(GetUsersUserImageGrantOutput)
}

type GetUsersUserLinodeGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserLinodeGrantInput is an input type that accepts GetUsersUserLinodeGrantArgs and GetUsersUserLinodeGrantOutput values.
// You can construct a concrete instance of `GetUsersUserLinodeGrantInput` via:
//
//	GetUsersUserLinodeGrantArgs{...}
type GetUsersUserLinodeGrantInput interface {
	pulumi.Input

	ToGetUsersUserLinodeGrantOutput() GetUsersUserLinodeGrantOutput
	ToGetUsersUserLinodeGrantOutputWithContext(context.Context) GetUsersUserLinodeGrantOutput
}

type GetUsersUserLinodeGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserLinodeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserLinodeGrant)(nil)).Elem()
}

func (i GetUsersUserLinodeGrantArgs) ToGetUsersUserLinodeGrantOutput() GetUsersUserLinodeGrantOutput {
	return i.ToGetUsersUserLinodeGrantOutputWithContext(context.Background())
}

func (i GetUsersUserLinodeGrantArgs) ToGetUsersUserLinodeGrantOutputWithContext(ctx context.Context) GetUsersUserLinodeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserLinodeGrantOutput)
}

func (i GetUsersUserLinodeGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserLinodeGrant] {
	return pulumix.Output[GetUsersUserLinodeGrant]{
		OutputState: i.ToGetUsersUserLinodeGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserLinodeGrantArrayInput is an input type that accepts GetUsersUserLinodeGrantArray and GetUsersUserLinodeGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserLinodeGrantArrayInput` via:
//
//	GetUsersUserLinodeGrantArray{ GetUsersUserLinodeGrantArgs{...} }
type GetUsersUserLinodeGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserLinodeGrantArrayOutput() GetUsersUserLinodeGrantArrayOutput
	ToGetUsersUserLinodeGrantArrayOutputWithContext(context.Context) GetUsersUserLinodeGrantArrayOutput
}

type GetUsersUserLinodeGrantArray []GetUsersUserLinodeGrantInput

func (GetUsersUserLinodeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserLinodeGrant)(nil)).Elem()
}

func (i GetUsersUserLinodeGrantArray) ToGetUsersUserLinodeGrantArrayOutput() GetUsersUserLinodeGrantArrayOutput {
	return i.ToGetUsersUserLinodeGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserLinodeGrantArray) ToGetUsersUserLinodeGrantArrayOutputWithContext(ctx context.Context) GetUsersUserLinodeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserLinodeGrantArrayOutput)
}

func (i GetUsersUserLinodeGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserLinodeGrant] {
	return pulumix.Output[[]GetUsersUserLinodeGrant]{
		OutputState: i.ToGetUsersUserLinodeGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserLinodeGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserLinodeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserLinodeGrant)(nil)).Elem()
}

func (o GetUsersUserLinodeGrantOutput) ToGetUsersUserLinodeGrantOutput() GetUsersUserLinodeGrantOutput {
	return o
}

func (o GetUsersUserLinodeGrantOutput) ToGetUsersUserLinodeGrantOutputWithContext(ctx context.Context) GetUsersUserLinodeGrantOutput {
	return o
}

func (o GetUsersUserLinodeGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserLinodeGrant] {
	return pulumix.Output[GetUsersUserLinodeGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserLinodeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserLinodeGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserLinodeGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserLinodeGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserLinodeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserLinodeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserLinodeGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserLinodeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserLinodeGrant)(nil)).Elem()
}

func (o GetUsersUserLinodeGrantArrayOutput) ToGetUsersUserLinodeGrantArrayOutput() GetUsersUserLinodeGrantArrayOutput {
	return o
}

func (o GetUsersUserLinodeGrantArrayOutput) ToGetUsersUserLinodeGrantArrayOutputWithContext(ctx context.Context) GetUsersUserLinodeGrantArrayOutput {
	return o
}

func (o GetUsersUserLinodeGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserLinodeGrant] {
	return pulumix.Output[[]GetUsersUserLinodeGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserLinodeGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserLinodeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserLinodeGrant {
		return vs[0].([]GetUsersUserLinodeGrant)[vs[1].(int)]
	}).(GetUsersUserLinodeGrantOutput)
}

type GetUsersUserLongviewGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserLongviewGrantInput is an input type that accepts GetUsersUserLongviewGrantArgs and GetUsersUserLongviewGrantOutput values.
// You can construct a concrete instance of `GetUsersUserLongviewGrantInput` via:
//
//	GetUsersUserLongviewGrantArgs{...}
type GetUsersUserLongviewGrantInput interface {
	pulumi.Input

	ToGetUsersUserLongviewGrantOutput() GetUsersUserLongviewGrantOutput
	ToGetUsersUserLongviewGrantOutputWithContext(context.Context) GetUsersUserLongviewGrantOutput
}

type GetUsersUserLongviewGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserLongviewGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserLongviewGrant)(nil)).Elem()
}

func (i GetUsersUserLongviewGrantArgs) ToGetUsersUserLongviewGrantOutput() GetUsersUserLongviewGrantOutput {
	return i.ToGetUsersUserLongviewGrantOutputWithContext(context.Background())
}

func (i GetUsersUserLongviewGrantArgs) ToGetUsersUserLongviewGrantOutputWithContext(ctx context.Context) GetUsersUserLongviewGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserLongviewGrantOutput)
}

func (i GetUsersUserLongviewGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserLongviewGrant] {
	return pulumix.Output[GetUsersUserLongviewGrant]{
		OutputState: i.ToGetUsersUserLongviewGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserLongviewGrantArrayInput is an input type that accepts GetUsersUserLongviewGrantArray and GetUsersUserLongviewGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserLongviewGrantArrayInput` via:
//
//	GetUsersUserLongviewGrantArray{ GetUsersUserLongviewGrantArgs{...} }
type GetUsersUserLongviewGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserLongviewGrantArrayOutput() GetUsersUserLongviewGrantArrayOutput
	ToGetUsersUserLongviewGrantArrayOutputWithContext(context.Context) GetUsersUserLongviewGrantArrayOutput
}

type GetUsersUserLongviewGrantArray []GetUsersUserLongviewGrantInput

func (GetUsersUserLongviewGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserLongviewGrant)(nil)).Elem()
}

func (i GetUsersUserLongviewGrantArray) ToGetUsersUserLongviewGrantArrayOutput() GetUsersUserLongviewGrantArrayOutput {
	return i.ToGetUsersUserLongviewGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserLongviewGrantArray) ToGetUsersUserLongviewGrantArrayOutputWithContext(ctx context.Context) GetUsersUserLongviewGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserLongviewGrantArrayOutput)
}

func (i GetUsersUserLongviewGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserLongviewGrant] {
	return pulumix.Output[[]GetUsersUserLongviewGrant]{
		OutputState: i.ToGetUsersUserLongviewGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserLongviewGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserLongviewGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserLongviewGrant)(nil)).Elem()
}

func (o GetUsersUserLongviewGrantOutput) ToGetUsersUserLongviewGrantOutput() GetUsersUserLongviewGrantOutput {
	return o
}

func (o GetUsersUserLongviewGrantOutput) ToGetUsersUserLongviewGrantOutputWithContext(ctx context.Context) GetUsersUserLongviewGrantOutput {
	return o
}

func (o GetUsersUserLongviewGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserLongviewGrant] {
	return pulumix.Output[GetUsersUserLongviewGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserLongviewGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserLongviewGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserLongviewGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserLongviewGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserLongviewGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserLongviewGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserLongviewGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserLongviewGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserLongviewGrant)(nil)).Elem()
}

func (o GetUsersUserLongviewGrantArrayOutput) ToGetUsersUserLongviewGrantArrayOutput() GetUsersUserLongviewGrantArrayOutput {
	return o
}

func (o GetUsersUserLongviewGrantArrayOutput) ToGetUsersUserLongviewGrantArrayOutputWithContext(ctx context.Context) GetUsersUserLongviewGrantArrayOutput {
	return o
}

func (o GetUsersUserLongviewGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserLongviewGrant] {
	return pulumix.Output[[]GetUsersUserLongviewGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserLongviewGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserLongviewGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserLongviewGrant {
		return vs[0].([]GetUsersUserLongviewGrant)[vs[1].(int)]
	}).(GetUsersUserLongviewGrantOutput)
}

type GetUsersUserNodebalancerGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserNodebalancerGrantInput is an input type that accepts GetUsersUserNodebalancerGrantArgs and GetUsersUserNodebalancerGrantOutput values.
// You can construct a concrete instance of `GetUsersUserNodebalancerGrantInput` via:
//
//	GetUsersUserNodebalancerGrantArgs{...}
type GetUsersUserNodebalancerGrantInput interface {
	pulumi.Input

	ToGetUsersUserNodebalancerGrantOutput() GetUsersUserNodebalancerGrantOutput
	ToGetUsersUserNodebalancerGrantOutputWithContext(context.Context) GetUsersUserNodebalancerGrantOutput
}

type GetUsersUserNodebalancerGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserNodebalancerGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserNodebalancerGrant)(nil)).Elem()
}

func (i GetUsersUserNodebalancerGrantArgs) ToGetUsersUserNodebalancerGrantOutput() GetUsersUserNodebalancerGrantOutput {
	return i.ToGetUsersUserNodebalancerGrantOutputWithContext(context.Background())
}

func (i GetUsersUserNodebalancerGrantArgs) ToGetUsersUserNodebalancerGrantOutputWithContext(ctx context.Context) GetUsersUserNodebalancerGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserNodebalancerGrantOutput)
}

func (i GetUsersUserNodebalancerGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserNodebalancerGrant] {
	return pulumix.Output[GetUsersUserNodebalancerGrant]{
		OutputState: i.ToGetUsersUserNodebalancerGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserNodebalancerGrantArrayInput is an input type that accepts GetUsersUserNodebalancerGrantArray and GetUsersUserNodebalancerGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserNodebalancerGrantArrayInput` via:
//
//	GetUsersUserNodebalancerGrantArray{ GetUsersUserNodebalancerGrantArgs{...} }
type GetUsersUserNodebalancerGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserNodebalancerGrantArrayOutput() GetUsersUserNodebalancerGrantArrayOutput
	ToGetUsersUserNodebalancerGrantArrayOutputWithContext(context.Context) GetUsersUserNodebalancerGrantArrayOutput
}

type GetUsersUserNodebalancerGrantArray []GetUsersUserNodebalancerGrantInput

func (GetUsersUserNodebalancerGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserNodebalancerGrant)(nil)).Elem()
}

func (i GetUsersUserNodebalancerGrantArray) ToGetUsersUserNodebalancerGrantArrayOutput() GetUsersUserNodebalancerGrantArrayOutput {
	return i.ToGetUsersUserNodebalancerGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserNodebalancerGrantArray) ToGetUsersUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) GetUsersUserNodebalancerGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserNodebalancerGrantArrayOutput)
}

func (i GetUsersUserNodebalancerGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserNodebalancerGrant] {
	return pulumix.Output[[]GetUsersUserNodebalancerGrant]{
		OutputState: i.ToGetUsersUserNodebalancerGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserNodebalancerGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserNodebalancerGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserNodebalancerGrant)(nil)).Elem()
}

func (o GetUsersUserNodebalancerGrantOutput) ToGetUsersUserNodebalancerGrantOutput() GetUsersUserNodebalancerGrantOutput {
	return o
}

func (o GetUsersUserNodebalancerGrantOutput) ToGetUsersUserNodebalancerGrantOutputWithContext(ctx context.Context) GetUsersUserNodebalancerGrantOutput {
	return o
}

func (o GetUsersUserNodebalancerGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserNodebalancerGrant] {
	return pulumix.Output[GetUsersUserNodebalancerGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserNodebalancerGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserNodebalancerGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserNodebalancerGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserNodebalancerGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserNodebalancerGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserNodebalancerGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserNodebalancerGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserNodebalancerGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserNodebalancerGrant)(nil)).Elem()
}

func (o GetUsersUserNodebalancerGrantArrayOutput) ToGetUsersUserNodebalancerGrantArrayOutput() GetUsersUserNodebalancerGrantArrayOutput {
	return o
}

func (o GetUsersUserNodebalancerGrantArrayOutput) ToGetUsersUserNodebalancerGrantArrayOutputWithContext(ctx context.Context) GetUsersUserNodebalancerGrantArrayOutput {
	return o
}

func (o GetUsersUserNodebalancerGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserNodebalancerGrant] {
	return pulumix.Output[[]GetUsersUserNodebalancerGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserNodebalancerGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserNodebalancerGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserNodebalancerGrant {
		return vs[0].([]GetUsersUserNodebalancerGrant)[vs[1].(int)]
	}).(GetUsersUserNodebalancerGrantOutput)
}

type GetUsersUserStackscriptGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserStackscriptGrantInput is an input type that accepts GetUsersUserStackscriptGrantArgs and GetUsersUserStackscriptGrantOutput values.
// You can construct a concrete instance of `GetUsersUserStackscriptGrantInput` via:
//
//	GetUsersUserStackscriptGrantArgs{...}
type GetUsersUserStackscriptGrantInput interface {
	pulumi.Input

	ToGetUsersUserStackscriptGrantOutput() GetUsersUserStackscriptGrantOutput
	ToGetUsersUserStackscriptGrantOutputWithContext(context.Context) GetUsersUserStackscriptGrantOutput
}

type GetUsersUserStackscriptGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserStackscriptGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserStackscriptGrant)(nil)).Elem()
}

func (i GetUsersUserStackscriptGrantArgs) ToGetUsersUserStackscriptGrantOutput() GetUsersUserStackscriptGrantOutput {
	return i.ToGetUsersUserStackscriptGrantOutputWithContext(context.Background())
}

func (i GetUsersUserStackscriptGrantArgs) ToGetUsersUserStackscriptGrantOutputWithContext(ctx context.Context) GetUsersUserStackscriptGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserStackscriptGrantOutput)
}

func (i GetUsersUserStackscriptGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserStackscriptGrant] {
	return pulumix.Output[GetUsersUserStackscriptGrant]{
		OutputState: i.ToGetUsersUserStackscriptGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserStackscriptGrantArrayInput is an input type that accepts GetUsersUserStackscriptGrantArray and GetUsersUserStackscriptGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserStackscriptGrantArrayInput` via:
//
//	GetUsersUserStackscriptGrantArray{ GetUsersUserStackscriptGrantArgs{...} }
type GetUsersUserStackscriptGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserStackscriptGrantArrayOutput() GetUsersUserStackscriptGrantArrayOutput
	ToGetUsersUserStackscriptGrantArrayOutputWithContext(context.Context) GetUsersUserStackscriptGrantArrayOutput
}

type GetUsersUserStackscriptGrantArray []GetUsersUserStackscriptGrantInput

func (GetUsersUserStackscriptGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserStackscriptGrant)(nil)).Elem()
}

func (i GetUsersUserStackscriptGrantArray) ToGetUsersUserStackscriptGrantArrayOutput() GetUsersUserStackscriptGrantArrayOutput {
	return i.ToGetUsersUserStackscriptGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserStackscriptGrantArray) ToGetUsersUserStackscriptGrantArrayOutputWithContext(ctx context.Context) GetUsersUserStackscriptGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserStackscriptGrantArrayOutput)
}

func (i GetUsersUserStackscriptGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserStackscriptGrant] {
	return pulumix.Output[[]GetUsersUserStackscriptGrant]{
		OutputState: i.ToGetUsersUserStackscriptGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserStackscriptGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserStackscriptGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserStackscriptGrant)(nil)).Elem()
}

func (o GetUsersUserStackscriptGrantOutput) ToGetUsersUserStackscriptGrantOutput() GetUsersUserStackscriptGrantOutput {
	return o
}

func (o GetUsersUserStackscriptGrantOutput) ToGetUsersUserStackscriptGrantOutputWithContext(ctx context.Context) GetUsersUserStackscriptGrantOutput {
	return o
}

func (o GetUsersUserStackscriptGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserStackscriptGrant] {
	return pulumix.Output[GetUsersUserStackscriptGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserStackscriptGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserStackscriptGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserStackscriptGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserStackscriptGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserStackscriptGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserStackscriptGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserStackscriptGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserStackscriptGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserStackscriptGrant)(nil)).Elem()
}

func (o GetUsersUserStackscriptGrantArrayOutput) ToGetUsersUserStackscriptGrantArrayOutput() GetUsersUserStackscriptGrantArrayOutput {
	return o
}

func (o GetUsersUserStackscriptGrantArrayOutput) ToGetUsersUserStackscriptGrantArrayOutputWithContext(ctx context.Context) GetUsersUserStackscriptGrantArrayOutput {
	return o
}

func (o GetUsersUserStackscriptGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserStackscriptGrant] {
	return pulumix.Output[[]GetUsersUserStackscriptGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserStackscriptGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserStackscriptGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserStackscriptGrant {
		return vs[0].([]GetUsersUserStackscriptGrant)[vs[1].(int)]
	}).(GetUsersUserStackscriptGrantOutput)
}

type GetUsersUserVolumeGrant struct {
	// The ID of entity this grant applies to.
	Id int `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label string `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions string `pulumi:"permissions"`
}

// GetUsersUserVolumeGrantInput is an input type that accepts GetUsersUserVolumeGrantArgs and GetUsersUserVolumeGrantOutput values.
// You can construct a concrete instance of `GetUsersUserVolumeGrantInput` via:
//
//	GetUsersUserVolumeGrantArgs{...}
type GetUsersUserVolumeGrantInput interface {
	pulumi.Input

	ToGetUsersUserVolumeGrantOutput() GetUsersUserVolumeGrantOutput
	ToGetUsersUserVolumeGrantOutputWithContext(context.Context) GetUsersUserVolumeGrantOutput
}

type GetUsersUserVolumeGrantArgs struct {
	// The ID of entity this grant applies to.
	Id pulumi.IntInput `pulumi:"id"`
	// The current label of the entity this grant applies to, for display purposes.
	Label pulumi.StringInput `pulumi:"label"`
	// The level of access this User has to this entity. If null, this User has no access.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetUsersUserVolumeGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserVolumeGrant)(nil)).Elem()
}

func (i GetUsersUserVolumeGrantArgs) ToGetUsersUserVolumeGrantOutput() GetUsersUserVolumeGrantOutput {
	return i.ToGetUsersUserVolumeGrantOutputWithContext(context.Background())
}

func (i GetUsersUserVolumeGrantArgs) ToGetUsersUserVolumeGrantOutputWithContext(ctx context.Context) GetUsersUserVolumeGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserVolumeGrantOutput)
}

func (i GetUsersUserVolumeGrantArgs) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserVolumeGrant] {
	return pulumix.Output[GetUsersUserVolumeGrant]{
		OutputState: i.ToGetUsersUserVolumeGrantOutputWithContext(ctx).OutputState,
	}
}

// GetUsersUserVolumeGrantArrayInput is an input type that accepts GetUsersUserVolumeGrantArray and GetUsersUserVolumeGrantArrayOutput values.
// You can construct a concrete instance of `GetUsersUserVolumeGrantArrayInput` via:
//
//	GetUsersUserVolumeGrantArray{ GetUsersUserVolumeGrantArgs{...} }
type GetUsersUserVolumeGrantArrayInput interface {
	pulumi.Input

	ToGetUsersUserVolumeGrantArrayOutput() GetUsersUserVolumeGrantArrayOutput
	ToGetUsersUserVolumeGrantArrayOutputWithContext(context.Context) GetUsersUserVolumeGrantArrayOutput
}

type GetUsersUserVolumeGrantArray []GetUsersUserVolumeGrantInput

func (GetUsersUserVolumeGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserVolumeGrant)(nil)).Elem()
}

func (i GetUsersUserVolumeGrantArray) ToGetUsersUserVolumeGrantArrayOutput() GetUsersUserVolumeGrantArrayOutput {
	return i.ToGetUsersUserVolumeGrantArrayOutputWithContext(context.Background())
}

func (i GetUsersUserVolumeGrantArray) ToGetUsersUserVolumeGrantArrayOutputWithContext(ctx context.Context) GetUsersUserVolumeGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserVolumeGrantArrayOutput)
}

func (i GetUsersUserVolumeGrantArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserVolumeGrant] {
	return pulumix.Output[[]GetUsersUserVolumeGrant]{
		OutputState: i.ToGetUsersUserVolumeGrantArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUsersUserVolumeGrantOutput struct{ *pulumi.OutputState }

func (GetUsersUserVolumeGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserVolumeGrant)(nil)).Elem()
}

func (o GetUsersUserVolumeGrantOutput) ToGetUsersUserVolumeGrantOutput() GetUsersUserVolumeGrantOutput {
	return o
}

func (o GetUsersUserVolumeGrantOutput) ToGetUsersUserVolumeGrantOutputWithContext(ctx context.Context) GetUsersUserVolumeGrantOutput {
	return o
}

func (o GetUsersUserVolumeGrantOutput) ToOutput(ctx context.Context) pulumix.Output[GetUsersUserVolumeGrant] {
	return pulumix.Output[GetUsersUserVolumeGrant]{
		OutputState: o.OutputState,
	}
}

// The ID of entity this grant applies to.
func (o GetUsersUserVolumeGrantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUserVolumeGrant) int { return v.Id }).(pulumi.IntOutput)
}

// The current label of the entity this grant applies to, for display purposes.
func (o GetUsersUserVolumeGrantOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserVolumeGrant) string { return v.Label }).(pulumi.StringOutput)
}

// The level of access this User has to this entity. If null, this User has no access.
func (o GetUsersUserVolumeGrantOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserVolumeGrant) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetUsersUserVolumeGrantArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserVolumeGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserVolumeGrant)(nil)).Elem()
}

func (o GetUsersUserVolumeGrantArrayOutput) ToGetUsersUserVolumeGrantArrayOutput() GetUsersUserVolumeGrantArrayOutput {
	return o
}

func (o GetUsersUserVolumeGrantArrayOutput) ToGetUsersUserVolumeGrantArrayOutputWithContext(ctx context.Context) GetUsersUserVolumeGrantArrayOutput {
	return o
}

func (o GetUsersUserVolumeGrantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUsersUserVolumeGrant] {
	return pulumix.Output[[]GetUsersUserVolumeGrant]{
		OutputState: o.OutputState,
	}
}

func (o GetUsersUserVolumeGrantArrayOutput) Index(i pulumi.IntInput) GetUsersUserVolumeGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserVolumeGrant {
		return vs[0].([]GetUsersUserVolumeGrant)[vs[1].(int)]
	}).(GetUsersUserVolumeGrantOutput)
}

type GetVlansFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetVlansFilterInput is an input type that accepts GetVlansFilterArgs and GetVlansFilterOutput values.
// You can construct a concrete instance of `GetVlansFilterInput` via:
//
//	GetVlansFilterArgs{...}
type GetVlansFilterInput interface {
	pulumi.Input

	ToGetVlansFilterOutput() GetVlansFilterOutput
	ToGetVlansFilterOutputWithContext(context.Context) GetVlansFilterOutput
}

type GetVlansFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVlansFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansFilter)(nil)).Elem()
}

func (i GetVlansFilterArgs) ToGetVlansFilterOutput() GetVlansFilterOutput {
	return i.ToGetVlansFilterOutputWithContext(context.Background())
}

func (i GetVlansFilterArgs) ToGetVlansFilterOutputWithContext(ctx context.Context) GetVlansFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansFilterOutput)
}

func (i GetVlansFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVlansFilter] {
	return pulumix.Output[GetVlansFilter]{
		OutputState: i.ToGetVlansFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVlansFilterArrayInput is an input type that accepts GetVlansFilterArray and GetVlansFilterArrayOutput values.
// You can construct a concrete instance of `GetVlansFilterArrayInput` via:
//
//	GetVlansFilterArray{ GetVlansFilterArgs{...} }
type GetVlansFilterArrayInput interface {
	pulumi.Input

	ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput
	ToGetVlansFilterArrayOutputWithContext(context.Context) GetVlansFilterArrayOutput
}

type GetVlansFilterArray []GetVlansFilterInput

func (GetVlansFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansFilter)(nil)).Elem()
}

func (i GetVlansFilterArray) ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput {
	return i.ToGetVlansFilterArrayOutputWithContext(context.Background())
}

func (i GetVlansFilterArray) ToGetVlansFilterArrayOutputWithContext(ctx context.Context) GetVlansFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansFilterArrayOutput)
}

func (i GetVlansFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVlansFilter] {
	return pulumix.Output[[]GetVlansFilter]{
		OutputState: i.ToGetVlansFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVlansFilterOutput struct{ *pulumi.OutputState }

func (GetVlansFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansFilter)(nil)).Elem()
}

func (o GetVlansFilterOutput) ToGetVlansFilterOutput() GetVlansFilterOutput {
	return o
}

func (o GetVlansFilterOutput) ToGetVlansFilterOutputWithContext(ctx context.Context) GetVlansFilterOutput {
	return o
}

func (o GetVlansFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVlansFilter] {
	return pulumix.Output[GetVlansFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetVlansFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVlansFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetVlansFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetVlansFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVlansFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVlansFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVlansFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansFilter)(nil)).Elem()
}

func (o GetVlansFilterArrayOutput) ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput {
	return o
}

func (o GetVlansFilterArrayOutput) ToGetVlansFilterArrayOutputWithContext(ctx context.Context) GetVlansFilterArrayOutput {
	return o
}

func (o GetVlansFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVlansFilter] {
	return pulumix.Output[[]GetVlansFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVlansFilterArrayOutput) Index(i pulumi.IntInput) GetVlansFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVlansFilter {
		return vs[0].([]GetVlansFilter)[vs[1].(int)]
	}).(GetVlansFilterOutput)
}

type GetVlansVlan struct {
	// When the VLAN was created.
	Created string `pulumi:"created"`
	// The unique label of the VLAN.
	Label string `pulumi:"label"`
	// The running Linodes currently attached to the VLAN.
	Linodes []int `pulumi:"linodes"`
	// The region the VLAN is located in. See all regions [here](https://api.linode.com/v4/regions).
	Region string `pulumi:"region"`
}

// GetVlansVlanInput is an input type that accepts GetVlansVlanArgs and GetVlansVlanOutput values.
// You can construct a concrete instance of `GetVlansVlanInput` via:
//
//	GetVlansVlanArgs{...}
type GetVlansVlanInput interface {
	pulumi.Input

	ToGetVlansVlanOutput() GetVlansVlanOutput
	ToGetVlansVlanOutputWithContext(context.Context) GetVlansVlanOutput
}

type GetVlansVlanArgs struct {
	// When the VLAN was created.
	Created pulumi.StringInput `pulumi:"created"`
	// The unique label of the VLAN.
	Label pulumi.StringInput `pulumi:"label"`
	// The running Linodes currently attached to the VLAN.
	Linodes pulumi.IntArrayInput `pulumi:"linodes"`
	// The region the VLAN is located in. See all regions [here](https://api.linode.com/v4/regions).
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetVlansVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansVlan)(nil)).Elem()
}

func (i GetVlansVlanArgs) ToGetVlansVlanOutput() GetVlansVlanOutput {
	return i.ToGetVlansVlanOutputWithContext(context.Background())
}

func (i GetVlansVlanArgs) ToGetVlansVlanOutputWithContext(ctx context.Context) GetVlansVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansVlanOutput)
}

func (i GetVlansVlanArgs) ToOutput(ctx context.Context) pulumix.Output[GetVlansVlan] {
	return pulumix.Output[GetVlansVlan]{
		OutputState: i.ToGetVlansVlanOutputWithContext(ctx).OutputState,
	}
}

// GetVlansVlanArrayInput is an input type that accepts GetVlansVlanArray and GetVlansVlanArrayOutput values.
// You can construct a concrete instance of `GetVlansVlanArrayInput` via:
//
//	GetVlansVlanArray{ GetVlansVlanArgs{...} }
type GetVlansVlanArrayInput interface {
	pulumi.Input

	ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput
	ToGetVlansVlanArrayOutputWithContext(context.Context) GetVlansVlanArrayOutput
}

type GetVlansVlanArray []GetVlansVlanInput

func (GetVlansVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansVlan)(nil)).Elem()
}

func (i GetVlansVlanArray) ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput {
	return i.ToGetVlansVlanArrayOutputWithContext(context.Background())
}

func (i GetVlansVlanArray) ToGetVlansVlanArrayOutputWithContext(ctx context.Context) GetVlansVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansVlanArrayOutput)
}

func (i GetVlansVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVlansVlan] {
	return pulumix.Output[[]GetVlansVlan]{
		OutputState: i.ToGetVlansVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVlansVlanOutput struct{ *pulumi.OutputState }

func (GetVlansVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansVlan)(nil)).Elem()
}

func (o GetVlansVlanOutput) ToGetVlansVlanOutput() GetVlansVlanOutput {
	return o
}

func (o GetVlansVlanOutput) ToGetVlansVlanOutputWithContext(ctx context.Context) GetVlansVlanOutput {
	return o
}

func (o GetVlansVlanOutput) ToOutput(ctx context.Context) pulumix.Output[GetVlansVlan] {
	return pulumix.Output[GetVlansVlan]{
		OutputState: o.OutputState,
	}
}

// When the VLAN was created.
func (o GetVlansVlanOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Created }).(pulumi.StringOutput)
}

// The unique label of the VLAN.
func (o GetVlansVlanOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Label }).(pulumi.StringOutput)
}

// The running Linodes currently attached to the VLAN.
func (o GetVlansVlanOutput) Linodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVlansVlan) []int { return v.Linodes }).(pulumi.IntArrayOutput)
}

// The region the VLAN is located in. See all regions [here](https://api.linode.com/v4/regions).
func (o GetVlansVlanOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Region }).(pulumi.StringOutput)
}

type GetVlansVlanArrayOutput struct{ *pulumi.OutputState }

func (GetVlansVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansVlan)(nil)).Elem()
}

func (o GetVlansVlanArrayOutput) ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput {
	return o
}

func (o GetVlansVlanArrayOutput) ToGetVlansVlanArrayOutputWithContext(ctx context.Context) GetVlansVlanArrayOutput {
	return o
}

func (o GetVlansVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVlansVlan] {
	return pulumix.Output[[]GetVlansVlan]{
		OutputState: o.OutputState,
	}
}

func (o GetVlansVlanArrayOutput) Index(i pulumi.IntInput) GetVlansVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVlansVlan {
		return vs[0].([]GetVlansVlan)[vs[1].(int)]
	}).(GetVlansVlanOutput)
}

type GetVolumesFilter struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy *string `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name string `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values []string `pulumi:"values"`
}

// GetVolumesFilterInput is an input type that accepts GetVolumesFilterArgs and GetVolumesFilterOutput values.
// You can construct a concrete instance of `GetVolumesFilterInput` via:
//
//	GetVolumesFilterArgs{...}
type GetVolumesFilterInput interface {
	pulumi.Input

	ToGetVolumesFilterOutput() GetVolumesFilterOutput
	ToGetVolumesFilterOutputWithContext(context.Context) GetVolumesFilterOutput
}

type GetVolumesFilterArgs struct {
	// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of values for the filter to allow. These values should all be in string form.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVolumesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesFilter)(nil)).Elem()
}

func (i GetVolumesFilterArgs) ToGetVolumesFilterOutput() GetVolumesFilterOutput {
	return i.ToGetVolumesFilterOutputWithContext(context.Background())
}

func (i GetVolumesFilterArgs) ToGetVolumesFilterOutputWithContext(ctx context.Context) GetVolumesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesFilterOutput)
}

func (i GetVolumesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVolumesFilter] {
	return pulumix.Output[GetVolumesFilter]{
		OutputState: i.ToGetVolumesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVolumesFilterArrayInput is an input type that accepts GetVolumesFilterArray and GetVolumesFilterArrayOutput values.
// You can construct a concrete instance of `GetVolumesFilterArrayInput` via:
//
//	GetVolumesFilterArray{ GetVolumesFilterArgs{...} }
type GetVolumesFilterArrayInput interface {
	pulumi.Input

	ToGetVolumesFilterArrayOutput() GetVolumesFilterArrayOutput
	ToGetVolumesFilterArrayOutputWithContext(context.Context) GetVolumesFilterArrayOutput
}

type GetVolumesFilterArray []GetVolumesFilterInput

func (GetVolumesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesFilter)(nil)).Elem()
}

func (i GetVolumesFilterArray) ToGetVolumesFilterArrayOutput() GetVolumesFilterArrayOutput {
	return i.ToGetVolumesFilterArrayOutputWithContext(context.Background())
}

func (i GetVolumesFilterArray) ToGetVolumesFilterArrayOutputWithContext(ctx context.Context) GetVolumesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesFilterArrayOutput)
}

func (i GetVolumesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVolumesFilter] {
	return pulumix.Output[[]GetVolumesFilter]{
		OutputState: i.ToGetVolumesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVolumesFilterOutput struct{ *pulumi.OutputState }

func (GetVolumesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesFilter)(nil)).Elem()
}

func (o GetVolumesFilterOutput) ToGetVolumesFilterOutput() GetVolumesFilterOutput {
	return o
}

func (o GetVolumesFilterOutput) ToGetVolumesFilterOutputWithContext(ctx context.Context) GetVolumesFilterOutput {
	return o
}

func (o GetVolumesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVolumesFilter] {
	return pulumix.Output[GetVolumesFilter]{
		OutputState: o.OutputState,
	}
}

// The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
func (o GetVolumesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
func (o GetVolumesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values for the filter to allow. These values should all be in string form.
func (o GetVolumesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVolumesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVolumesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVolumesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesFilter)(nil)).Elem()
}

func (o GetVolumesFilterArrayOutput) ToGetVolumesFilterArrayOutput() GetVolumesFilterArrayOutput {
	return o
}

func (o GetVolumesFilterArrayOutput) ToGetVolumesFilterArrayOutputWithContext(ctx context.Context) GetVolumesFilterArrayOutput {
	return o
}

func (o GetVolumesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVolumesFilter] {
	return pulumix.Output[[]GetVolumesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVolumesFilterArrayOutput) Index(i pulumi.IntInput) GetVolumesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumesFilter {
		return vs[0].([]GetVolumesFilter)[vs[1].(int)]
	}).(GetVolumesFilterOutput)
}

type GetVolumesVolume struct {
	// When this Volume was created.
	Created string `pulumi:"created"`
	// The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0LinodeVolume + Volume label.
	FilesystemPath string `pulumi:"filesystemPath"`
	// The unique ID of this Volume.
	Id int `pulumi:"id"`
	// This Volume's label is for display purposes only.
	Label string `pulumi:"label"`
	// If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here. If the Volume is unattached, this value will be null.
	LinodeId int `pulumi:"linodeId"`
	// The datacenter in which this Volume is located. See all regions [here](https://api.linode.com/v4/regions).
	Region string `pulumi:"region"`
	// The Volume's size, in GiB.
	Size int `pulumi:"size"`
	// The current status of the Volume. (`creating`, `active`, `resizing`, `contactSupport`)
	Status string `pulumi:"status"`
	// An array of tags applied to this object.
	Tags []string `pulumi:"tags"`
	// When this Volume was last updated.
	Updated string `pulumi:"updated"`
}

// GetVolumesVolumeInput is an input type that accepts GetVolumesVolumeArgs and GetVolumesVolumeOutput values.
// You can construct a concrete instance of `GetVolumesVolumeInput` via:
//
//	GetVolumesVolumeArgs{...}
type GetVolumesVolumeInput interface {
	pulumi.Input

	ToGetVolumesVolumeOutput() GetVolumesVolumeOutput
	ToGetVolumesVolumeOutputWithContext(context.Context) GetVolumesVolumeOutput
}

type GetVolumesVolumeArgs struct {
	// When this Volume was created.
	Created pulumi.StringInput `pulumi:"created"`
	// The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0LinodeVolume + Volume label.
	FilesystemPath pulumi.StringInput `pulumi:"filesystemPath"`
	// The unique ID of this Volume.
	Id pulumi.IntInput `pulumi:"id"`
	// This Volume's label is for display purposes only.
	Label pulumi.StringInput `pulumi:"label"`
	// If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here. If the Volume is unattached, this value will be null.
	LinodeId pulumi.IntInput `pulumi:"linodeId"`
	// The datacenter in which this Volume is located. See all regions [here](https://api.linode.com/v4/regions).
	Region pulumi.StringInput `pulumi:"region"`
	// The Volume's size, in GiB.
	Size pulumi.IntInput `pulumi:"size"`
	// The current status of the Volume. (`creating`, `active`, `resizing`, `contactSupport`)
	Status pulumi.StringInput `pulumi:"status"`
	// An array of tags applied to this object.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// When this Volume was last updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetVolumesVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolume)(nil)).Elem()
}

func (i GetVolumesVolumeArgs) ToGetVolumesVolumeOutput() GetVolumesVolumeOutput {
	return i.ToGetVolumesVolumeOutputWithContext(context.Background())
}

func (i GetVolumesVolumeArgs) ToGetVolumesVolumeOutputWithContext(ctx context.Context) GetVolumesVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeOutput)
}

func (i GetVolumesVolumeArgs) ToOutput(ctx context.Context) pulumix.Output[GetVolumesVolume] {
	return pulumix.Output[GetVolumesVolume]{
		OutputState: i.ToGetVolumesVolumeOutputWithContext(ctx).OutputState,
	}
}

// GetVolumesVolumeArrayInput is an input type that accepts GetVolumesVolumeArray and GetVolumesVolumeArrayOutput values.
// You can construct a concrete instance of `GetVolumesVolumeArrayInput` via:
//
//	GetVolumesVolumeArray{ GetVolumesVolumeArgs{...} }
type GetVolumesVolumeArrayInput interface {
	pulumi.Input

	ToGetVolumesVolumeArrayOutput() GetVolumesVolumeArrayOutput
	ToGetVolumesVolumeArrayOutputWithContext(context.Context) GetVolumesVolumeArrayOutput
}

type GetVolumesVolumeArray []GetVolumesVolumeInput

func (GetVolumesVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolume)(nil)).Elem()
}

func (i GetVolumesVolumeArray) ToGetVolumesVolumeArrayOutput() GetVolumesVolumeArrayOutput {
	return i.ToGetVolumesVolumeArrayOutputWithContext(context.Background())
}

func (i GetVolumesVolumeArray) ToGetVolumesVolumeArrayOutputWithContext(ctx context.Context) GetVolumesVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVolumesVolumeArrayOutput)
}

func (i GetVolumesVolumeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVolumesVolume] {
	return pulumix.Output[[]GetVolumesVolume]{
		OutputState: i.ToGetVolumesVolumeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVolumesVolumeOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesVolume)(nil)).Elem()
}

func (o GetVolumesVolumeOutput) ToGetVolumesVolumeOutput() GetVolumesVolumeOutput {
	return o
}

func (o GetVolumesVolumeOutput) ToGetVolumesVolumeOutputWithContext(ctx context.Context) GetVolumesVolumeOutput {
	return o
}

func (o GetVolumesVolumeOutput) ToOutput(ctx context.Context) pulumix.Output[GetVolumesVolume] {
	return pulumix.Output[GetVolumesVolume]{
		OutputState: o.OutputState,
	}
}

// When this Volume was created.
func (o GetVolumesVolumeOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.Created }).(pulumi.StringOutput)
}

// The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0LinodeVolume + Volume label.
func (o GetVolumesVolumeOutput) FilesystemPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.FilesystemPath }).(pulumi.StringOutput)
}

// The unique ID of this Volume.
func (o GetVolumesVolumeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVolumesVolume) int { return v.Id }).(pulumi.IntOutput)
}

// This Volume's label is for display purposes only.
func (o GetVolumesVolumeOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.Label }).(pulumi.StringOutput)
}

// If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here. If the Volume is unattached, this value will be null.
func (o GetVolumesVolumeOutput) LinodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVolumesVolume) int { return v.LinodeId }).(pulumi.IntOutput)
}

// The datacenter in which this Volume is located. See all regions [here](https://api.linode.com/v4/regions).
func (o GetVolumesVolumeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.Region }).(pulumi.StringOutput)
}

// The Volume's size, in GiB.
func (o GetVolumesVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetVolumesVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The current status of the Volume. (`creating`, `active`, `resizing`, `contactSupport`)
func (o GetVolumesVolumeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.Status }).(pulumi.StringOutput)
}

// An array of tags applied to this object.
func (o GetVolumesVolumeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVolumesVolume) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// When this Volume was last updated.
func (o GetVolumesVolumeOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesVolume) string { return v.Updated }).(pulumi.StringOutput)
}

type GetVolumesVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetVolumesVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVolumesVolume)(nil)).Elem()
}

func (o GetVolumesVolumeArrayOutput) ToGetVolumesVolumeArrayOutput() GetVolumesVolumeArrayOutput {
	return o
}

func (o GetVolumesVolumeArrayOutput) ToGetVolumesVolumeArrayOutputWithContext(ctx context.Context) GetVolumesVolumeArrayOutput {
	return o
}

func (o GetVolumesVolumeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVolumesVolume] {
	return pulumix.Output[[]GetVolumesVolume]{
		OutputState: o.OutputState,
	}
}

func (o GetVolumesVolumeArrayOutput) Index(i pulumi.IntInput) GetVolumesVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVolumesVolume {
		return vs[0].([]GetVolumesVolume)[vs[1].(int)]
	}).(GetVolumesVolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMysqlUpdatesInput)(nil)).Elem(), DatabaseMysqlUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMysqlUpdatesPtrInput)(nil)).Elem(), DatabaseMysqlUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasePostgresqlUpdatesInput)(nil)).Elem(), DatabasePostgresqlUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasePostgresqlUpdatesPtrInput)(nil)).Elem(), DatabasePostgresqlUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDeviceTypeInput)(nil)).Elem(), FirewallDeviceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDeviceTypeArrayInput)(nil)).Elem(), FirewallDeviceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInboundInput)(nil)).Elem(), FirewallInboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInboundArrayInput)(nil)).Elem(), FirewallInboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallOutboundInput)(nil)).Elem(), FirewallOutboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallOutboundArrayInput)(nil)).Elem(), FirewallOutboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAlertsInput)(nil)).Elem(), InstanceAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAlertsPtrInput)(nil)).Elem(), InstanceAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsInput)(nil)).Elem(), InstanceBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsPtrInput)(nil)).Elem(), InstanceBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsScheduleInput)(nil)).Elem(), InstanceBackupsScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupsSchedulePtrInput)(nil)).Elem(), InstanceBackupsScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigArrayInput)(nil)).Elem(), InstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesInput)(nil)).Elem(), InstanceConfigDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesPtrInput)(nil)).Elem(), InstanceConfigDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdaInput)(nil)).Elem(), InstanceConfigDevicesSdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdaPtrInput)(nil)).Elem(), InstanceConfigDevicesSdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdbInput)(nil)).Elem(), InstanceConfigDevicesSdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdbPtrInput)(nil)).Elem(), InstanceConfigDevicesSdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdcInput)(nil)).Elem(), InstanceConfigDevicesSdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdcPtrInput)(nil)).Elem(), InstanceConfigDevicesSdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSddInput)(nil)).Elem(), InstanceConfigDevicesSddArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSddPtrInput)(nil)).Elem(), InstanceConfigDevicesSddArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdeInput)(nil)).Elem(), InstanceConfigDevicesSdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdePtrInput)(nil)).Elem(), InstanceConfigDevicesSdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdfInput)(nil)).Elem(), InstanceConfigDevicesSdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdfPtrInput)(nil)).Elem(), InstanceConfigDevicesSdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdgInput)(nil)).Elem(), InstanceConfigDevicesSdgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdgPtrInput)(nil)).Elem(), InstanceConfigDevicesSdgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdhInput)(nil)).Elem(), InstanceConfigDevicesSdhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigDevicesSdhPtrInput)(nil)).Elem(), InstanceConfigDevicesSdhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigHelpersInput)(nil)).Elem(), InstanceConfigHelpersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigHelpersPtrInput)(nil)).Elem(), InstanceConfigHelpersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInterfaceInput)(nil)).Elem(), InstanceConfigInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInterfaceArrayInput)(nil)).Elem(), InstanceConfigInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiskTypeInput)(nil)).Elem(), InstanceDiskTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiskTypeArrayInput)(nil)).Elem(), InstanceDiskTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInterfaceInput)(nil)).Elem(), InstanceInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInterfaceArrayInput)(nil)).Elem(), InstanceInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMetadataInput)(nil)).Elem(), InstanceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMetadataArrayInput)(nil)).Elem(), InstanceMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsInput)(nil)).Elem(), InstanceSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsPtrInput)(nil)).Elem(), InstanceSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterControlPlaneInput)(nil)).Elem(), LkeClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterControlPlanePtrInput)(nil)).Elem(), LkeClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolInput)(nil)).Elem(), LkeClusterPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolArrayInput)(nil)).Elem(), LkeClusterPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolAutoscalerInput)(nil)).Elem(), LkeClusterPoolAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolAutoscalerPtrInput)(nil)).Elem(), LkeClusterPoolAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolNodeInput)(nil)).Elem(), LkeClusterPoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LkeClusterPoolNodeArrayInput)(nil)).Elem(), LkeClusterPoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerConfigNodeStatusInput)(nil)).Elem(), NodeBalancerConfigNodeStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerConfigNodeStatusArrayInput)(nil)).Elem(), NodeBalancerConfigNodeStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerTransferInput)(nil)).Elem(), NodeBalancerTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeBalancerTransferArrayInput)(nil)).Elem(), NodeBalancerTransferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketCertInput)(nil)).Elem(), ObjectStorageBucketCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketCertPtrInput)(nil)).Elem(), ObjectStorageBucketCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleArrayInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpirationInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleExpirationPtrInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrInput)(nil)).Elem(), ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageKeyBucketAccessInput)(nil)).Elem(), ObjectStorageKeyBucketAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageKeyBucketAccessArrayInput)(nil)).Elem(), ObjectStorageKeyBucketAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackScriptUserDefinedFieldInput)(nil)).Elem(), StackScriptUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackScriptUserDefinedFieldArrayInput)(nil)).Elem(), StackScriptUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDomainGrantInput)(nil)).Elem(), UserDomainGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDomainGrantArrayInput)(nil)).Elem(), UserDomainGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserFirewallGrantInput)(nil)).Elem(), UserFirewallGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserFirewallGrantArrayInput)(nil)).Elem(), UserFirewallGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGlobalGrantsInput)(nil)).Elem(), UserGlobalGrantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGlobalGrantsPtrInput)(nil)).Elem(), UserGlobalGrantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserImageGrantInput)(nil)).Elem(), UserImageGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserImageGrantArrayInput)(nil)).Elem(), UserImageGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLinodeGrantInput)(nil)).Elem(), UserLinodeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLinodeGrantArrayInput)(nil)).Elem(), UserLinodeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLongviewGrantInput)(nil)).Elem(), UserLongviewGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLongviewGrantArrayInput)(nil)).Elem(), UserLongviewGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNodebalancerGrantInput)(nil)).Elem(), UserNodebalancerGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNodebalancerGrantArrayInput)(nil)).Elem(), UserNodebalancerGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserStackscriptGrantInput)(nil)).Elem(), UserStackscriptGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserStackscriptGrantArrayInput)(nil)).Elem(), UserStackscriptGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserVolumeGrantInput)(nil)).Elem(), UserVolumeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserVolumeGrantArrayInput)(nil)).Elem(), UserVolumeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountLoginsFilterInput)(nil)).Elem(), GetAccountLoginsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountLoginsFilterArrayInput)(nil)).Elem(), GetAccountLoginsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountLoginsLoginInput)(nil)).Elem(), GetAccountLoginsLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountLoginsLoginArrayInput)(nil)).Elem(), GetAccountLoginsLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseBackupsBackupInput)(nil)).Elem(), GetDatabaseBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseBackupsBackupArrayInput)(nil)).Elem(), GetDatabaseBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseBackupsFilterInput)(nil)).Elem(), GetDatabaseBackupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseBackupsFilterArrayInput)(nil)).Elem(), GetDatabaseBackupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseEnginesEngineInput)(nil)).Elem(), GetDatabaseEnginesEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseEnginesEngineArrayInput)(nil)).Elem(), GetDatabaseEnginesEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseEnginesFilterInput)(nil)).Elem(), GetDatabaseEnginesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseEnginesFilterArrayInput)(nil)).Elem(), GetDatabaseEnginesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseMysqlBackupsBackupInput)(nil)).Elem(), GetDatabaseMysqlBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseMysqlBackupsBackupArrayInput)(nil)).Elem(), GetDatabaseMysqlBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseMysqlBackupsFilterInput)(nil)).Elem(), GetDatabaseMysqlBackupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseMysqlBackupsFilterArrayInput)(nil)).Elem(), GetDatabaseMysqlBackupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseMysqlUpdateInput)(nil)).Elem(), GetDatabaseMysqlUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseMysqlUpdateArrayInput)(nil)).Elem(), GetDatabaseMysqlUpdateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasePostgresqlUpdateInput)(nil)).Elem(), GetDatabasePostgresqlUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasePostgresqlUpdateArrayInput)(nil)).Elem(), GetDatabasePostgresqlUpdateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseInput)(nil)).Elem(), GetDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseArrayInput)(nil)).Elem(), GetDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesFilterInput)(nil)).Elem(), GetDatabasesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesFilterArrayInput)(nil)).Elem(), GetDatabasesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDeviceTypeInput)(nil)).Elem(), GetFirewallDeviceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallDeviceTypeArrayInput)(nil)).Elem(), GetFirewallDeviceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInboundInput)(nil)).Elem(), GetFirewallInboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInboundArrayInput)(nil)).Elem(), GetFirewallInboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallOutboundInput)(nil)).Elem(), GetFirewallOutboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallOutboundArrayInput)(nil)).Elem(), GetFirewallOutboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFilterInput)(nil)).Elem(), GetFirewallsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFilterArrayInput)(nil)).Elem(), GetFirewallsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallInput)(nil)).Elem(), GetFirewallsFirewallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallArrayInput)(nil)).Elem(), GetFirewallsFirewallArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallDeviceInput)(nil)).Elem(), GetFirewallsFirewallDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallDeviceArrayInput)(nil)).Elem(), GetFirewallsFirewallDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallInboundInput)(nil)).Elem(), GetFirewallsFirewallInboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallInboundArrayInput)(nil)).Elem(), GetFirewallsFirewallInboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallOutboundInput)(nil)).Elem(), GetFirewallsFirewallOutboundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsFirewallOutboundArrayInput)(nil)).Elem(), GetFirewallsFirewallOutboundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterInput)(nil)).Elem(), GetImagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterArrayInput)(nil)).Elem(), GetImagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticInput)(nil)).Elem(), GetInstanceBackupsAutomaticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticArrayInput)(nil)).Elem(), GetInstanceBackupsAutomaticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticDiskInput)(nil)).Elem(), GetInstanceBackupsAutomaticDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsAutomaticDiskArrayInput)(nil)).Elem(), GetInstanceBackupsAutomaticDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentInput)(nil)).Elem(), GetInstanceBackupsCurrentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentArrayInput)(nil)).Elem(), GetInstanceBackupsCurrentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentDiskInput)(nil)).Elem(), GetInstanceBackupsCurrentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsCurrentDiskArrayInput)(nil)).Elem(), GetInstanceBackupsCurrentDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressInput)(nil)).Elem(), GetInstanceBackupsInProgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressArrayInput)(nil)).Elem(), GetInstanceBackupsInProgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressDiskInput)(nil)).Elem(), GetInstanceBackupsInProgressDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceBackupsInProgressDiskArrayInput)(nil)).Elem(), GetInstanceBackupsInProgressDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4Input)(nil)).Elem(), GetInstanceNetworkingIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4ArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4PrivateInput)(nil)).Elem(), GetInstanceNetworkingIpv4PrivateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4PrivateArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv4PrivateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4PublicInput)(nil)).Elem(), GetInstanceNetworkingIpv4PublicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4PublicArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv4PublicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4ReservedInput)(nil)).Elem(), GetInstanceNetworkingIpv4ReservedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4ReservedArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv4ReservedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4SharedInput)(nil)).Elem(), GetInstanceNetworkingIpv4SharedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv4SharedArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv4SharedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv6Input)(nil)).Elem(), GetInstanceNetworkingIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv6ArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv6GlobalInput)(nil)).Elem(), GetInstanceNetworkingIpv6GlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv6GlobalArrayInput)(nil)).Elem(), GetInstanceNetworkingIpv6GlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv6LinkLocalInput)(nil)).Elem(), GetInstanceNetworkingIpv6LinkLocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceNetworkingIpv6SlaacInput)(nil)).Elem(), GetInstanceNetworkingIpv6SlaacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsInput)(nil)).Elem(), GetInstanceTypeAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupInput)(nil)).Elem(), GetInstanceTypeAddonsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupArrayInput)(nil)).Elem(), GetInstanceTypeAddonsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupPriceInput)(nil)).Elem(), GetInstanceTypeAddonsBackupPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupPriceArrayInput)(nil)).Elem(), GetInstanceTypeAddonsBackupPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupRegionPriceInput)(nil)).Elem(), GetInstanceTypeAddonsBackupRegionPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeAddonsBackupRegionPriceArrayInput)(nil)).Elem(), GetInstanceTypeAddonsBackupRegionPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypePriceInput)(nil)).Elem(), GetInstanceTypePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeRegionPriceInput)(nil)).Elem(), GetInstanceTypeRegionPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypeRegionPriceArrayInput)(nil)).Elem(), GetInstanceTypeRegionPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesFilterInput)(nil)).Elem(), GetInstanceTypesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesFilterArrayInput)(nil)).Elem(), GetInstanceTypesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeInput)(nil)).Elem(), GetInstanceTypesTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeArrayInput)(nil)).Elem(), GetInstanceTypesTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonInput)(nil)).Elem(), GetInstanceTypesTypeAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPriceInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupPriceArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupRegionPriceInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupRegionPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeAddonBackupRegionPriceArrayInput)(nil)).Elem(), GetInstanceTypesTypeAddonBackupRegionPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypePriceInput)(nil)).Elem(), GetInstanceTypesTypePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypePriceArrayInput)(nil)).Elem(), GetInstanceTypesTypePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeRegionPriceInput)(nil)).Elem(), GetInstanceTypesTypeRegionPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeRegionPriceArrayInput)(nil)).Elem(), GetInstanceTypesTypeRegionPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAlertsInput)(nil)).Elem(), GetInstancesInstanceAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupInput)(nil)).Elem(), GetInstancesInstanceBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupArrayInput)(nil)).Elem(), GetInstancesInstanceBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupScheduleInput)(nil)).Elem(), GetInstancesInstanceBackupScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupScheduleArrayInput)(nil)).Elem(), GetInstancesInstanceBackupScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigInput)(nil)).Elem(), GetInstancesInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigArrayInput)(nil)).Elem(), GetInstancesInstanceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdaInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdaArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdbInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdbArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdcInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdcArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSddInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSddArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSddArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSddArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdeInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdeArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdfInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdfArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdgInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdgArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdhInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigDeviceSdhArrayInput)(nil)).Elem(), GetInstancesInstanceConfigDeviceSdhArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigHelperInput)(nil)).Elem(), GetInstancesInstanceConfigHelperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigHelperArrayInput)(nil)).Elem(), GetInstancesInstanceConfigHelperArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigInterfaceInput)(nil)).Elem(), GetInstancesInstanceConfigInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigInterfaceArrayInput)(nil)).Elem(), GetInstancesInstanceConfigInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDiskInput)(nil)).Elem(), GetInstancesInstanceDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDiskArrayInput)(nil)).Elem(), GetInstancesInstanceDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceSpecInput)(nil)).Elem(), GetInstancesInstanceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceSpecArrayInput)(nil)).Elem(), GetInstancesInstanceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKernelsFilterInput)(nil)).Elem(), GetKernelsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKernelsFilterArrayInput)(nil)).Elem(), GetKernelsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKernelsKernelInput)(nil)).Elem(), GetKernelsKernelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKernelsKernelArrayInput)(nil)).Elem(), GetKernelsKernelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterControlPlaneInput)(nil)).Elem(), GetLkeClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterControlPlaneArrayInput)(nil)).Elem(), GetLkeClusterControlPlaneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolInput)(nil)).Elem(), GetLkeClusterPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolArrayInput)(nil)).Elem(), GetLkeClusterPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolAutoscalerInput)(nil)).Elem(), GetLkeClusterPoolAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolAutoscalerArrayInput)(nil)).Elem(), GetLkeClusterPoolAutoscalerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolNodeInput)(nil)).Elem(), GetLkeClusterPoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeClusterPoolNodeArrayInput)(nil)).Elem(), GetLkeClusterPoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeVersionsVersionInput)(nil)).Elem(), GetLkeVersionsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLkeVersionsVersionArrayInput)(nil)).Elem(), GetLkeVersionsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerConfigNodeStatusInput)(nil)).Elem(), GetNodeBalancerConfigNodeStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerConfigNodeStatusArrayInput)(nil)).Elem(), GetNodeBalancerConfigNodeStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerTransferInput)(nil)).Elem(), GetNodeBalancerTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeBalancerTransferArrayInput)(nil)).Elem(), GetNodeBalancerTransferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodebalancersFilterInput)(nil)).Elem(), GetNodebalancersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodebalancersFilterArrayInput)(nil)).Elem(), GetNodebalancersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodebalancersNodebalancerInput)(nil)).Elem(), GetNodebalancersNodebalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodebalancersNodebalancerArrayInput)(nil)).Elem(), GetNodebalancersNodebalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodebalancersNodebalancerTransferInput)(nil)).Elem(), GetNodebalancersNodebalancerTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodebalancersNodebalancerTransferArrayInput)(nil)).Elem(), GetNodebalancersNodebalancerTransferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileReferralsInput)(nil)).Elem(), GetProfileReferralsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionResolverInput)(nil)).Elem(), GetRegionResolverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionResolverArrayInput)(nil)).Elem(), GetRegionResolverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsFilterInput)(nil)).Elem(), GetRegionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsFilterArrayInput)(nil)).Elem(), GetRegionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionResolverInput)(nil)).Elem(), GetRegionsRegionResolverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionResolverArrayInput)(nil)).Elem(), GetRegionsRegionResolverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshkeysFilterInput)(nil)).Elem(), GetSshkeysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshkeysFilterArrayInput)(nil)).Elem(), GetSshkeysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshkeysSshkeyInput)(nil)).Elem(), GetSshkeysSshkeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshkeysSshkeyArrayInput)(nil)).Elem(), GetSshkeysSshkeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptUserDefinedFieldInput)(nil)).Elem(), GetStackScriptUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptUserDefinedFieldArrayInput)(nil)).Elem(), GetStackScriptUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsFilterInput)(nil)).Elem(), GetStackScriptsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsFilterArrayInput)(nil)).Elem(), GetStackScriptsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptInput)(nil)).Elem(), GetStackScriptsStackscriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptArrayInput)(nil)).Elem(), GetStackScriptsStackscriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedFieldInput)(nil)).Elem(), GetStackScriptsStackscriptUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackScriptsStackscriptUserDefinedFieldArrayInput)(nil)).Elem(), GetStackScriptsStackscriptUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserDatabaseGrantInput)(nil)).Elem(), GetUserDatabaseGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserDatabaseGrantArrayInput)(nil)).Elem(), GetUserDatabaseGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserDomainGrantInput)(nil)).Elem(), GetUserDomainGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserDomainGrantArrayInput)(nil)).Elem(), GetUserDomainGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserFirewallGrantInput)(nil)).Elem(), GetUserFirewallGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserFirewallGrantArrayInput)(nil)).Elem(), GetUserFirewallGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGlobalGrantInput)(nil)).Elem(), GetUserGlobalGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGlobalGrantArrayInput)(nil)).Elem(), GetUserGlobalGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserImageGrantInput)(nil)).Elem(), GetUserImageGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserImageGrantArrayInput)(nil)).Elem(), GetUserImageGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserLinodeGrantInput)(nil)).Elem(), GetUserLinodeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserLinodeGrantArrayInput)(nil)).Elem(), GetUserLinodeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserLongviewGrantInput)(nil)).Elem(), GetUserLongviewGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserLongviewGrantArrayInput)(nil)).Elem(), GetUserLongviewGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserNodebalancerGrantInput)(nil)).Elem(), GetUserNodebalancerGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserNodebalancerGrantArrayInput)(nil)).Elem(), GetUserNodebalancerGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserStackscriptGrantInput)(nil)).Elem(), GetUserStackscriptGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserStackscriptGrantArrayInput)(nil)).Elem(), GetUserStackscriptGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserVolumeGrantInput)(nil)).Elem(), GetUserVolumeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserVolumeGrantArrayInput)(nil)).Elem(), GetUserVolumeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterInput)(nil)).Elem(), GetUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterArrayInput)(nil)).Elem(), GetUsersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserDatabaseGrantInput)(nil)).Elem(), GetUsersUserDatabaseGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserDatabaseGrantArrayInput)(nil)).Elem(), GetUsersUserDatabaseGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserDomainGrantInput)(nil)).Elem(), GetUsersUserDomainGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserDomainGrantArrayInput)(nil)).Elem(), GetUsersUserDomainGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserFirewallGrantInput)(nil)).Elem(), GetUsersUserFirewallGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserFirewallGrantArrayInput)(nil)).Elem(), GetUsersUserFirewallGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserGlobalGrantInput)(nil)).Elem(), GetUsersUserGlobalGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserGlobalGrantArrayInput)(nil)).Elem(), GetUsersUserGlobalGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserImageGrantInput)(nil)).Elem(), GetUsersUserImageGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserImageGrantArrayInput)(nil)).Elem(), GetUsersUserImageGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserLinodeGrantInput)(nil)).Elem(), GetUsersUserLinodeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserLinodeGrantArrayInput)(nil)).Elem(), GetUsersUserLinodeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserLongviewGrantInput)(nil)).Elem(), GetUsersUserLongviewGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserLongviewGrantArrayInput)(nil)).Elem(), GetUsersUserLongviewGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserNodebalancerGrantInput)(nil)).Elem(), GetUsersUserNodebalancerGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserNodebalancerGrantArrayInput)(nil)).Elem(), GetUsersUserNodebalancerGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserStackscriptGrantInput)(nil)).Elem(), GetUsersUserStackscriptGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserStackscriptGrantArrayInput)(nil)).Elem(), GetUsersUserStackscriptGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserVolumeGrantInput)(nil)).Elem(), GetUsersUserVolumeGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserVolumeGrantArrayInput)(nil)).Elem(), GetUsersUserVolumeGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansFilterInput)(nil)).Elem(), GetVlansFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansFilterArrayInput)(nil)).Elem(), GetVlansFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansVlanInput)(nil)).Elem(), GetVlansVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansVlanArrayInput)(nil)).Elem(), GetVlansVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesFilterInput)(nil)).Elem(), GetVolumesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesFilterArrayInput)(nil)).Elem(), GetVolumesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeInput)(nil)).Elem(), GetVolumesVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVolumesVolumeArrayInput)(nil)).Elem(), GetVolumesVolumeArray{})
	pulumi.RegisterOutputType(DatabaseMysqlUpdatesOutput{})
	pulumi.RegisterOutputType(DatabaseMysqlUpdatesPtrOutput{})
	pulumi.RegisterOutputType(DatabasePostgresqlUpdatesOutput{})
	pulumi.RegisterOutputType(DatabasePostgresqlUpdatesPtrOutput{})
	pulumi.RegisterOutputType(FirewallDeviceTypeOutput{})
	pulumi.RegisterOutputType(FirewallDeviceTypeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInboundOutput{})
	pulumi.RegisterOutputType(FirewallInboundArrayOutput{})
	pulumi.RegisterOutputType(FirewallOutboundOutput{})
	pulumi.RegisterOutputType(FirewallOutboundArrayOutput{})
	pulumi.RegisterOutputType(InstanceAlertsOutput{})
	pulumi.RegisterOutputType(InstanceAlertsPtrOutput{})
	pulumi.RegisterOutputType(InstanceBackupsOutput{})
	pulumi.RegisterOutputType(InstanceBackupsPtrOutput{})
	pulumi.RegisterOutputType(InstanceBackupsScheduleOutput{})
	pulumi.RegisterOutputType(InstanceBackupsSchedulePtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdaOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdaPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdbOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdbPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdcOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdcPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSddOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSddPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdeOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdePtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdfOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdfPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdgOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdgPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdhOutput{})
	pulumi.RegisterOutputType(InstanceConfigDevicesSdhPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigHelpersOutput{})
	pulumi.RegisterOutputType(InstanceConfigHelpersPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceConfigInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceDiskTypeOutput{})
	pulumi.RegisterOutputType(InstanceDiskTypeArrayOutput{})
	pulumi.RegisterOutputType(InstanceInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOutput{})
	pulumi.RegisterOutputType(InstanceMetadataArrayOutput{})
	pulumi.RegisterOutputType(InstanceSpecsOutput{})
	pulumi.RegisterOutputType(InstanceSpecsPtrOutput{})
	pulumi.RegisterOutputType(LkeClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(LkeClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolArrayOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolAutoscalerOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolNodeOutput{})
	pulumi.RegisterOutputType(LkeClusterPoolNodeArrayOutput{})
	pulumi.RegisterOutputType(NodeBalancerConfigNodeStatusOutput{})
	pulumi.RegisterOutputType(NodeBalancerConfigNodeStatusArrayOutput{})
	pulumi.RegisterOutputType(NodeBalancerTransferOutput{})
	pulumi.RegisterOutputType(NodeBalancerTransferArrayOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketCertOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketCertPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageKeyBucketAccessOutput{})
	pulumi.RegisterOutputType(ObjectStorageKeyBucketAccessArrayOutput{})
	pulumi.RegisterOutputType(StackScriptUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(StackScriptUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(UserDomainGrantOutput{})
	pulumi.RegisterOutputType(UserDomainGrantArrayOutput{})
	pulumi.RegisterOutputType(UserFirewallGrantOutput{})
	pulumi.RegisterOutputType(UserFirewallGrantArrayOutput{})
	pulumi.RegisterOutputType(UserGlobalGrantsOutput{})
	pulumi.RegisterOutputType(UserGlobalGrantsPtrOutput{})
	pulumi.RegisterOutputType(UserImageGrantOutput{})
	pulumi.RegisterOutputType(UserImageGrantArrayOutput{})
	pulumi.RegisterOutputType(UserLinodeGrantOutput{})
	pulumi.RegisterOutputType(UserLinodeGrantArrayOutput{})
	pulumi.RegisterOutputType(UserLongviewGrantOutput{})
	pulumi.RegisterOutputType(UserLongviewGrantArrayOutput{})
	pulumi.RegisterOutputType(UserNodebalancerGrantOutput{})
	pulumi.RegisterOutputType(UserNodebalancerGrantArrayOutput{})
	pulumi.RegisterOutputType(UserStackscriptGrantOutput{})
	pulumi.RegisterOutputType(UserStackscriptGrantArrayOutput{})
	pulumi.RegisterOutputType(UserVolumeGrantOutput{})
	pulumi.RegisterOutputType(UserVolumeGrantArrayOutput{})
	pulumi.RegisterOutputType(GetAccountLoginsFilterOutput{})
	pulumi.RegisterOutputType(GetAccountLoginsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAccountLoginsLoginOutput{})
	pulumi.RegisterOutputType(GetAccountLoginsLoginArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetDatabaseBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseBackupsFilterOutput{})
	pulumi.RegisterOutputType(GetDatabaseBackupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseEnginesEngineOutput{})
	pulumi.RegisterOutputType(GetDatabaseEnginesEngineArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseEnginesFilterOutput{})
	pulumi.RegisterOutputType(GetDatabaseEnginesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseMysqlBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetDatabaseMysqlBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseMysqlBackupsFilterOutput{})
	pulumi.RegisterOutputType(GetDatabaseMysqlBackupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseMysqlUpdateOutput{})
	pulumi.RegisterOutputType(GetDatabaseMysqlUpdateArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasePostgresqlUpdateOutput{})
	pulumi.RegisterOutputType(GetDatabasePostgresqlUpdateArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesFilterOutput{})
	pulumi.RegisterOutputType(GetDatabasesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallDeviceTypeOutput{})
	pulumi.RegisterOutputType(GetFirewallDeviceTypeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInboundOutput{})
	pulumi.RegisterOutputType(GetFirewallInboundArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallOutboundOutput{})
	pulumi.RegisterOutputType(GetFirewallOutboundArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsFilterOutput{})
	pulumi.RegisterOutputType(GetFirewallsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallDeviceOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallInboundOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallInboundArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallOutboundOutput{})
	pulumi.RegisterOutputType(GetFirewallsFirewallOutboundArrayOutput{})
	pulumi.RegisterOutputType(GetImagesFilterOutput{})
	pulumi.RegisterOutputType(GetImagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsAutomaticDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsCurrentDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceBackupsInProgressDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4Output{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4ArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4PrivateOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4PrivateArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4PublicOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4PublicArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4ReservedOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4ReservedArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4SharedOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv4SharedArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv6Output{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv6ArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv6GlobalOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv6GlobalArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv6LinkLocalOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkingIpv6SlaacOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupRegionPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeAddonsBackupRegionPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypePriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeRegionPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeRegionPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupRegionPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeAddonBackupRegionPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypePriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypePriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeRegionPriceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeRegionPriceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAlertsOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupScheduleOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdaOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdaArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdbOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdbArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdcOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdcArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSddOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSddArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdfOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdfArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdgOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdgArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdhOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigDeviceSdhArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigHelperOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigHelperArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigInterfaceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDiskOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDiskArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceSpecOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetKernelsFilterOutput{})
	pulumi.RegisterOutputType(GetKernelsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKernelsKernelOutput{})
	pulumi.RegisterOutputType(GetKernelsKernelArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(GetLkeClusterControlPlaneArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolAutoscalerOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolAutoscalerArrayOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolNodeOutput{})
	pulumi.RegisterOutputType(GetLkeClusterPoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetLkeVersionsVersionOutput{})
	pulumi.RegisterOutputType(GetLkeVersionsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerConfigNodeStatusOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerConfigNodeStatusArrayOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerTransferOutput{})
	pulumi.RegisterOutputType(GetNodeBalancerTransferArrayOutput{})
	pulumi.RegisterOutputType(GetNodebalancersFilterOutput{})
	pulumi.RegisterOutputType(GetNodebalancersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNodebalancersNodebalancerOutput{})
	pulumi.RegisterOutputType(GetNodebalancersNodebalancerArrayOutput{})
	pulumi.RegisterOutputType(GetNodebalancersNodebalancerTransferOutput{})
	pulumi.RegisterOutputType(GetNodebalancersNodebalancerTransferArrayOutput{})
	pulumi.RegisterOutputType(GetProfileReferralsOutput{})
	pulumi.RegisterOutputType(GetRegionResolverOutput{})
	pulumi.RegisterOutputType(GetRegionResolverArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionResolverOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionResolverArrayOutput{})
	pulumi.RegisterOutputType(GetSshkeysFilterOutput{})
	pulumi.RegisterOutputType(GetSshkeysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSshkeysSshkeyOutput{})
	pulumi.RegisterOutputType(GetSshkeysSshkeyArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(GetStackScriptUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptsFilterOutput{})
	pulumi.RegisterOutputType(GetStackScriptsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptArrayOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(GetStackScriptsStackscriptUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(GetUserDatabaseGrantOutput{})
	pulumi.RegisterOutputType(GetUserDatabaseGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserDomainGrantOutput{})
	pulumi.RegisterOutputType(GetUserDomainGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserFirewallGrantOutput{})
	pulumi.RegisterOutputType(GetUserFirewallGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserGlobalGrantOutput{})
	pulumi.RegisterOutputType(GetUserGlobalGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserImageGrantOutput{})
	pulumi.RegisterOutputType(GetUserImageGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserLinodeGrantOutput{})
	pulumi.RegisterOutputType(GetUserLinodeGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserLongviewGrantOutput{})
	pulumi.RegisterOutputType(GetUserLongviewGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserNodebalancerGrantOutput{})
	pulumi.RegisterOutputType(GetUserNodebalancerGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserStackscriptGrantOutput{})
	pulumi.RegisterOutputType(GetUserStackscriptGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUserVolumeGrantOutput{})
	pulumi.RegisterOutputType(GetUserVolumeGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUsersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserDatabaseGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserDatabaseGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserDomainGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserDomainGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserFirewallGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserFirewallGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserGlobalGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserGlobalGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserImageGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserImageGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserLinodeGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserLinodeGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserLongviewGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserLongviewGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserNodebalancerGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserNodebalancerGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserStackscriptGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserStackscriptGrantArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserVolumeGrantOutput{})
	pulumi.RegisterOutputType(GetUsersUserVolumeGrantArrayOutput{})
	pulumi.RegisterOutputType(GetVlansFilterOutput{})
	pulumi.RegisterOutputType(GetVlansFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVlansVlanOutput{})
	pulumi.RegisterOutputType(GetVlansVlanArrayOutput{})
	pulumi.RegisterOutputType(GetVolumesFilterOutput{})
	pulumi.RegisterOutputType(GetVolumesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeOutput{})
	pulumi.RegisterOutputType(GetVolumesVolumeArrayOutput{})
}
