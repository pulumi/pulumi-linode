// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-linode/sdk/v5/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a Linode kernel
// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-kernel).
//
// ## Example Usage
//
// The following example shows how one might use this data source to access information about a Linode kernel.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v5/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := linode.GetKernel(ctx, &linode.GetKernelArgs{
//				Id: "linode/latest-64bit",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKernel(ctx *pulumi.Context, args *GetKernelArgs, opts ...pulumi.InvokeOption) (*GetKernelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKernelResult
	err := ctx.Invoke("linode:index/getKernel:getKernel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKernel.
type GetKernelArgs struct {
	// The unique ID of this Kernel.
	Id string `pulumi:"id"`
}

// A collection of values returned by getKernel.
type GetKernelResult struct {
	// The architecture of this Kernel.
	Architecture string `pulumi:"architecture"`
	Built        string `pulumi:"built"`
	// Whether or not this Kernel is deprecated.
	Deprecated bool   `pulumi:"deprecated"`
	Id         string `pulumi:"id"`
	// If this Kernel is suitable for KVM Linodes.
	Kvm bool `pulumi:"kvm"`
	// The friendly name of this Kernel.
	Label string `pulumi:"label"`
	// If this Kernel is suitable for paravirtualized operations.
	Pvops bool `pulumi:"pvops"`
	// Linux Kernel version
	Version string `pulumi:"version"`
	// If this Kernel is suitable for Xen Linodes.
	Xen bool `pulumi:"xen"`
}

func GetKernelOutput(ctx *pulumi.Context, args GetKernelOutputArgs, opts ...pulumi.InvokeOption) GetKernelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKernelResultOutput, error) {
			args := v.(GetKernelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("linode:index/getKernel:getKernel", args, GetKernelResultOutput{}, options).(GetKernelResultOutput), nil
		}).(GetKernelResultOutput)
}

// A collection of arguments for invoking getKernel.
type GetKernelOutputArgs struct {
	// The unique ID of this Kernel.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKernelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKernelArgs)(nil)).Elem()
}

// A collection of values returned by getKernel.
type GetKernelResultOutput struct{ *pulumi.OutputState }

func (GetKernelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKernelResult)(nil)).Elem()
}

func (o GetKernelResultOutput) ToGetKernelResultOutput() GetKernelResultOutput {
	return o
}

func (o GetKernelResultOutput) ToGetKernelResultOutputWithContext(ctx context.Context) GetKernelResultOutput {
	return o
}

// The architecture of this Kernel.
func (o GetKernelResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelResult) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetKernelResultOutput) Built() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelResult) string { return v.Built }).(pulumi.StringOutput)
}

// Whether or not this Kernel is deprecated.
func (o GetKernelResultOutput) Deprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelResult) bool { return v.Deprecated }).(pulumi.BoolOutput)
}

func (o GetKernelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelResult) string { return v.Id }).(pulumi.StringOutput)
}

// If this Kernel is suitable for KVM Linodes.
func (o GetKernelResultOutput) Kvm() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelResult) bool { return v.Kvm }).(pulumi.BoolOutput)
}

// The friendly name of this Kernel.
func (o GetKernelResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelResult) string { return v.Label }).(pulumi.StringOutput)
}

// If this Kernel is suitable for paravirtualized operations.
func (o GetKernelResultOutput) Pvops() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelResult) bool { return v.Pvops }).(pulumi.BoolOutput)
}

// Linux Kernel version
func (o GetKernelResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKernelResult) string { return v.Version }).(pulumi.StringOutput)
}

// If this Kernel is suitable for Xen Linodes.
func (o GetKernelResultOutput) Xen() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKernelResult) bool { return v.Xen }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKernelResultOutput{})
}
