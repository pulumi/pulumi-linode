// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a Linode VPC subnet.
// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpc-subnet).
//
// ## Example Usage
//
// The following example shows how one might use this data source to access information about a Linode VPC subnet.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := linode.LookupVpcSubnet(ctx, &linode.LookupVpcSubnetArgs{
//				VpcId: 123,
//				Id:    "12345",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("vpcSubnet", foo)
//			return nil
//		})
//	}
//
// ```
func LookupVpcSubnet(ctx *pulumi.Context, args *LookupVpcSubnetArgs, opts ...pulumi.InvokeOption) (*LookupVpcSubnetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcSubnetResult
	err := ctx.Invoke("linode:index/getVpcSubnet:getVpcSubnet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcSubnet.
type LookupVpcSubnetArgs struct {
	// The unique id of this VPC subnet.
	Id string `pulumi:"id"`
	// The id of the parent VPC for this VPC Subnet.
	VpcId int `pulumi:"vpcId"`
}

// A collection of values returned by getVpcSubnet.
type LookupVpcSubnetResult struct {
	// The date and time when the VPC Subnet was created.
	Created string `pulumi:"created"`
	Id      string `pulumi:"id"`
	// The IPv4 range of this subnet in CIDR format.
	Ipv4 string `pulumi:"ipv4"`
	// The label of the VPC subnet.
	Label string `pulumi:"label"`
	// A list of Linode IDs that added to this subnet.
	Linodes []GetVpcSubnetLinode `pulumi:"linodes"`
	// The date and time when the VPC Subnet was last updated.
	Updated string `pulumi:"updated"`
	VpcId   int    `pulumi:"vpcId"`
}

func LookupVpcSubnetOutput(ctx *pulumi.Context, args LookupVpcSubnetOutputArgs, opts ...pulumi.InvokeOption) LookupVpcSubnetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcSubnetResult, error) {
			args := v.(LookupVpcSubnetArgs)
			r, err := LookupVpcSubnet(ctx, &args, opts...)
			var s LookupVpcSubnetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcSubnetResultOutput)
}

// A collection of arguments for invoking getVpcSubnet.
type LookupVpcSubnetOutputArgs struct {
	// The unique id of this VPC subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the parent VPC for this VPC Subnet.
	VpcId pulumi.IntInput `pulumi:"vpcId"`
}

func (LookupVpcSubnetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcSubnetArgs)(nil)).Elem()
}

// A collection of values returned by getVpcSubnet.
type LookupVpcSubnetResultOutput struct{ *pulumi.OutputState }

func (LookupVpcSubnetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcSubnetResult)(nil)).Elem()
}

func (o LookupVpcSubnetResultOutput) ToLookupVpcSubnetResultOutput() LookupVpcSubnetResultOutput {
	return o
}

func (o LookupVpcSubnetResultOutput) ToLookupVpcSubnetResultOutputWithContext(ctx context.Context) LookupVpcSubnetResultOutput {
	return o
}

// The date and time when the VPC Subnet was created.
func (o LookupVpcSubnetResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) string { return v.Created }).(pulumi.StringOutput)
}

func (o LookupVpcSubnetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv4 range of this subnet in CIDR format.
func (o LookupVpcSubnetResultOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) string { return v.Ipv4 }).(pulumi.StringOutput)
}

// The label of the VPC subnet.
func (o LookupVpcSubnetResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) string { return v.Label }).(pulumi.StringOutput)
}

// A list of Linode IDs that added to this subnet.
func (o LookupVpcSubnetResultOutput) Linodes() GetVpcSubnetLinodeArrayOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) []GetVpcSubnetLinode { return v.Linodes }).(GetVpcSubnetLinodeArrayOutput)
}

// The date and time when the VPC Subnet was last updated.
func (o LookupVpcSubnetResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) string { return v.Updated }).(pulumi.StringOutput)
}

func (o LookupVpcSubnetResultOutput) VpcId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpcSubnetResult) int { return v.VpcId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcSubnetResultOutput{})
}
