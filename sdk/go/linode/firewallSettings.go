// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-linode/sdk/v5/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages Linode account-level firewall settings. Resetting default firewall IDs
// to null is not available to all customers and unsupported in this resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v5/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := linode.NewFirewallSettings(ctx, "example", &linode.FirewallSettingsArgs{
//				DefaultFirewallIds: &linode.FirewallSettingsDefaultFirewallIdsArgs{
//					Linode:          pulumi.Int(12345),
//					Nodebalancer:    pulumi.Int(12345),
//					PublicInterface: pulumi.Int(12345),
//					VpcInterface:    pulumi.Int(12345),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Reference
//
// See the [Linode API documentation](https://techdocs.akamai.com/linode-api/reference/put-firewall-settings) for more details.
type FirewallSettings struct {
	pulumi.CustomResourceState

	// A map of default firewall IDs for various interfaces.
	DefaultFirewallIds FirewallSettingsDefaultFirewallIdsPtrOutput `pulumi:"defaultFirewallIds"`
}

// NewFirewallSettings registers a new resource with the given unique name, arguments, and options.
func NewFirewallSettings(ctx *pulumi.Context,
	name string, args *FirewallSettingsArgs, opts ...pulumi.ResourceOption) (*FirewallSettings, error) {
	if args == nil {
		args = &FirewallSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallSettings
	err := ctx.RegisterResource("linode:index/firewallSettings:FirewallSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallSettings gets an existing FirewallSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallSettingsState, opts ...pulumi.ResourceOption) (*FirewallSettings, error) {
	var resource FirewallSettings
	err := ctx.ReadResource("linode:index/firewallSettings:FirewallSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallSettings resources.
type firewallSettingsState struct {
	// A map of default firewall IDs for various interfaces.
	DefaultFirewallIds *FirewallSettingsDefaultFirewallIds `pulumi:"defaultFirewallIds"`
}

type FirewallSettingsState struct {
	// A map of default firewall IDs for various interfaces.
	DefaultFirewallIds FirewallSettingsDefaultFirewallIdsPtrInput
}

func (FirewallSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallSettingsState)(nil)).Elem()
}

type firewallSettingsArgs struct {
	// A map of default firewall IDs for various interfaces.
	DefaultFirewallIds *FirewallSettingsDefaultFirewallIds `pulumi:"defaultFirewallIds"`
}

// The set of arguments for constructing a FirewallSettings resource.
type FirewallSettingsArgs struct {
	// A map of default firewall IDs for various interfaces.
	DefaultFirewallIds FirewallSettingsDefaultFirewallIdsPtrInput
}

func (FirewallSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallSettingsArgs)(nil)).Elem()
}

type FirewallSettingsInput interface {
	pulumi.Input

	ToFirewallSettingsOutput() FirewallSettingsOutput
	ToFirewallSettingsOutputWithContext(ctx context.Context) FirewallSettingsOutput
}

func (*FirewallSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSettings)(nil)).Elem()
}

func (i *FirewallSettings) ToFirewallSettingsOutput() FirewallSettingsOutput {
	return i.ToFirewallSettingsOutputWithContext(context.Background())
}

func (i *FirewallSettings) ToFirewallSettingsOutputWithContext(ctx context.Context) FirewallSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSettingsOutput)
}

// FirewallSettingsArrayInput is an input type that accepts FirewallSettingsArray and FirewallSettingsArrayOutput values.
// You can construct a concrete instance of `FirewallSettingsArrayInput` via:
//
//	FirewallSettingsArray{ FirewallSettingsArgs{...} }
type FirewallSettingsArrayInput interface {
	pulumi.Input

	ToFirewallSettingsArrayOutput() FirewallSettingsArrayOutput
	ToFirewallSettingsArrayOutputWithContext(context.Context) FirewallSettingsArrayOutput
}

type FirewallSettingsArray []FirewallSettingsInput

func (FirewallSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallSettings)(nil)).Elem()
}

func (i FirewallSettingsArray) ToFirewallSettingsArrayOutput() FirewallSettingsArrayOutput {
	return i.ToFirewallSettingsArrayOutputWithContext(context.Background())
}

func (i FirewallSettingsArray) ToFirewallSettingsArrayOutputWithContext(ctx context.Context) FirewallSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSettingsArrayOutput)
}

// FirewallSettingsMapInput is an input type that accepts FirewallSettingsMap and FirewallSettingsMapOutput values.
// You can construct a concrete instance of `FirewallSettingsMapInput` via:
//
//	FirewallSettingsMap{ "key": FirewallSettingsArgs{...} }
type FirewallSettingsMapInput interface {
	pulumi.Input

	ToFirewallSettingsMapOutput() FirewallSettingsMapOutput
	ToFirewallSettingsMapOutputWithContext(context.Context) FirewallSettingsMapOutput
}

type FirewallSettingsMap map[string]FirewallSettingsInput

func (FirewallSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallSettings)(nil)).Elem()
}

func (i FirewallSettingsMap) ToFirewallSettingsMapOutput() FirewallSettingsMapOutput {
	return i.ToFirewallSettingsMapOutputWithContext(context.Background())
}

func (i FirewallSettingsMap) ToFirewallSettingsMapOutputWithContext(ctx context.Context) FirewallSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSettingsMapOutput)
}

type FirewallSettingsOutput struct{ *pulumi.OutputState }

func (FirewallSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSettings)(nil)).Elem()
}

func (o FirewallSettingsOutput) ToFirewallSettingsOutput() FirewallSettingsOutput {
	return o
}

func (o FirewallSettingsOutput) ToFirewallSettingsOutputWithContext(ctx context.Context) FirewallSettingsOutput {
	return o
}

// A map of default firewall IDs for various interfaces.
func (o FirewallSettingsOutput) DefaultFirewallIds() FirewallSettingsDefaultFirewallIdsPtrOutput {
	return o.ApplyT(func(v *FirewallSettings) FirewallSettingsDefaultFirewallIdsPtrOutput { return v.DefaultFirewallIds }).(FirewallSettingsDefaultFirewallIdsPtrOutput)
}

type FirewallSettingsArrayOutput struct{ *pulumi.OutputState }

func (FirewallSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallSettings)(nil)).Elem()
}

func (o FirewallSettingsArrayOutput) ToFirewallSettingsArrayOutput() FirewallSettingsArrayOutput {
	return o
}

func (o FirewallSettingsArrayOutput) ToFirewallSettingsArrayOutputWithContext(ctx context.Context) FirewallSettingsArrayOutput {
	return o
}

func (o FirewallSettingsArrayOutput) Index(i pulumi.IntInput) FirewallSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallSettings {
		return vs[0].([]*FirewallSettings)[vs[1].(int)]
	}).(FirewallSettingsOutput)
}

type FirewallSettingsMapOutput struct{ *pulumi.OutputState }

func (FirewallSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallSettings)(nil)).Elem()
}

func (o FirewallSettingsMapOutput) ToFirewallSettingsMapOutput() FirewallSettingsMapOutput {
	return o
}

func (o FirewallSettingsMapOutput) ToFirewallSettingsMapOutputWithContext(ctx context.Context) FirewallSettingsMapOutput {
	return o
}

func (o FirewallSettingsMapOutput) MapIndex(k pulumi.StringInput) FirewallSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallSettings {
		return vs[0].(map[string]*FirewallSettings)[vs[1].(string)]
	}).(FirewallSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSettingsInput)(nil)).Elem(), &FirewallSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSettingsArrayInput)(nil)).Elem(), FirewallSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSettingsMapInput)(nil)).Elem(), FirewallSettingsMap{})
	pulumi.RegisterOutputType(FirewallSettingsOutput{})
	pulumi.RegisterOutputType(FirewallSettingsArrayOutput{})
	pulumi.RegisterOutputType(FirewallSettingsMapOutput{})
}
