// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Linode Placement Group.
// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/post-placement-group).
//
// ## Example Usage
//
// Create a Placement Group with the local anti-affinity policy:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := linode.NewPlacementGroup(ctx, "test", &linode.PlacementGroupArgs{
//				Label:              pulumi.String("my-placement-group"),
//				Region:             pulumi.String("us-mia"),
//				PlacementGroupType: pulumi.String("anti_affinity:local"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Placement Groups be imported using their unique `id`, e.g.
//
// ```sh
// $ pulumi import linode:index/placementGroup:PlacementGroup mygroup 1234567
// ```
type PlacementGroup struct {
	pulumi.CustomResourceState

	// Whether this Linode is currently compliant with the group's placement group type.
	IsCompliant pulumi.BoolOutput `pulumi:"isCompliant"`
	// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
	Label pulumi.StringOutput `pulumi:"label"`
	// A set of Linodes currently assigned to this Placement Group.
	Members PlacementGroupMemberArrayOutput `pulumi:"members"`
	// Whether Linodes must be able to become compliant during assignment. (Default `strict`)
	PlacementGroupPolicy pulumi.StringOutput `pulumi:"placementGroupPolicy"`
	// The placement group type to use when placing Linodes in this group.
	PlacementGroupType pulumi.StringOutput `pulumi:"placementGroupType"`
	// The region of the Placement Group.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewPlacementGroup registers a new resource with the given unique name, arguments, and options.
func NewPlacementGroup(ctx *pulumi.Context,
	name string, args *PlacementGroupArgs, opts ...pulumi.ResourceOption) (*PlacementGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.PlacementGroupType == nil {
		return nil, errors.New("invalid value for required argument 'PlacementGroupType'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PlacementGroup
	err := ctx.RegisterResource("linode:index/placementGroup:PlacementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlacementGroup gets an existing PlacementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlacementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlacementGroupState, opts ...pulumi.ResourceOption) (*PlacementGroup, error) {
	var resource PlacementGroup
	err := ctx.ReadResource("linode:index/placementGroup:PlacementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlacementGroup resources.
type placementGroupState struct {
	// Whether this Linode is currently compliant with the group's placement group type.
	IsCompliant *bool `pulumi:"isCompliant"`
	// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
	Label *string `pulumi:"label"`
	// A set of Linodes currently assigned to this Placement Group.
	Members []PlacementGroupMember `pulumi:"members"`
	// Whether Linodes must be able to become compliant during assignment. (Default `strict`)
	PlacementGroupPolicy *string `pulumi:"placementGroupPolicy"`
	// The placement group type to use when placing Linodes in this group.
	PlacementGroupType *string `pulumi:"placementGroupType"`
	// The region of the Placement Group.
	Region *string `pulumi:"region"`
}

type PlacementGroupState struct {
	// Whether this Linode is currently compliant with the group's placement group type.
	IsCompliant pulumi.BoolPtrInput
	// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
	Label pulumi.StringPtrInput
	// A set of Linodes currently assigned to this Placement Group.
	Members PlacementGroupMemberArrayInput
	// Whether Linodes must be able to become compliant during assignment. (Default `strict`)
	PlacementGroupPolicy pulumi.StringPtrInput
	// The placement group type to use when placing Linodes in this group.
	PlacementGroupType pulumi.StringPtrInput
	// The region of the Placement Group.
	Region pulumi.StringPtrInput
}

func (PlacementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*placementGroupState)(nil)).Elem()
}

type placementGroupArgs struct {
	// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
	Label string `pulumi:"label"`
	// Whether Linodes must be able to become compliant during assignment. (Default `strict`)
	PlacementGroupPolicy *string `pulumi:"placementGroupPolicy"`
	// The placement group type to use when placing Linodes in this group.
	PlacementGroupType string `pulumi:"placementGroupType"`
	// The region of the Placement Group.
	Region string `pulumi:"region"`
}

// The set of arguments for constructing a PlacementGroup resource.
type PlacementGroupArgs struct {
	// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
	Label pulumi.StringInput
	// Whether Linodes must be able to become compliant during assignment. (Default `strict`)
	PlacementGroupPolicy pulumi.StringPtrInput
	// The placement group type to use when placing Linodes in this group.
	PlacementGroupType pulumi.StringInput
	// The region of the Placement Group.
	Region pulumi.StringInput
}

func (PlacementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*placementGroupArgs)(nil)).Elem()
}

type PlacementGroupInput interface {
	pulumi.Input

	ToPlacementGroupOutput() PlacementGroupOutput
	ToPlacementGroupOutputWithContext(ctx context.Context) PlacementGroupOutput
}

func (*PlacementGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroup)(nil)).Elem()
}

func (i *PlacementGroup) ToPlacementGroupOutput() PlacementGroupOutput {
	return i.ToPlacementGroupOutputWithContext(context.Background())
}

func (i *PlacementGroup) ToPlacementGroupOutputWithContext(ctx context.Context) PlacementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupOutput)
}

// PlacementGroupArrayInput is an input type that accepts PlacementGroupArray and PlacementGroupArrayOutput values.
// You can construct a concrete instance of `PlacementGroupArrayInput` via:
//
//	PlacementGroupArray{ PlacementGroupArgs{...} }
type PlacementGroupArrayInput interface {
	pulumi.Input

	ToPlacementGroupArrayOutput() PlacementGroupArrayOutput
	ToPlacementGroupArrayOutputWithContext(context.Context) PlacementGroupArrayOutput
}

type PlacementGroupArray []PlacementGroupInput

func (PlacementGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlacementGroup)(nil)).Elem()
}

func (i PlacementGroupArray) ToPlacementGroupArrayOutput() PlacementGroupArrayOutput {
	return i.ToPlacementGroupArrayOutputWithContext(context.Background())
}

func (i PlacementGroupArray) ToPlacementGroupArrayOutputWithContext(ctx context.Context) PlacementGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupArrayOutput)
}

// PlacementGroupMapInput is an input type that accepts PlacementGroupMap and PlacementGroupMapOutput values.
// You can construct a concrete instance of `PlacementGroupMapInput` via:
//
//	PlacementGroupMap{ "key": PlacementGroupArgs{...} }
type PlacementGroupMapInput interface {
	pulumi.Input

	ToPlacementGroupMapOutput() PlacementGroupMapOutput
	ToPlacementGroupMapOutputWithContext(context.Context) PlacementGroupMapOutput
}

type PlacementGroupMap map[string]PlacementGroupInput

func (PlacementGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlacementGroup)(nil)).Elem()
}

func (i PlacementGroupMap) ToPlacementGroupMapOutput() PlacementGroupMapOutput {
	return i.ToPlacementGroupMapOutputWithContext(context.Background())
}

func (i PlacementGroupMap) ToPlacementGroupMapOutputWithContext(ctx context.Context) PlacementGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupMapOutput)
}

type PlacementGroupOutput struct{ *pulumi.OutputState }

func (PlacementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroup)(nil)).Elem()
}

func (o PlacementGroupOutput) ToPlacementGroupOutput() PlacementGroupOutput {
	return o
}

func (o PlacementGroupOutput) ToPlacementGroupOutputWithContext(ctx context.Context) PlacementGroupOutput {
	return o
}

// Whether this Linode is currently compliant with the group's placement group type.
func (o PlacementGroupOutput) IsCompliant() pulumi.BoolOutput {
	return o.ApplyT(func(v *PlacementGroup) pulumi.BoolOutput { return v.IsCompliant }).(pulumi.BoolOutput)
}

// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
func (o PlacementGroupOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementGroup) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// A set of Linodes currently assigned to this Placement Group.
func (o PlacementGroupOutput) Members() PlacementGroupMemberArrayOutput {
	return o.ApplyT(func(v *PlacementGroup) PlacementGroupMemberArrayOutput { return v.Members }).(PlacementGroupMemberArrayOutput)
}

// Whether Linodes must be able to become compliant during assignment. (Default `strict`)
func (o PlacementGroupOutput) PlacementGroupPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementGroup) pulumi.StringOutput { return v.PlacementGroupPolicy }).(pulumi.StringOutput)
}

// The placement group type to use when placing Linodes in this group.
func (o PlacementGroupOutput) PlacementGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementGroup) pulumi.StringOutput { return v.PlacementGroupType }).(pulumi.StringOutput)
}

// The region of the Placement Group.
func (o PlacementGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type PlacementGroupArrayOutput struct{ *pulumi.OutputState }

func (PlacementGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlacementGroup)(nil)).Elem()
}

func (o PlacementGroupArrayOutput) ToPlacementGroupArrayOutput() PlacementGroupArrayOutput {
	return o
}

func (o PlacementGroupArrayOutput) ToPlacementGroupArrayOutputWithContext(ctx context.Context) PlacementGroupArrayOutput {
	return o
}

func (o PlacementGroupArrayOutput) Index(i pulumi.IntInput) PlacementGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PlacementGroup {
		return vs[0].([]*PlacementGroup)[vs[1].(int)]
	}).(PlacementGroupOutput)
}

type PlacementGroupMapOutput struct{ *pulumi.OutputState }

func (PlacementGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlacementGroup)(nil)).Elem()
}

func (o PlacementGroupMapOutput) ToPlacementGroupMapOutput() PlacementGroupMapOutput {
	return o
}

func (o PlacementGroupMapOutput) ToPlacementGroupMapOutputWithContext(ctx context.Context) PlacementGroupMapOutput {
	return o
}

func (o PlacementGroupMapOutput) MapIndex(k pulumi.StringInput) PlacementGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PlacementGroup {
		return vs[0].(map[string]*PlacementGroup)[vs[1].(string)]
	}).(PlacementGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlacementGroupInput)(nil)).Elem(), &PlacementGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlacementGroupArrayInput)(nil)).Elem(), PlacementGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlacementGroupMapInput)(nil)).Elem(), PlacementGroupMap{})
	pulumi.RegisterOutputType(PlacementGroupOutput{})
	pulumi.RegisterOutputType(PlacementGroupArrayOutput{})
	pulumi.RegisterOutputType(PlacementGroupMapOutput{})
}
