// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Instance struct {
	pulumi.CustomResourceState

	Alerts InstanceAlertsOutput `pulumi:"alerts"`
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys pulumi.StringArrayOutput `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers pulumi.StringArrayOutput `pulumi:"authorizedUsers"`
	// A Backup ID from another Linode's available backups. Your User must have readWrite access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backupId` forces the creation of a new Linode Instance.*
	BackupId pulumi.IntPtrOutput `pulumi:"backupId"`
	// Information about this Linode's backups status.
	Backups InstanceBackupsOutput `pulumi:"backups"`
	// If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
	BackupsEnabled pulumi.BoolOutput `pulumi:"backupsEnabled"`
	// The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `bootConfigLabel`. *This value can not be imported.*
	BootConfigLabel pulumi.StringOutput `pulumi:"bootConfigLabel"`
	// Configuration profiles define the VM settings and boot behavior of the Linode Instance.
	Configs InstanceConfigArrayOutput `pulumi:"configs"`
	Disks   InstanceDiskArrayOutput   `pulumi:"disks"`
	// The display group of the Linode instance.
	Group pulumi.StringPtrOutput `pulumi:"group"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. *Changing `image` forces the creation of a new Linode Instance.*
	Image pulumi.StringPtrOutput `pulumi:"image"`
	// This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
	// will be used for this field.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
	// private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
	Ipv4s pulumi.StringArrayOutput `pulumi:"ipv4s"`
	// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
	Ipv6 pulumi.StringOutput `pulumi:"ipv6"`
	// The Config's label for display purposes.  Also used by `bootConfigLabel`.
	Label pulumi.StringOutput `pulumi:"label"`
	// If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.
	PrivateIp pulumi.BoolPtrOutput `pulumi:"privateIp"`
	// This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
	// Instances in a region.
	PrivateIpAddress pulumi.StringOutput `pulumi:"privateIpAddress"`
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode Instance.*.
	Region pulumi.StringOutput `pulumi:"region"`
	// The password that will be initialially assigned to the 'root' user account.
	RootPass pulumi.StringPtrOutput `pulumi:"rootPass"`
	Specs    InstanceSpecsOutput    `pulumi:"specs"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData pulumi.StringMapOutput `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId pulumi.IntPtrOutput `pulumi:"stackscriptId"`
	// The status of the instance, indicating the current readiness state.
	Status pulumi.StringOutput `pulumi:"status"`
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize pulumi.IntOutput `pulumi:"swapSize"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance.  Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled pulumi.BoolPtrOutput `pulumi:"watchdogEnabled"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil || args.Region == nil {
		return nil, errors.New("missing required argument 'Region'")
	}
	if args == nil {
		args = &InstanceArgs{}
	}
	var resource Instance
	err := ctx.RegisterResource("linode:index/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("linode:index/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	Alerts *InstanceAlerts `pulumi:"alerts"`
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys []string `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers []string `pulumi:"authorizedUsers"`
	// A Backup ID from another Linode's available backups. Your User must have readWrite access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backupId` forces the creation of a new Linode Instance.*
	BackupId *int `pulumi:"backupId"`
	// Information about this Linode's backups status.
	Backups *InstanceBackups `pulumi:"backups"`
	// If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
	BackupsEnabled *bool `pulumi:"backupsEnabled"`
	// The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `bootConfigLabel`. *This value can not be imported.*
	BootConfigLabel *string `pulumi:"bootConfigLabel"`
	// Configuration profiles define the VM settings and boot behavior of the Linode Instance.
	Configs []InstanceConfig `pulumi:"configs"`
	Disks   []InstanceDisk   `pulumi:"disks"`
	// The display group of the Linode instance.
	Group *string `pulumi:"group"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. *Changing `image` forces the creation of a new Linode Instance.*
	Image *string `pulumi:"image"`
	// This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
	// will be used for this field.
	IpAddress *string `pulumi:"ipAddress"`
	// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
	// private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
	Ipv4s []string `pulumi:"ipv4s"`
	// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
	Ipv6 *string `pulumi:"ipv6"`
	// The Config's label for display purposes.  Also used by `bootConfigLabel`.
	Label *string `pulumi:"label"`
	// If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.
	PrivateIp *bool `pulumi:"privateIp"`
	// This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
	// Instances in a region.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode Instance.*.
	Region *string `pulumi:"region"`
	// The password that will be initialially assigned to the 'root' user account.
	RootPass *string        `pulumi:"rootPass"`
	Specs    *InstanceSpecs `pulumi:"specs"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData map[string]string `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId *int `pulumi:"stackscriptId"`
	// The status of the instance, indicating the current readiness state.
	Status *string `pulumi:"status"`
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize *int `pulumi:"swapSize"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `pulumi:"tags"`
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance.  Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc.
	Type *string `pulumi:"type"`
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled *bool `pulumi:"watchdogEnabled"`
}

type InstanceState struct {
	Alerts InstanceAlertsPtrInput
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys pulumi.StringArrayInput
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers pulumi.StringArrayInput
	// A Backup ID from another Linode's available backups. Your User must have readWrite access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backupId` forces the creation of a new Linode Instance.*
	BackupId pulumi.IntPtrInput
	// Information about this Linode's backups status.
	Backups InstanceBackupsPtrInput
	// If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
	BackupsEnabled pulumi.BoolPtrInput
	// The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `bootConfigLabel`. *This value can not be imported.*
	BootConfigLabel pulumi.StringPtrInput
	// Configuration profiles define the VM settings and boot behavior of the Linode Instance.
	Configs InstanceConfigArrayInput
	Disks   InstanceDiskArrayInput
	// The display group of the Linode instance.
	Group pulumi.StringPtrInput
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. *Changing `image` forces the creation of a new Linode Instance.*
	Image pulumi.StringPtrInput
	// This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
	// will be used for this field.
	IpAddress pulumi.StringPtrInput
	// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
	// private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
	Ipv4s pulumi.StringArrayInput
	// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
	Ipv6 pulumi.StringPtrInput
	// The Config's label for display purposes.  Also used by `bootConfigLabel`.
	Label pulumi.StringPtrInput
	// If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.
	PrivateIp pulumi.BoolPtrInput
	// This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
	// Instances in a region.
	PrivateIpAddress pulumi.StringPtrInput
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode Instance.*.
	Region pulumi.StringPtrInput
	// The password that will be initialially assigned to the 'root' user account.
	RootPass pulumi.StringPtrInput
	Specs    InstanceSpecsPtrInput
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData pulumi.StringMapInput
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId pulumi.IntPtrInput
	// The status of the instance, indicating the current readiness state.
	Status pulumi.StringPtrInput
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize pulumi.IntPtrInput
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags pulumi.StringArrayInput
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance.  Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc.
	Type pulumi.StringPtrInput
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled pulumi.BoolPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	Alerts *InstanceAlerts `pulumi:"alerts"`
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys []string `pulumi:"authorizedKeys"`
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers []string `pulumi:"authorizedUsers"`
	// A Backup ID from another Linode's available backups. Your User must have readWrite access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backupId` forces the creation of a new Linode Instance.*
	BackupId *int `pulumi:"backupId"`
	// If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
	BackupsEnabled *bool `pulumi:"backupsEnabled"`
	// The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `bootConfigLabel`. *This value can not be imported.*
	BootConfigLabel *string `pulumi:"bootConfigLabel"`
	// Configuration profiles define the VM settings and boot behavior of the Linode Instance.
	Configs []InstanceConfig `pulumi:"configs"`
	Disks   []InstanceDisk   `pulumi:"disks"`
	// The display group of the Linode instance.
	Group *string `pulumi:"group"`
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. *Changing `image` forces the creation of a new Linode Instance.*
	Image *string `pulumi:"image"`
	// The Config's label for display purposes.  Also used by `bootConfigLabel`.
	Label *string `pulumi:"label"`
	// If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.
	PrivateIp *bool `pulumi:"privateIp"`
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode Instance.*.
	Region string `pulumi:"region"`
	// The password that will be initialially assigned to the 'root' user account.
	RootPass *string `pulumi:"rootPass"`
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData map[string]string `pulumi:"stackscriptData"`
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId *int `pulumi:"stackscriptId"`
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize *int `pulumi:"swapSize"`
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `pulumi:"tags"`
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance.  Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc.
	Type *string `pulumi:"type"`
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled *bool `pulumi:"watchdogEnabled"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	Alerts InstanceAlertsPtrInput
	// A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
	AuthorizedKeys pulumi.StringArrayInput
	// A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
	AuthorizedUsers pulumi.StringArrayInput
	// A Backup ID from another Linode's available backups. Your User must have readWrite access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backupId` forces the creation of a new Linode Instance.*
	BackupId pulumi.IntPtrInput
	// If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
	BackupsEnabled pulumi.BoolPtrInput
	// The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `bootConfigLabel`. *This value can not be imported.*
	BootConfigLabel pulumi.StringPtrInput
	// Configuration profiles define the VM settings and boot behavior of the Linode Instance.
	Configs InstanceConfigArrayInput
	Disks   InstanceDiskArrayInput
	// The display group of the Linode instance.
	Group pulumi.StringPtrInput
	// An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. *Changing `image` forces the creation of a new Linode Instance.*
	Image pulumi.StringPtrInput
	// The Config's label for display purposes.  Also used by `bootConfigLabel`.
	Label pulumi.StringPtrInput
	// If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.
	PrivateIp pulumi.BoolPtrInput
	// This is the location where the Linode is deployed. Examples are `"us-east"`, `"us-west"`, `"ap-south"`, etc.  *Changing `region` forces the creation of a new Linode Instance.*.
	Region pulumi.StringInput
	// The password that will be initialially assigned to the 'root' user account.
	RootPass pulumi.StringPtrInput
	// An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
	StackscriptData pulumi.StringMapInput
	// The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
	StackscriptId pulumi.IntPtrInput
	// When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
	SwapSize pulumi.IntPtrInput
	// A list of tags applied to this object. Tags are for organizational purposes only.
	Tags pulumi.StringArrayInput
	// The Linode type defines the pricing, CPU, disk, and RAM specs of the instance.  Examples are `"g6-nanode-1"`, `"g6-standard-2"`, `"g6-highmem-16"`, `"g6-dedicated-16"`, etc.
	Type pulumi.StringPtrInput
	// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
	WatchdogEnabled pulumi.BoolPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}
