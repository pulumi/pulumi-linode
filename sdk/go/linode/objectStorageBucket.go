// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package linode

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Linode Object Storage Bucket resource. This can be used to create, modify, and delete Linodes Object Storage Buckets.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-linode/blob/master/website/docs/r/object_storage_bucket.html.md.
type ObjectStorageBucket struct {
	pulumi.CustomResourceState

	// The cluster of the Linode Object Storage Bucket.
	Cluster pulumi.StringOutput `pulumi:"cluster"`
	// The label of the Linode Object Storage Bucket.
	Label pulumi.StringOutput `pulumi:"label"`
}

// NewObjectStorageBucket registers a new resource with the given unique name, arguments, and options.
func NewObjectStorageBucket(ctx *pulumi.Context,
	name string, args *ObjectStorageBucketArgs, opts ...pulumi.ResourceOption) (*ObjectStorageBucket, error) {
	if args == nil || args.Cluster == nil {
		return nil, errors.New("missing required argument 'Cluster'")
	}
	if args == nil || args.Label == nil {
		return nil, errors.New("missing required argument 'Label'")
	}
	if args == nil {
		args = &ObjectStorageBucketArgs{}
	}
	var resource ObjectStorageBucket
	err := ctx.RegisterResource("linode:index/objectStorageBucket:ObjectStorageBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectStorageBucket gets an existing ObjectStorageBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectStorageBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectStorageBucketState, opts ...pulumi.ResourceOption) (*ObjectStorageBucket, error) {
	var resource ObjectStorageBucket
	err := ctx.ReadResource("linode:index/objectStorageBucket:ObjectStorageBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectStorageBucket resources.
type objectStorageBucketState struct {
	// The cluster of the Linode Object Storage Bucket.
	Cluster *string `pulumi:"cluster"`
	// The label of the Linode Object Storage Bucket.
	Label *string `pulumi:"label"`
}

type ObjectStorageBucketState struct {
	// The cluster of the Linode Object Storage Bucket.
	Cluster pulumi.StringPtrInput
	// The label of the Linode Object Storage Bucket.
	Label pulumi.StringPtrInput
}

func (ObjectStorageBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageBucketState)(nil)).Elem()
}

type objectStorageBucketArgs struct {
	// The cluster of the Linode Object Storage Bucket.
	Cluster string `pulumi:"cluster"`
	// The label of the Linode Object Storage Bucket.
	Label string `pulumi:"label"`
}

// The set of arguments for constructing a ObjectStorageBucket resource.
type ObjectStorageBucketArgs struct {
	// The cluster of the Linode Object Storage Bucket.
	Cluster pulumi.StringInput
	// The label of the Linode Object Storage Bucket.
	Label pulumi.StringInput
}

func (ObjectStorageBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageBucketArgs)(nil)).Elem()
}
