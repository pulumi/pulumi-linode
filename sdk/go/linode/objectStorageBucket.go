// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Linode Object Storage Bucket resource. This can be used to create, modify, and delete Linodes Object Storage Buckets.
// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
//
// ## Example Usage
//
// The following example shows how one might use this resource to create an Object Storage Bucket:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := linode.NewObjectStorageBucket(ctx, "foobar", &linode.ObjectStorageBucketArgs{
//				Region: pulumi.String("us-mia"),
//				Label:  pulumi.String("mybucket"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Creating an Object Storage Bucket with Lifecycle rules:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mykey, err := linode.NewObjectStorageKey(ctx, "mykey", &linode.ObjectStorageKeyArgs{
//				Label: pulumi.String("image-access"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = linode.NewObjectStorageBucket(ctx, "mybucket", &linode.ObjectStorageBucketArgs{
//				AccessKey: mykey.AccessKey,
//				SecretKey: mykey.SecretKey,
//				Region:    pulumi.String("us-mia"),
//				Label:     pulumi.String("mybucket"),
//				LifecycleRules: linode.ObjectStorageBucketLifecycleRuleArray{
//					&linode.ObjectStorageBucketLifecycleRuleArgs{
//						Id:                                 pulumi.String("my-rule"),
//						Enabled:                            pulumi.Bool(true),
//						AbortIncompleteMultipartUploadDays: pulumi.Int(5),
//						Expiration: &linode.ObjectStorageBucketLifecycleRuleExpirationArgs{
//							Date: pulumi.String("2021-06-21"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Creating an Object Storage Bucket with Lifecycle rules using provider-level object credentials
//
// ## Import
//
// Linodes Object Storage Buckets can be imported using the resource `id` which is made of `cluster:label`, e.g.
//
// ```sh
// $ pulumi import linode:index/objectStorageBucket:ObjectStorageBucket mybucket us-east-1:foobar
// ```
type ObjectStorageBucket struct {
	pulumi.CustomResourceState

	// The access key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objAccessKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	AccessKey pulumi.StringPtrOutput `pulumi:"accessKey"`
	// The Access Control Level of the bucket using a canned ACL string. See all ACL strings [in the Linode API v4 documentation](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
	Acl pulumi.StringPtrOutput `pulumi:"acl"`
	// The cert used by this Object Storage Bucket.
	Cert ObjectStorageBucketCertPtrOutput `pulumi:"cert"`
	// The cluster of the Linode Object Storage Bucket. This is deprecated in favor of `region` attribute.
	// For example, `us-mia-1` cluster can be translated into `us-mia` region. Exactly one of `region` and `cluster` is required for creating a bucket.
	//
	// Deprecated: The cluster attribute has been deprecated, please consider switching to the region attribute. For example, a cluster value of `us-mia-1` can be translated to a region value of `us-mia`.
	Cluster pulumi.StringOutput `pulumi:"cluster"`
	// If true, the bucket will have CORS enabled for all origins.
	CorsEnabled pulumi.BoolOutput `pulumi:"corsEnabled"`
	// The endpoint for the bucket used for s3 connections.
	//
	// Deprecated: Use `s3Endpoint` instead
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The type of `s3Endpoint` available to the user in this region. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-type) for more information.
	EndpointType pulumi.StringOutput `pulumi:"endpointType"`
	// The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made
	// public.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// The label of the Linode Object Storage Bucket.
	Label pulumi.StringOutput `pulumi:"label"`
	// Lifecycle rules to be applied to the bucket.
	LifecycleRules ObjectStorageBucketLifecycleRuleArrayOutput `pulumi:"lifecycleRules"`
	// The region of the Linode Object Storage Bucket. Exactly one of `region` and `cluster` is required for creating a bucket.
	Region pulumi.StringOutput `pulumi:"region"`
	// The user's s3 endpoint URL, based on the `endpointType` and `region`.
	S3Endpoint pulumi.StringOutput `pulumi:"s3Endpoint"`
	// The secret key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objSecretKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
	// Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `lifecycleRule` - (Optional) Lifecycle rules to be applied to the bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `cert` - (Optional) The bucket's TLS/SSL certificate.
	Versioning pulumi.BoolOutput `pulumi:"versioning"`
}

// NewObjectStorageBucket registers a new resource with the given unique name, arguments, and options.
func NewObjectStorageBucket(ctx *pulumi.Context,
	name string, args *ObjectStorageBucketArgs, opts ...pulumi.ResourceOption) (*ObjectStorageBucket, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.SecretKey != nil {
		args.SecretKey = pulumi.ToSecret(args.SecretKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectStorageBucket
	err := ctx.RegisterResource("linode:index/objectStorageBucket:ObjectStorageBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectStorageBucket gets an existing ObjectStorageBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectStorageBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectStorageBucketState, opts ...pulumi.ResourceOption) (*ObjectStorageBucket, error) {
	var resource ObjectStorageBucket
	err := ctx.ReadResource("linode:index/objectStorageBucket:ObjectStorageBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectStorageBucket resources.
type objectStorageBucketState struct {
	// The access key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objAccessKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	AccessKey *string `pulumi:"accessKey"`
	// The Access Control Level of the bucket using a canned ACL string. See all ACL strings [in the Linode API v4 documentation](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
	Acl *string `pulumi:"acl"`
	// The cert used by this Object Storage Bucket.
	Cert *ObjectStorageBucketCert `pulumi:"cert"`
	// The cluster of the Linode Object Storage Bucket. This is deprecated in favor of `region` attribute.
	// For example, `us-mia-1` cluster can be translated into `us-mia` region. Exactly one of `region` and `cluster` is required for creating a bucket.
	//
	// Deprecated: The cluster attribute has been deprecated, please consider switching to the region attribute. For example, a cluster value of `us-mia-1` can be translated to a region value of `us-mia`.
	Cluster *string `pulumi:"cluster"`
	// If true, the bucket will have CORS enabled for all origins.
	CorsEnabled *bool `pulumi:"corsEnabled"`
	// The endpoint for the bucket used for s3 connections.
	//
	// Deprecated: Use `s3Endpoint` instead
	Endpoint *string `pulumi:"endpoint"`
	// The type of `s3Endpoint` available to the user in this region. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-type) for more information.
	EndpointType *string `pulumi:"endpointType"`
	// The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made
	// public.
	Hostname *string `pulumi:"hostname"`
	// The label of the Linode Object Storage Bucket.
	Label *string `pulumi:"label"`
	// Lifecycle rules to be applied to the bucket.
	LifecycleRules []ObjectStorageBucketLifecycleRule `pulumi:"lifecycleRules"`
	// The region of the Linode Object Storage Bucket. Exactly one of `region` and `cluster` is required for creating a bucket.
	Region *string `pulumi:"region"`
	// The user's s3 endpoint URL, based on the `endpointType` and `region`.
	S3Endpoint *string `pulumi:"s3Endpoint"`
	// The secret key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objSecretKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	SecretKey *string `pulumi:"secretKey"`
	// Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `lifecycleRule` - (Optional) Lifecycle rules to be applied to the bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `cert` - (Optional) The bucket's TLS/SSL certificate.
	Versioning *bool `pulumi:"versioning"`
}

type ObjectStorageBucketState struct {
	// The access key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objAccessKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	AccessKey pulumi.StringPtrInput
	// The Access Control Level of the bucket using a canned ACL string. See all ACL strings [in the Linode API v4 documentation](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
	Acl pulumi.StringPtrInput
	// The cert used by this Object Storage Bucket.
	Cert ObjectStorageBucketCertPtrInput
	// The cluster of the Linode Object Storage Bucket. This is deprecated in favor of `region` attribute.
	// For example, `us-mia-1` cluster can be translated into `us-mia` region. Exactly one of `region` and `cluster` is required for creating a bucket.
	//
	// Deprecated: The cluster attribute has been deprecated, please consider switching to the region attribute. For example, a cluster value of `us-mia-1` can be translated to a region value of `us-mia`.
	Cluster pulumi.StringPtrInput
	// If true, the bucket will have CORS enabled for all origins.
	CorsEnabled pulumi.BoolPtrInput
	// The endpoint for the bucket used for s3 connections.
	//
	// Deprecated: Use `s3Endpoint` instead
	Endpoint pulumi.StringPtrInput
	// The type of `s3Endpoint` available to the user in this region. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-type) for more information.
	EndpointType pulumi.StringPtrInput
	// The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made
	// public.
	Hostname pulumi.StringPtrInput
	// The label of the Linode Object Storage Bucket.
	Label pulumi.StringPtrInput
	// Lifecycle rules to be applied to the bucket.
	LifecycleRules ObjectStorageBucketLifecycleRuleArrayInput
	// The region of the Linode Object Storage Bucket. Exactly one of `region` and `cluster` is required for creating a bucket.
	Region pulumi.StringPtrInput
	// The user's s3 endpoint URL, based on the `endpointType` and `region`.
	S3Endpoint pulumi.StringPtrInput
	// The secret key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objSecretKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	SecretKey pulumi.StringPtrInput
	// Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `lifecycleRule` - (Optional) Lifecycle rules to be applied to the bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `cert` - (Optional) The bucket's TLS/SSL certificate.
	Versioning pulumi.BoolPtrInput
}

func (ObjectStorageBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageBucketState)(nil)).Elem()
}

type objectStorageBucketArgs struct {
	// The access key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objAccessKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	AccessKey *string `pulumi:"accessKey"`
	// The Access Control Level of the bucket using a canned ACL string. See all ACL strings [in the Linode API v4 documentation](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
	Acl *string `pulumi:"acl"`
	// The cert used by this Object Storage Bucket.
	Cert *ObjectStorageBucketCert `pulumi:"cert"`
	// The cluster of the Linode Object Storage Bucket. This is deprecated in favor of `region` attribute.
	// For example, `us-mia-1` cluster can be translated into `us-mia` region. Exactly one of `region` and `cluster` is required for creating a bucket.
	//
	// Deprecated: The cluster attribute has been deprecated, please consider switching to the region attribute. For example, a cluster value of `us-mia-1` can be translated to a region value of `us-mia`.
	Cluster *string `pulumi:"cluster"`
	// If true, the bucket will have CORS enabled for all origins.
	CorsEnabled *bool `pulumi:"corsEnabled"`
	// The type of `s3Endpoint` available to the user in this region. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-type) for more information.
	EndpointType *string `pulumi:"endpointType"`
	// The label of the Linode Object Storage Bucket.
	Label string `pulumi:"label"`
	// Lifecycle rules to be applied to the bucket.
	LifecycleRules []ObjectStorageBucketLifecycleRule `pulumi:"lifecycleRules"`
	// The region of the Linode Object Storage Bucket. Exactly one of `region` and `cluster` is required for creating a bucket.
	Region *string `pulumi:"region"`
	// The user's s3 endpoint URL, based on the `endpointType` and `region`.
	S3Endpoint *string `pulumi:"s3Endpoint"`
	// The secret key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objSecretKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	SecretKey *string `pulumi:"secretKey"`
	// Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `lifecycleRule` - (Optional) Lifecycle rules to be applied to the bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `cert` - (Optional) The bucket's TLS/SSL certificate.
	Versioning *bool `pulumi:"versioning"`
}

// The set of arguments for constructing a ObjectStorageBucket resource.
type ObjectStorageBucketArgs struct {
	// The access key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objAccessKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	AccessKey pulumi.StringPtrInput
	// The Access Control Level of the bucket using a canned ACL string. See all ACL strings [in the Linode API v4 documentation](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
	Acl pulumi.StringPtrInput
	// The cert used by this Object Storage Bucket.
	Cert ObjectStorageBucketCertPtrInput
	// The cluster of the Linode Object Storage Bucket. This is deprecated in favor of `region` attribute.
	// For example, `us-mia-1` cluster can be translated into `us-mia` region. Exactly one of `region` and `cluster` is required for creating a bucket.
	//
	// Deprecated: The cluster attribute has been deprecated, please consider switching to the region attribute. For example, a cluster value of `us-mia-1` can be translated to a region value of `us-mia`.
	Cluster pulumi.StringPtrInput
	// If true, the bucket will have CORS enabled for all origins.
	CorsEnabled pulumi.BoolPtrInput
	// The type of `s3Endpoint` available to the user in this region. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-type) for more information.
	EndpointType pulumi.StringPtrInput
	// The label of the Linode Object Storage Bucket.
	Label pulumi.StringInput
	// Lifecycle rules to be applied to the bucket.
	LifecycleRules ObjectStorageBucketLifecycleRuleArrayInput
	// The region of the Linode Object Storage Bucket. Exactly one of `region` and `cluster` is required for creating a bucket.
	Region pulumi.StringPtrInput
	// The user's s3 endpoint URL, based on the `endpointType` and `region`.
	S3Endpoint pulumi.StringPtrInput
	// The secret key to authenticate with. If not specified with the resource, its value can be
	// * configured by `objSecretKey` in the provider configuration;
	// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
	SecretKey pulumi.StringPtrInput
	// Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `lifecycleRule` - (Optional) Lifecycle rules to be applied to the bucket. (Requires `accessKey` and `secretKey`)
	//
	// * `cert` - (Optional) The bucket's TLS/SSL certificate.
	Versioning pulumi.BoolPtrInput
}

func (ObjectStorageBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageBucketArgs)(nil)).Elem()
}

type ObjectStorageBucketInput interface {
	pulumi.Input

	ToObjectStorageBucketOutput() ObjectStorageBucketOutput
	ToObjectStorageBucketOutputWithContext(ctx context.Context) ObjectStorageBucketOutput
}

func (*ObjectStorageBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucket)(nil)).Elem()
}

func (i *ObjectStorageBucket) ToObjectStorageBucketOutput() ObjectStorageBucketOutput {
	return i.ToObjectStorageBucketOutputWithContext(context.Background())
}

func (i *ObjectStorageBucket) ToObjectStorageBucketOutputWithContext(ctx context.Context) ObjectStorageBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketOutput)
}

// ObjectStorageBucketArrayInput is an input type that accepts ObjectStorageBucketArray and ObjectStorageBucketArrayOutput values.
// You can construct a concrete instance of `ObjectStorageBucketArrayInput` via:
//
//	ObjectStorageBucketArray{ ObjectStorageBucketArgs{...} }
type ObjectStorageBucketArrayInput interface {
	pulumi.Input

	ToObjectStorageBucketArrayOutput() ObjectStorageBucketArrayOutput
	ToObjectStorageBucketArrayOutputWithContext(context.Context) ObjectStorageBucketArrayOutput
}

type ObjectStorageBucketArray []ObjectStorageBucketInput

func (ObjectStorageBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectStorageBucket)(nil)).Elem()
}

func (i ObjectStorageBucketArray) ToObjectStorageBucketArrayOutput() ObjectStorageBucketArrayOutput {
	return i.ToObjectStorageBucketArrayOutputWithContext(context.Background())
}

func (i ObjectStorageBucketArray) ToObjectStorageBucketArrayOutputWithContext(ctx context.Context) ObjectStorageBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketArrayOutput)
}

// ObjectStorageBucketMapInput is an input type that accepts ObjectStorageBucketMap and ObjectStorageBucketMapOutput values.
// You can construct a concrete instance of `ObjectStorageBucketMapInput` via:
//
//	ObjectStorageBucketMap{ "key": ObjectStorageBucketArgs{...} }
type ObjectStorageBucketMapInput interface {
	pulumi.Input

	ToObjectStorageBucketMapOutput() ObjectStorageBucketMapOutput
	ToObjectStorageBucketMapOutputWithContext(context.Context) ObjectStorageBucketMapOutput
}

type ObjectStorageBucketMap map[string]ObjectStorageBucketInput

func (ObjectStorageBucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectStorageBucket)(nil)).Elem()
}

func (i ObjectStorageBucketMap) ToObjectStorageBucketMapOutput() ObjectStorageBucketMapOutput {
	return i.ToObjectStorageBucketMapOutputWithContext(context.Background())
}

func (i ObjectStorageBucketMap) ToObjectStorageBucketMapOutputWithContext(ctx context.Context) ObjectStorageBucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketMapOutput)
}

type ObjectStorageBucketOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStorageBucket)(nil)).Elem()
}

func (o ObjectStorageBucketOutput) ToObjectStorageBucketOutput() ObjectStorageBucketOutput {
	return o
}

func (o ObjectStorageBucketOutput) ToObjectStorageBucketOutputWithContext(ctx context.Context) ObjectStorageBucketOutput {
	return o
}

// The access key to authenticate with. If not specified with the resource, its value can be
// * configured by `objAccessKey` in the provider configuration;
// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
func (o ObjectStorageBucketOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringPtrOutput { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The Access Control Level of the bucket using a canned ACL string. See all ACL strings [in the Linode API v4 documentation](https://techdocs.akamai.com/linode-api/reference/post-object-storage-bucket).
func (o ObjectStorageBucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

// The cert used by this Object Storage Bucket.
func (o ObjectStorageBucketOutput) Cert() ObjectStorageBucketCertPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) ObjectStorageBucketCertPtrOutput { return v.Cert }).(ObjectStorageBucketCertPtrOutput)
}

// The cluster of the Linode Object Storage Bucket. This is deprecated in favor of `region` attribute.
// For example, `us-mia-1` cluster can be translated into `us-mia` region. Exactly one of `region` and `cluster` is required for creating a bucket.
//
// Deprecated: The cluster attribute has been deprecated, please consider switching to the region attribute. For example, a cluster value of `us-mia-1` can be translated to a region value of `us-mia`.
func (o ObjectStorageBucketOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

// If true, the bucket will have CORS enabled for all origins.
func (o ObjectStorageBucketOutput) CorsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.BoolOutput { return v.CorsEnabled }).(pulumi.BoolOutput)
}

// The endpoint for the bucket used for s3 connections.
//
// Deprecated: Use `s3Endpoint` instead
func (o ObjectStorageBucketOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The type of `s3Endpoint` available to the user in this region. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-type) for more information.
func (o ObjectStorageBucketOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.EndpointType }).(pulumi.StringOutput)
}

// The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made
// public.
func (o ObjectStorageBucketOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// The label of the Linode Object Storage Bucket.
func (o ObjectStorageBucketOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// Lifecycle rules to be applied to the bucket.
func (o ObjectStorageBucketOutput) LifecycleRules() ObjectStorageBucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) ObjectStorageBucketLifecycleRuleArrayOutput { return v.LifecycleRules }).(ObjectStorageBucketLifecycleRuleArrayOutput)
}

// The region of the Linode Object Storage Bucket. Exactly one of `region` and `cluster` is required for creating a bucket.
func (o ObjectStorageBucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The user's s3 endpoint URL, based on the `endpointType` and `region`.
func (o ObjectStorageBucketOutput) S3Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringOutput { return v.S3Endpoint }).(pulumi.StringOutput)
}

// The secret key to authenticate with. If not specified with the resource, its value can be
// * configured by `objSecretKey` in the provider configuration;
// * or, generated implicitly at apply-time if `objUseTempKeys` at provider-level is set.
func (o ObjectStorageBucketOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.StringPtrOutput { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires `accessKey` and `secretKey`)
//
// * `lifecycleRule` - (Optional) Lifecycle rules to be applied to the bucket. (Requires `accessKey` and `secretKey`)
//
// * `cert` - (Optional) The bucket's TLS/SSL certificate.
func (o ObjectStorageBucketOutput) Versioning() pulumi.BoolOutput {
	return o.ApplyT(func(v *ObjectStorageBucket) pulumi.BoolOutput { return v.Versioning }).(pulumi.BoolOutput)
}

type ObjectStorageBucketArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectStorageBucket)(nil)).Elem()
}

func (o ObjectStorageBucketArrayOutput) ToObjectStorageBucketArrayOutput() ObjectStorageBucketArrayOutput {
	return o
}

func (o ObjectStorageBucketArrayOutput) ToObjectStorageBucketArrayOutputWithContext(ctx context.Context) ObjectStorageBucketArrayOutput {
	return o
}

func (o ObjectStorageBucketArrayOutput) Index(i pulumi.IntInput) ObjectStorageBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectStorageBucket {
		return vs[0].([]*ObjectStorageBucket)[vs[1].(int)]
	}).(ObjectStorageBucketOutput)
}

type ObjectStorageBucketMapOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectStorageBucket)(nil)).Elem()
}

func (o ObjectStorageBucketMapOutput) ToObjectStorageBucketMapOutput() ObjectStorageBucketMapOutput {
	return o
}

func (o ObjectStorageBucketMapOutput) ToObjectStorageBucketMapOutputWithContext(ctx context.Context) ObjectStorageBucketMapOutput {
	return o
}

func (o ObjectStorageBucketMapOutput) MapIndex(k pulumi.StringInput) ObjectStorageBucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectStorageBucket {
		return vs[0].(map[string]*ObjectStorageBucket)[vs[1].(string)]
	}).(ObjectStorageBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketInput)(nil)).Elem(), &ObjectStorageBucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketArrayInput)(nil)).Elem(), ObjectStorageBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketMapInput)(nil)).Elem(), ObjectStorageBucketMap{})
	pulumi.RegisterOutputType(ObjectStorageBucketOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketArrayOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketMapOutput{})
}
