// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **DEPRECATION NOTICE:** This data source has been deprecated.
//
// Provides information about Linode MySQL Database Backups that match a set of filters.
// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-databases-mysql-instance-backups).
//
// ## Example Usage
//
// Get information about all backups for a MySQL database:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := linode.GetDatabaseMysqlBackups(ctx, &linode.GetDatabaseMysqlBackupsArgs{
//				DatabaseId: 12345,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Get information about all automatic MySQL Database Backups:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-linode/sdk/v4/go/linode"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := linode.GetDatabaseMysqlBackups(ctx, &linode.GetDatabaseMysqlBackupsArgs{
//				DatabaseId: 12345,
//				Filters: []linode.GetDatabaseMysqlBackupsFilter{
//					{
//						Name: "type",
//						Values: []string{
//							"auto",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabaseMysqlBackups(ctx *pulumi.Context, args *GetDatabaseMysqlBackupsArgs, opts ...pulumi.InvokeOption) (*GetDatabaseMysqlBackupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseMysqlBackupsResult
	err := ctx.Invoke("linode:index/getDatabaseMysqlBackups:getDatabaseMysqlBackups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseMysqlBackups.
type GetDatabaseMysqlBackupsArgs struct {
	// The ID of the database to retrieve backups for.
	DatabaseId int                             `pulumi:"databaseId"`
	Filters    []GetDatabaseMysqlBackupsFilter `pulumi:"filters"`
	// If true, only the latest backup will be returned.
	//
	// * `filter` - (Optional) A set of filters used to select database backups that meet certain requirements.
	Latest *bool `pulumi:"latest"`
	// The order in which results should be returned. (`asc`, `desc`; default `asc`)
	Order *string `pulumi:"order"`
	// The attribute to order the results by. (`created`)
	OrderBy *string `pulumi:"orderBy"`
}

// A collection of values returned by getDatabaseMysqlBackups.
type GetDatabaseMysqlBackupsResult struct {
	Backups    []GetDatabaseMysqlBackupsBackup `pulumi:"backups"`
	DatabaseId int                             `pulumi:"databaseId"`
	Filters    []GetDatabaseMysqlBackupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Latest  *bool   `pulumi:"latest"`
	Order   *string `pulumi:"order"`
	OrderBy *string `pulumi:"orderBy"`
}

func GetDatabaseMysqlBackupsOutput(ctx *pulumi.Context, args GetDatabaseMysqlBackupsOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseMysqlBackupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDatabaseMysqlBackupsResultOutput, error) {
			args := v.(GetDatabaseMysqlBackupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("linode:index/getDatabaseMysqlBackups:getDatabaseMysqlBackups", args, GetDatabaseMysqlBackupsResultOutput{}, options).(GetDatabaseMysqlBackupsResultOutput), nil
		}).(GetDatabaseMysqlBackupsResultOutput)
}

// A collection of arguments for invoking getDatabaseMysqlBackups.
type GetDatabaseMysqlBackupsOutputArgs struct {
	// The ID of the database to retrieve backups for.
	DatabaseId pulumi.IntInput                         `pulumi:"databaseId"`
	Filters    GetDatabaseMysqlBackupsFilterArrayInput `pulumi:"filters"`
	// If true, only the latest backup will be returned.
	//
	// * `filter` - (Optional) A set of filters used to select database backups that meet certain requirements.
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// The order in which results should be returned. (`asc`, `desc`; default `asc`)
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The attribute to order the results by. (`created`)
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (GetDatabaseMysqlBackupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlBackupsArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseMysqlBackups.
type GetDatabaseMysqlBackupsResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseMysqlBackupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMysqlBackupsResult)(nil)).Elem()
}

func (o GetDatabaseMysqlBackupsResultOutput) ToGetDatabaseMysqlBackupsResultOutput() GetDatabaseMysqlBackupsResultOutput {
	return o
}

func (o GetDatabaseMysqlBackupsResultOutput) ToGetDatabaseMysqlBackupsResultOutputWithContext(ctx context.Context) GetDatabaseMysqlBackupsResultOutput {
	return o
}

func (o GetDatabaseMysqlBackupsResultOutput) Backups() GetDatabaseMysqlBackupsBackupArrayOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) []GetDatabaseMysqlBackupsBackup { return v.Backups }).(GetDatabaseMysqlBackupsBackupArrayOutput)
}

func (o GetDatabaseMysqlBackupsResultOutput) DatabaseId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) int { return v.DatabaseId }).(pulumi.IntOutput)
}

func (o GetDatabaseMysqlBackupsResultOutput) Filters() GetDatabaseMysqlBackupsFilterArrayOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) []GetDatabaseMysqlBackupsFilter { return v.Filters }).(GetDatabaseMysqlBackupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseMysqlBackupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabaseMysqlBackupsResultOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

func (o GetDatabaseMysqlBackupsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseMysqlBackupsResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseMysqlBackupsResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseMysqlBackupsResultOutput{})
}
