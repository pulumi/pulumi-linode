// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package linode

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Linode Object Storage Key resource. This can be used to create, modify, and delete Linodes Object Storage Keys.
//
// ## Attributes
//
// This resource exports the following attributes:
//
// * `accessKey` - This keypair's access key. This is not secret.
//
// * `secretKey` - This keypair's secret key.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-linode/blob/master/website/docs/r/object_storage_key.html.md.
type ObjectStorageKey struct {
	pulumi.CustomResourceState

	// This keypair's access key. This is not secret.
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// The label given to this key. For display purposes only.
	Label pulumi.StringOutput `pulumi:"label"`
	// This keypair's secret key.
	SecretKey pulumi.StringOutput `pulumi:"secretKey"`
}

// NewObjectStorageKey registers a new resource with the given unique name, arguments, and options.
func NewObjectStorageKey(ctx *pulumi.Context,
	name string, args *ObjectStorageKeyArgs, opts ...pulumi.ResourceOption) (*ObjectStorageKey, error) {
	if args == nil || args.Label == nil {
		return nil, errors.New("missing required argument 'Label'")
	}
	if args == nil {
		args = &ObjectStorageKeyArgs{}
	}
	var resource ObjectStorageKey
	err := ctx.RegisterResource("linode:index/objectStorageKey:ObjectStorageKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectStorageKey gets an existing ObjectStorageKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectStorageKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectStorageKeyState, opts ...pulumi.ResourceOption) (*ObjectStorageKey, error) {
	var resource ObjectStorageKey
	err := ctx.ReadResource("linode:index/objectStorageKey:ObjectStorageKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectStorageKey resources.
type objectStorageKeyState struct {
	// This keypair's access key. This is not secret.
	AccessKey *string `pulumi:"accessKey"`
	// The label given to this key. For display purposes only.
	Label *string `pulumi:"label"`
	// This keypair's secret key.
	SecretKey *string `pulumi:"secretKey"`
}

type ObjectStorageKeyState struct {
	// This keypair's access key. This is not secret.
	AccessKey pulumi.StringPtrInput
	// The label given to this key. For display purposes only.
	Label pulumi.StringPtrInput
	// This keypair's secret key.
	SecretKey pulumi.StringPtrInput
}

func (ObjectStorageKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageKeyState)(nil)).Elem()
}

type objectStorageKeyArgs struct {
	// The label given to this key. For display purposes only.
	Label string `pulumi:"label"`
}

// The set of arguments for constructing a ObjectStorageKey resource.
type ObjectStorageKeyArgs struct {
	// The label given to this key. For display purposes only.
	Label pulumi.StringInput
}

func (ObjectStorageKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStorageKeyArgs)(nil)).Elem()
}
