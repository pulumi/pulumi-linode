// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a Linode domain.
//
// ## Example Usage
//
// The following example shows how one might use this data source to access information about a Linode domain.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-linode/sdk/v3/go/linode"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := linode.LookupDomain(ctx, &GetDomainArgs{
// 			Id: pulumi.StringRef("1234567"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = linode.LookupDomain(ctx, &GetDomainArgs{
// 			Domain: pulumi.StringRef("bar.example.com"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Attributes
//
// The Linode Domain resource exports the following attributes:
//
// * `id` - The unique ID of this Domain.
//
// * `domain` - The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain
//
// * `type` - If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave) (`master`, `slave`)
//
// * `group` - The group this Domain belongs to.
//
// * `status` - Used to control whether this Domain is currently being rendered. (`disabled`, `active`)
//
// * `description` - A description for this Domain.
//
// * `masterIps` - The IP addresses representing the master DNS for this Domain.
//
// * `axfrIps` - The list of IPs that may perform a zone transfer for this Domain.
//
// * `ttlSec` - 'Time to Live'-the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.
//
// * `retrySec` - The interval, in seconds, at which a failed refresh should be retried.
//
// * `expireSec` - The amount of time in seconds that may pass before this Domain is no longer authoritative.
//
// * `refreshSec` - The amount of time in seconds before this Domain should be refreshed.
//
// * `soaEmail` - Start of Authority email address.
//
// * `tags` - An array of tags applied to this object.
func LookupDomain(ctx *pulumi.Context, args *LookupDomainArgs, opts ...pulumi.InvokeOption) (*LookupDomainResult, error) {
	var rv LookupDomainResult
	err := ctx.Invoke("linode:index/getDomain:getDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomain.
type LookupDomainArgs struct {
	// The unique domain name of the Domain record to query.
	Domain *string `pulumi:"domain"`
	// The unique numeric ID of the Domain record to query.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getDomain.
type LookupDomainResult struct {
	AxfrIps     []string `pulumi:"axfrIps"`
	Description string   `pulumi:"description"`
	Domain      *string  `pulumi:"domain"`
	ExpireSec   int      `pulumi:"expireSec"`
	Group       string   `pulumi:"group"`
	Id          *string  `pulumi:"id"`
	MasterIps   []string `pulumi:"masterIps"`
	RefreshSec  int      `pulumi:"refreshSec"`
	RetrySec    int      `pulumi:"retrySec"`
	SoaEmail    string   `pulumi:"soaEmail"`
	Status      string   `pulumi:"status"`
	Tags        []string `pulumi:"tags"`
	TtlSec      int      `pulumi:"ttlSec"`
	Type        string   `pulumi:"type"`
}

func LookupDomainOutput(ctx *pulumi.Context, args LookupDomainOutputArgs, opts ...pulumi.InvokeOption) LookupDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainResult, error) {
			args := v.(LookupDomainArgs)
			r, err := LookupDomain(ctx, &args, opts...)
			var s LookupDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainResultOutput)
}

// A collection of arguments for invoking getDomain.
type LookupDomainOutputArgs struct {
	// The unique domain name of the Domain record to query.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The unique numeric ID of the Domain record to query.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainArgs)(nil)).Elem()
}

// A collection of values returned by getDomain.
type LookupDomainResultOutput struct{ *pulumi.OutputState }

func (LookupDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainResult)(nil)).Elem()
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutput() LookupDomainResultOutput {
	return o
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutputWithContext(ctx context.Context) LookupDomainResultOutput {
	return o
}

func (o LookupDomainResultOutput) AxfrIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainResult) []string { return v.AxfrIps }).(pulumi.StringArrayOutput)
}

func (o LookupDomainResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDomainResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) ExpireSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainResult) int { return v.ExpireSec }).(pulumi.IntOutput)
}

func (o LookupDomainResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.Group }).(pulumi.StringOutput)
}

func (o LookupDomainResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) MasterIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainResult) []string { return v.MasterIps }).(pulumi.StringArrayOutput)
}

func (o LookupDomainResultOutput) RefreshSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainResult) int { return v.RefreshSec }).(pulumi.IntOutput)
}

func (o LookupDomainResultOutput) RetrySec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainResult) int { return v.RetrySec }).(pulumi.IntOutput)
}

func (o LookupDomainResultOutput) SoaEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.SoaEmail }).(pulumi.StringOutput)
}

func (o LookupDomainResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupDomainResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupDomainResultOutput) TtlSec() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainResult) int { return v.TtlSec }).(pulumi.IntOutput)
}

func (o LookupDomainResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainResultOutput{})
}
