// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information about a Linode domain.
// 
// ## Attributes
// 
// The Linode Domain resource exports the following attributes:
// 
// * `id` - The unique ID of this Domain.
// 
// * `domain` - The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain
// 
// * `type` - If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave)
// 
// * `group` - The group this Domain belongs to.
// 
// * `status` - Used to control whether this Domain is currently being rendered.
// 
// * `description` - A description for this Domain.
// 
// * `master_ips` - The IP addresses representing the master DNS for this Domain.
// 
// * `axfr_ips` - The list of IPs that may perform a zone transfer for this Domain.
// 
// * `ttl_sec` - 'Time to Live'-the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.
// 
// * `retry_sec` - The interval, in seconds, at which a failed refresh should be retried.
// *
// * `expire_sec` - The amount of time in seconds that may pass before this Domain is no longer authoritative.
// 
// * `refresh_sec` - The amount of time in seconds before this Domain should be refreshed.
// 
// * `soa_email` - Start of Authority email address.
// 
// * `tags` - An array of tags applied to this object.
func LookupDomain(ctx *pulumi.Context, args *GetDomainArgs) (*GetDomainResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["domain"] = args.Domain
		inputs["id"] = args.Id
	}
	outputs, err := ctx.Invoke("linode:index/getDomain:getDomain", inputs)
	if err != nil {
		return nil, err
	}
	return &GetDomainResult{
		AxfrIps: outputs["axfrIps"],
		Description: outputs["description"],
		Domain: outputs["domain"],
		ExpireSec: outputs["expireSec"],
		Group: outputs["group"],
		Id: outputs["id"],
		MasterIps: outputs["masterIps"],
		RefreshSec: outputs["refreshSec"],
		RetrySec: outputs["retrySec"],
		SoaEmail: outputs["soaEmail"],
		Status: outputs["status"],
		Tags: outputs["tags"],
		TtlSec: outputs["ttlSec"],
		Type: outputs["type"],
	}, nil
}

// A collection of arguments for invoking getDomain.
type GetDomainArgs struct {
	// The unique domain name of the Domain record to query.
	Domain interface{}
	// The unique numeric ID of the Domain record to query.
	Id interface{}
}

// A collection of values returned by getDomain.
type GetDomainResult struct {
	AxfrIps interface{}
	Description interface{}
	Domain interface{}
	ExpireSec interface{}
	Group interface{}
	Id interface{}
	MasterIps interface{}
	RefreshSec interface{}
	RetrySec interface{}
	SoaEmail interface{}
	Status interface{}
	Tags interface{}
	TtlSec interface{}
	Type interface{}
}
