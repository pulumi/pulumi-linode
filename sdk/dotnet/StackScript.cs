// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public partial class StackScript : Pulumi.CustomResource
    {
        /// <summary>
        /// The date this StackScript was created.
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// Count of currently active, deployed Linodes created from this StackScript.
        /// </summary>
        [Output("deploymentsActive")]
        public Output<int> DeploymentsActive { get; private set; } = null!;

        /// <summary>
        /// The total number of times this StackScript has been deployed.
        /// </summary>
        [Output("deploymentsTotal")]
        public Output<int> DeploymentsTotal { get; private set; } = null!;

        /// <summary>
        /// A description for the StackScript.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
        /// </summary>
        [Output("images")]
        public Output<ImmutableArray<string>> Images { get; private set; } = null!;

        /// <summary>
        /// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private. *Changing `is_public` forces the creation of a new StackScript*
        /// </summary>
        [Output("isPublic")]
        public Output<bool?> IsPublic { get; private set; } = null!;

        /// <summary>
        /// The StackScript's label is for display purposes only.
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// This field allows you to add notes for the set of revisions made to this StackScript.
        /// </summary>
        [Output("revNote")]
        public Output<string?> RevNote { get; private set; } = null!;

        /// <summary>
        /// The script to execute when provisioning a new Linode with this StackScript.
        /// </summary>
        [Output("script")]
        public Output<string> Script { get; private set; } = null!;

        /// <summary>
        /// The date this StackScript was updated.
        /// </summary>
        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;

        /// <summary>
        /// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized
        /// parameters during deployment.
        /// </summary>
        [Output("userDefinedFields")]
        public Output<ImmutableArray<Outputs.StackScriptUserDefinedField>> UserDefinedFields { get; private set; } = null!;

        /// <summary>
        /// The Gravatar ID for the User who created the StackScript.
        /// </summary>
        [Output("userGravatarId")]
        public Output<string> UserGravatarId { get; private set; } = null!;

        /// <summary>
        /// The User who created the StackScript.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a StackScript resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StackScript(string name, StackScriptArgs args, CustomResourceOptions? options = null)
            : base("linode:index/stackScript:StackScript", name, args ?? new StackScriptArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StackScript(string name, Input<string> id, StackScriptState? state = null, CustomResourceOptions? options = null)
            : base("linode:index/stackScript:StackScript", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StackScript resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StackScript Get(string name, Input<string> id, StackScriptState? state = null, CustomResourceOptions? options = null)
        {
            return new StackScript(name, id, state, options);
        }
    }

    public sealed class StackScriptArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the StackScript.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("images", required: true)]
        private InputList<string>? _images;

        /// <summary>
        /// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
        /// </summary>
        public InputList<string> Images
        {
            get => _images ?? (_images = new InputList<string>());
            set => _images = value;
        }

        /// <summary>
        /// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private. *Changing `is_public` forces the creation of a new StackScript*
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// The StackScript's label is for display purposes only.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// This field allows you to add notes for the set of revisions made to this StackScript.
        /// </summary>
        [Input("revNote")]
        public Input<string>? RevNote { get; set; }

        /// <summary>
        /// The script to execute when provisioning a new Linode with this StackScript.
        /// </summary>
        [Input("script", required: true)]
        public Input<string> Script { get; set; } = null!;

        [Input("userDefinedFields")]
        private InputList<Inputs.StackScriptUserDefinedFieldArgs>? _userDefinedFields;

        /// <summary>
        /// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized
        /// parameters during deployment.
        /// </summary>
        public InputList<Inputs.StackScriptUserDefinedFieldArgs> UserDefinedFields
        {
            get => _userDefinedFields ?? (_userDefinedFields = new InputList<Inputs.StackScriptUserDefinedFieldArgs>());
            set => _userDefinedFields = value;
        }

        public StackScriptArgs()
        {
        }
    }

    public sealed class StackScriptState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date this StackScript was created.
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Count of currently active, deployed Linodes created from this StackScript.
        /// </summary>
        [Input("deploymentsActive")]
        public Input<int>? DeploymentsActive { get; set; }

        /// <summary>
        /// The total number of times this StackScript has been deployed.
        /// </summary>
        [Input("deploymentsTotal")]
        public Input<int>? DeploymentsTotal { get; set; }

        /// <summary>
        /// A description for the StackScript.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("images")]
        private InputList<string>? _images;

        /// <summary>
        /// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
        /// </summary>
        public InputList<string> Images
        {
            get => _images ?? (_images = new InputList<string>());
            set => _images = value;
        }

        /// <summary>
        /// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private. *Changing `is_public` forces the creation of a new StackScript*
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// The StackScript's label is for display purposes only.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// This field allows you to add notes for the set of revisions made to this StackScript.
        /// </summary>
        [Input("revNote")]
        public Input<string>? RevNote { get; set; }

        /// <summary>
        /// The script to execute when provisioning a new Linode with this StackScript.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// The date this StackScript was updated.
        /// </summary>
        [Input("updated")]
        public Input<string>? Updated { get; set; }

        [Input("userDefinedFields")]
        private InputList<Inputs.StackScriptUserDefinedFieldGetArgs>? _userDefinedFields;

        /// <summary>
        /// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized
        /// parameters during deployment.
        /// </summary>
        public InputList<Inputs.StackScriptUserDefinedFieldGetArgs> UserDefinedFields
        {
            get => _userDefinedFields ?? (_userDefinedFields = new InputList<Inputs.StackScriptUserDefinedFieldGetArgs>());
            set => _userDefinedFields = value;
        }

        /// <summary>
        /// The Gravatar ID for the User who created the StackScript.
        /// </summary>
        [Input("userGravatarId")]
        public Input<string>? UserGravatarId { get; set; }

        /// <summary>
        /// The User who created the StackScript.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public StackScriptState()
        {
        }
    }
}
