// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetObjectStorageQuotas
    {
        /// <summary>
        /// Provides details about a list of Object Storage quotas information on your account.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-quotas).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list and filter information about Object Storage quotas.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var maxBucketsQuotas = Linode.GetObjectStorageQuotas.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetObjectStorageQuotasFilterInputArgs
        ///             {
        ///                 Name = "endpoint_type",
        ///                 Values = new[]
        ///                 {
        ///                     "E0",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `quota_id`
        /// 
        /// * `quota_name`
        /// 
        /// * `endpoint_type`
        /// 
        /// * `s3_endpoint`
        /// 
        /// * `description`
        /// 
        /// * `quota_limit`
        /// 
        /// * `resource_metric`
        /// </summary>
        public static Task<GetObjectStorageQuotasResult> InvokeAsync(GetObjectStorageQuotasArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectStorageQuotasResult>("linode:index/getObjectStorageQuotas:getObjectStorageQuotas", args ?? new GetObjectStorageQuotasArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a list of Object Storage quotas information on your account.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-quotas).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list and filter information about Object Storage quotas.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var maxBucketsQuotas = Linode.GetObjectStorageQuotas.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetObjectStorageQuotasFilterInputArgs
        ///             {
        ///                 Name = "endpoint_type",
        ///                 Values = new[]
        ///                 {
        ///                     "E0",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `quota_id`
        /// 
        /// * `quota_name`
        /// 
        /// * `endpoint_type`
        /// 
        /// * `s3_endpoint`
        /// 
        /// * `description`
        /// 
        /// * `quota_limit`
        /// 
        /// * `resource_metric`
        /// </summary>
        public static Output<GetObjectStorageQuotasResult> Invoke(GetObjectStorageQuotasInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStorageQuotasResult>("linode:index/getObjectStorageQuotas:getObjectStorageQuotas", args ?? new GetObjectStorageQuotasInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a list of Object Storage quotas information on your account.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-quotas).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list and filter information about Object Storage quotas.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var maxBucketsQuotas = Linode.GetObjectStorageQuotas.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetObjectStorageQuotasFilterInputArgs
        ///             {
        ///                 Name = "endpoint_type",
        ///                 Values = new[]
        ///                 {
        ///                     "E0",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `quota_id`
        /// 
        /// * `quota_name`
        /// 
        /// * `endpoint_type`
        /// 
        /// * `s3_endpoint`
        /// 
        /// * `description`
        /// 
        /// * `quota_limit`
        /// 
        /// * `resource_metric`
        /// </summary>
        public static Output<GetObjectStorageQuotasResult> Invoke(GetObjectStorageQuotasInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStorageQuotasResult>("linode:index/getObjectStorageQuotas:getObjectStorageQuotas", args ?? new GetObjectStorageQuotasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectStorageQuotasArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetObjectStorageQuotasFilterArgs>? _filters;
        public List<Inputs.GetObjectStorageQuotasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetObjectStorageQuotasFilterArgs>());
            set => _filters = value;
        }

        [Input("quotas")]
        private List<Inputs.GetObjectStorageQuotasQuotaArgs>? _quotas;
        public List<Inputs.GetObjectStorageQuotasQuotaArgs> Quotas
        {
            get => _quotas ?? (_quotas = new List<Inputs.GetObjectStorageQuotasQuotaArgs>());
            set => _quotas = value;
        }

        public GetObjectStorageQuotasArgs()
        {
        }
        public static new GetObjectStorageQuotasArgs Empty => new GetObjectStorageQuotasArgs();
    }

    public sealed class GetObjectStorageQuotasInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetObjectStorageQuotasFilterInputArgs>? _filters;
        public InputList<Inputs.GetObjectStorageQuotasFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetObjectStorageQuotasFilterInputArgs>());
            set => _filters = value;
        }

        [Input("quotas")]
        private InputList<Inputs.GetObjectStorageQuotasQuotaInputArgs>? _quotas;
        public InputList<Inputs.GetObjectStorageQuotasQuotaInputArgs> Quotas
        {
            get => _quotas ?? (_quotas = new InputList<Inputs.GetObjectStorageQuotasQuotaInputArgs>());
            set => _quotas = value;
        }

        public GetObjectStorageQuotasInvokeArgs()
        {
        }
        public static new GetObjectStorageQuotasInvokeArgs Empty => new GetObjectStorageQuotasInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectStorageQuotasResult
    {
        public readonly ImmutableArray<Outputs.GetObjectStorageQuotasFilterResult> Filters;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetObjectStorageQuotasQuotaResult> Quotas;

        [OutputConstructor]
        private GetObjectStorageQuotasResult(
            ImmutableArray<Outputs.GetObjectStorageQuotasFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetObjectStorageQuotasQuotaResult> quotas)
        {
            Filters = filters;
            Id = id;
            Quotas = quotas;
        }
    }
}
