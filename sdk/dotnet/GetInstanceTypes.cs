// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetInstanceTypes
    {
        /// <summary>
        /// Provides information about Linode Instance types that match a set of filters.
        /// 
        /// ## Example Usage
        /// 
        /// Get information about all Linode Instance types with a certain number of VCPUs:
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var specific_types = Linode.GetInstanceTypes.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetInstanceTypesFilterInputArgs
        ///             {
        ///                 Name = "vcpus",
        ///                 Values = new[]
        ///                 {
        ///                     "2",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["typeIds"] = specific_types.Apply(specific_types =&gt; specific_types.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.Types).Select(__item =&gt; __item.Id).ToList()),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// Get information about all Linode Instance types:
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all_types = Linode.GetInstanceTypes.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["typeIds"] = all_types.Apply(all_types =&gt; all_types.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.Types).Select(__item =&gt; __item.Id).ToList()),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ## Filterable Fields
        /// 
        /// * `class`
        /// 
        /// * `disk`
        /// 
        /// * `gpus`
        /// 
        /// * `label`
        /// 
        /// * `memory`
        /// 
        /// * `network_out`
        /// 
        /// * `transfer`
        /// 
        /// * `vcpus`
        /// </summary>
        public static Task<GetInstanceTypesResult> InvokeAsync(GetInstanceTypesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTypesResult>("linode:index/getInstanceTypes:getInstanceTypes", args ?? new GetInstanceTypesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about Linode Instance types that match a set of filters.
        /// 
        /// ## Example Usage
        /// 
        /// Get information about all Linode Instance types with a certain number of VCPUs:
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var specific_types = Linode.GetInstanceTypes.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetInstanceTypesFilterInputArgs
        ///             {
        ///                 Name = "vcpus",
        ///                 Values = new[]
        ///                 {
        ///                     "2",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["typeIds"] = specific_types.Apply(specific_types =&gt; specific_types.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.Types).Select(__item =&gt; __item.Id).ToList()),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// Get information about all Linode Instance types:
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all_types = Linode.GetInstanceTypes.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["typeIds"] = all_types.Apply(all_types =&gt; all_types.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.Types).Select(__item =&gt; __item.Id).ToList()),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ## Filterable Fields
        /// 
        /// * `class`
        /// 
        /// * `disk`
        /// 
        /// * `gpus`
        /// 
        /// * `label`
        /// 
        /// * `memory`
        /// 
        /// * `network_out`
        /// 
        /// * `transfer`
        /// 
        /// * `vcpus`
        /// </summary>
        public static Output<GetInstanceTypesResult> Invoke(GetInstanceTypesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTypesResult>("linode:index/getInstanceTypes:getInstanceTypes", args ?? new GetInstanceTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTypesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstanceTypesFilterArgs>? _filters;
        public List<Inputs.GetInstanceTypesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstanceTypesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public string? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("types")]
        private List<Inputs.GetInstanceTypesTypeArgs>? _types;
        public List<Inputs.GetInstanceTypesTypeArgs> Types
        {
            get => _types ?? (_types = new List<Inputs.GetInstanceTypesTypeArgs>());
            set => _types = value;
        }

        public GetInstanceTypesArgs()
        {
        }
        public static new GetInstanceTypesArgs Empty => new GetInstanceTypesArgs();
    }

    public sealed class GetInstanceTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInstanceTypesFilterInputArgs>? _filters;
        public InputList<Inputs.GetInstanceTypesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInstanceTypesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("types")]
        private InputList<Inputs.GetInstanceTypesTypeInputArgs>? _types;
        public InputList<Inputs.GetInstanceTypesTypeInputArgs> Types
        {
            get => _types ?? (_types = new InputList<Inputs.GetInstanceTypesTypeInputArgs>());
            set => _types = value;
        }

        public GetInstanceTypesInvokeArgs()
        {
        }
        public static new GetInstanceTypesInvokeArgs Empty => new GetInstanceTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceTypesResult
    {
        public readonly ImmutableArray<Outputs.GetInstanceTypesFilterResult> Filters;
        /// <summary>
        /// The ID representing the Linode Type.
        /// </summary>
        public readonly string Id;
        public readonly string? Order;
        public readonly string? OrderBy;
        public readonly ImmutableArray<Outputs.GetInstanceTypesTypeResult> Types;

        [OutputConstructor]
        private GetInstanceTypesResult(
            ImmutableArray<Outputs.GetInstanceTypesFilterResult> filters,

            string id,

            string? order,

            string? orderBy,

            ImmutableArray<Outputs.GetInstanceTypesTypeResult> types)
        {
            Filters = filters;
            Id = id;
            Order = order;
            OrderBy = orderBy;
            Types = types;
        }
    }
}
