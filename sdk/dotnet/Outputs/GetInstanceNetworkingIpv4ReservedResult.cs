// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetInstanceNetworkingIpv4ReservedResult
    {
        /// <summary>
        /// The address.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// The default gateway for this address.
        /// </summary>
        public readonly string Gateway;
        /// <summary>
        /// The Linode instance's ID.
        /// </summary>
        public readonly int LinodeId;
        /// <summary>
        /// The network prefix.
        /// </summary>
        public readonly int Prefix;
        /// <summary>
        /// Whether this is a public or private IP address.
        /// </summary>
        public readonly bool Public;
        /// <summary>
        /// The reverse DNS assigned to this address.
        /// </summary>
        public readonly string Rdns;
        /// <summary>
        /// (Filterable) The Region this address resides in.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The subnet mask.
        /// </summary>
        public readonly string SubnetMask;
        /// <summary>
        /// The type of address this is.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// IPv4 address configured as a 1:1 NAT for this Interface.
        /// </summary>
        public readonly Outputs.GetInstanceNetworkingIpv4ReservedVpcNat11Result VpcNat11;

        [OutputConstructor]
        private GetInstanceNetworkingIpv4ReservedResult(
            string address,

            string gateway,

            int linodeId,

            int prefix,

            bool @public,

            string rdns,

            string region,

            string subnetMask,

            string type,

            Outputs.GetInstanceNetworkingIpv4ReservedVpcNat11Result vpcNat11)
        {
            Address = address;
            Gateway = gateway;
            LinodeId = linodeId;
            Prefix = prefix;
            Public = @public;
            Rdns = rdns;
            Region = region;
            SubnetMask = subnetMask;
            Type = type;
            VpcNat11 = vpcNat11;
        }
    }
}
