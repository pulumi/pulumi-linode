// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class InstanceConfig
    {
        /// <summary>
        /// - Arbitrary user comments about this `config`.
        /// </summary>
        public readonly string? Comments;
        /// <summary>
        /// A list of `disk` or `volume` attachments for this `config`.  If the `boot_config_label` omits a `devices` block, the Linode will not be booted.
        /// </summary>
        public readonly Outputs.InstanceConfigDevices? Devices;
        /// <summary>
        /// Helpers enabled when booting to this Linode Config.
        /// </summary>
        public readonly Outputs.InstanceConfigHelpers? Helpers;
        /// <summary>
        /// - A Kernel ID to boot a Linode with. Default is based on image choice. (examples: linode/latest-64bit, linode/grub2, linode/direct-disk)
        /// </summary>
        public readonly string? Kernel;
        /// <summary>
        /// The Config's label for display purposes.  Also used by `boot_config_label`.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// - Defaults to the total RAM of the Linode
        /// </summary>
        public readonly int? MemoryLimit;
        /// <summary>
        /// - The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
        /// </summary>
        public readonly string? RootDevice;
        /// <summary>
        /// - Defines the state of your Linode after booting. Defaults to `"default"`.
        /// </summary>
        public readonly string? RunLevel;
        /// <summary>
        /// - Controls the virtualization mode. Defaults to `"paravirt"`.
        /// </summary>
        public readonly string? VirtMode;

        [OutputConstructor]
        private InstanceConfig(
            string? comments,

            Outputs.InstanceConfigDevices? devices,

            Outputs.InstanceConfigHelpers? helpers,

            string? kernel,

            string label,

            int? memoryLimit,

            string? rootDevice,

            string? runLevel,

            string? virtMode)
        {
            Comments = comments;
            Devices = devices;
            Helpers = helpers;
            Kernel = kernel;
            Label = label;
            MemoryLimit = memoryLimit;
            RootDevice = rootDevice;
            RunLevel = runLevel;
            VirtMode = virtMode;
        }
    }
}
