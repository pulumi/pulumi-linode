// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetStackScriptsStackscriptResult
    {
        /// <summary>
        /// The date this StackScript was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Count of currently active, deployed Linodes created from this StackScript.
        /// </summary>
        public readonly int DeploymentsActive;
        /// <summary>
        /// The total number of times this StackScript has been deployed.
        /// </summary>
        public readonly int DeploymentsTotal;
        /// <summary>
        /// A description for the StackScript.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The unique ID of the StackScript.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
        /// </summary>
        public readonly ImmutableArray<string> Images;
        /// <summary>
        /// This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private.
        /// </summary>
        public readonly bool IsPublic;
        /// <summary>
        /// A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// This field allows you to add notes for the set of revisions made to this StackScript.
        /// </summary>
        public readonly string RevNote;
        /// <summary>
        /// The script to execute when provisioning a new Linode with this StackScript.
        /// </summary>
        public readonly string Script;
        /// <summary>
        /// The date this StackScript was updated.
        /// </summary>
        public readonly string Updated;
        /// <summary>
        /// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStackScriptsStackscriptUserDefinedFieldResult> UserDefinedFields;
        /// <summary>
        /// The Gravatar ID for the User who created the StackScript.
        /// </summary>
        public readonly string UserGravatarId;
        /// <summary>
        /// The User who created the StackScript.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetStackScriptsStackscriptResult(
            string created,

            int deploymentsActive,

            int deploymentsTotal,

            string description,

            string id,

            ImmutableArray<string> images,

            bool isPublic,

            string label,

            string revNote,

            string script,

            string updated,

            ImmutableArray<Outputs.GetStackScriptsStackscriptUserDefinedFieldResult> userDefinedFields,

            string userGravatarId,

            string username)
        {
            Created = created;
            DeploymentsActive = deploymentsActive;
            DeploymentsTotal = deploymentsTotal;
            Description = description;
            Id = id;
            Images = images;
            IsPublic = isPublic;
            Label = label;
            RevNote = revNote;
            Script = script;
            Updated = updated;
            UserDefinedFields = userDefinedFields;
            UserGravatarId = userGravatarId;
            Username = username;
        }
    }
}
