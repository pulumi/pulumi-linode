// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetInstanceNetworkingIpv4VpcResult
    {
        /// <summary>
        /// Returns `true` if the VPC interface is in use, meaning that the Linode was powered on using the `config_id` to which the interface belongs. Otherwise returns `false`.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// The address.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// A range of IPv4 addresses configured for this VPC interface. it will be `null` if it's a single `address`.
        /// </summary>
        public readonly string AddressRange;
        /// <summary>
        /// The globally general entity identifier for the Linode configuration profile where the VPC is included.
        /// </summary>
        public readonly int ConfigId;
        /// <summary>
        /// The default gateway for this address.
        /// </summary>
        public readonly string Gateway;
        /// <summary>
        /// The globally general API entity identifier for the Linode interface.
        /// </summary>
        public readonly int InterfaceId;
        /// <summary>
        /// The Linode instance's ID.
        /// </summary>
        public readonly int LinodeId;
        /// <summary>
        /// The public IP address used for NAT 1:1 with the VPC. This is `null` if the VPC interface uses an `address_range` or NAT 1:1 isn't used.
        /// </summary>
        public readonly string Nat11;
        /// <summary>
        /// The network prefix.
        /// </summary>
        public readonly int Prefix;
        /// <summary>
        /// (Filterable) The Region this address resides in.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The unique globally general API entity identifier for the VPC subnet.
        /// </summary>
        public readonly int SubnetId;
        /// <summary>
        /// The subnet mask.
        /// </summary>
        public readonly string SubnetMask;
        /// <summary>
        /// The unique globally general API entity identifier for the VPC.
        /// </summary>
        public readonly int VpcId;

        [OutputConstructor]
        private GetInstanceNetworkingIpv4VpcResult(
            bool active,

            string address,

            string addressRange,

            int configId,

            string gateway,

            int interfaceId,

            int linodeId,

            string nat11,

            int prefix,

            string region,

            int subnetId,

            string subnetMask,

            int vpcId)
        {
            Active = active;
            Address = address;
            AddressRange = addressRange;
            ConfigId = configId;
            Gateway = gateway;
            InterfaceId = interfaceId;
            LinodeId = linodeId;
            Nat11 = nat11;
            Prefix = prefix;
            Region = region;
            SubnetId = subnetId;
            SubnetMask = subnetMask;
            VpcId = vpcId;
        }
    }
}
