// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetNodebalancerVpcsVpcConfigResult
    {
        /// <summary>
        /// The ID of the VPC configuration.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// A CIDR range for the VPC's IPv4 addresses. The NodeBalancer sources IP addresses from this range when routing traffic to the backend VPC nodes.
        /// </summary>
        public readonly string Ipv4Range;
        /// <summary>
        /// The ID of the NodeBalancer to list VPC configurations for.
        /// 
        /// * `Filter` - (Optional) A set of filters used to select VPC configurations that meet certain requirements.
        /// </summary>
        public readonly int NodebalancerId;
        /// <summary>
        /// The ID of this configuration's VPC subnet.
        /// </summary>
        public readonly int SubnetId;
        /// <summary>
        /// The ID of this configuration's VPC.
        /// </summary>
        public readonly int VpcId;

        [OutputConstructor]
        private GetNodebalancerVpcsVpcConfigResult(
            int id,

            string ipv4Range,

            int nodebalancerId,

            int subnetId,

            int vpcId)
        {
            Id = id;
            Ipv4Range = ipv4Range;
            NodebalancerId = nodebalancerId;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
