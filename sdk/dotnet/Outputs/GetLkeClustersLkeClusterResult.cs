// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetLkeClustersLkeClusterResult
    {
        /// <summary>
        /// Enables the App Platform Layer for this cluster. Note: v4beta only and may not currently be available to all users.
        /// </summary>
        public readonly bool AplEnabled;
        /// <summary>
        /// Defines settings for the Kubernetes Control Plane.
        /// </summary>
        public readonly Outputs.GetLkeClustersLkeClusterControlPlaneResult? ControlPlane;
        /// <summary>
        /// When this Kubernetes cluster was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// The LKE Cluster's ID.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The Kubernetes version for this Kubernetes cluster in the format of `major.minor` (e.g. `1.17`).
        /// </summary>
        public readonly string K8sVersion;
        /// <summary>
        /// The unique label for the cluster.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// This Kubernetes cluster's location.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The networking stack type of the Kubernetes cluster.
        /// </summary>
        public readonly string StackType;
        /// <summary>
        /// The status of the cluster.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The ID of the VPC subnet to use for the Kubernetes cluster. This subnet must be dual stack (IPv4 and IPv6 should both be enabled).
        /// </summary>
        public readonly int SubnetId;
        /// <summary>
        /// An array of tags applied to this object. Tags are case-insensitive and are for organizational purposes only.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The desired Kubernetes tier. (**Note: v4beta only and may not currently be available to all users.**)
        /// </summary>
        public readonly string Tier;
        /// <summary>
        /// When this Kubernetes cluster was updated.
        /// </summary>
        public readonly string Updated;
        /// <summary>
        /// The ID of the VPC to use for the Kubernetes cluster.
        /// </summary>
        public readonly int VpcId;

        [OutputConstructor]
        private GetLkeClustersLkeClusterResult(
            bool aplEnabled,

            Outputs.GetLkeClustersLkeClusterControlPlaneResult? controlPlane,

            string created,

            int id,

            string k8sVersion,

            string label,

            string region,

            string stackType,

            string status,

            int subnetId,

            ImmutableArray<string> tags,

            string tier,

            string updated,

            int vpcId)
        {
            AplEnabled = aplEnabled;
            ControlPlane = controlPlane;
            Created = created;
            Id = id;
            K8sVersion = k8sVersion;
            Label = label;
            Region = region;
            StackType = stackType;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            Tier = tier;
            Updated = updated;
            VpcId = vpcId;
        }
    }
}
