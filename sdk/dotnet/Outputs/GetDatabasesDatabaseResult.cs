// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetDatabasesDatabaseResult
    {
        /// <summary>
        /// A list of IP addresses that can access the Managed Database.
        /// </summary>
        public readonly ImmutableArray<string> AllowLists;
        /// <summary>
        /// The number of Linode Instance nodes deployed to the Managed Database.
        /// </summary>
        public readonly int ClusterSize;
        /// <summary>
        /// When this Managed Database was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Whether the Managed Databases is encrypted.
        /// </summary>
        public readonly bool Encrypted;
        /// <summary>
        /// The Managed Database engine.
        /// </summary>
        public readonly string Engine;
        /// <summary>
        /// The primary host for the Managed Database.
        /// </summary>
        public readonly string HostPrimary;
        /// <summary>
        /// The secondary/private network host for the Managed Database.
        /// </summary>
        public readonly string HostSecondary;
        /// <summary>
        /// The ID of the Managed Database.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// he API route for the database instance.
        /// </summary>
        public readonly string InstanceUri;
        /// <summary>
        /// A unique, user-defined string referring to the Managed Database.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// The region to use for the Managed Database.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The replication method used for the Managed Database.
        /// </summary>
        public readonly string ReplicationType;
        /// <summary>
        /// Whether to require SSL credentials to establish a connection to the Managed Database.
        /// </summary>
        public readonly bool SslConnection;
        /// <summary>
        /// The operating status of the Managed Database.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The Linode Instance type used for the nodes of the  Managed Database instance.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// When this Managed Database was last updated.
        /// </summary>
        public readonly string Updated;
        /// <summary>
        /// The Managed Database engine version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetDatabasesDatabaseResult(
            ImmutableArray<string> allowLists,

            int clusterSize,

            string created,

            bool encrypted,

            string engine,

            string hostPrimary,

            string hostSecondary,

            int id,

            string instanceUri,

            string label,

            string region,

            string replicationType,

            bool sslConnection,

            string status,

            string type,

            string updated,

            string version)
        {
            AllowLists = allowLists;
            ClusterSize = clusterSize;
            Created = created;
            Encrypted = encrypted;
            Engine = engine;
            HostPrimary = hostPrimary;
            HostSecondary = hostSecondary;
            Id = id;
            InstanceUri = instanceUri;
            Label = label;
            Region = region;
            ReplicationType = replicationType;
            SslConnection = sslConnection;
            Status = status;
            Type = type;
            Updated = updated;
            Version = version;
        }
    }
}
