// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetLkeClusterPoolResult
    {
        /// <summary>
        /// The configuration options for the autoscaler. This field only contains an autoscaler configuration if autoscaling is enabled on this cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLkeClusterPoolAutoscalerResult> Autoscalers;
        /// <summary>
        /// The number of nodes in the Node Pool.
        /// </summary>
        public readonly int Count;
        /// <summary>
        /// This Node Pool’s custom disk layout.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLkeClusterPoolDiskResult> Disks;
        /// <summary>
        /// The LKE Cluster's ID.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The nodes in the Node Pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLkeClusterPoolNodeResult> Nodes;
        /// <summary>
        /// An array of tags applied to this object. Tags are for organizational purposes only.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// This custom disk partition’s filesystem type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLkeClusterPoolResult(
            ImmutableArray<Outputs.GetLkeClusterPoolAutoscalerResult> autoscalers,

            int count,

            ImmutableArray<Outputs.GetLkeClusterPoolDiskResult> disks,

            int id,

            ImmutableArray<Outputs.GetLkeClusterPoolNodeResult> nodes,

            ImmutableArray<string> tags,

            string type)
        {
            Autoscalers = autoscalers;
            Count = count;
            Disks = disks;
            Id = id;
            Nodes = nodes;
            Tags = tags;
            Type = type;
        }
    }
}
