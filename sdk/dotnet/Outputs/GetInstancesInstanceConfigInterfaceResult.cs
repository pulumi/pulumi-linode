// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Outputs
{

    [OutputType]
    public sealed class GetInstancesInstanceConfigInterfaceResult
    {
        /// <summary>
        /// Whether this interface is currently booted and active.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// The ID of the Placement Group in the Linode API.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// IPv4 CIDR VPC Subnet ranges that are routed to this Interface. IPv6 ranges are also available to select participants in the Beta program.
        /// </summary>
        public readonly ImmutableArray<string> IpRanges;
        /// <summary>
        /// This Network Interfaceâ€™s private IP address in Classless Inter-Domain Routing (CIDR) notation. (e.g. `10.0.0.1/24`) This field is only allowed for interfaces with the `Vlan` purpose.
        /// </summary>
        public readonly string? IpamAddress;
        /// <summary>
        /// This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
        /// </summary>
        public readonly Outputs.GetInstancesInstanceConfigInterfaceIpv4Result Ipv4;
        /// <summary>
        /// This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.  The prefix (`/128`) is included in this attribute.
        /// </summary>
        public readonly Outputs.GetInstancesInstanceConfigInterfaceIpv6Result Ipv6;
        /// <summary>
        /// The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Whether the interface is the primary interface that should have the default route for this Linode. This field is only allowed for interfaces with the `Public` or `Vpc` purpose.
        /// </summary>
        public readonly bool? Primary;
        /// <summary>
        /// The type of interface. (`Public`, `Vlan`, `Vpc`)
        /// </summary>
        public readonly string Purpose;
        /// <summary>
        /// The name of the VPC Subnet to join. This field is only allowed and required for interfaces with the `Vpc` purpose.
        /// </summary>
        public readonly int? SubnetId;
        /// <summary>
        /// The ID of VPC which this interface is attached to.
        /// </summary>
        public readonly int VpcId;

        [OutputConstructor]
        private GetInstancesInstanceConfigInterfaceResult(
            bool active,

            int id,

            ImmutableArray<string> ipRanges,

            string? ipamAddress,

            Outputs.GetInstancesInstanceConfigInterfaceIpv4Result ipv4,

            Outputs.GetInstancesInstanceConfigInterfaceIpv6Result ipv6,

            string? label,

            bool? primary,

            string purpose,

            int? subnetId,

            int vpcId)
        {
            Active = active;
            Id = id;
            IpRanges = ipRanges;
            IpamAddress = ipamAddress;
            Ipv4 = ipv4;
            Ipv6 = ipv6;
            Label = label;
            Primary = primary;
            Purpose = purpose;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
