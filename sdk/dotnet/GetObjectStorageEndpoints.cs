// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetObjectStorageEndpoints
    {
        /// <summary>
        /// Provides information about Linode Object Storage endpoints available to the user.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-endpoints).
        /// 
        /// ## Example Usage
        /// 
        /// Get an endpoint of E3 type (highest performance and capacity) of Linode Object Storage services:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Linode.GetObjectStorageEndpoints.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetObjectStorageEndpointsFilterInputArgs
        ///             {
        ///                 Name = "endpoint_type",
        ///                 Values = new[]
        ///                 {
        ///                     "E3",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["high-performance-obj-endpoint"] = test.Apply(getObjectStorageEndpointsResult =&gt; getObjectStorageEndpointsResult.Endpoints[0]?.S3Endpoint),
        ///     };
        /// });
        /// ```
        /// 
        /// Get a list of all available endpoints of Linode Object Storage services.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Linode.GetObjectStorageEndpoints.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["available-endpoints"] = test.Apply(getObjectStorageEndpointsResult =&gt; getObjectStorageEndpointsResult.Endpoints),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `endpoint_type`
        /// 
        /// * `region`
        /// 
        /// * `s3_endpoint`
        /// </summary>
        public static Task<GetObjectStorageEndpointsResult> InvokeAsync(GetObjectStorageEndpointsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectStorageEndpointsResult>("linode:index/getObjectStorageEndpoints:getObjectStorageEndpoints", args ?? new GetObjectStorageEndpointsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about Linode Object Storage endpoints available to the user.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-endpoints).
        /// 
        /// ## Example Usage
        /// 
        /// Get an endpoint of E3 type (highest performance and capacity) of Linode Object Storage services:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Linode.GetObjectStorageEndpoints.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetObjectStorageEndpointsFilterInputArgs
        ///             {
        ///                 Name = "endpoint_type",
        ///                 Values = new[]
        ///                 {
        ///                     "E3",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["high-performance-obj-endpoint"] = test.Apply(getObjectStorageEndpointsResult =&gt; getObjectStorageEndpointsResult.Endpoints[0]?.S3Endpoint),
        ///     };
        /// });
        /// ```
        /// 
        /// Get a list of all available endpoints of Linode Object Storage services.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Linode.GetObjectStorageEndpoints.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["available-endpoints"] = test.Apply(getObjectStorageEndpointsResult =&gt; getObjectStorageEndpointsResult.Endpoints),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `endpoint_type`
        /// 
        /// * `region`
        /// 
        /// * `s3_endpoint`
        /// </summary>
        public static Output<GetObjectStorageEndpointsResult> Invoke(GetObjectStorageEndpointsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStorageEndpointsResult>("linode:index/getObjectStorageEndpoints:getObjectStorageEndpoints", args ?? new GetObjectStorageEndpointsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about Linode Object Storage endpoints available to the user.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-endpoints).
        /// 
        /// ## Example Usage
        /// 
        /// Get an endpoint of E3 type (highest performance and capacity) of Linode Object Storage services:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Linode.GetObjectStorageEndpoints.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetObjectStorageEndpointsFilterInputArgs
        ///             {
        ///                 Name = "endpoint_type",
        ///                 Values = new[]
        ///                 {
        ///                     "E3",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["high-performance-obj-endpoint"] = test.Apply(getObjectStorageEndpointsResult =&gt; getObjectStorageEndpointsResult.Endpoints[0]?.S3Endpoint),
        ///     };
        /// });
        /// ```
        /// 
        /// Get a list of all available endpoints of Linode Object Storage services.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Linode.GetObjectStorageEndpoints.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["available-endpoints"] = test.Apply(getObjectStorageEndpointsResult =&gt; getObjectStorageEndpointsResult.Endpoints),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `endpoint_type`
        /// 
        /// * `region`
        /// 
        /// * `s3_endpoint`
        /// </summary>
        public static Output<GetObjectStorageEndpointsResult> Invoke(GetObjectStorageEndpointsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStorageEndpointsResult>("linode:index/getObjectStorageEndpoints:getObjectStorageEndpoints", args ?? new GetObjectStorageEndpointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectStorageEndpointsArgs : global::Pulumi.InvokeArgs
    {
        [Input("endpoints")]
        private List<Inputs.GetObjectStorageEndpointsEndpointArgs>? _endpoints;
        public List<Inputs.GetObjectStorageEndpointsEndpointArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new List<Inputs.GetObjectStorageEndpointsEndpointArgs>());
            set => _endpoints = value;
        }

        [Input("filters")]
        private List<Inputs.GetObjectStorageEndpointsFilterArgs>? _filters;
        public List<Inputs.GetObjectStorageEndpointsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetObjectStorageEndpointsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public string? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        public GetObjectStorageEndpointsArgs()
        {
        }
        public static new GetObjectStorageEndpointsArgs Empty => new GetObjectStorageEndpointsArgs();
    }

    public sealed class GetObjectStorageEndpointsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("endpoints")]
        private InputList<Inputs.GetObjectStorageEndpointsEndpointInputArgs>? _endpoints;
        public InputList<Inputs.GetObjectStorageEndpointsEndpointInputArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Inputs.GetObjectStorageEndpointsEndpointInputArgs>());
            set => _endpoints = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetObjectStorageEndpointsFilterInputArgs>? _filters;
        public InputList<Inputs.GetObjectStorageEndpointsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetObjectStorageEndpointsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        public GetObjectStorageEndpointsInvokeArgs()
        {
        }
        public static new GetObjectStorageEndpointsInvokeArgs Empty => new GetObjectStorageEndpointsInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectStorageEndpointsResult
    {
        public readonly ImmutableArray<Outputs.GetObjectStorageEndpointsEndpointResult> Endpoints;
        public readonly ImmutableArray<Outputs.GetObjectStorageEndpointsFilterResult> Filters;
        public readonly string Id;
        public readonly string? Order;
        public readonly string? OrderBy;

        [OutputConstructor]
        private GetObjectStorageEndpointsResult(
            ImmutableArray<Outputs.GetObjectStorageEndpointsEndpointResult> endpoints,

            ImmutableArray<Outputs.GetObjectStorageEndpointsFilterResult> filters,

            string id,

            string? order,

            string? orderBy)
        {
            Endpoints = endpoints;
            Filters = filters;
            Id = id;
            Order = order;
            OrderBy = orderBy;
        }
    }
}
