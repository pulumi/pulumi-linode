// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetVpcs
    {
        /// <summary>
        /// Provides information about a list of Linode VPCs that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpcs).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list VPCs.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered_vpcs = Linode.GetVpcs.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetVpcsFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "test",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcs"] = filtered_vpcs.Apply(filtered_vpcs =&gt; filtered_vpcs.Apply(getVpcsResult =&gt; getVpcsResult.Vpcs)),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `description`
        /// 
        /// * `region`
        /// </summary>
        public static Task<GetVpcsResult> InvokeAsync(GetVpcsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcsResult>("linode:index/getVpcs:getVpcs", args ?? new GetVpcsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a list of Linode VPCs that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpcs).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list VPCs.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered_vpcs = Linode.GetVpcs.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetVpcsFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "test",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcs"] = filtered_vpcs.Apply(filtered_vpcs =&gt; filtered_vpcs.Apply(getVpcsResult =&gt; getVpcsResult.Vpcs)),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `description`
        /// 
        /// * `region`
        /// </summary>
        public static Output<GetVpcsResult> Invoke(GetVpcsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcsResult>("linode:index/getVpcs:getVpcs", args ?? new GetVpcsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a list of Linode VPCs that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpcs).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list VPCs.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered_vpcs = Linode.GetVpcs.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetVpcsFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "test",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcs"] = filtered_vpcs.Apply(filtered_vpcs =&gt; filtered_vpcs.Apply(getVpcsResult =&gt; getVpcsResult.Vpcs)),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `description`
        /// 
        /// * `region`
        /// </summary>
        public static Output<GetVpcsResult> Invoke(GetVpcsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcsResult>("linode:index/getVpcs:getVpcs", args ?? new GetVpcsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpcsFilterArgs>? _filters;
        public List<Inputs.GetVpcsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcsFilterArgs>());
            set => _filters = value;
        }

        [Input("vpcs")]
        private List<Inputs.GetVpcsVpcArgs>? _vpcs;
        public List<Inputs.GetVpcsVpcArgs> Vpcs
        {
            get => _vpcs ?? (_vpcs = new List<Inputs.GetVpcsVpcArgs>());
            set => _vpcs = value;
        }

        public GetVpcsArgs()
        {
        }
        public static new GetVpcsArgs Empty => new GetVpcsArgs();
    }

    public sealed class GetVpcsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpcsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVpcsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpcsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("vpcs")]
        private InputList<Inputs.GetVpcsVpcInputArgs>? _vpcs;
        public InputList<Inputs.GetVpcsVpcInputArgs> Vpcs
        {
            get => _vpcs ?? (_vpcs = new InputList<Inputs.GetVpcsVpcInputArgs>());
            set => _vpcs = value;
        }

        public GetVpcsInvokeArgs()
        {
        }
        public static new GetVpcsInvokeArgs Empty => new GetVpcsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcsResult
    {
        public readonly ImmutableArray<Outputs.GetVpcsFilterResult> Filters;
        /// <summary>
        /// The unique id of this VPC.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetVpcsVpcResult> Vpcs;

        [OutputConstructor]
        private GetVpcsResult(
            ImmutableArray<Outputs.GetVpcsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetVpcsVpcResult> vpcs)
        {
            Filters = filters;
            Id = id;
            Vpcs = vpcs;
        }
    }
}
