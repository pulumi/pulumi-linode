// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetVolumes
    {
        /// <summary>
        /// Provides information about Linode volumes that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-volumes).
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered_volumes = Linode.GetVolumes.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetVolumesFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "test-volume",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["volumes"] = filtered_volumes.Apply(filtered_volumes =&gt; filtered_volumes.Apply(getVolumesResult =&gt; getVolumesResult.Volumes)),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `label`
        /// 
        /// * `tags`
        /// </summary>
        public static Task<GetVolumesResult> InvokeAsync(GetVolumesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumesResult>("linode:index/getVolumes:getVolumes", args ?? new GetVolumesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about Linode volumes that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-volumes).
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered_volumes = Linode.GetVolumes.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetVolumesFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "test-volume",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["volumes"] = filtered_volumes.Apply(filtered_volumes =&gt; filtered_volumes.Apply(getVolumesResult =&gt; getVolumesResult.Volumes)),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `label`
        /// 
        /// * `tags`
        /// </summary>
        public static Output<GetVolumesResult> Invoke(GetVolumesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumesResult>("linode:index/getVolumes:getVolumes", args ?? new GetVolumesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVolumesFilterArgs>? _filters;
        public List<Inputs.GetVolumesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVolumesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public string? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("volumes")]
        private List<Inputs.GetVolumesVolumeArgs>? _volumes;
        public List<Inputs.GetVolumesVolumeArgs> Volumes
        {
            get => _volumes ?? (_volumes = new List<Inputs.GetVolumesVolumeArgs>());
            set => _volumes = value;
        }

        public GetVolumesArgs()
        {
        }
        public static new GetVolumesArgs Empty => new GetVolumesArgs();
    }

    public sealed class GetVolumesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVolumesFilterInputArgs>? _filters;
        public InputList<Inputs.GetVolumesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVolumesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("volumes")]
        private InputList<Inputs.GetVolumesVolumeInputArgs>? _volumes;
        public InputList<Inputs.GetVolumesVolumeInputArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.GetVolumesVolumeInputArgs>());
            set => _volumes = value;
        }

        public GetVolumesInvokeArgs()
        {
        }
        public static new GetVolumesInvokeArgs Empty => new GetVolumesInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumesResult
    {
        public readonly ImmutableArray<Outputs.GetVolumesFilterResult> Filters;
        /// <summary>
        /// The unique ID of this Volume.
        /// </summary>
        public readonly string Id;
        public readonly string? Order;
        public readonly string? OrderBy;
        public readonly ImmutableArray<Outputs.GetVolumesVolumeResult> Volumes;

        [OutputConstructor]
        private GetVolumesResult(
            ImmutableArray<Outputs.GetVolumesFilterResult> filters,

            string id,

            string? order,

            string? orderBy,

            ImmutableArray<Outputs.GetVolumesVolumeResult> volumes)
        {
            Filters = filters;
            Id = id;
            Order = order;
            OrderBy = orderBy;
            Volumes = volumes;
        }
    }
}
