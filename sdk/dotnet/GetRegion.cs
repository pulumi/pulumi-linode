// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetRegion
    {
        /// <summary>
        /// `linode.getRegion` provides details about a specific Linode region. See all regions [here](https://api.linode.com/v4/regions).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following example shows how the resource might be used to obtain additional information about a Linode region.
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var region = Output.Create(Linode.GetRegion.InvokeAsync(new Linode.GetRegionArgs
        ///         {
        ///             Id = "us-east",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegionResult> InvokeAsync(GetRegionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionResult>("linode:index/getRegion:getRegion", args ?? new GetRegionArgs(), options.WithDefaults());

        /// <summary>
        /// `linode.getRegion` provides details about a specific Linode region. See all regions [here](https://api.linode.com/v4/regions).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following example shows how the resource might be used to obtain additional information about a Linode region.
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var region = Output.Create(Linode.GetRegion.InvokeAsync(new Linode.GetRegionArgs
        ///         {
        ///             Id = "us-east",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRegionResult> Invoke(GetRegionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegionResult>("linode:index/getRegion:getRegion", args ?? new GetRegionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The country the region resides in.
        /// </summary>
        [Input("country")]
        public string? Country { get; set; }

        /// <summary>
        /// The code name of the region to select.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRegionArgs()
        {
        }
    }

    public sealed class GetRegionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The country the region resides in.
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// The code name of the region to select.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRegionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegionResult
    {
        /// <summary>
        /// The country the region resides in.
        /// </summary>
        public readonly string Country;
        public readonly string Id;

        [OutputConstructor]
        private GetRegionResult(
            string country,

            string id)
        {
            Country = country;
            Id = id;
        }
    }
}
