// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    /// <summary>
    /// Provides a Linode Image resource.  This can be used to create, modify, and delete Linodes Images.  Linode Images are snapshots of a Linode Instance Disk which can then be used to provision more Linode Instances.  Images can be used across regions.
    /// 
    /// For more information, see [Linode's documentation on Images](https://www.linode.com/docs/platform/disk-images/linode-images/) and the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/createImage).
    /// 
    /// ## Import
    /// 
    /// Linodes Images can be imported using the Linode Image `id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import linode:index/image:Image myimage 1234567
    /// ```
    /// </summary>
    [LinodeResourceType("linode:index/image:Image")]
    public partial class Image : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The capabilities of this Image.
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// Whether this image supports cloud-init.
        /// </summary>
        [Output("cloudInit")]
        public Output<bool?> CloudInit { get; private set; } = null!;

        /// <summary>
        /// When this Image was created.
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// The name of the User who created this Image.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// Whether or not this Image is deprecated. Will only be True for deprecated public Images.
        /// </summary>
        [Output("deprecated")]
        public Output<bool> Deprecated { get; private set; } = null!;

        /// <summary>
        /// A detailed description of this Image.
        /// 
        /// - - -
        /// 
        /// The following arguments apply to creating an image from an existing Linode Instance:
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the Linode Disk that this Image will be created from.
        /// </summary>
        [Output("diskId")]
        public Output<int?> DiskId { get; private set; } = null!;

        /// <summary>
        /// Only Images created automatically (from a deleted Linode; type=automatic) will expire.
        /// </summary>
        [Output("expiry")]
        public Output<string> Expiry { get; private set; } = null!;

        /// <summary>
        /// The MD5 hash of the file to be uploaded. This is used to trigger file updates.
        /// </summary>
        [Output("fileHash")]
        public Output<string> FileHash { get; private set; } = null!;

        /// <summary>
        /// The path of the image file to be uploaded.
        /// </summary>
        [Output("filePath")]
        public Output<string?> FilePath { get; private set; } = null!;

        /// <summary>
        /// True if the Image is public.
        /// </summary>
        [Output("isPublic")]
        public Output<bool> IsPublic { get; private set; } = null!;

        /// <summary>
        /// A short description of the Image. Labels cannot contain special characters.
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// The ID of the Linode that this Image will be created from.
        /// 
        /// - - -
        /// 
        /// &gt; **NOTICE:** Uploading images is currently in beta. Ensure `LINODE_API_VERSION` is set to `v4beta` in order to use this functionality.
        /// 
        /// The following arguments apply to uploading an image:
        /// </summary>
        [Output("linodeId")]
        public Output<int?> LinodeId { get; private set; } = null!;

        /// <summary>
        /// The region of the image. See all regions [here](https://api.linode.com/v4/regions).
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// The minimum size this Image needs to deploy. Size is in MB.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// The current status of this Image.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// How the Image was created. 'Manual' Images can be created at any time. 'Automatic' images are created automatically from a deleted Linode.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The upstream distribution vendor. Nil for private Images.
        /// </summary>
        [Output("vendor")]
        public Output<string> Vendor { get; private set; } = null!;


        /// <summary>
        /// Create a Image resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Image(string name, ImageArgs args, CustomResourceOptions? options = null)
            : base("linode:index/image:Image", name, args ?? new ImageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Image(string name, Input<string> id, ImageState? state = null, CustomResourceOptions? options = null)
            : base("linode:index/image:Image", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Image resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Image Get(string name, Input<string> id, ImageState? state = null, CustomResourceOptions? options = null)
        {
            return new Image(name, id, state, options);
        }
    }

    public sealed class ImageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether this image supports cloud-init.
        /// </summary>
        [Input("cloudInit")]
        public Input<bool>? CloudInit { get; set; }

        /// <summary>
        /// A detailed description of this Image.
        /// 
        /// - - -
        /// 
        /// The following arguments apply to creating an image from an existing Linode Instance:
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the Linode Disk that this Image will be created from.
        /// </summary>
        [Input("diskId")]
        public Input<int>? DiskId { get; set; }

        /// <summary>
        /// The MD5 hash of the file to be uploaded. This is used to trigger file updates.
        /// </summary>
        [Input("fileHash")]
        public Input<string>? FileHash { get; set; }

        /// <summary>
        /// The path of the image file to be uploaded.
        /// </summary>
        [Input("filePath")]
        public Input<string>? FilePath { get; set; }

        /// <summary>
        /// A short description of the Image. Labels cannot contain special characters.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// The ID of the Linode that this Image will be created from.
        /// 
        /// - - -
        /// 
        /// &gt; **NOTICE:** Uploading images is currently in beta. Ensure `LINODE_API_VERSION` is set to `v4beta` in order to use this functionality.
        /// 
        /// The following arguments apply to uploading an image:
        /// </summary>
        [Input("linodeId")]
        public Input<int>? LinodeId { get; set; }

        /// <summary>
        /// The region of the image. See all regions [here](https://api.linode.com/v4/regions).
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ImageArgs()
        {
        }
        public static new ImageArgs Empty => new ImageArgs();
    }

    public sealed class ImageState : global::Pulumi.ResourceArgs
    {
        [Input("capabilities")]
        private InputList<string>? _capabilities;

        /// <summary>
        /// The capabilities of this Image.
        /// </summary>
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        /// <summary>
        /// Whether this image supports cloud-init.
        /// </summary>
        [Input("cloudInit")]
        public Input<bool>? CloudInit { get; set; }

        /// <summary>
        /// When this Image was created.
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// The name of the User who created this Image.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// Whether or not this Image is deprecated. Will only be True for deprecated public Images.
        /// </summary>
        [Input("deprecated")]
        public Input<bool>? Deprecated { get; set; }

        /// <summary>
        /// A detailed description of this Image.
        /// 
        /// - - -
        /// 
        /// The following arguments apply to creating an image from an existing Linode Instance:
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the Linode Disk that this Image will be created from.
        /// </summary>
        [Input("diskId")]
        public Input<int>? DiskId { get; set; }

        /// <summary>
        /// Only Images created automatically (from a deleted Linode; type=automatic) will expire.
        /// </summary>
        [Input("expiry")]
        public Input<string>? Expiry { get; set; }

        /// <summary>
        /// The MD5 hash of the file to be uploaded. This is used to trigger file updates.
        /// </summary>
        [Input("fileHash")]
        public Input<string>? FileHash { get; set; }

        /// <summary>
        /// The path of the image file to be uploaded.
        /// </summary>
        [Input("filePath")]
        public Input<string>? FilePath { get; set; }

        /// <summary>
        /// True if the Image is public.
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// A short description of the Image. Labels cannot contain special characters.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// The ID of the Linode that this Image will be created from.
        /// 
        /// - - -
        /// 
        /// &gt; **NOTICE:** Uploading images is currently in beta. Ensure `LINODE_API_VERSION` is set to `v4beta` in order to use this functionality.
        /// 
        /// The following arguments apply to uploading an image:
        /// </summary>
        [Input("linodeId")]
        public Input<int>? LinodeId { get; set; }

        /// <summary>
        /// The region of the image. See all regions [here](https://api.linode.com/v4/regions).
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The minimum size this Image needs to deploy. Size is in MB.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The current status of this Image.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// How the Image was created. 'Manual' Images can be created at any time. 'Automatic' images are created automatically from a deleted Linode.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The upstream distribution vendor. Nil for private Images.
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        public ImageState()
        {
        }
        public static new ImageState Empty => new ImageState();
    }
}
