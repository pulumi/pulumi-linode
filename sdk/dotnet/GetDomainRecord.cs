// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetDomainRecord
    {
        /// <summary>
        /// Provides information about a Linode Domain Record.
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about a Linode Domain Record.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myRecord = Linode.GetDomainRecord.Invoke(new()
        ///     {
        ///         Id = 14950401,
        ///         DomainId = 3150401,
        ///     });
        /// 
        ///     var myWwwRecord = Linode.GetDomainRecord.Invoke(new()
        ///     {
        ///         Name = "www",
        ///         DomainId = 3150401,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDomainRecordResult> InvokeAsync(GetDomainRecordArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainRecordResult>("linode:index/getDomainRecord:getDomainRecord", args ?? new GetDomainRecordArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a Linode Domain Record.
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about a Linode Domain Record.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myRecord = Linode.GetDomainRecord.Invoke(new()
        ///     {
        ///         Id = 14950401,
        ///         DomainId = 3150401,
        ///     });
        /// 
        ///     var myWwwRecord = Linode.GetDomainRecord.Invoke(new()
        ///     {
        ///         Name = "www",
        ///         DomainId = 3150401,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDomainRecordResult> Invoke(GetDomainRecordInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainRecordResult>("linode:index/getDomainRecord:getDomainRecord", args ?? new GetDomainRecordInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainRecordArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The associated domain's unique ID.
        /// </summary>
        [Input("domainId", required: true)]
        public int DomainId { get; set; }

        /// <summary>
        /// The unique ID of the Domain Record.
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// The name of the Record.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetDomainRecordArgs()
        {
        }
        public static new GetDomainRecordArgs Empty => new GetDomainRecordArgs();
    }

    public sealed class GetDomainRecordInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The associated domain's unique ID.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<int> DomainId { get; set; } = null!;

        /// <summary>
        /// The unique ID of the Domain Record.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The name of the Record.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetDomainRecordInvokeArgs()
        {
        }
        public static new GetDomainRecordInvokeArgs Empty => new GetDomainRecordInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainRecordResult
    {
        /// <summary>
        /// The associated domain's unique ID.
        /// </summary>
        public readonly int DomainId;
        /// <summary>
        /// The unique ID of the Domain Record.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// The name of the Record.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The port this Record points to.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The priority of the target host. Lower values are preferred.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// The protocol this Record's service communicates with. Only valid for SRV records.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The service this Record identified. Only valid for SRV records.
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// The tag portion of a CAA record.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// The amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.
        /// </summary>
        public readonly int TtlSec;
        /// <summary>
        /// The type of Record this is in the DNS system. See all record types [here](https://www.linode.com/docs/api/domains/#domain-records-list__responses).
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The relative weight of this Record. Higher values are preferred.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private GetDomainRecordResult(
            int domainId,

            int? id,

            string? name,

            int port,

            int priority,

            string protocol,

            string service,

            string tag,

            string target,

            int ttlSec,

            string type,

            int weight)
        {
            DomainId = domainId;
            Id = id;
            Name = name;
            Port = port;
            Priority = priority;
            Protocol = protocol;
            Service = service;
            Tag = tag;
            Target = target;
            TtlSec = ttlSec;
            Type = type;
            Weight = weight;
        }
    }
}
