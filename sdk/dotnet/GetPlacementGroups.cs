// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetPlacementGroups
    {
        /// <summary>
        /// **NOTE: Placement Groups may not currently be available to all users.**
        /// 
        /// Provides information about a list of Linode Placement Groups that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-placement-groups).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list Placement Groups.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Linode.GetPlacementGroups.Invoke();
        /// 
        ///     var filtered = Linode.GetPlacementGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetPlacementGroupsFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "my-label",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["all-pgs"] = all.Apply(getPlacementGroupsResult =&gt; getPlacementGroupsResult.PlacementGroups),
        ///         ["filtered-pgs"] = filtered.Apply(getPlacementGroupsResult =&gt; getPlacementGroupsResult.PlacementGroups),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `region`
        /// 
        /// * `affinity_type`
        /// 
        /// * `is_strict`
        /// 
        /// * `is_compliant`
        /// </summary>
        public static Task<GetPlacementGroupsResult> InvokeAsync(GetPlacementGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPlacementGroupsResult>("linode:index/getPlacementGroups:getPlacementGroups", args ?? new GetPlacementGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// **NOTE: Placement Groups may not currently be available to all users.**
        /// 
        /// Provides information about a list of Linode Placement Groups that match a set of filters.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-placement-groups).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to list Placement Groups.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Linode.GetPlacementGroups.Invoke();
        /// 
        ///     var filtered = Linode.GetPlacementGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetPlacementGroupsFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "my-label",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["all-pgs"] = all.Apply(getPlacementGroupsResult =&gt; getPlacementGroupsResult.PlacementGroups),
        ///         ["filtered-pgs"] = filtered.Apply(getPlacementGroupsResult =&gt; getPlacementGroupsResult.PlacementGroups),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `region`
        /// 
        /// * `affinity_type`
        /// 
        /// * `is_strict`
        /// 
        /// * `is_compliant`
        /// </summary>
        public static Output<GetPlacementGroupsResult> Invoke(GetPlacementGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlacementGroupsResult>("linode:index/getPlacementGroups:getPlacementGroups", args ?? new GetPlacementGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPlacementGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPlacementGroupsFilterArgs>? _filters;
        public List<Inputs.GetPlacementGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPlacementGroupsFilterArgs>());
            set => _filters = value;
        }

        [Input("order")]
        public string? Order { get; set; }

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("placementGroups")]
        private List<Inputs.GetPlacementGroupsPlacementGroupArgs>? _placementGroups;
        public List<Inputs.GetPlacementGroupsPlacementGroupArgs> PlacementGroups
        {
            get => _placementGroups ?? (_placementGroups = new List<Inputs.GetPlacementGroupsPlacementGroupArgs>());
            set => _placementGroups = value;
        }

        public GetPlacementGroupsArgs()
        {
        }
        public static new GetPlacementGroupsArgs Empty => new GetPlacementGroupsArgs();
    }

    public sealed class GetPlacementGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPlacementGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetPlacementGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPlacementGroupsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("order")]
        public Input<string>? Order { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("placementGroups")]
        private InputList<Inputs.GetPlacementGroupsPlacementGroupInputArgs>? _placementGroups;
        public InputList<Inputs.GetPlacementGroupsPlacementGroupInputArgs> PlacementGroups
        {
            get => _placementGroups ?? (_placementGroups = new InputList<Inputs.GetPlacementGroupsPlacementGroupInputArgs>());
            set => _placementGroups = value;
        }

        public GetPlacementGroupsInvokeArgs()
        {
        }
        public static new GetPlacementGroupsInvokeArgs Empty => new GetPlacementGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPlacementGroupsResult
    {
        public readonly ImmutableArray<Outputs.GetPlacementGroupsFilterResult> Filters;
        public readonly string Id;
        public readonly string? Order;
        public readonly string? OrderBy;
        public readonly ImmutableArray<Outputs.GetPlacementGroupsPlacementGroupResult> PlacementGroups;

        [OutputConstructor]
        private GetPlacementGroupsResult(
            ImmutableArray<Outputs.GetPlacementGroupsFilterResult> filters,

            string id,

            string? order,

            string? orderBy,

            ImmutableArray<Outputs.GetPlacementGroupsPlacementGroupResult> placementGroups)
        {
            Filters = filters;
            Id = id;
            Order = order;
            OrderBy = orderBy;
            PlacementGroups = placementGroups;
        }
    }
}
