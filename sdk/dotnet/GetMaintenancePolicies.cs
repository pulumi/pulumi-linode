// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetMaintenancePolicies
    {
        /// <summary>
        /// Provides details about the Maintenance Policies available to apply to Accounts and Instances.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-maintenance-policies). (**Note: v4beta only.**)
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about Maintenance Policies:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Linode.GetMaintenancePolicies.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleOutput"] = example,
        ///     };
        /// });
        /// ```
        /// 
        /// The following example shows how one might use this data source to access information about Maintenance Policies with a certain slug:
        /// </summary>
        public static Task<GetMaintenancePoliciesResult> InvokeAsync(GetMaintenancePoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaintenancePoliciesResult>("linode:index/getMaintenancePolicies:getMaintenancePolicies", args ?? new GetMaintenancePoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about the Maintenance Policies available to apply to Accounts and Instances.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-maintenance-policies). (**Note: v4beta only.**)
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about Maintenance Policies:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Linode.GetMaintenancePolicies.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleOutput"] = example,
        ///     };
        /// });
        /// ```
        /// 
        /// The following example shows how one might use this data source to access information about Maintenance Policies with a certain slug:
        /// </summary>
        public static Output<GetMaintenancePoliciesResult> Invoke(GetMaintenancePoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaintenancePoliciesResult>("linode:index/getMaintenancePolicies:getMaintenancePolicies", args ?? new GetMaintenancePoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about the Maintenance Policies available to apply to Accounts and Instances.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-maintenance-policies). (**Note: v4beta only.**)
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about Maintenance Policies:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Linode.GetMaintenancePolicies.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleOutput"] = example,
        ///     };
        /// });
        /// ```
        /// 
        /// The following example shows how one might use this data source to access information about Maintenance Policies with a certain slug:
        /// </summary>
        public static Output<GetMaintenancePoliciesResult> Invoke(GetMaintenancePoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaintenancePoliciesResult>("linode:index/getMaintenancePolicies:getMaintenancePolicies", args ?? new GetMaintenancePoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenancePoliciesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetMaintenancePoliciesFilterArgs>? _filters;
        public List<Inputs.GetMaintenancePoliciesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMaintenancePoliciesFilterArgs>());
            set => _filters = value;
        }

        [Input("maintenancePolicies")]
        private List<Inputs.GetMaintenancePoliciesMaintenancePolicyArgs>? _maintenancePolicies;
        public List<Inputs.GetMaintenancePoliciesMaintenancePolicyArgs> MaintenancePolicies
        {
            get => _maintenancePolicies ?? (_maintenancePolicies = new List<Inputs.GetMaintenancePoliciesMaintenancePolicyArgs>());
            set => _maintenancePolicies = value;
        }

        public GetMaintenancePoliciesArgs()
        {
        }
        public static new GetMaintenancePoliciesArgs Empty => new GetMaintenancePoliciesArgs();
    }

    public sealed class GetMaintenancePoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetMaintenancePoliciesFilterInputArgs>? _filters;
        public InputList<Inputs.GetMaintenancePoliciesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetMaintenancePoliciesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("maintenancePolicies")]
        private InputList<Inputs.GetMaintenancePoliciesMaintenancePolicyInputArgs>? _maintenancePolicies;
        public InputList<Inputs.GetMaintenancePoliciesMaintenancePolicyInputArgs> MaintenancePolicies
        {
            get => _maintenancePolicies ?? (_maintenancePolicies = new InputList<Inputs.GetMaintenancePoliciesMaintenancePolicyInputArgs>());
            set => _maintenancePolicies = value;
        }

        public GetMaintenancePoliciesInvokeArgs()
        {
        }
        public static new GetMaintenancePoliciesInvokeArgs Empty => new GetMaintenancePoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaintenancePoliciesResult
    {
        public readonly ImmutableArray<Outputs.GetMaintenancePoliciesFilterResult> Filters;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetMaintenancePoliciesMaintenancePolicyResult> MaintenancePolicies;

        [OutputConstructor]
        private GetMaintenancePoliciesResult(
            ImmutableArray<Outputs.GetMaintenancePoliciesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetMaintenancePoliciesMaintenancePolicyResult> maintenancePolicies)
        {
            Filters = filters;
            Id = id;
            MaintenancePolicies = maintenancePolicies;
        }
    }
}
