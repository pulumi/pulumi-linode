// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetFirewallTemplate
    {
        /// <summary>
        /// Provides information about a Linode Firewall Template.
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about a specific Firewall Template:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var public_template = Linode.GetFirewallTemplate.Invoke(new()
        ///     {
        ///         Slug = "public",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firewallTemplateId"] = public_template.Apply(public_template =&gt; public_template.Apply(getFirewallTemplateResult =&gt; getFirewallTemplateResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetFirewallTemplateResult> InvokeAsync(GetFirewallTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallTemplateResult>("linode:index/getFirewallTemplate:getFirewallTemplate", args ?? new GetFirewallTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a Linode Firewall Template.
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about a specific Firewall Template:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var public_template = Linode.GetFirewallTemplate.Invoke(new()
        ///     {
        ///         Slug = "public",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firewallTemplateId"] = public_template.Apply(public_template =&gt; public_template.Apply(getFirewallTemplateResult =&gt; getFirewallTemplateResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetFirewallTemplateResult> Invoke(GetFirewallTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallTemplateResult>("linode:index/getFirewallTemplate:getFirewallTemplate", args ?? new GetFirewallTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a Linode Firewall Template.
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how one might use this data source to access information about a specific Firewall Template:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var public_template = Linode.GetFirewallTemplate.Invoke(new()
        ///     {
        ///         Slug = "public",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firewallTemplateId"] = public_template.Apply(public_template =&gt; public_template.Apply(getFirewallTemplateResult =&gt; getFirewallTemplateResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetFirewallTemplateResult> Invoke(GetFirewallTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallTemplateResult>("linode:index/getFirewallTemplate:getFirewallTemplate", args ?? new GetFirewallTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The slug of the firewall template.
        /// </summary>
        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public GetFirewallTemplateArgs()
        {
        }
        public static new GetFirewallTemplateArgs Empty => new GetFirewallTemplateArgs();
    }

    public sealed class GetFirewallTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The slug of the firewall template.
        /// </summary>
        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        public GetFirewallTemplateInvokeArgs()
        {
        }
        public static new GetFirewallTemplateInvokeArgs Empty => new GetFirewallTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallTemplateResult
    {
        /// <summary>
        /// The computed ID of the data source, which matches the `Slug` attribute.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The default behavior for inbound traffic. This can be overridden by individual firewall rules.
        /// </summary>
        public readonly string InboundPolicy;
        /// <summary>
        /// A list of firewall rules specifying allowed inbound network traffic.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallTemplateInboundResult> Inbounds;
        /// <summary>
        /// The default behavior for outbound traffic. This can be overridden by individual firewall rules.
        /// </summary>
        public readonly string OutboundPolicy;
        /// <summary>
        /// A list of firewall rules specifying allowed outbound network traffic.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallTemplateOutboundResult> Outbounds;
        public readonly string Slug;

        [OutputConstructor]
        private GetFirewallTemplateResult(
            string id,

            string inboundPolicy,

            ImmutableArray<Outputs.GetFirewallTemplateInboundResult> inbounds,

            string outboundPolicy,

            ImmutableArray<Outputs.GetFirewallTemplateOutboundResult> outbounds,

            string slug)
        {
            Id = id;
            InboundPolicy = inboundPolicy;
            Inbounds = inbounds;
            OutboundPolicy = outboundPolicy;
            Outbounds = outbounds;
            Slug = slug;
        }
    }
}
