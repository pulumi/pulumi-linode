// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class GetFirewallsFirewallInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When this firewall was created.
        /// </summary>
        [Input("created", required: true)]
        public Input<string> Created { get; set; } = null!;

        [Input("devices")]
        private InputList<Inputs.GetFirewallsFirewallDeviceInputArgs>? _devices;

        /// <summary>
        /// The devices associated with this firewall.
        /// </summary>
        public InputList<Inputs.GetFirewallsFirewallDeviceInputArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.GetFirewallsFirewallDeviceInputArgs>());
            set => _devices = value;
        }

        /// <summary>
        /// If true, the Firewall is inactive.
        /// </summary>
        [Input("disabled", required: true)]
        public Input<bool> Disabled { get; set; } = null!;

        /// <summary>
        /// The unique ID assigned to this Firewall.
        /// </summary>
        [Input("id", required: true)]
        public Input<int> Id { get; set; } = null!;

        /// <summary>
        /// The default behavior for inbound traffic.
        /// </summary>
        [Input("inboundPolicy", required: true)]
        public Input<string> InboundPolicy { get; set; } = null!;

        [Input("inbounds")]
        private InputList<Inputs.GetFirewallsFirewallInboundInputArgs>? _inbounds;

        /// <summary>
        /// A set of firewall rules that specify what inbound network traffic is allowed.
        /// </summary>
        public InputList<Inputs.GetFirewallsFirewallInboundInputArgs> Inbounds
        {
            get => _inbounds ?? (_inbounds = new InputList<Inputs.GetFirewallsFirewallInboundInputArgs>());
            set => _inbounds = value;
        }

        /// <summary>
        /// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        [Input("linodes", required: true)]
        private InputList<int>? _linodes;

        /// <summary>
        /// The IDs of Linodes this firewall is applied to.
        /// </summary>
        public InputList<int> Linodes
        {
            get => _linodes ?? (_linodes = new InputList<int>());
            set => _linodes = value;
        }

        [Input("nodebalancers", required: true)]
        private InputList<int>? _nodebalancers;

        /// <summary>
        /// The IDs of NodeBalancers assigned to this Firewall..
        /// </summary>
        public InputList<int> Nodebalancers
        {
            get => _nodebalancers ?? (_nodebalancers = new InputList<int>());
            set => _nodebalancers = value;
        }

        /// <summary>
        /// The default behavior for outbound traffic.
        /// </summary>
        [Input("outboundPolicy", required: true)]
        public Input<string> OutboundPolicy { get; set; } = null!;

        [Input("outbounds")]
        private InputList<Inputs.GetFirewallsFirewallOutboundInputArgs>? _outbounds;

        /// <summary>
        /// A set of firewall rules that specify what outbound network traffic is allowed.
        /// </summary>
        public InputList<Inputs.GetFirewallsFirewallOutboundInputArgs> Outbounds
        {
            get => _outbounds ?? (_outbounds = new InputList<Inputs.GetFirewallsFirewallOutboundInputArgs>());
            set => _outbounds = value;
        }

        /// <summary>
        /// The status of the firewall.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        [Input("tags", required: true)]
        private InputList<string>? _tags;

        /// <summary>
        /// An array of tags applied to this object. Tags are case-insensitive and are for organizational purposes only.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// When this firewall was last updated.
        /// </summary>
        [Input("updated", required: true)]
        public Input<string> Updated { get; set; } = null!;

        public GetFirewallsFirewallInputArgs()
        {
        }
        public static new GetFirewallsFirewallInputArgs Empty => new GetFirewallsFirewallInputArgs();
    }
}
