// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class GetVpcIpsVpcIpInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// True if the VPC interface is in use, meaning that the Linode was powered on using the config_id to which the interface belongs. Otherwise false.
        /// </summary>
        [Input("active", required: true)]
        public Input<bool> Active { get; set; } = null!;

        /// <summary>
        /// An IPv4 address configured for this VPC interface. These follow the RFC 1918 private address format. Null if an address_range.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// A range of IPv4 addresses configured for this VPC interface. Null if a single address.
        /// </summary>
        [Input("addressRange", required: true)]
        public Input<string> AddressRange { get; set; } = null!;

        /// <summary>
        /// The globally general entity identifier for the Linode configuration profile where the VPC is included.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// The default gateway for the VPC subnet that the IP or IP range belongs to.
        /// </summary>
        [Input("gateway", required: true)]
        public Input<string> Gateway { get; set; } = null!;

        /// <summary>
        /// The globally general API entity identifier for the Linode interface.
        /// </summary>
        [Input("interfaceId", required: true)]
        public Input<int> InterfaceId { get; set; } = null!;

        /// <summary>
        /// The identifier for the Linode the VPC interface currently belongs to.
        /// </summary>
        [Input("linodeId", required: true)]
        public Input<int> LinodeId { get; set; } = null!;

        /// <summary>
        /// The public IP address used for NAT 1:1 with the VPC. This is empty if NAT 1:1 isn't used.
        /// </summary>
        [Input("nat11", required: true)]
        public Input<string> Nat11 { get; set; } = null!;

        /// <summary>
        /// The number of bits set in the subnet mask.
        /// </summary>
        [Input("prefix", required: true)]
        public Input<int> Prefix { get; set; } = null!;

        /// <summary>
        /// The region of the VPC.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The id of the VPC Subnet for this interface.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<int> SubnetId { get; set; } = null!;

        /// <summary>
        /// The mask that separates host bits from network bits for the address or address_range.
        /// </summary>
        [Input("subnetMask", required: true)]
        public Input<string> SubnetMask { get; set; } = null!;

        /// <summary>
        /// The id of the parent VPC for the list of VPC IPs.
        /// 
        /// * `filter` - (Optional) A set of filters used to select Linode VPC IPs that meet certain requirements.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<int> VpcId { get; set; } = null!;

        public GetVpcIpsVpcIpInputArgs()
        {
        }
        public static new GetVpcIpsVpcIpInputArgs Empty => new GetVpcIpsVpcIpInputArgs();
    }
}
