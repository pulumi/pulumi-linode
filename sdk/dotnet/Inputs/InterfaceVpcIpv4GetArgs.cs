// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class InterfaceVpcIpv4GetArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        private InputList<Inputs.InterfaceVpcIpv4AddressGetArgs>? _addresses;

        /// <summary>
        /// Specifies the IPv4 addresses to use in the VPC subnet. Each object in this list supports:
        /// </summary>
        public InputList<Inputs.InterfaceVpcIpv4AddressGetArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Inputs.InterfaceVpcIpv4AddressGetArgs>());
            set => _addresses = value;
        }

        [Input("assignedAddresses")]
        private InputList<Inputs.InterfaceVpcIpv4AssignedAddressGetArgs>? _assignedAddresses;

        /// <summary>
        /// (Computed) The IPv4 addresses assigned for use in the VPC subnet, calculated from the `Addresses` input. Each object in this set supports:
        /// </summary>
        public InputList<Inputs.InterfaceVpcIpv4AssignedAddressGetArgs> AssignedAddresses
        {
            get => _assignedAddresses ?? (_assignedAddresses = new InputList<Inputs.InterfaceVpcIpv4AssignedAddressGetArgs>());
            set => _assignedAddresses = value;
        }

        [Input("assignedRanges")]
        private InputList<Inputs.InterfaceVpcIpv4AssignedRangeGetArgs>? _assignedRanges;

        /// <summary>
        /// Assigned additional IPv6 ranges to use in the VPC subnet, calculated from `Ranges` input.
        /// </summary>
        public InputList<Inputs.InterfaceVpcIpv4AssignedRangeGetArgs> AssignedRanges
        {
            get => _assignedRanges ?? (_assignedRanges = new InputList<Inputs.InterfaceVpcIpv4AssignedRangeGetArgs>());
            set => _assignedRanges = value;
        }

        [Input("ranges")]
        private InputList<Inputs.InterfaceVpcIpv4RangeGetArgs>? _ranges;

        /// <summary>
        /// IPv4 ranges in CIDR notation (1.2.3.4/24) or prefix-only format (/24). Each object in this list supports:
        /// </summary>
        public InputList<Inputs.InterfaceVpcIpv4RangeGetArgs> Ranges
        {
            get => _ranges ?? (_ranges = new InputList<Inputs.InterfaceVpcIpv4RangeGetArgs>());
            set => _ranges = value;
        }

        public InterfaceVpcIpv4GetArgs()
        {
        }
        public static new InterfaceVpcIpv4GetArgs Empty => new InterfaceVpcIpv4GetArgs();
    }
}
