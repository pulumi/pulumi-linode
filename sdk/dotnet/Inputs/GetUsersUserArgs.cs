// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class GetUsersUserInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("databaseGrants", required: true)]
        private InputList<Inputs.GetUsersUserDatabaseGrantInputArgs>? _databaseGrants;
        public InputList<Inputs.GetUsersUserDatabaseGrantInputArgs> DatabaseGrants
        {
            get => _databaseGrants ?? (_databaseGrants = new InputList<Inputs.GetUsersUserDatabaseGrantInputArgs>());
            set => _databaseGrants = value;
        }

        [Input("domainGrants", required: true)]
        private InputList<Inputs.GetUsersUserDomainGrantInputArgs>? _domainGrants;
        public InputList<Inputs.GetUsersUserDomainGrantInputArgs> DomainGrants
        {
            get => _domainGrants ?? (_domainGrants = new InputList<Inputs.GetUsersUserDomainGrantInputArgs>());
            set => _domainGrants = value;
        }

        /// <summary>
        /// The email address for this User, for account management communications, and may be used for other communications as configured.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        [Input("firewallGrants", required: true)]
        private InputList<Inputs.GetUsersUserFirewallGrantInputArgs>? _firewallGrants;
        public InputList<Inputs.GetUsersUserFirewallGrantInputArgs> FirewallGrants
        {
            get => _firewallGrants ?? (_firewallGrants = new InputList<Inputs.GetUsersUserFirewallGrantInputArgs>());
            set => _firewallGrants = value;
        }

        [Input("globalGrants", required: true)]
        private InputList<Inputs.GetUsersUserGlobalGrantInputArgs>? _globalGrants;
        public InputList<Inputs.GetUsersUserGlobalGrantInputArgs> GlobalGrants
        {
            get => _globalGrants ?? (_globalGrants = new InputList<Inputs.GetUsersUserGlobalGrantInputArgs>());
            set => _globalGrants = value;
        }

        /// <summary>
        /// The ID of entity this grant applies to.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("imageGrants", required: true)]
        private InputList<Inputs.GetUsersUserImageGrantInputArgs>? _imageGrants;
        public InputList<Inputs.GetUsersUserImageGrantInputArgs> ImageGrants
        {
            get => _imageGrants ?? (_imageGrants = new InputList<Inputs.GetUsersUserImageGrantInputArgs>());
            set => _imageGrants = value;
        }

        [Input("linodeGrants", required: true)]
        private InputList<Inputs.GetUsersUserLinodeGrantInputArgs>? _linodeGrants;
        public InputList<Inputs.GetUsersUserLinodeGrantInputArgs> LinodeGrants
        {
            get => _linodeGrants ?? (_linodeGrants = new InputList<Inputs.GetUsersUserLinodeGrantInputArgs>());
            set => _linodeGrants = value;
        }

        [Input("longviewGrants", required: true)]
        private InputList<Inputs.GetUsersUserLongviewGrantInputArgs>? _longviewGrants;
        public InputList<Inputs.GetUsersUserLongviewGrantInputArgs> LongviewGrants
        {
            get => _longviewGrants ?? (_longviewGrants = new InputList<Inputs.GetUsersUserLongviewGrantInputArgs>());
            set => _longviewGrants = value;
        }

        [Input("nodebalancerGrants", required: true)]
        private InputList<Inputs.GetUsersUserNodebalancerGrantInputArgs>? _nodebalancerGrants;
        public InputList<Inputs.GetUsersUserNodebalancerGrantInputArgs> NodebalancerGrants
        {
            get => _nodebalancerGrants ?? (_nodebalancerGrants = new InputList<Inputs.GetUsersUserNodebalancerGrantInputArgs>());
            set => _nodebalancerGrants = value;
        }

        /// <summary>
        /// The date and time when this Userâ€™s current password was created. User passwords are first created during the Account sign-up process, and updated using the Reset Password webpage. null if this User has not created a password yet.
        /// </summary>
        [Input("passwordCreated", required: true)]
        public Input<string> PasswordCreated { get; set; } = null!;

        /// <summary>
        /// If true, this User must be granted access to perform actions or access entities on this Account.
        /// </summary>
        [Input("restricted", required: true)]
        public Input<bool> Restricted { get; set; } = null!;

        [Input("sshKeys", required: true)]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the authorized_users field of a create Linode, rebuild Linode, or create Disk request.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        [Input("stackscriptGrants", required: true)]
        private InputList<Inputs.GetUsersUserStackscriptGrantInputArgs>? _stackscriptGrants;
        public InputList<Inputs.GetUsersUserStackscriptGrantInputArgs> StackscriptGrants
        {
            get => _stackscriptGrants ?? (_stackscriptGrants = new InputList<Inputs.GetUsersUserStackscriptGrantInputArgs>());
            set => _stackscriptGrants = value;
        }

        /// <summary>
        /// A boolean value indicating if the User has Two Factor Authentication (TFA) enabled.
        /// </summary>
        [Input("tfaEnabled", required: true)]
        public Input<bool> TfaEnabled { get; set; } = null!;

        /// <summary>
        /// This User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The phone number verified for this User Profile with the Phone Number Verify command. null if this User Profile has no verified phone number.
        /// </summary>
        [Input("verifiedPhoneNumber", required: true)]
        public Input<string> VerifiedPhoneNumber { get; set; } = null!;

        [Input("volumeGrants", required: true)]
        private InputList<Inputs.GetUsersUserVolumeGrantInputArgs>? _volumeGrants;
        public InputList<Inputs.GetUsersUserVolumeGrantInputArgs> VolumeGrants
        {
            get => _volumeGrants ?? (_volumeGrants = new InputList<Inputs.GetUsersUserVolumeGrantInputArgs>());
            set => _volumeGrants = value;
        }

        public GetUsersUserInputArgs()
        {
        }
        public static new GetUsersUserInputArgs Empty => new GetUsersUserInputArgs();
    }
}
