// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class GetChildAccountsChildAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// When this account was first activated
        /// </summary>
        [Input("activeSince", required: true)]
        public string ActiveSince { get; set; } = null!;

        /// <summary>
        /// First line of this Account's billing address.
        /// </summary>
        [Input("address1", required: true)]
        public string Address1 { get; set; } = null!;

        /// <summary>
        /// Second line of this Account's billing address.
        /// </summary>
        [Input("address2", required: true)]
        public string Address2 { get; set; } = null!;

        /// <summary>
        /// This Account's balance, in US dollars.
        /// </summary>
        [Input("balance", required: true)]
        public double Balance { get; set; }

        [Input("capabilities", required: true)]
        private List<string>? _capabilities;

        /// <summary>
        /// A set containing all the capabilities of this Account.
        /// </summary>
        public List<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new List<string>());
            set => _capabilities = value;
        }

        /// <summary>
        /// The city for this Account's billing address.
        /// </summary>
        [Input("city", required: true)]
        public string City { get; set; } = null!;

        /// <summary>
        /// The company name associated with this Account.
        /// </summary>
        [Input("company", required: true)]
        public string Company { get; set; } = null!;

        /// <summary>
        /// The two-letter country code of this Account's billing address.
        /// </summary>
        [Input("country", required: true)]
        public string Country { get; set; } = null!;

        /// <summary>
        /// The email address for this Account, for account management communications, and may be used for other communications as configured.
        /// </summary>
        [Input("email", required: true)]
        public string Email { get; set; } = null!;

        /// <summary>
        /// The unique ID of this Account.
        /// </summary>
        [Input("euuid", required: true)]
        public string Euuid { get; set; } = null!;

        /// <summary>
        /// The first name of the person associated with this Account.
        /// </summary>
        [Input("firstName", required: true)]
        public string FirstName { get; set; } = null!;

        /// <summary>
        /// The Email of the Account.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The last name of the person associated with this Account.
        /// </summary>
        [Input("lastName", required: true)]
        public string LastName { get; set; } = null!;

        /// <summary>
        /// The phone number associated with this Account.
        /// </summary>
        [Input("phone", required: true)]
        public string Phone { get; set; } = null!;

        /// <summary>
        /// If billing address is in the United States, this is the State portion of the Account's billing address. If the address is outside the US, this is the Province associated with the Account's billing address.
        /// </summary>
        [Input("state", required: true)]
        public string State { get; set; } = null!;

        /// <summary>
        /// The zip code of this Account's billing address.
        /// </summary>
        [Input("zip", required: true)]
        public string Zip { get; set; } = null!;

        public GetChildAccountsChildAccountArgs()
        {
        }
        public static new GetChildAccountsChildAccountArgs Empty => new GetChildAccountsChildAccountArgs();
    }
}
