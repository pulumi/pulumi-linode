// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class GetFirewallsFirewallArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// When this firewall was created.
        /// </summary>
        [Input("created", required: true)]
        public string Created { get; set; } = null!;

        [Input("devices")]
        private List<Inputs.GetFirewallsFirewallDeviceArgs>? _devices;

        /// <summary>
        /// The devices associated with this firewall.
        /// </summary>
        public List<Inputs.GetFirewallsFirewallDeviceArgs> Devices
        {
            get => _devices ?? (_devices = new List<Inputs.GetFirewallsFirewallDeviceArgs>());
            set => _devices = value;
        }

        /// <summary>
        /// If true, the Firewall is inactive.
        /// </summary>
        [Input("disabled", required: true)]
        public bool Disabled { get; set; }

        /// <summary>
        /// The unique ID assigned to this Firewall.
        /// </summary>
        [Input("id", required: true)]
        public int Id { get; set; }

        /// <summary>
        /// The default behavior for inbound traffic.
        /// </summary>
        [Input("inboundPolicy", required: true)]
        public string InboundPolicy { get; set; } = null!;

        [Input("inbounds")]
        private List<Inputs.GetFirewallsFirewallInboundArgs>? _inbounds;

        /// <summary>
        /// A set of firewall rules that specify what inbound network traffic is allowed.
        /// </summary>
        public List<Inputs.GetFirewallsFirewallInboundArgs> Inbounds
        {
            get => _inbounds ?? (_inbounds = new List<Inputs.GetFirewallsFirewallInboundArgs>());
            set => _inbounds = value;
        }

        /// <summary>
        /// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
        /// </summary>
        [Input("label", required: true)]
        public string Label { get; set; } = null!;

        [Input("linodes", required: true)]
        private List<int>? _linodes;

        /// <summary>
        /// The IDs of Linodes this firewall is applied to.
        /// </summary>
        public List<int> Linodes
        {
            get => _linodes ?? (_linodes = new List<int>());
            set => _linodes = value;
        }

        [Input("nodebalancers", required: true)]
        private List<int>? _nodebalancers;

        /// <summary>
        /// The IDs of NodeBalancers assigned to this Firewall..
        /// </summary>
        public List<int> Nodebalancers
        {
            get => _nodebalancers ?? (_nodebalancers = new List<int>());
            set => _nodebalancers = value;
        }

        /// <summary>
        /// The default behavior for outbound traffic.
        /// </summary>
        [Input("outboundPolicy", required: true)]
        public string OutboundPolicy { get; set; } = null!;

        [Input("outbounds")]
        private List<Inputs.GetFirewallsFirewallOutboundArgs>? _outbounds;

        /// <summary>
        /// A set of firewall rules that specify what outbound network traffic is allowed.
        /// </summary>
        public List<Inputs.GetFirewallsFirewallOutboundArgs> Outbounds
        {
            get => _outbounds ?? (_outbounds = new List<Inputs.GetFirewallsFirewallOutboundArgs>());
            set => _outbounds = value;
        }

        /// <summary>
        /// The status of the firewall.
        /// </summary>
        [Input("status", required: true)]
        public string Status { get; set; } = null!;

        [Input("tags", required: true)]
        private List<string>? _tags;

        /// <summary>
        /// An array of tags applied to this object. Tags are case-insensitive and are for organizational purposes only.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        /// <summary>
        /// When this firewall was last updated.
        /// </summary>
        [Input("updated", required: true)]
        public string Updated { get; set; } = null!;

        public GetFirewallsFirewallArgs()
        {
        }
        public static new GetFirewallsFirewallArgs Empty => new GetFirewallsFirewallArgs();
    }
}
