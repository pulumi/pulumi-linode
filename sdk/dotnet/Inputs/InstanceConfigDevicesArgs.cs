// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class InstanceConfigDevicesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `disk_label` or `volume_id`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virt_mode`.
        /// </summary>
        [Input("sda")]
        public Input<Inputs.InstanceConfigDevicesSdaArgs>? Sda { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sdb")]
        public Input<Inputs.InstanceConfigDevicesSdbArgs>? Sdb { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sdc")]
        public Input<Inputs.InstanceConfigDevicesSdcArgs>? Sdc { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sdd")]
        public Input<Inputs.InstanceConfigDevicesSddArgs>? Sdd { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sde")]
        public Input<Inputs.InstanceConfigDevicesSdeArgs>? Sde { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sdf")]
        public Input<Inputs.InstanceConfigDevicesSdfArgs>? Sdf { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sdg")]
        public Input<Inputs.InstanceConfigDevicesSdgArgs>? Sdg { get; set; }

        /// <summary>
        /// Device can be either a Disk or Volume identified by disk_id or volume_id. Only one type per slot allowed.
        /// </summary>
        [Input("sdh")]
        public Input<Inputs.InstanceConfigDevicesSdhArgs>? Sdh { get; set; }

        public InstanceConfigDevicesArgs()
        {
        }
        public static new InstanceConfigDevicesArgs Empty => new InstanceConfigDevicesArgs();
    }
}
