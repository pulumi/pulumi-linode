// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode.Inputs
{

    public sealed class GetInstanceTypesTypeInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of VPUs this Linode Type offers.
        /// </summary>
        [Input("acceleratedDevices", required: true)]
        public Input<int> AcceleratedDevices { get; set; } = null!;

        [Input("addons", required: true)]
        private InputList<Inputs.GetInstanceTypesTypeAddonInputArgs>? _addons;

        /// <summary>
        /// Information about the optional Backup service offered for Linodes.
        /// </summary>
        public InputList<Inputs.GetInstanceTypesTypeAddonInputArgs> Addons
        {
            get => _addons ?? (_addons = new InputList<Inputs.GetInstanceTypesTypeAddonInputArgs>());
            set => _addons = value;
        }

        /// <summary>
        /// The class of the Linode Type. See all classes [here](https://techdocs.akamai.com/linode-api/reference/get-linode-types).
        /// </summary>
        [Input("class", required: true)]
        public Input<string> Class { get; set; } = null!;

        /// <summary>
        /// The Disk size, in MB, of the Linode Type.
        /// </summary>
        [Input("disk", required: true)]
        public Input<int> Disk { get; set; } = null!;

        /// <summary>
        /// The ID representing the Linode Type.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The Linode Type's label is for display purposes only.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// The amount of RAM included in this Linode Type.
        /// </summary>
        [Input("memory", required: true)]
        public Input<int> Memory { get; set; } = null!;

        /// <summary>
        /// The Mbits outbound bandwidth allocation.
        /// </summary>
        [Input("networkOut", required: true)]
        public Input<int> NetworkOut { get; set; } = null!;

        [Input("prices", required: true)]
        private InputList<Inputs.GetInstanceTypesTypePriceInputArgs>? _prices;

        /// <summary>
        /// Cost in US dollars, broken down into hourly and monthly charges.
        /// </summary>
        public InputList<Inputs.GetInstanceTypesTypePriceInputArgs> Prices
        {
            get => _prices ?? (_prices = new InputList<Inputs.GetInstanceTypesTypePriceInputArgs>());
            set => _prices = value;
        }

        [Input("regionPrices", required: true)]
        private InputList<Inputs.GetInstanceTypesTypeRegionPriceInputArgs>? _regionPrices;

        /// <summary>
        /// A list of region-specific prices for this plan.
        /// </summary>
        public InputList<Inputs.GetInstanceTypesTypeRegionPriceInputArgs> RegionPrices
        {
            get => _regionPrices ?? (_regionPrices = new InputList<Inputs.GetInstanceTypesTypeRegionPriceInputArgs>());
            set => _regionPrices = value;
        }

        /// <summary>
        /// The monthly outbound transfer amount, in MB.
        /// </summary>
        [Input("transfer", required: true)]
        public Input<int> Transfer { get; set; } = null!;

        /// <summary>
        /// The number of VCPU cores this Linode Type offers.
        /// </summary>
        [Input("vcpus", required: true)]
        public Input<int> Vcpus { get; set; } = null!;

        public GetInstanceTypesTypeInputArgs()
        {
        }
        public static new GetInstanceTypesTypeInputArgs Empty => new GetInstanceTypesTypeInputArgs();
    }
}
