// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetSshkeys
    {
        /// <summary>
        /// `linode.SshKey` provides access to a filtered list of SSH Keys in the Profile of the User identified by the access token.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-ssh-keys).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how the resource might be used to obtain the names of the SSH Keys configured on the Linode user profile.
        /// 
        /// The following example shows how one might use this data source to access information about a Linode Kernel.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filteredSsh = Linode.GetSshkeys.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetSshkeysFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "my-ssh",
        ///                 },
        ///             },
        ///             new Linode.Inputs.GetSshkeysFilterInputArgs
        ///             {
        ///                 Name = "ssh_key",
        ///                 Values = new[]
        ///                 {
        ///                     "RSA-6522525",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `ssh_key`
        /// </summary>
        public static Task<GetSshkeysResult> InvokeAsync(GetSshkeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSshkeysResult>("linode:index/getSshkeys:getSshkeys", args ?? new GetSshkeysArgs(), options.WithDefaults());

        /// <summary>
        /// `linode.SshKey` provides access to a filtered list of SSH Keys in the Profile of the User identified by the access token.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-ssh-keys).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how the resource might be used to obtain the names of the SSH Keys configured on the Linode user profile.
        /// 
        /// The following example shows how one might use this data source to access information about a Linode Kernel.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filteredSsh = Linode.GetSshkeys.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetSshkeysFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "my-ssh",
        ///                 },
        ///             },
        ///             new Linode.Inputs.GetSshkeysFilterInputArgs
        ///             {
        ///                 Name = "ssh_key",
        ///                 Values = new[]
        ///                 {
        ///                     "RSA-6522525",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `ssh_key`
        /// </summary>
        public static Output<GetSshkeysResult> Invoke(GetSshkeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSshkeysResult>("linode:index/getSshkeys:getSshkeys", args ?? new GetSshkeysInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// `linode.SshKey` provides access to a filtered list of SSH Keys in the Profile of the User identified by the access token.
        /// For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-ssh-keys).
        /// 
        /// ## Example Usage
        /// 
        /// The following example shows how the resource might be used to obtain the names of the SSH Keys configured on the Linode user profile.
        /// 
        /// The following example shows how one might use this data source to access information about a Linode Kernel.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filteredSsh = Linode.GetSshkeys.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Linode.Inputs.GetSshkeysFilterInputArgs
        ///             {
        ///                 Name = "label",
        ///                 Values = new[]
        ///                 {
        ///                     "my-ssh",
        ///                 },
        ///             },
        ///             new Linode.Inputs.GetSshkeysFilterInputArgs
        ///             {
        ///                 Name = "ssh_key",
        ///                 Values = new[]
        ///                 {
        ///                     "RSA-6522525",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Filterable Fields
        /// 
        /// * `id`
        /// 
        /// * `label`
        /// 
        /// * `ssh_key`
        /// </summary>
        public static Output<GetSshkeysResult> Invoke(GetSshkeysInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSshkeysResult>("linode:index/getSshkeys:getSshkeys", args ?? new GetSshkeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSshkeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSshkeysFilterArgs>? _filters;
        public List<Inputs.GetSshkeysFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSshkeysFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public string? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("sshkeys")]
        private List<Inputs.GetSshkeysSshkeyArgs>? _sshkeys;
        public List<Inputs.GetSshkeysSshkeyArgs> Sshkeys
        {
            get => _sshkeys ?? (_sshkeys = new List<Inputs.GetSshkeysSshkeyArgs>());
            set => _sshkeys = value;
        }

        public GetSshkeysArgs()
        {
        }
        public static new GetSshkeysArgs Empty => new GetSshkeysArgs();
    }

    public sealed class GetSshkeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSshkeysFilterInputArgs>? _filters;
        public InputList<Inputs.GetSshkeysFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSshkeysFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The order in which results should be returned. (`asc`, `desc`; default `asc`)
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("sshkeys")]
        private InputList<Inputs.GetSshkeysSshkeyInputArgs>? _sshkeys;
        public InputList<Inputs.GetSshkeysSshkeyInputArgs> Sshkeys
        {
            get => _sshkeys ?? (_sshkeys = new InputList<Inputs.GetSshkeysSshkeyInputArgs>());
            set => _sshkeys = value;
        }

        public GetSshkeysInvokeArgs()
        {
        }
        public static new GetSshkeysInvokeArgs Empty => new GetSshkeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetSshkeysResult
    {
        public readonly ImmutableArray<Outputs.GetSshkeysFilterResult> Filters;
        /// <summary>
        /// The ID of the SSH Key.
        /// </summary>
        public readonly string Id;
        public readonly string? Order;
        public readonly string? OrderBy;
        public readonly ImmutableArray<Outputs.GetSshkeysSshkeyResult> Sshkeys;

        [OutputConstructor]
        private GetSshkeysResult(
            ImmutableArray<Outputs.GetSshkeysFilterResult> filters,

            string id,

            string? order,

            string? orderBy,

            ImmutableArray<Outputs.GetSshkeysSshkeyResult> sshkeys)
        {
            Filters = filters;
            Id = id;
            Order = order;
            OrderBy = orderBy;
            Sshkeys = sshkeys;
        }
    }
}
