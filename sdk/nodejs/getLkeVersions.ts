// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides details about the Kubernetes versions available for deployment to a Kubernetes cluster.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-lke-versions).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const example = linode.getLkeVersions({});
 * export const exampleOutput = example;
 * export const exampleOutputFirstVersion = example.then(example => example.versions?.[0]);
 * ```
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version
 * with additional information about the Linode LKE Version's tier (`enterprise` or `standard`).
 *
 * > **_NOTE:_**  This functionality may not be currently available to all users and can only be used with v4beta.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const exampleEnterprise = linode.getLkeVersions({
 *     tier: "enterprise",
 * });
 * export const exampleEnterpriseOutput = exampleEnterprise;
 * export const exampleEnterpriseOutputFirstVersion = exampleEnterprise.then(exampleEnterprise => exampleEnterprise.versions?.[0]);
 * ```
 */
export function getLkeVersions(args?: GetLkeVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetLkeVersionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getLkeVersions:getLkeVersions", {
        "tier": args.tier,
        "versions": args.versions,
    }, opts);
}

/**
 * A collection of arguments for invoking getLkeVersions.
 */
export interface GetLkeVersionsArgs {
    /**
     * The tier (`standard` or `enterprise`) of Linode LKE Versions to fetch.
     */
    tier?: string;
    versions?: inputs.GetLkeVersionsVersion[];
}

/**
 * A collection of values returned by getLkeVersions.
 */
export interface GetLkeVersionsResult {
    /**
     * The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
     */
    readonly id: string;
    /**
     * The Kubernetes version tier. Only exported if `tier` was provided when using the datasource.
     */
    readonly tier?: string;
    readonly versions?: outputs.GetLkeVersionsVersion[];
}
/**
 * Provides details about the Kubernetes versions available for deployment to a Kubernetes cluster.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-lke-versions).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const example = linode.getLkeVersions({});
 * export const exampleOutput = example;
 * export const exampleOutputFirstVersion = example.then(example => example.versions?.[0]);
 * ```
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version
 * with additional information about the Linode LKE Version's tier (`enterprise` or `standard`).
 *
 * > **_NOTE:_**  This functionality may not be currently available to all users and can only be used with v4beta.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const exampleEnterprise = linode.getLkeVersions({
 *     tier: "enterprise",
 * });
 * export const exampleEnterpriseOutput = exampleEnterprise;
 * export const exampleEnterpriseOutputFirstVersion = exampleEnterprise.then(exampleEnterprise => exampleEnterprise.versions?.[0]);
 * ```
 */
export function getLkeVersionsOutput(args?: GetLkeVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLkeVersionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getLkeVersions:getLkeVersions", {
        "tier": args.tier,
        "versions": args.versions,
    }, opts);
}

/**
 * A collection of arguments for invoking getLkeVersions.
 */
export interface GetLkeVersionsOutputArgs {
    /**
     * The tier (`standard` or `enterprise`) of Linode LKE Versions to fetch.
     */
    tier?: pulumi.Input<string>;
    versions?: pulumi.Input<pulumi.Input<inputs.GetLkeVersionsVersionArgs>[]>;
}
