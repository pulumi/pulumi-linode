// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides information about a Linode image
 * 
 * ## Example Usage
 * 
 * The following example shows how one might use this data source to access information about a Linode image.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 * 
 * const k8Master = linode.getImage({
 *     id: "linode/debian8",
 * });
 * ```
 * 
 * ## Attributes
 * 
 * The Linode Image resource exports the following attributes:
 * 
 * * `label` - A short description of the Image.
 * 
 * * `created` - When this Image was created.
 * 
 * * `createdBy` - The name of the User who created this Image, or "linode" for official Images.
 * 
 * * `deprecated` - Whether or not this Image is deprecated. Will only be true for deprecated public Images.
 * 
 * * `description` - A detailed description of this Image.
 * 
 * * `isPublic` - True if the Image is public.
 * 
 * * `size` - The minimum size this Image needs to deploy. Size is in MB. example: 2500
 * 
 * * `type` - How the Image was created. Manual Images can be created at any time. image"Automatic" Images are created automatically from a deleted Linode.
 * 
 * * `vendor` - The upstream distribution vendor. `None` for private Images. 
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-linode/blob/master/website/docs/d/image.html.markdown.
 */
export function getImage(args: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> & GetImageResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetImageResult> = pulumi.runtime.invoke("linode:index/getImage:getImage", {
        "id": args.id,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    /**
     * The unique ID of this Image.  The ID of private images begin with `private/` followed by the numeric identifier of the private image, for example `private/12345`.
     */
    readonly id: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly created: string;
    readonly createdBy: string;
    readonly deprecated: boolean;
    readonly description: string;
    readonly expiry: string;
    readonly id: string;
    readonly isPublic: boolean;
    readonly label: string;
    readonly size: number;
    readonly type: string;
    readonly vendor: string;
}
