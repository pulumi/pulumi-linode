// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * > **NOTICE:** The Firewall feature is currently available through early access.
 *
 * Manages a Linode Firewall.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const myInstance = new linode.Instance("myInstance", {
 *     label: "my_instance",
 *     image: "linode/ubuntu18.04",
 *     region: "us-east",
 *     type: "g6-standard-1",
 *     rootPass: `bogusPassword$`,
 *     swapSize: 256,
 * });
 * const myFirewall = new linode.Firewall("myFirewall", {
 *     label: "my_firewall",
 *     tags: ["test"],
 *     inbounds: [{
 *         protocol: "TCP",
 *         ports: ["80"],
 *         addresses: ["0.0.0.0/0"],
 *     }],
 *     outbounds: [{
 *         protocol: "TCP",
 *         ports: ["80"],
 *         addresses: ["0.0.0.0/0"],
 *     }],
 *     linodes: [myInstance.id],
 * });
 * ```
 *
 * ## Import
 *
 * Firewalls can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import linode:index/firewall:Firewall my_firewall 12345
 * ```
 */
export class Firewall extends pulumi.CustomResource {
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallState, opts?: pulumi.CustomResourceOptions): Firewall {
        return new Firewall(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'linode:index/firewall:Firewall';

    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Firewall {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firewall.__pulumiType;
    }

    /**
     * The devices associated with this firewall.
     */
    public /*out*/ readonly devices!: pulumi.Output<outputs.FirewallDevice[]>;
    /**
     * If `true`, the Firewall's rules are not enforced (defaults to `false`).
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     */
    public readonly inbounds!: pulumi.Output<outputs.FirewallInbound[] | undefined>;
    /**
     * This Firewall's unique label.
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * A list of IDs of Linodes this Firewall should govern it's network traffic for.
     */
    public readonly linodes!: pulumi.Output<number[]>;
    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     */
    public readonly outbounds!: pulumi.Output<outputs.FirewallOutbound[] | undefined>;
    /**
     * The status of the Firewall.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A list of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Firewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallArgs | FirewallState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as FirewallState | undefined;
            inputs["devices"] = state ? state.devices : undefined;
            inputs["disabled"] = state ? state.disabled : undefined;
            inputs["inbounds"] = state ? state.inbounds : undefined;
            inputs["label"] = state ? state.label : undefined;
            inputs["linodes"] = state ? state.linodes : undefined;
            inputs["outbounds"] = state ? state.outbounds : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as FirewallArgs | undefined;
            if (!args || args.linodes === undefined) {
                throw new Error("Missing required property 'linodes'");
            }
            inputs["disabled"] = args ? args.disabled : undefined;
            inputs["inbounds"] = args ? args.inbounds : undefined;
            inputs["label"] = args ? args.label : undefined;
            inputs["linodes"] = args ? args.linodes : undefined;
            inputs["outbounds"] = args ? args.outbounds : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["devices"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Firewall.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Firewall resources.
 */
export interface FirewallState {
    /**
     * The devices associated with this firewall.
     */
    readonly devices?: pulumi.Input<pulumi.Input<inputs.FirewallDevice>[]>;
    /**
     * If `true`, the Firewall's rules are not enforced (defaults to `false`).
     */
    readonly disabled?: pulumi.Input<boolean>;
    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     */
    readonly inbounds?: pulumi.Input<pulumi.Input<inputs.FirewallInbound>[]>;
    /**
     * This Firewall's unique label.
     */
    readonly label?: pulumi.Input<string>;
    /**
     * A list of IDs of Linodes this Firewall should govern it's network traffic for.
     */
    readonly linodes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     */
    readonly outbounds?: pulumi.Input<pulumi.Input<inputs.FirewallOutbound>[]>;
    /**
     * The status of the Firewall.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * A list of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Firewall resource.
 */
export interface FirewallArgs {
    /**
     * If `true`, the Firewall's rules are not enforced (defaults to `false`).
     */
    readonly disabled?: pulumi.Input<boolean>;
    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     */
    readonly inbounds?: pulumi.Input<pulumi.Input<inputs.FirewallInbound>[]>;
    /**
     * This Firewall's unique label.
     */
    readonly label?: pulumi.Input<string>;
    /**
     * A list of IDs of Linodes this Firewall should govern it's network traffic for.
     */
    readonly linodes: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     */
    readonly outbounds?: pulumi.Input<pulumi.Input<inputs.FirewallOutbound>[]>;
    /**
     * A list of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}
