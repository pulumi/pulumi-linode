// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the linode package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'linode';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The path to a Linode API CA file to trust.
     */
    declare public readonly apiCaPath: pulumi.Output<string | undefined>;
    /**
     * The version of Linode API.
     */
    declare public readonly apiVersion: pulumi.Output<string | undefined>;
    /**
     * The path to the Linode config file to use. (default `~/.config/linode`)
     */
    declare public readonly configPath: pulumi.Output<string | undefined>;
    /**
     * The Linode config profile to use. (default `default`)
     */
    declare public readonly configProfile: pulumi.Output<string | undefined>;
    /**
     * The access key to be used in linode.ObjectStorageBucket and linode_object_storage_object.
     */
    declare public readonly objAccessKey: pulumi.Output<string | undefined>;
    /**
     * The secret key to be used in linode.ObjectStorageBucket and linode_object_storage_object.
     */
    declare public readonly objSecretKey: pulumi.Output<string | undefined>;
    /**
     * The token that allows you access to your Linode account
     */
    declare public readonly token: pulumi.Output<string | undefined>;
    /**
     * An HTTP User-Agent Prefix to prepend in API requests.
     */
    declare public readonly uaPrefix: pulumi.Output<string | undefined>;
    /**
     * The HTTP(S) API address of the Linode API to use.
     */
    declare public readonly url: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["apiCaPath"] = args?.apiCaPath;
            resourceInputs["apiVersion"] = (args?.apiVersion) ?? utilities.getEnv("LINODE_API_VERSION");
            resourceInputs["configPath"] = args?.configPath;
            resourceInputs["configProfile"] = args?.configProfile;
            resourceInputs["disableInternalCache"] = pulumi.output(args?.disableInternalCache).apply(JSON.stringify);
            resourceInputs["eventPollMs"] = pulumi.output(args?.eventPollMs).apply(JSON.stringify);
            resourceInputs["lkeEventPollMs"] = pulumi.output(args?.lkeEventPollMs).apply(JSON.stringify);
            resourceInputs["lkeNodeReadyPollMs"] = pulumi.output(args?.lkeNodeReadyPollMs).apply(JSON.stringify);
            resourceInputs["maxRetryDelayMs"] = pulumi.output(args?.maxRetryDelayMs).apply(JSON.stringify);
            resourceInputs["minRetryDelayMs"] = pulumi.output(args?.minRetryDelayMs).apply(JSON.stringify);
            resourceInputs["objAccessKey"] = args?.objAccessKey;
            resourceInputs["objBucketForceDelete"] = pulumi.output(args?.objBucketForceDelete).apply(JSON.stringify);
            resourceInputs["objSecretKey"] = args?.objSecretKey ? pulumi.secret(args.objSecretKey) : undefined;
            resourceInputs["objUseTempKeys"] = pulumi.output(args?.objUseTempKeys).apply(JSON.stringify);
            resourceInputs["skipImplicitReboots"] = pulumi.output(args?.skipImplicitReboots).apply(JSON.stringify);
            resourceInputs["skipInstanceDeletePoll"] = pulumi.output(args?.skipInstanceDeletePoll).apply(JSON.stringify);
            resourceInputs["skipInstanceReadyPoll"] = pulumi.output(args?.skipInstanceReadyPoll).apply(JSON.stringify);
            resourceInputs["token"] = args?.token;
            resourceInputs["uaPrefix"] = (args?.uaPrefix) ?? utilities.getEnv("LINODE_UA_PREFIX");
            resourceInputs["url"] = (args?.url) ?? utilities.getEnv("LINODE_URL");
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["objSecretKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:linode/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * The path to a Linode API CA file to trust.
     */
    apiCaPath?: pulumi.Input<string>;
    /**
     * The version of Linode API.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * The path to the Linode config file to use. (default `~/.config/linode`)
     */
    configPath?: pulumi.Input<string>;
    /**
     * The Linode config profile to use. (default `default`)
     */
    configProfile?: pulumi.Input<string>;
    /**
     * Disable the internal caching system that backs certain Linode API requests.
     */
    disableInternalCache?: pulumi.Input<boolean>;
    /**
     * The rate in milliseconds to poll for events.
     */
    eventPollMs?: pulumi.Input<number>;
    /**
     * The rate in milliseconds to poll for LKE events.
     */
    lkeEventPollMs?: pulumi.Input<number>;
    /**
     * The rate in milliseconds to poll for an LKE node to be ready.
     */
    lkeNodeReadyPollMs?: pulumi.Input<number>;
    /**
     * Maximum delay in milliseconds before retrying a request.
     */
    maxRetryDelayMs?: pulumi.Input<number>;
    /**
     * Minimum delay in milliseconds before retrying a request.
     */
    minRetryDelayMs?: pulumi.Input<number>;
    /**
     * The access key to be used in linode.ObjectStorageBucket and linode_object_storage_object.
     */
    objAccessKey?: pulumi.Input<string>;
    /**
     * If true, when deleting a linode.ObjectStorageBucket any objects and versions will be force deleted.
     */
    objBucketForceDelete?: pulumi.Input<boolean>;
    /**
     * The secret key to be used in linode.ObjectStorageBucket and linode_object_storage_object.
     */
    objSecretKey?: pulumi.Input<string>;
    /**
     * If true, temporary object keys will be created implicitly at apply-time for the linode.ObjectStorageObject and linodeObjectSorageBucket resource.
     */
    objUseTempKeys?: pulumi.Input<boolean>;
    /**
     * If true, Linode Instances will not be rebooted on config and interface changes.
     */
    skipImplicitReboots?: pulumi.Input<boolean>;
    /**
     * Skip waiting for a linode.Instance resource to finish deleting.
     */
    skipInstanceDeletePoll?: pulumi.Input<boolean>;
    /**
     * Skip waiting for a linode.Instance resource to be running.
     */
    skipInstanceReadyPoll?: pulumi.Input<boolean>;
    /**
     * The token that allows you access to your Linode account
     */
    token?: pulumi.Input<string>;
    /**
     * An HTTP User-Agent Prefix to prepend in API requests.
     */
    uaPrefix?: pulumi.Input<string>;
    /**
     * The HTTP(S) API address of the Linode API to use.
     */
    url?: pulumi.Input<string>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
