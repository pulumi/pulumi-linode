// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DatabaseMongodbUpdates {
    dayOfWeek: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    frequency: pulumi.Input<string>;
    hourOfDay: pulumi.Input<number>;
    weekOfMonth?: pulumi.Input<number>;
}

export interface DatabaseMysqlUpdates {
    dayOfWeek: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    frequency: pulumi.Input<string>;
    hourOfDay: pulumi.Input<number>;
    weekOfMonth?: pulumi.Input<number>;
}

export interface DatabasePostgresqlUpdates {
    dayOfWeek: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    frequency: pulumi.Input<string>;
    hourOfDay: pulumi.Input<number>;
    weekOfMonth?: pulumi.Input<number>;
}

export interface FirewallDevice {
    /**
     * The ID of the underlying entity this device references (i.e. the Linode's ID).
     */
    entityId?: pulumi.Input<number>;
    /**
     * The ID of the Firewall Device.
     */
    id?: pulumi.Input<number>;
    /**
     * This Firewall's unique label.
     */
    label?: pulumi.Input<string>;
    /**
     * The type of Firewall Device.
     */
    type?: pulumi.Input<string>;
    /**
     * The URL of the underlying entity this device references.
     */
    url?: pulumi.Input<string>;
}

export interface FirewallInbound {
    /**
     * Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
     */
    action: pulumi.Input<string>;
    /**
     * A list of IPv4 addresses or networks. Must be in IP/mask format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of IPv6 addresses or networks. Must be in IP/mask format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to identify this rule. For display purposes only.
     */
    label: pulumi.Input<string>;
    /**
     * A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
     */
    ports?: pulumi.Input<string>;
    /**
     * The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
     */
    protocol: pulumi.Input<string>;
}

export interface FirewallOutbound {
    /**
     * Controls whether traffic is accepted or dropped by this rule (`ACCEPT`, `DROP`). Overrides the Firewall’s inboundPolicy if this is an inbound rule, or the outboundPolicy if this is an outbound rule.
     */
    action: pulumi.Input<string>;
    /**
     * A list of IPv4 addresses or networks. Must be in IP/mask format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of IPv6 addresses or networks. Must be in IP/mask format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This Firewall's unique label.
     */
    label: pulumi.Input<string>;
    /**
     * A string representation of ports and/or port ranges (i.e. "443" or "80-90, 91").
     */
    ports?: pulumi.Input<string>;
    /**
     * The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
     */
    protocol: pulumi.Input<string>;
}

export interface GetAccountLoginsFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetAccountLoginsFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseBackupsFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetDatabaseBackupsFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseEnginesFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetDatabaseEnginesFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseMysqlBackupsFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetDatabaseMysqlBackupsFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabasesFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetDatabasesFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImagesFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetImagesFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInstanceTypesFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetInstanceTypesFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInstancesFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetInstancesFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRegionsFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetRegionsFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackScriptUserDefinedField {
    /**
     * The default value. If not specified, this value will be used.
     */
    default?: string;
    /**
     * An example value for the field.
     */
    example?: string;
    /**
     * A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
     */
    label?: string;
    /**
     * A list of acceptable values for the field in any quantity, combination or order.
     */
    manyOf?: string;
    /**
     * The name of the field.
     */
    name?: string;
    /**
     * A list of acceptable single values for the field.
     */
    oneOf?: string;
}

export interface GetStackScriptUserDefinedFieldArgs {
    /**
     * The default value. If not specified, this value will be used.
     */
    default?: pulumi.Input<string>;
    /**
     * An example value for the field.
     */
    example?: pulumi.Input<string>;
    /**
     * A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
     */
    label?: pulumi.Input<string>;
    /**
     * A list of acceptable values for the field in any quantity, combination or order.
     */
    manyOf?: pulumi.Input<string>;
    /**
     * The name of the field.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of acceptable single values for the field.
     */
    oneOf?: pulumi.Input<string>;
}

export interface GetStackScriptsFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetStackScriptsFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUserDomainGrant {
    id: number;
    permissions: string;
}

export interface GetUserDomainGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserFirewallGrant {
    id: number;
    permissions: string;
}

export interface GetUserFirewallGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserImageGrant {
    id: number;
    permissions: string;
}

export interface GetUserImageGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserLinodeGrant {
    id: number;
    permissions: string;
}

export interface GetUserLinodeGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserLongviewGrant {
    id: number;
    permissions: string;
}

export interface GetUserLongviewGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserNodebalancerGrant {
    id: number;
    permissions: string;
}

export interface GetUserNodebalancerGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserStackscriptGrant {
    id: number;
    permissions: string;
}

export interface GetUserStackscriptGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetUserVolumeGrant {
    id: number;
    permissions: string;
}

export interface GetUserVolumeGrantArgs {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface GetVlansFilter {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: string;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: string;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: string[];
}

export interface GetVlansFilterArgs {
    /**
     * The method to match the field by. (`exact`, `regex`, `substring`; default `exact`)
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The name of the field to filter by. See the Filterable Fields section for a complete list of filterable fields.
     */
    name: pulumi.Input<string>;
    /**
     * A list of values for the filter to allow. These values should all be in string form.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstanceAlerts {
    cpu?: pulumi.Input<number>;
    io?: pulumi.Input<number>;
    networkIn?: pulumi.Input<number>;
    networkOut?: pulumi.Input<number>;
    transferQuota?: pulumi.Input<number>;
}

export interface InstanceBackups {
    available?: pulumi.Input<boolean>;
    /**
     * If this Linode has the Backup service enabled.
     */
    enabled?: pulumi.Input<boolean>;
    schedule?: pulumi.Input<inputs.InstanceBackupsSchedule>;
}

export interface InstanceBackupsSchedule {
    /**
     * The day of the week that your Linode's weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as "Scheduling" until the day is automatically selected.
     */
    day?: pulumi.Input<string>;
    /**
     * The window ('W0'-'W22') in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, 'W10' indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
     */
    window?: pulumi.Input<string>;
}

export interface InstanceConfig {
    /**
     * Arbitrary user comments about this `config`.
     */
    comments?: pulumi.Input<string>;
    /**
     * A list of `disk` or `volume` attachments for this `config`.  If the `bootConfigLabel` omits a `devices` block, the Linode will not be booted.
     */
    devices?: pulumi.Input<inputs.InstanceConfigDevices>;
    /**
     * Helpers enabled when booting to this Linode Config.
     */
    helpers?: pulumi.Input<inputs.InstanceConfigHelpers>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.InstanceConfigInterface>[]>;
    /**
     * A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels). Note that this is a paginated API endpoint ([docs](https://developers.linode.com/api/v4/linode-kernels)).
     */
    kernel?: pulumi.Input<string>;
    /**
     * The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
     */
    label: pulumi.Input<string>;
    /**
     * Defaults to the total RAM of the Linode
     */
    memoryLimit?: pulumi.Input<number>;
    /**
     * The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `"/dev/sda"`
     */
    rootDevice?: pulumi.Input<string>;
    /**
     * Defines the state of your Linode after booting. Defaults to `"default"`.
     */
    runLevel?: pulumi.Input<string>;
    /**
     * Controls the virtualization mode. Defaults to `"paravirt"`.
     */
    virtMode?: pulumi.Input<string>;
}

export interface InstanceConfigDevices {
    /**
     * ... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `diskLabel` or `volumeId`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `"fullvirt"` `virtMode`.
     */
    sda?: pulumi.Input<inputs.InstanceConfigDevicesSda>;
    sdb?: pulumi.Input<inputs.InstanceConfigDevicesSdb>;
    sdc?: pulumi.Input<inputs.InstanceConfigDevicesSdc>;
    sdd?: pulumi.Input<inputs.InstanceConfigDevicesSdd>;
    sde?: pulumi.Input<inputs.InstanceConfigDevicesSde>;
    sdf?: pulumi.Input<inputs.InstanceConfigDevicesSdf>;
    sdg?: pulumi.Input<inputs.InstanceConfigDevicesSdg>;
    sdh?: pulumi.Input<inputs.InstanceConfigDevicesSdh>;
}

export interface InstanceConfigDevicesSda {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSdb {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSdc {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSdd {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSde {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSdf {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSdg {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigDevicesSdh {
    /**
     * The Disk ID of the associated `diskLabel`, if used.
     */
    diskId?: pulumi.Input<number>;
    /**
     * The `label` of the `disk` to map to this `device` slot.
     */
    diskLabel?: pulumi.Input<string>;
    /**
     * The Volume ID to map to this `device` slot.
     */
    volumeId?: pulumi.Input<number>;
}

export interface InstanceConfigHelpers {
    devtmpfsAutomount?: pulumi.Input<boolean>;
    /**
     * Controls the behavior of the Linode Config's Distribution Helper setting.
     */
    distro?: pulumi.Input<boolean>;
    /**
     * Creates a modules dependency file for the Kernel you run.
     */
    modulesDep?: pulumi.Input<boolean>;
    /**
     * Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.
     */
    network?: pulumi.Input<boolean>;
    /**
     * Disables updatedb cron job to avoid disk thrashing.
     */
    updatedbDisabled?: pulumi.Input<boolean>;
}

export interface InstanceConfigInterface {
    /**
     * This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
     */
    ipamAddress?: pulumi.Input<string>;
    /**
     * The name of this interface. If the interface is a VLAN, a label is required.
     */
    label?: pulumi.Input<string>;
    /**
     * The type of interface. (`public`, `vlan`)
     */
    purpose?: pulumi.Input<string>;
}

export interface InstanceDisk {
    /**
     * A list of SSH public keys to deploy for the root user on the newly created Linode. *This value can not be imported.* *Changing `authorizedKeys` forces the creation of a new Linode Instance.*
     */
    authorizedKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorizedUsers` forces the creation of a new Linode Instance.*
     */
    authorizedUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Disk filesystem can be one of: `"raw"`, `"swap"`, `"ext3"`, `"ext4"`, or `"initrd"` which has a max size of 32mb and can be used in the config `initrd` (not currently supported in this provider).
     */
    filesystem?: pulumi.Input<string>;
    /**
     * The ID of the disk in the Linode API.
     */
    id?: pulumi.Input<number>;
    /**
     * An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with `private/`. See [images](https://api.linode.com/v4/images) for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/images) (Requires a personal access token; docs [here](https://developers.linode.com/api/v4/images)). *This value can not be imported.* *Changing `image` forces the creation of a new Linode Instance.*
     */
    image?: pulumi.Input<string>;
    /**
     * The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
     */
    label: pulumi.Input<string>;
    /**
     * If true, this Disk is read-only.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * The initial password for the `root` user account. *This value can not be imported.* *Changing `rootPass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in the state.*
     */
    rootPass?: pulumi.Input<string>;
    /**
     * The size of the Disk in MB.
     */
    size: pulumi.Input<number>;
    /**
     * An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscriptData` forces the creation of a new Linode Instance.*
     */
    stackscriptData?: pulumi.Input<{[key: string]: any}>;
    /**
     * The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscriptId` forces the creation of a new Linode Instance.*
     */
    stackscriptId?: pulumi.Input<number>;
}

export interface InstanceInterface {
    /**
     * This Network Interface’s private IP address in Classless Inter-Domain Routing (CIDR) notation.
     */
    ipamAddress?: pulumi.Input<string>;
    /**
     * The name of this interface. If the interface is a VLAN, a label is required.
     */
    label?: pulumi.Input<string>;
    /**
     * The type of interface. (`public`, `vlan`)
     */
    purpose?: pulumi.Input<string>;
}

export interface InstanceSpecs {
    disk?: pulumi.Input<number>;
    memory?: pulumi.Input<number>;
    transfer?: pulumi.Input<number>;
    vcpus?: pulumi.Input<number>;
}

export interface LkeClusterControlPlane {
    /**
     * Defines whether High Availability is enabled for the cluster Control Plane. This is an **irreversible** change.
     */
    highAvailability?: pulumi.Input<boolean>;
}

export interface LkeClusterPool {
    autoscaler?: pulumi.Input<inputs.LkeClusterPoolAutoscaler>;
    /**
     * The number of nodes in the Node Pool.
     */
    count: pulumi.Input<number>;
    /**
     * The ID of the node.
     */
    id?: pulumi.Input<number>;
    nodes?: pulumi.Input<pulumi.Input<inputs.LkeClusterPoolNode>[]>;
    /**
     * A Linode Type for all of the nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
     */
    type: pulumi.Input<string>;
}

export interface LkeClusterPoolAutoscaler {
    /**
     * The maximum number of nodes to autoscale to.
     */
    max: pulumi.Input<number>;
    /**
     * The minimum number of nodes to autoscale to.
     */
    min: pulumi.Input<number>;
}

export interface LkeClusterPoolNode {
    /**
     * The ID of the node.
     */
    id?: pulumi.Input<string>;
    /**
     * The ID of the underlying Linode instance.
     */
    instanceId?: pulumi.Input<number>;
    /**
     * The status of the node. (`ready`, `notReady`)
     */
    status?: pulumi.Input<string>;
}

export interface NodeBalancerConfigNodeStatus {
    /**
     * The number of backends considered to be 'DOWN' and unhealthy. These are not in rotation, and not serving requests.
     */
    down?: pulumi.Input<number>;
    /**
     * The number of backends considered to be 'UP' and healthy, and that are serving requests.
     */
    up?: pulumi.Input<number>;
}

export interface NodeBalancerTransfer {
    /**
     * The total transfer, in MB, used by this NodeBalancer for the current month
     */
    in?: pulumi.Input<number>;
    /**
     * The total inbound transfer, in MB, used for this NodeBalancer for the current month
     */
    out?: pulumi.Input<number>;
    /**
     * The total outbound transfer, in MB, used for this NodeBalancer for the current month
     */
    total?: pulumi.Input<number>;
}

export interface ObjectStorageBucketCert {
    /**
     * The Base64 encoded and PEM formatted SSL certificate.
     */
    certificate: pulumi.Input<string>;
    /**
     * The private key associated with the TLS/SSL certificate.
     */
    privateKey: pulumi.Input<string>;
}

export interface ObjectStorageBucketLifecycleRule {
    /**
     * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
     */
    abortIncompleteMultipartUploadDays?: pulumi.Input<number>;
    /**
     * Specifies whether the lifecycle rule is active.
     */
    enabled: pulumi.Input<boolean>;
    expiration?: pulumi.Input<inputs.ObjectStorageBucketLifecycleRuleExpiration>;
    /**
     * The unique identifier for the rule.
     */
    id?: pulumi.Input<string>;
    noncurrentVersionExpiration?: pulumi.Input<inputs.ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration>;
    /**
     * The object key prefix identifying one or more objects to which the rule applies.
     */
    prefix?: pulumi.Input<string>;
}

export interface ObjectStorageBucketLifecycleRuleExpiration {
    /**
     * Specifies the date after which you want the corresponding action to take effect.
     */
    date?: pulumi.Input<string>;
    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     */
    days?: pulumi.Input<number>;
    /**
     * On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
     */
    expiredObjectDeleteMarker?: pulumi.Input<boolean>;
}

export interface ObjectStorageBucketLifecycleRuleNoncurrentVersionExpiration {
    /**
     * Specifies the number of days non-current object versions expire.
     */
    days: pulumi.Input<number>;
}

export interface ObjectStorageKeyBucketAccess {
    /**
     * The unique label of the bucket to which the key will grant limited access.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The Object Storage cluster where a bucket to which the key is granting access is hosted.
     */
    cluster: pulumi.Input<string>;
    /**
     * This Limited Access Key’s permissions for the selected bucket. *Changing `permissions` forces the creation of a new Object Storage Key.* (`readWrite`, `readOnly`)
     */
    permissions: pulumi.Input<string>;
}

export interface StackScriptUserDefinedField {
    /**
     * The default value. If not specified, this value will be used.
     */
    default?: pulumi.Input<string>;
    /**
     * An example value for the field.
     */
    example?: pulumi.Input<string>;
    /**
     * The StackScript's label is for display purposes only.
     */
    label?: pulumi.Input<string>;
    /**
     * A list of acceptable values for the field in any quantity, combination or order.
     */
    manyOf?: pulumi.Input<string>;
    /**
     * The name of the field.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of acceptable single values for the field.
     */
    oneOf?: pulumi.Input<string>;
}

export interface UserDomainGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserFirewallGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserGlobalGrants {
    accountAccess?: pulumi.Input<string>;
    addDatabases?: pulumi.Input<boolean>;
    addDomains?: pulumi.Input<boolean>;
    addFirewalls?: pulumi.Input<boolean>;
    addImages?: pulumi.Input<boolean>;
    addLinodes?: pulumi.Input<boolean>;
    addLongview?: pulumi.Input<boolean>;
    addNodebalancers?: pulumi.Input<boolean>;
    addStackscripts?: pulumi.Input<boolean>;
    addVolumes?: pulumi.Input<boolean>;
    cancelAccount?: pulumi.Input<boolean>;
    longviewSubscription?: pulumi.Input<boolean>;
}

export interface UserImageGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserLinodeGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserLongviewGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserNodebalancerGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserStackscriptGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}

export interface UserVolumeGrant {
    id: pulumi.Input<number>;
    permissions: pulumi.Input<string>;
}
