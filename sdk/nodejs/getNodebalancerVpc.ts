// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * > **Limited Availability** VPC-attached NodeBalancers may not currently be available to all users and may require the `apiVersion` provider argument must be set to `v4beta`.
 *
 * Provides information about a NodeBalancer VPC configuration.
 * For more information, see the corresponding [Linode APIv4 documentation](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
 *
 * ## Example Usage
 *
 * Retrieve information about a NodeBalancer VPC configuration:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_config = linode.getNodebalancerVpc({
 *     nodebalancerId: 123,
 *     id: 456,
 * });
 * ```
 */
export function getNodebalancerVpc(args: GetNodebalancerVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetNodebalancerVpcResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancerVpc:getNodebalancerVpc", {
        "id": args.id,
        "nodebalancerId": args.nodebalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodebalancerVpc.
 */
export interface GetNodebalancerVpcArgs {
    /**
     * The ID of the VPC configuration.
     */
    id: number;
    /**
     * The ID of the parent NodeBalancer of the VPC configuration.
     */
    nodebalancerId: number;
}

/**
 * A collection of values returned by getNodebalancerVpc.
 */
export interface GetNodebalancerVpcResult {
    readonly id: number;
    /**
     * A CIDR range for the VPC's IPv4 addresses. The NodeBalancer sources IP addresses from this range when routing traffic to the backend VPC nodes.
     */
    readonly ipv4Range: string;
    readonly nodebalancerId: number;
    /**
     * The ID of this configuration's VPC subnet.
     */
    readonly subnetId: number;
    /**
     * The ID of this configuration's VPC.
     */
    readonly vpcId: number;
}
/**
 * > **Limited Availability** VPC-attached NodeBalancers may not currently be available to all users and may require the `apiVersion` provider argument must be set to `v4beta`.
 *
 * Provides information about a NodeBalancer VPC configuration.
 * For more information, see the corresponding [Linode APIv4 documentation](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
 *
 * ## Example Usage
 *
 * Retrieve information about a NodeBalancer VPC configuration:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_config = linode.getNodebalancerVpc({
 *     nodebalancerId: 123,
 *     id: 456,
 * });
 * ```
 */
export function getNodebalancerVpcOutput(args: GetNodebalancerVpcOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNodebalancerVpcResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getNodebalancerVpc:getNodebalancerVpc", {
        "id": args.id,
        "nodebalancerId": args.nodebalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodebalancerVpc.
 */
export interface GetNodebalancerVpcOutputArgs {
    /**
     * The ID of the VPC configuration.
     */
    id: pulumi.Input<number>;
    /**
     * The ID of the parent NodeBalancer of the VPC configuration.
     */
    nodebalancerId: pulumi.Input<number>;
}
