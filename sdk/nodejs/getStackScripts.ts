// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides information about Linode StackScripts that match a set of filters.
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode StackScript.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific_stackscripts = pulumi.output(linode.getStackScripts({
 *     filters: [
 *         {
 *             name: "label",
 *             values: ["my-cool-stackscript"],
 *         },
 *         {
 *             name: "is_public",
 *             values: ["false"],
 *         },
 *     ],
 * }));
 * ```
 * ## Attributes
 *
 * Each Linode StackScript will be stored in the `stackscripts` attribute and will export the following attributes:
 *
 * * `id` - The unique ID of the StackScript.
 *
 * * `label` - The StackScript's label is for display purposes only.
 *
 * * `script` - The script to execute when provisioning a new Linode with this StackScript.
 *
 * * `description` - A description for the StackScript.
 *
 * * `revNote` - This field allows you to add notes for the set of revisions made to this StackScript.
 *
 * * `isPublic` - This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private.
 *
 * * `images` - An array of Image IDs representing the Images that this StackScript is compatible for deploying with.
 *
 * * `deploymentsActive` - Count of currently active, deployed Linodes created from this StackScript.
 *
 * * `userGravatarId` - The Gravatar ID for the User who created the StackScript.
 *
 * * `deploymentsTotal` - The total number of times this StackScript has been deployed.
 *
 * * `username` - The User who created the StackScript.
 *
 * * `created` - The date this StackScript was created.
 *
 * * `updated` - The date this StackScript was updated.
 *
 * * `userDefinedFields` - This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment.
 *   
 *   * `label` - A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
 *   
 *   * `name` - The name of the field.
 *   
 *   * `example` - An example value for the field.
 *   
 *   * `oneOf` - A list of acceptable single values for the field.
 *   
 *   * `manyOf` - A list of acceptable values for the field in any quantity, combination or order.
 *   
 *   * `default` - The default value. If not specified, this value will be used.
 *
 * ## Filterable Fields
 *
 * * `deploymentsTotal`
 *
 * * `description`
 *
 * * `isPublic`
 *
 * * `label`
 *
 * * `mine`
 *
 * * `revNote`
 */
export function getStackScripts(args?: GetStackScriptsArgs, opts?: pulumi.InvokeOptions): Promise<GetStackScriptsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("linode:index/getStackScripts:getStackScripts", {
        "filters": args.filters,
        "latest": args.latest,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}

/**
 * A collection of arguments for invoking getStackScripts.
 */
export interface GetStackScriptsArgs {
    filters?: inputs.GetStackScriptsFilter[];
    /**
     * If true, only the latest StackScript will be returned. StackScripts without a valid `created` field are not included in the result.
     */
    latest?: boolean;
    /**
     * The order in which results should be returned. (`asc`, `desc`; default `asc`)
     */
    order?: string;
    /**
     * The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
     */
    orderBy?: string;
}

/**
 * A collection of values returned by getStackScripts.
 */
export interface GetStackScriptsResult {
    readonly filters?: outputs.GetStackScriptsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly latest?: boolean;
    readonly order?: string;
    readonly orderBy?: string;
    readonly stackscripts: outputs.GetStackScriptsStackscript[];
}

export function getStackScriptsOutput(args?: GetStackScriptsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackScriptsResult> {
    return pulumi.output(args).apply(a => getStackScripts(a, opts))
}

/**
 * A collection of arguments for invoking getStackScripts.
 */
export interface GetStackScriptsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetStackScriptsFilterArgs>[]>;
    /**
     * If true, only the latest StackScript will be returned. StackScripts without a valid `created` field are not included in the result.
     */
    latest?: pulumi.Input<boolean>;
    /**
     * The order in which results should be returned. (`asc`, `desc`; default `asc`)
     */
    order?: pulumi.Input<string>;
    /**
     * The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
     */
    orderBy?: pulumi.Input<string>;
}
