// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > **Limited Availability** VPC-attached NodeBalancers may not currently be available to all users and may require the `apiVersion` provider argument must be set to `v4beta`.
 *
 * Provides information about Linode NodeBalancers VPC configurations that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-node-balancers).
 *
 * ## Example Usage
 *
 * Retrieve all VPC configurations under a NodeBalancer:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 * });
 * ```
 *
 * Retrieve all VPC configurations under a NodeBalancer with an IPv4 range of "10.0.0.4/30":
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 *     filters: [{
 *         name: "ipv4_range",
 *         values: ["10.0.0.4/30"],
 *     }],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `ipv4Range`
 *
 * * `nodebalancerId`
 *
 * * `subnetId`
 *
 * * `vpcId`
 */
export function getNodebalancerVpcs(args: GetNodebalancerVpcsArgs, opts?: pulumi.InvokeOptions): Promise<GetNodebalancerVpcsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancerVpcs:getNodebalancerVpcs", {
        "filters": args.filters,
        "nodebalancerId": args.nodebalancerId,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodebalancerVpcs.
 */
export interface GetNodebalancerVpcsArgs {
    filters?: inputs.GetNodebalancerVpcsFilter[];
    /**
     * The ID of the NodeBalancer to list VPC configurations for.
     *
     * * `filter` - (Optional) A set of filters used to select VPC configurations that meet certain requirements.
     */
    nodebalancerId: number;
    /**
     * The order in which results should be returned. (`asc`, `desc`; default `asc`)
     */
    order?: string;
    /**
     * The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
     */
    orderBy?: string;
}

/**
 * A collection of values returned by getNodebalancerVpcs.
 */
export interface GetNodebalancerVpcsResult {
    readonly filters?: outputs.GetNodebalancerVpcsFilter[];
    /**
     * The ID of the VPC configuration.
     */
    readonly id: string;
    /**
     * The ID of the parent NodeBalancer for this VPC configuration.
     */
    readonly nodebalancerId: number;
    readonly order?: string;
    readonly orderBy?: string;
    readonly vpcConfigs: outputs.GetNodebalancerVpcsVpcConfig[];
}
/**
 * > **Limited Availability** VPC-attached NodeBalancers may not currently be available to all users and may require the `apiVersion` provider argument must be set to `v4beta`.
 *
 * Provides information about Linode NodeBalancers VPC configurations that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-node-balancers).
 *
 * ## Example Usage
 *
 * Retrieve all VPC configurations under a NodeBalancer:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 * });
 * ```
 *
 * Retrieve all VPC configurations under a NodeBalancer with an IPv4 range of "10.0.0.4/30":
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 *     filters: [{
 *         name: "ipv4_range",
 *         values: ["10.0.0.4/30"],
 *     }],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `ipv4Range`
 *
 * * `nodebalancerId`
 *
 * * `subnetId`
 *
 * * `vpcId`
 */
export function getNodebalancerVpcsOutput(args: GetNodebalancerVpcsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNodebalancerVpcsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getNodebalancerVpcs:getNodebalancerVpcs", {
        "filters": args.filters,
        "nodebalancerId": args.nodebalancerId,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodebalancerVpcs.
 */
export interface GetNodebalancerVpcsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNodebalancerVpcsFilterArgs>[]>;
    /**
     * The ID of the NodeBalancer to list VPC configurations for.
     *
     * * `filter` - (Optional) A set of filters used to select VPC configurations that meet certain requirements.
     */
    nodebalancerId: pulumi.Input<number>;
    /**
     * The order in which results should be returned. (`asc`, `desc`; default `asc`)
     */
    order?: pulumi.Input<string>;
    /**
     * The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
     */
    orderBy?: pulumi.Input<string>;
}
