// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides information about a Linode domain.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-domain).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode domain.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const foo = linode.getDomain({
 *     id: 1234567,
 * });
 * const bar = linode.getDomain({
 *     domain: "bar.example.com",
 * });
 * ```
 */
export function getDomain(args?: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDomain:getDomain", {
        "domain": args.domain,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * The unique domain name of the Domain record to query.
     */
    domain?: string;
    /**
     * The unique numeric ID of the Domain record to query.
     */
    id?: number;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    /**
     * The list of IPs that may perform a zone transfer for this Domain.
     */
    readonly axfrIps: string[];
    /**
     * A description for this Domain.
     */
    readonly description: string;
    /**
     * The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain
     */
    readonly domain?: string;
    /**
     * The amount of time in seconds that may pass before this Domain is no longer authoritative.
     */
    readonly expireSec: number;
    /**
     * The group this Domain belongs to.
     */
    readonly group: string;
    /**
     * The unique ID of this Domain.
     */
    readonly id?: number;
    /**
     * The IP addresses representing the master DNS for this Domain.
     */
    readonly masterIps: string[];
    /**
     * The amount of time in seconds before this Domain should be refreshed.
     */
    readonly refreshSec: number;
    /**
     * The interval, in seconds, at which a failed refresh should be retried.
     */
    readonly retrySec: number;
    /**
     * Start of Authority email address.
     */
    readonly soaEmail: string;
    /**
     * Used to control whether this Domain is currently being rendered. (`disabled`, `active`)
     */
    readonly status: string;
    /**
     * An array of tags applied to this object. Tags are case-insensitive and are for organizational purposes only.
     */
    readonly tags: string[];
    /**
     * 'Time to Live'-the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.
     */
    readonly ttlSec: number;
    /**
     * If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave) (`master`, `slave`)
     */
    readonly type: string;
}
/**
 * Provides information about a Linode domain.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-domain).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode domain.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const foo = linode.getDomain({
 *     id: 1234567,
 * });
 * const bar = linode.getDomain({
 *     domain: "bar.example.com",
 * });
 * ```
 */
export function getDomainOutput(args?: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply((a: any) => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    /**
     * The unique domain name of the Domain record to query.
     */
    domain?: pulumi.Input<string>;
    /**
     * The unique numeric ID of the Domain record to query.
     */
    id?: pulumi.Input<number>;
}
