// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about all Linode Firewall Templates.
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to list all available Firewall Templates:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all = linode.getFirewallTemplates({});
 * export const firewallTemplateSlugs = all.then(all => all.firewallTemplates);
 * ```
 *
 * Or with some filters to get a subset of the results.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered = linode.getFirewallTemplates({
 *     filters: [{
 *         name: "slug",
 *         values: ["public"],
 *         matchBy: "exact",
 *     }],
 * });
 * export const firewallTemplateSlugs = filtered.then(filtered => filtered.firewallTemplates);
 * ```
 *
 * ## Filterable Fields
 *
 * * `slug`
 */
export function getFirewallTemplates(args?: GetFirewallTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallTemplatesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getFirewallTemplates:getFirewallTemplates", {
        "filters": args.filters,
        "firewallTemplates": args.firewallTemplates,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallTemplates.
 */
export interface GetFirewallTemplatesArgs {
    filters?: inputs.GetFirewallTemplatesFilter[];
    firewallTemplates?: inputs.GetFirewallTemplatesFirewallTemplate[];
}

/**
 * A collection of values returned by getFirewallTemplates.
 */
export interface GetFirewallTemplatesResult {
    readonly filters?: outputs.GetFirewallTemplatesFilter[];
    readonly firewallTemplates?: outputs.GetFirewallTemplatesFirewallTemplate[];
    readonly id: string;
}
/**
 * Provides information about all Linode Firewall Templates.
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to list all available Firewall Templates:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all = linode.getFirewallTemplates({});
 * export const firewallTemplateSlugs = all.then(all => all.firewallTemplates);
 * ```
 *
 * Or with some filters to get a subset of the results.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered = linode.getFirewallTemplates({
 *     filters: [{
 *         name: "slug",
 *         values: ["public"],
 *         matchBy: "exact",
 *     }],
 * });
 * export const firewallTemplateSlugs = filtered.then(filtered => filtered.firewallTemplates);
 * ```
 *
 * ## Filterable Fields
 *
 * * `slug`
 */
export function getFirewallTemplatesOutput(args?: GetFirewallTemplatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFirewallTemplatesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getFirewallTemplates:getFirewallTemplates", {
        "filters": args.filters,
        "firewallTemplates": args.firewallTemplates,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallTemplates.
 */
export interface GetFirewallTemplatesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetFirewallTemplatesFilterArgs>[]>;
    firewallTemplates?: pulumi.Input<pulumi.Input<inputs.GetFirewallTemplatesFirewallTemplateArgs>[]>;
}
