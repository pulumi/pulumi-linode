// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetAccountAvailabilitiesAvailabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetAccountAvailabilitiesAvailabilityArgs Empty = new GetAccountAvailabilitiesAvailabilityArgs();

    /**
     * The region this availability entry refers to.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region this availability entry refers to.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * A set of services that are unavailable for the given region.
     * 
     */
    @Import(name="unavailables", required=true)
    private Output<List<String>> unavailables;

    /**
     * @return A set of services that are unavailable for the given region.
     * 
     */
    public Output<List<String>> unavailables() {
        return this.unavailables;
    }

    private GetAccountAvailabilitiesAvailabilityArgs() {}

    private GetAccountAvailabilitiesAvailabilityArgs(GetAccountAvailabilitiesAvailabilityArgs $) {
        this.region = $.region;
        this.unavailables = $.unavailables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountAvailabilitiesAvailabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountAvailabilitiesAvailabilityArgs $;

        public Builder() {
            $ = new GetAccountAvailabilitiesAvailabilityArgs();
        }

        public Builder(GetAccountAvailabilitiesAvailabilityArgs defaults) {
            $ = new GetAccountAvailabilitiesAvailabilityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The region this availability entry refers to.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region this availability entry refers to.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param unavailables A set of services that are unavailable for the given region.
         * 
         * @return builder
         * 
         */
        public Builder unavailables(Output<List<String>> unavailables) {
            $.unavailables = unavailables;
            return this;
        }

        /**
         * @param unavailables A set of services that are unavailable for the given region.
         * 
         * @return builder
         * 
         */
        public Builder unavailables(List<String> unavailables) {
            return unavailables(Output.of(unavailables));
        }

        /**
         * @param unavailables A set of services that are unavailable for the given region.
         * 
         * @return builder
         * 
         */
        public Builder unavailables(String... unavailables) {
            return unavailables(List.of(unavailables));
        }

        public GetAccountAvailabilitiesAvailabilityArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.unavailables = Objects.requireNonNull($.unavailables, "expected parameter 'unavailables' to be non-null");
            return $;
        }
    }

}
