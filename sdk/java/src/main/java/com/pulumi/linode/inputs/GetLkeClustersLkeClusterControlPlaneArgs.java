// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class GetLkeClustersLkeClusterControlPlaneArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetLkeClustersLkeClusterControlPlaneArgs Empty = new GetLkeClustersLkeClusterControlPlaneArgs();

    /**
     * Enables audit logs on the cluster&#39;s control plane.
     * 
     */
    @Import(name="auditLogsEnabled", required=true)
    private Output<Boolean> auditLogsEnabled;

    /**
     * @return Enables audit logs on the cluster&#39;s control plane.
     * 
     */
    public Output<Boolean> auditLogsEnabled() {
        return this.auditLogsEnabled;
    }

    /**
     * Whether High Availability is enabled for the cluster Control Plane.
     * 
     */
    @Import(name="highAvailability", required=true)
    private Output<Boolean> highAvailability;

    /**
     * @return Whether High Availability is enabled for the cluster Control Plane.
     * 
     */
    public Output<Boolean> highAvailability() {
        return this.highAvailability;
    }

    private GetLkeClustersLkeClusterControlPlaneArgs() {}

    private GetLkeClustersLkeClusterControlPlaneArgs(GetLkeClustersLkeClusterControlPlaneArgs $) {
        this.auditLogsEnabled = $.auditLogsEnabled;
        this.highAvailability = $.highAvailability;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeClustersLkeClusterControlPlaneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeClustersLkeClusterControlPlaneArgs $;

        public Builder() {
            $ = new GetLkeClustersLkeClusterControlPlaneArgs();
        }

        public Builder(GetLkeClustersLkeClusterControlPlaneArgs defaults) {
            $ = new GetLkeClustersLkeClusterControlPlaneArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditLogsEnabled Enables audit logs on the cluster&#39;s control plane.
         * 
         * @return builder
         * 
         */
        public Builder auditLogsEnabled(Output<Boolean> auditLogsEnabled) {
            $.auditLogsEnabled = auditLogsEnabled;
            return this;
        }

        /**
         * @param auditLogsEnabled Enables audit logs on the cluster&#39;s control plane.
         * 
         * @return builder
         * 
         */
        public Builder auditLogsEnabled(Boolean auditLogsEnabled) {
            return auditLogsEnabled(Output.of(auditLogsEnabled));
        }

        /**
         * @param highAvailability Whether High Availability is enabled for the cluster Control Plane.
         * 
         * @return builder
         * 
         */
        public Builder highAvailability(Output<Boolean> highAvailability) {
            $.highAvailability = highAvailability;
            return this;
        }

        /**
         * @param highAvailability Whether High Availability is enabled for the cluster Control Plane.
         * 
         * @return builder
         * 
         */
        public Builder highAvailability(Boolean highAvailability) {
            return highAvailability(Output.of(highAvailability));
        }

        public GetLkeClustersLkeClusterControlPlaneArgs build() {
            if ($.auditLogsEnabled == null) {
                throw new MissingRequiredPropertyException("GetLkeClustersLkeClusterControlPlaneArgs", "auditLogsEnabled");
            }
            if ($.highAvailability == null) {
                throw new MissingRequiredPropertyException("GetLkeClustersLkeClusterControlPlaneArgs", "highAvailability");
            }
            return $;
        }
    }

}
