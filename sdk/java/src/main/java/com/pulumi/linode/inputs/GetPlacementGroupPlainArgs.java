// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.inputs.GetPlacementGroupMember;
import com.pulumi.linode.inputs.GetPlacementGroupMigrations;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPlacementGroupPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPlacementGroupPlainArgs Empty = new GetPlacementGroupPlainArgs();

    /**
     * The ID of the Placement Group.
     * 
     */
    @Import(name="id", required=true)
    private Integer id;

    /**
     * @return The ID of the Placement Group.
     * 
     */
    public Integer id() {
        return this.id;
    }

    /**
     * A set of Linodes currently assigned to this Placement Group.
     * 
     */
    @Import(name="members")
    private @Nullable List<GetPlacementGroupMember> members;

    /**
     * @return A set of Linodes currently assigned to this Placement Group.
     * 
     */
    public Optional<List<GetPlacementGroupMember>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * Any Linodes that are being migrated to or from the placement group.
     * 
     */
    @Import(name="migrations")
    private @Nullable GetPlacementGroupMigrations migrations;

    /**
     * @return Any Linodes that are being migrated to or from the placement group.
     * 
     */
    public Optional<GetPlacementGroupMigrations> migrations() {
        return Optional.ofNullable(this.migrations);
    }

    private GetPlacementGroupPlainArgs() {}

    private GetPlacementGroupPlainArgs(GetPlacementGroupPlainArgs $) {
        this.id = $.id;
        this.members = $.members;
        this.migrations = $.migrations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPlacementGroupPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPlacementGroupPlainArgs $;

        public Builder() {
            $ = new GetPlacementGroupPlainArgs();
        }

        public Builder(GetPlacementGroupPlainArgs defaults) {
            $ = new GetPlacementGroupPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the Placement Group.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            $.id = id;
            return this;
        }

        /**
         * @param members A set of Linodes currently assigned to this Placement Group.
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable List<GetPlacementGroupMember> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members A set of Linodes currently assigned to this Placement Group.
         * 
         * @return builder
         * 
         */
        public Builder members(GetPlacementGroupMember... members) {
            return members(List.of(members));
        }

        /**
         * @param migrations Any Linodes that are being migrated to or from the placement group.
         * 
         * @return builder
         * 
         */
        public Builder migrations(@Nullable GetPlacementGroupMigrations migrations) {
            $.migrations = migrations;
            return this;
        }

        public GetPlacementGroupPlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetPlacementGroupPlainArgs", "id");
            }
            return $;
        }
    }

}
