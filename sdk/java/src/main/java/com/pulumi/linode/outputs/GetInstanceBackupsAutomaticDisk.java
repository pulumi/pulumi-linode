// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceBackupsAutomaticDisk {
    /**
     * @return The filesystem of this disk.
     * 
     */
    private String filesystem;
    /**
     * @return The label of this disk.
     * 
     */
    private String label;
    /**
     * @return The size of this disk.
     * 
     */
    private Integer size;

    private GetInstanceBackupsAutomaticDisk() {}
    /**
     * @return The filesystem of this disk.
     * 
     */
    public String filesystem() {
        return this.filesystem;
    }
    /**
     * @return The label of this disk.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The size of this disk.
     * 
     */
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceBackupsAutomaticDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String filesystem;
        private String label;
        private Integer size;
        public Builder() {}
        public Builder(GetInstanceBackupsAutomaticDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filesystem = defaults.filesystem;
    	      this.label = defaults.label;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder filesystem(String filesystem) {
            this.filesystem = Objects.requireNonNull(filesystem);
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public GetInstanceBackupsAutomaticDisk build() {
            final var _resultValue = new GetInstanceBackupsAutomaticDisk();
            _resultValue.filesystem = filesystem;
            _resultValue.label = label;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
