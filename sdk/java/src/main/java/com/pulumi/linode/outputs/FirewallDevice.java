// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FirewallDevice {
    /**
     * @return The ID of the underlying entity this device references (i.e. the Linode&#39;s ID).
     * 
     */
    private Integer entityId;
    /**
     * @return The ID of the Firewall Device.
     * 
     */
    private Integer id;
    /**
     * @return This Firewall&#39;s unique label.
     * 
     */
    private String label;
    /**
     * @return The type of Firewall Device.
     * 
     */
    private String type;
    /**
     * @return The URL of the underlying entity this device references.
     * 
     */
    private String url;

    private FirewallDevice() {}
    /**
     * @return The ID of the underlying entity this device references (i.e. the Linode&#39;s ID).
     * 
     */
    public Integer entityId() {
        return this.entityId;
    }
    /**
     * @return The ID of the Firewall Device.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return This Firewall&#39;s unique label.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The type of Firewall Device.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The URL of the underlying entity this device references.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer entityId;
        private Integer id;
        private String label;
        private String type;
        private String url;
        public Builder() {}
        public Builder(FirewallDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityId = defaults.entityId;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder entityId(Integer entityId) {
            if (entityId == null) {
              throw new MissingRequiredPropertyException("FirewallDevice", "entityId");
            }
            this.entityId = entityId;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("FirewallDevice", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("FirewallDevice", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("FirewallDevice", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("FirewallDevice", "url");
            }
            this.url = url;
            return this;
        }
        public FirewallDevice build() {
            final var _resultValue = new FirewallDevice();
            _resultValue.entityId = entityId;
            _resultValue.id = id;
            _resultValue.label = label;
            _resultValue.type = type;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
