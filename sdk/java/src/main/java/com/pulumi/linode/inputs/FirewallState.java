// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.linode.inputs.FirewallDeviceArgs;
import com.pulumi.linode.inputs.FirewallInboundArgs;
import com.pulumi.linode.inputs.FirewallOutboundArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallState extends com.pulumi.resources.ResourceArgs {

    public static final FirewallState Empty = new FirewallState();

    /**
     * When this firewall was created
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return When this firewall was created
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The devices associated with this firewall.
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<FirewallDeviceArgs>> devices;

    /**
     * @return The devices associated with this firewall.
     * 
     */
    public Optional<Output<List<FirewallDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * If `true`, the Firewall&#39;s rules are not enforced (defaults to `false`).
     * 
     * * `inbound` - (Optional) A firewall rule that specifies what inbound network traffic is allowed.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return If `true`, the Firewall&#39;s rules are not enforced (defaults to `false`).
     * 
     * * `inbound` - (Optional) A firewall rule that specifies what inbound network traffic is allowed.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property of the Firewall Rule. (`ACCEPT`, `DROP`)
     * 
     * * `outbound` - (Optional) A firewall rule that specifies what outbound network traffic is allowed.
     * 
     */
    @Import(name="inboundPolicy")
    private @Nullable Output<String> inboundPolicy;

    /**
     * @return The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property of the Firewall Rule. (`ACCEPT`, `DROP`)
     * 
     * * `outbound` - (Optional) A firewall rule that specifies what outbound network traffic is allowed.
     * 
     */
    public Optional<Output<String>> inboundPolicy() {
        return Optional.ofNullable(this.inboundPolicy);
    }

    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     * 
     */
    @Import(name="inbounds")
    private @Nullable Output<List<FirewallInboundArgs>> inbounds;

    /**
     * @return A firewall rule that specifies what inbound network traffic is allowed.
     * 
     */
    public Optional<Output<List<FirewallInboundArgs>>> inbounds() {
        return Optional.ofNullable(this.inbounds);
    }

    /**
     * This Firewall&#39;s unique label.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return This Firewall&#39;s unique label.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * A list of IDs of Linodes this Firewall should govern network traffic for.
     * 
     */
    @Import(name="linodes")
    private @Nullable Output<List<Integer>> linodes;

    /**
     * @return A list of IDs of Linodes this Firewall should govern network traffic for.
     * 
     */
    public Optional<Output<List<Integer>>> linodes() {
        return Optional.ofNullable(this.linodes);
    }

    /**
     * A list of IDs of NodeBalancers this Firewall should govern network traffic for.
     * 
     */
    @Import(name="nodebalancers")
    private @Nullable Output<List<Integer>> nodebalancers;

    /**
     * @return A list of IDs of NodeBalancers this Firewall should govern network traffic for.
     * 
     */
    public Optional<Output<List<Integer>>> nodebalancers() {
        return Optional.ofNullable(this.nodebalancers);
    }

    /**
     * The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for an individual Firewall Rule. (`ACCEPT`, `DROP`)
     * 
     */
    @Import(name="outboundPolicy")
    private @Nullable Output<String> outboundPolicy;

    /**
     * @return The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for an individual Firewall Rule. (`ACCEPT`, `DROP`)
     * 
     */
    public Optional<Output<String>> outboundPolicy() {
        return Optional.ofNullable(this.outboundPolicy);
    }

    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     * 
     */
    @Import(name="outbounds")
    private @Nullable Output<List<FirewallOutboundArgs>> outbounds;

    /**
     * @return A firewall rule that specifies what outbound network traffic is allowed.
     * 
     */
    public Optional<Output<List<FirewallOutboundArgs>>> outbounds() {
        return Optional.ofNullable(this.outbounds);
    }

    /**
     * The status of the Firewall.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the Firewall.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A list of tags applied to the Kubernetes cluster. Tags are case-insensitive and are for organizational purposes only.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A list of tags applied to the Kubernetes cluster. Tags are case-insensitive and are for organizational purposes only.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * When this firewall was last updated
     * 
     */
    @Import(name="updated")
    private @Nullable Output<String> updated;

    /**
     * @return When this firewall was last updated
     * 
     */
    public Optional<Output<String>> updated() {
        return Optional.ofNullable(this.updated);
    }

    private FirewallState() {}

    private FirewallState(FirewallState $) {
        this.created = $.created;
        this.devices = $.devices;
        this.disabled = $.disabled;
        this.inboundPolicy = $.inboundPolicy;
        this.inbounds = $.inbounds;
        this.label = $.label;
        this.linodes = $.linodes;
        this.nodebalancers = $.nodebalancers;
        this.outboundPolicy = $.outboundPolicy;
        this.outbounds = $.outbounds;
        this.status = $.status;
        this.tags = $.tags;
        this.updated = $.updated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallState $;

        public Builder() {
            $ = new FirewallState();
        }

        public Builder(FirewallState defaults) {
            $ = new FirewallState(Objects.requireNonNull(defaults));
        }

        /**
         * @param created When this firewall was created
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created When this firewall was created
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param devices The devices associated with this firewall.
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<FirewallDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices The devices associated with this firewall.
         * 
         * @return builder
         * 
         */
        public Builder devices(List<FirewallDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices The devices associated with this firewall.
         * 
         * @return builder
         * 
         */
        public Builder devices(FirewallDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param disabled If `true`, the Firewall&#39;s rules are not enforced (defaults to `false`).
         * 
         * * `inbound` - (Optional) A firewall rule that specifies what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled If `true`, the Firewall&#39;s rules are not enforced (defaults to `false`).
         * 
         * * `inbound` - (Optional) A firewall rule that specifies what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param inboundPolicy The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property of the Firewall Rule. (`ACCEPT`, `DROP`)
         * 
         * * `outbound` - (Optional) A firewall rule that specifies what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inboundPolicy(@Nullable Output<String> inboundPolicy) {
            $.inboundPolicy = inboundPolicy;
            return this;
        }

        /**
         * @param inboundPolicy The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property of the Firewall Rule. (`ACCEPT`, `DROP`)
         * 
         * * `outbound` - (Optional) A firewall rule that specifies what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inboundPolicy(String inboundPolicy) {
            return inboundPolicy(Output.of(inboundPolicy));
        }

        /**
         * @param inbounds A firewall rule that specifies what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inbounds(@Nullable Output<List<FirewallInboundArgs>> inbounds) {
            $.inbounds = inbounds;
            return this;
        }

        /**
         * @param inbounds A firewall rule that specifies what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inbounds(List<FirewallInboundArgs> inbounds) {
            return inbounds(Output.of(inbounds));
        }

        /**
         * @param inbounds A firewall rule that specifies what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inbounds(FirewallInboundArgs... inbounds) {
            return inbounds(List.of(inbounds));
        }

        /**
         * @param label This Firewall&#39;s unique label.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label This Firewall&#39;s unique label.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param linodes A list of IDs of Linodes this Firewall should govern network traffic for.
         * 
         * @return builder
         * 
         */
        public Builder linodes(@Nullable Output<List<Integer>> linodes) {
            $.linodes = linodes;
            return this;
        }

        /**
         * @param linodes A list of IDs of Linodes this Firewall should govern network traffic for.
         * 
         * @return builder
         * 
         */
        public Builder linodes(List<Integer> linodes) {
            return linodes(Output.of(linodes));
        }

        /**
         * @param linodes A list of IDs of Linodes this Firewall should govern network traffic for.
         * 
         * @return builder
         * 
         */
        public Builder linodes(Integer... linodes) {
            return linodes(List.of(linodes));
        }

        /**
         * @param nodebalancers A list of IDs of NodeBalancers this Firewall should govern network traffic for.
         * 
         * @return builder
         * 
         */
        public Builder nodebalancers(@Nullable Output<List<Integer>> nodebalancers) {
            $.nodebalancers = nodebalancers;
            return this;
        }

        /**
         * @param nodebalancers A list of IDs of NodeBalancers this Firewall should govern network traffic for.
         * 
         * @return builder
         * 
         */
        public Builder nodebalancers(List<Integer> nodebalancers) {
            return nodebalancers(Output.of(nodebalancers));
        }

        /**
         * @param nodebalancers A list of IDs of NodeBalancers this Firewall should govern network traffic for.
         * 
         * @return builder
         * 
         */
        public Builder nodebalancers(Integer... nodebalancers) {
            return nodebalancers(List.of(nodebalancers));
        }

        /**
         * @param outboundPolicy The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for an individual Firewall Rule. (`ACCEPT`, `DROP`)
         * 
         * @return builder
         * 
         */
        public Builder outboundPolicy(@Nullable Output<String> outboundPolicy) {
            $.outboundPolicy = outboundPolicy;
            return this;
        }

        /**
         * @param outboundPolicy The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for an individual Firewall Rule. (`ACCEPT`, `DROP`)
         * 
         * @return builder
         * 
         */
        public Builder outboundPolicy(String outboundPolicy) {
            return outboundPolicy(Output.of(outboundPolicy));
        }

        /**
         * @param outbounds A firewall rule that specifies what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder outbounds(@Nullable Output<List<FirewallOutboundArgs>> outbounds) {
            $.outbounds = outbounds;
            return this;
        }

        /**
         * @param outbounds A firewall rule that specifies what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder outbounds(List<FirewallOutboundArgs> outbounds) {
            return outbounds(Output.of(outbounds));
        }

        /**
         * @param outbounds A firewall rule that specifies what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder outbounds(FirewallOutboundArgs... outbounds) {
            return outbounds(List.of(outbounds));
        }

        /**
         * @param status The status of the Firewall.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the Firewall.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A list of tags applied to the Kubernetes cluster. Tags are case-insensitive and are for organizational purposes only.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of tags applied to the Kubernetes cluster. Tags are case-insensitive and are for organizational purposes only.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of tags applied to the Kubernetes cluster. Tags are case-insensitive and are for organizational purposes only.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updated When this firewall was last updated
         * 
         * @return builder
         * 
         */
        public Builder updated(@Nullable Output<String> updated) {
            $.updated = updated;
            return this;
        }

        /**
         * @param updated When this firewall was last updated
         * 
         * @return builder
         * 
         */
        public Builder updated(String updated) {
            return updated(Output.of(updated));
        }

        public FirewallState build() {
            return $;
        }
    }

}
