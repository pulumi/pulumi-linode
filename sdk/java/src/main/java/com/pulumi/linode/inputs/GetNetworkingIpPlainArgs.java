// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkingIpPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkingIpPlainArgs Empty = new GetNetworkingIpPlainArgs();

    /**
     * The IP Address to access.  The address must be associated with the account and a resource that the user has access to view.
     * 
     */
    @Import(name="address", required=true)
    private String address;

    /**
     * @return The IP Address to access.  The address must be associated with the account and a resource that the user has access to view.
     * 
     */
    public String address() {
        return this.address;
    }

    private GetNetworkingIpPlainArgs() {}

    private GetNetworkingIpPlainArgs(GetNetworkingIpPlainArgs $) {
        this.address = $.address;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkingIpPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkingIpPlainArgs $;

        public Builder() {
            $ = new GetNetworkingIpPlainArgs();
        }

        public Builder(GetNetworkingIpPlainArgs defaults) {
            $ = new GetNetworkingIpPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The IP Address to access.  The address must be associated with the account and a resource that the user has access to view.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            $.address = address;
            return this;
        }

        public GetNetworkingIpPlainArgs build() {
            if ($.address == null) {
                throw new MissingRequiredPropertyException("GetNetworkingIpPlainArgs", "address");
            }
            return $;
        }
    }

}
