// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceSpec {
    private Integer disk;
    private Integer memory;
    private Integer transfer;
    private Integer vcpus;

    private GetInstancesInstanceSpec() {}
    public Integer disk() {
        return this.disk;
    }
    public Integer memory() {
        return this.memory;
    }
    public Integer transfer() {
        return this.transfer;
    }
    public Integer vcpus() {
        return this.vcpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer disk;
        private Integer memory;
        private Integer transfer;
        private Integer vcpus;
        public Builder() {}
        public Builder(GetInstancesInstanceSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disk = defaults.disk;
    	      this.memory = defaults.memory;
    	      this.transfer = defaults.transfer;
    	      this.vcpus = defaults.vcpus;
        }

        @CustomType.Setter
        public Builder disk(Integer disk) {
            if (disk == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceSpec", "disk");
            }
            this.disk = disk;
            return this;
        }
        @CustomType.Setter
        public Builder memory(Integer memory) {
            if (memory == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceSpec", "memory");
            }
            this.memory = memory;
            return this;
        }
        @CustomType.Setter
        public Builder transfer(Integer transfer) {
            if (transfer == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceSpec", "transfer");
            }
            this.transfer = transfer;
            return this;
        }
        @CustomType.Setter
        public Builder vcpus(Integer vcpus) {
            if (vcpus == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceSpec", "vcpus");
            }
            this.vcpus = vcpus;
            return this;
        }
        public GetInstancesInstanceSpec build() {
            final var _resultValue = new GetInstancesInstanceSpec();
            _resultValue.disk = disk;
            _resultValue.memory = memory;
            _resultValue.transfer = transfer;
            _resultValue.vcpus = vcpus;
            return _resultValue;
        }
    }
}
