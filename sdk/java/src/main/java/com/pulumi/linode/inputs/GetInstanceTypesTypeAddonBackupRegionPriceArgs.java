// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceTypesTypeAddonBackupRegionPriceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetInstanceTypesTypeAddonBackupRegionPriceArgs Empty = new GetInstanceTypesTypeAddonBackupRegionPriceArgs();

    @Import(name="hourly", required=true)
    private Output<Double> hourly;

    public Output<Double> hourly() {
        return this.hourly;
    }

    /**
     * The ID representing the Linode Type.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID representing the Linode Type.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="monthly", required=true)
    private Output<Double> monthly;

    public Output<Double> monthly() {
        return this.monthly;
    }

    private GetInstanceTypesTypeAddonBackupRegionPriceArgs() {}

    private GetInstanceTypesTypeAddonBackupRegionPriceArgs(GetInstanceTypesTypeAddonBackupRegionPriceArgs $) {
        this.hourly = $.hourly;
        this.id = $.id;
        this.monthly = $.monthly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceTypesTypeAddonBackupRegionPriceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceTypesTypeAddonBackupRegionPriceArgs $;

        public Builder() {
            $ = new GetInstanceTypesTypeAddonBackupRegionPriceArgs();
        }

        public Builder(GetInstanceTypesTypeAddonBackupRegionPriceArgs defaults) {
            $ = new GetInstanceTypesTypeAddonBackupRegionPriceArgs(Objects.requireNonNull(defaults));
        }

        public Builder hourly(Output<Double> hourly) {
            $.hourly = hourly;
            return this;
        }

        public Builder hourly(Double hourly) {
            return hourly(Output.of(hourly));
        }

        /**
         * @param id The ID representing the Linode Type.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID representing the Linode Type.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder monthly(Output<Double> monthly) {
            $.monthly = monthly;
            return this;
        }

        public Builder monthly(Double monthly) {
            return monthly(Output.of(monthly));
        }

        public GetInstanceTypesTypeAddonBackupRegionPriceArgs build() {
            $.hourly = Objects.requireNonNull($.hourly, "expected parameter 'hourly' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.monthly = Objects.requireNonNull($.monthly, "expected parameter 'monthly' to be non-null");
            return $;
        }
    }

}
