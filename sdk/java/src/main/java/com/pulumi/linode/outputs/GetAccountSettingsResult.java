// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountSettingsResult {
    /**
     * @return Account-wide backups default.
     * 
     */
    private Boolean backupsEnabled;
    private String id;
    /**
     * @return The Longview Pro tier you are currently subscribed to.
     * 
     */
    private String longviewSubscription;
    /**
     * @return Enables monitoring for connectivity, response, and total request time.
     * 
     */
    private Boolean managed;
    /**
     * @return Enables network helper across all users by default for new Linodes and Linode Configs.
     * 
     */
    private Boolean networkHelper;
    /**
     * @return A string describing the status of this account’s Object Storage service enrollment.
     * 
     */
    private String objectStorage;

    private GetAccountSettingsResult() {}
    /**
     * @return Account-wide backups default.
     * 
     */
    public Boolean backupsEnabled() {
        return this.backupsEnabled;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The Longview Pro tier you are currently subscribed to.
     * 
     */
    public String longviewSubscription() {
        return this.longviewSubscription;
    }
    /**
     * @return Enables monitoring for connectivity, response, and total request time.
     * 
     */
    public Boolean managed() {
        return this.managed;
    }
    /**
     * @return Enables network helper across all users by default for new Linodes and Linode Configs.
     * 
     */
    public Boolean networkHelper() {
        return this.networkHelper;
    }
    /**
     * @return A string describing the status of this account’s Object Storage service enrollment.
     * 
     */
    public String objectStorage() {
        return this.objectStorage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountSettingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean backupsEnabled;
        private String id;
        private String longviewSubscription;
        private Boolean managed;
        private Boolean networkHelper;
        private String objectStorage;
        public Builder() {}
        public Builder(GetAccountSettingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupsEnabled = defaults.backupsEnabled;
    	      this.id = defaults.id;
    	      this.longviewSubscription = defaults.longviewSubscription;
    	      this.managed = defaults.managed;
    	      this.networkHelper = defaults.networkHelper;
    	      this.objectStorage = defaults.objectStorage;
        }

        @CustomType.Setter
        public Builder backupsEnabled(Boolean backupsEnabled) {
            if (backupsEnabled == null) {
              throw new MissingRequiredPropertyException("GetAccountSettingsResult", "backupsEnabled");
            }
            this.backupsEnabled = backupsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountSettingsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder longviewSubscription(String longviewSubscription) {
            if (longviewSubscription == null) {
              throw new MissingRequiredPropertyException("GetAccountSettingsResult", "longviewSubscription");
            }
            this.longviewSubscription = longviewSubscription;
            return this;
        }
        @CustomType.Setter
        public Builder managed(Boolean managed) {
            if (managed == null) {
              throw new MissingRequiredPropertyException("GetAccountSettingsResult", "managed");
            }
            this.managed = managed;
            return this;
        }
        @CustomType.Setter
        public Builder networkHelper(Boolean networkHelper) {
            if (networkHelper == null) {
              throw new MissingRequiredPropertyException("GetAccountSettingsResult", "networkHelper");
            }
            this.networkHelper = networkHelper;
            return this;
        }
        @CustomType.Setter
        public Builder objectStorage(String objectStorage) {
            if (objectStorage == null) {
              throw new MissingRequiredPropertyException("GetAccountSettingsResult", "objectStorage");
            }
            this.objectStorage = objectStorage;
            return this;
        }
        public GetAccountSettingsResult build() {
            final var _resultValue = new GetAccountSettingsResult();
            _resultValue.backupsEnabled = backupsEnabled;
            _resultValue.id = id;
            _resultValue.longviewSubscription = longviewSubscription;
            _resultValue.managed = managed;
            _resultValue.networkHelper = networkHelper;
            _resultValue.objectStorage = objectStorage;
            return _resultValue;
        }
    }
}
