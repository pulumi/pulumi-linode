// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.linode.inputs.GetAccountLoginsFilter;
import com.pulumi.linode.inputs.GetAccountLoginsLogin;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccountLoginsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountLoginsPlainArgs Empty = new GetAccountLoginsPlainArgs();

    /**
     * `filter` - (Optional) A set of filters used to select Linode account logins that meet certain requirements.
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetAccountLoginsFilter> filters;

    /**
     * @return `filter` - (Optional) A set of filters used to select Linode account logins that meet certain requirements.
     * 
     */
    public Optional<List<GetAccountLoginsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="logins")
    private @Nullable List<GetAccountLoginsLogin> logins;

    public Optional<List<GetAccountLoginsLogin>> logins() {
        return Optional.ofNullable(this.logins);
    }

    private GetAccountLoginsPlainArgs() {}

    private GetAccountLoginsPlainArgs(GetAccountLoginsPlainArgs $) {
        this.filters = $.filters;
        this.logins = $.logins;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountLoginsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountLoginsPlainArgs $;

        public Builder() {
            $ = new GetAccountLoginsPlainArgs();
        }

        public Builder(GetAccountLoginsPlainArgs defaults) {
            $ = new GetAccountLoginsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters `filter` - (Optional) A set of filters used to select Linode account logins that meet certain requirements.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetAccountLoginsFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters `filter` - (Optional) A set of filters used to select Linode account logins that meet certain requirements.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetAccountLoginsFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder logins(@Nullable List<GetAccountLoginsLogin> logins) {
            $.logins = logins;
            return this;
        }

        public Builder logins(GetAccountLoginsLogin... logins) {
            return logins(List.of(logins));
        }

        public GetAccountLoginsPlainArgs build() {
            return $;
        }
    }

}
