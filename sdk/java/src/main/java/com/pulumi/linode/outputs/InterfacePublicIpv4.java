// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.linode.outputs.InterfacePublicIpv4Address;
import com.pulumi.linode.outputs.InterfacePublicIpv4AssignedAddress;
import com.pulumi.linode.outputs.InterfacePublicIpv4Shared;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class InterfacePublicIpv4 {
    /**
     * @return IPv4 addresses configured for this Linode interface. Each object in this list supports:
     * 
     */
    private @Nullable List<InterfacePublicIpv4Address> addresses;
    /**
     * @return (Computed) The IPv4 addresses assigned for use in the VPC subnet, calculated from the `addresses` input. Each object in this set supports:
     * 
     */
    private @Nullable List<InterfacePublicIpv4AssignedAddress> assignedAddresses;
    /**
     * @return (Computed) The IPv6 ranges assigned to this Linode interface that are also shared with another Linode. Each object in this set supports:
     * 
     */
    private @Nullable List<InterfacePublicIpv4Shared> shareds;

    private InterfacePublicIpv4() {}
    /**
     * @return IPv4 addresses configured for this Linode interface. Each object in this list supports:
     * 
     */
    public List<InterfacePublicIpv4Address> addresses() {
        return this.addresses == null ? List.of() : this.addresses;
    }
    /**
     * @return (Computed) The IPv4 addresses assigned for use in the VPC subnet, calculated from the `addresses` input. Each object in this set supports:
     * 
     */
    public List<InterfacePublicIpv4AssignedAddress> assignedAddresses() {
        return this.assignedAddresses == null ? List.of() : this.assignedAddresses;
    }
    /**
     * @return (Computed) The IPv6 ranges assigned to this Linode interface that are also shared with another Linode. Each object in this set supports:
     * 
     */
    public List<InterfacePublicIpv4Shared> shareds() {
        return this.shareds == null ? List.of() : this.shareds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterfacePublicIpv4 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<InterfacePublicIpv4Address> addresses;
        private @Nullable List<InterfacePublicIpv4AssignedAddress> assignedAddresses;
        private @Nullable List<InterfacePublicIpv4Shared> shareds;
        public Builder() {}
        public Builder(InterfacePublicIpv4 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.assignedAddresses = defaults.assignedAddresses;
    	      this.shareds = defaults.shareds;
        }

        @CustomType.Setter
        public Builder addresses(@Nullable List<InterfacePublicIpv4Address> addresses) {

            this.addresses = addresses;
            return this;
        }
        public Builder addresses(InterfacePublicIpv4Address... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter
        public Builder assignedAddresses(@Nullable List<InterfacePublicIpv4AssignedAddress> assignedAddresses) {

            this.assignedAddresses = assignedAddresses;
            return this;
        }
        public Builder assignedAddresses(InterfacePublicIpv4AssignedAddress... assignedAddresses) {
            return assignedAddresses(List.of(assignedAddresses));
        }
        @CustomType.Setter
        public Builder shareds(@Nullable List<InterfacePublicIpv4Shared> shareds) {

            this.shareds = shareds;
            return this;
        }
        public Builder shareds(InterfacePublicIpv4Shared... shareds) {
            return shareds(List.of(shareds));
        }
        public InterfacePublicIpv4 build() {
            final var _resultValue = new InterfacePublicIpv4();
            _resultValue.addresses = addresses;
            _resultValue.assignedAddresses = assignedAddresses;
            _resultValue.shareds = shareds;
            return _resultValue;
        }
    }
}
