// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceSharedIpsState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceSharedIpsState Empty = new InstanceSharedIpsState();

    /**
     * The set of IPs to share with the Linode.
     * 
     */
    @Import(name="addresses")
    private @Nullable Output<List<String>> addresses;

    /**
     * @return The set of IPs to share with the Linode.
     * 
     */
    public Optional<Output<List<String>>> addresses() {
        return Optional.ofNullable(this.addresses);
    }

    /**
     * The ID of the Linode to share the IPs to.
     * 
     */
    @Import(name="linodeId")
    private @Nullable Output<Integer> linodeId;

    /**
     * @return The ID of the Linode to share the IPs to.
     * 
     */
    public Optional<Output<Integer>> linodeId() {
        return Optional.ofNullable(this.linodeId);
    }

    private InstanceSharedIpsState() {}

    private InstanceSharedIpsState(InstanceSharedIpsState $) {
        this.addresses = $.addresses;
        this.linodeId = $.linodeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceSharedIpsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceSharedIpsState $;

        public Builder() {
            $ = new InstanceSharedIpsState();
        }

        public Builder(InstanceSharedIpsState defaults) {
            $ = new InstanceSharedIpsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addresses The set of IPs to share with the Linode.
         * 
         * @return builder
         * 
         */
        public Builder addresses(@Nullable Output<List<String>> addresses) {
            $.addresses = addresses;
            return this;
        }

        /**
         * @param addresses The set of IPs to share with the Linode.
         * 
         * @return builder
         * 
         */
        public Builder addresses(List<String> addresses) {
            return addresses(Output.of(addresses));
        }

        /**
         * @param addresses The set of IPs to share with the Linode.
         * 
         * @return builder
         * 
         */
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }

        /**
         * @param linodeId The ID of the Linode to share the IPs to.
         * 
         * @return builder
         * 
         */
        public Builder linodeId(@Nullable Output<Integer> linodeId) {
            $.linodeId = linodeId;
            return this;
        }

        /**
         * @param linodeId The ID of the Linode to share the IPs to.
         * 
         * @return builder
         * 
         */
        public Builder linodeId(Integer linodeId) {
            return linodeId(Output.of(linodeId));
        }

        public InstanceSharedIpsState build() {
            return $;
        }
    }

}
