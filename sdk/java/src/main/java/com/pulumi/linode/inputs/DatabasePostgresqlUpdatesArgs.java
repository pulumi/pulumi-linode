// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabasePostgresqlUpdatesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabasePostgresqlUpdatesArgs Empty = new DatabasePostgresqlUpdatesArgs();

    @Import(name="dayOfWeek", required=true)
    private Output<String> dayOfWeek;

    public Output<String> dayOfWeek() {
        return this.dayOfWeek;
    }

    @Import(name="duration", required=true)
    private Output<Integer> duration;

    public Output<Integer> duration() {
        return this.duration;
    }

    @Import(name="frequency", required=true)
    private Output<String> frequency;

    public Output<String> frequency() {
        return this.frequency;
    }

    @Import(name="hourOfDay", required=true)
    private Output<Integer> hourOfDay;

    public Output<Integer> hourOfDay() {
        return this.hourOfDay;
    }

    @Import(name="weekOfMonth")
    private @Nullable Output<Integer> weekOfMonth;

    public Optional<Output<Integer>> weekOfMonth() {
        return Optional.ofNullable(this.weekOfMonth);
    }

    private DatabasePostgresqlUpdatesArgs() {}

    private DatabasePostgresqlUpdatesArgs(DatabasePostgresqlUpdatesArgs $) {
        this.dayOfWeek = $.dayOfWeek;
        this.duration = $.duration;
        this.frequency = $.frequency;
        this.hourOfDay = $.hourOfDay;
        this.weekOfMonth = $.weekOfMonth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabasePostgresqlUpdatesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabasePostgresqlUpdatesArgs $;

        public Builder() {
            $ = new DatabasePostgresqlUpdatesArgs();
        }

        public Builder(DatabasePostgresqlUpdatesArgs defaults) {
            $ = new DatabasePostgresqlUpdatesArgs(Objects.requireNonNull(defaults));
        }

        public Builder dayOfWeek(Output<String> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        public Builder dayOfWeek(String dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        public Builder duration(Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        public Builder frequency(Output<String> frequency) {
            $.frequency = frequency;
            return this;
        }

        public Builder frequency(String frequency) {
            return frequency(Output.of(frequency));
        }

        public Builder hourOfDay(Output<Integer> hourOfDay) {
            $.hourOfDay = hourOfDay;
            return this;
        }

        public Builder hourOfDay(Integer hourOfDay) {
            return hourOfDay(Output.of(hourOfDay));
        }

        public Builder weekOfMonth(@Nullable Output<Integer> weekOfMonth) {
            $.weekOfMonth = weekOfMonth;
            return this;
        }

        public Builder weekOfMonth(Integer weekOfMonth) {
            return weekOfMonth(Output.of(weekOfMonth));
        }

        public DatabasePostgresqlUpdatesArgs build() {
            if ($.dayOfWeek == null) {
                throw new MissingRequiredPropertyException("DatabasePostgresqlUpdatesArgs", "dayOfWeek");
            }
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("DatabasePostgresqlUpdatesArgs", "duration");
            }
            if ($.frequency == null) {
                throw new MissingRequiredPropertyException("DatabasePostgresqlUpdatesArgs", "frequency");
            }
            if ($.hourOfDay == null) {
                throw new MissingRequiredPropertyException("DatabasePostgresqlUpdatesArgs", "hourOfDay");
            }
            return $;
        }
    }

}
