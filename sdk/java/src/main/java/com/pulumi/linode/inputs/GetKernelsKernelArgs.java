// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetKernelsKernelArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetKernelsKernelArgs Empty = new GetKernelsKernelArgs();

    /**
     * The architecture of this Kernel.
     * 
     */
    @Import(name="architecture", required=true)
    private Output<String> architecture;

    /**
     * @return The architecture of this Kernel.
     * 
     */
    public Output<String> architecture() {
        return this.architecture;
    }

    @Import(name="built", required=true)
    private Output<String> built;

    public Output<String> built() {
        return this.built;
    }

    /**
     * Whether or not this Kernel is deprecated.
     * 
     */
    @Import(name="deprecated", required=true)
    private Output<Boolean> deprecated;

    /**
     * @return Whether or not this Kernel is deprecated.
     * 
     */
    public Output<Boolean> deprecated() {
        return this.deprecated;
    }

    /**
     * The unique ID of this Kernel.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique ID of this Kernel.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * If this Kernel is suitable for KVM Linodes.
     * 
     */
    @Import(name="kvm", required=true)
    private Output<Boolean> kvm;

    /**
     * @return If this Kernel is suitable for KVM Linodes.
     * 
     */
    public Output<Boolean> kvm() {
        return this.kvm;
    }

    /**
     * The friendly name of this Kernel.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return The friendly name of this Kernel.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * If this Kernel is suitable for paravirtualized operations.
     * 
     */
    @Import(name="pvops", required=true)
    private Output<Boolean> pvops;

    /**
     * @return If this Kernel is suitable for paravirtualized operations.
     * 
     */
    public Output<Boolean> pvops() {
        return this.pvops;
    }

    /**
     * Linux Kernel version
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return Linux Kernel version
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     * If this Kernel is suitable for Xen Linodes.
     * 
     */
    @Import(name="xen", required=true)
    private Output<Boolean> xen;

    /**
     * @return If this Kernel is suitable for Xen Linodes.
     * 
     */
    public Output<Boolean> xen() {
        return this.xen;
    }

    private GetKernelsKernelArgs() {}

    private GetKernelsKernelArgs(GetKernelsKernelArgs $) {
        this.architecture = $.architecture;
        this.built = $.built;
        this.deprecated = $.deprecated;
        this.id = $.id;
        this.kvm = $.kvm;
        this.label = $.label;
        this.pvops = $.pvops;
        this.version = $.version;
        this.xen = $.xen;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKernelsKernelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKernelsKernelArgs $;

        public Builder() {
            $ = new GetKernelsKernelArgs();
        }

        public Builder(GetKernelsKernelArgs defaults) {
            $ = new GetKernelsKernelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture The architecture of this Kernel.
         * 
         * @return builder
         * 
         */
        public Builder architecture(Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param architecture The architecture of this Kernel.
         * 
         * @return builder
         * 
         */
        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        public Builder built(Output<String> built) {
            $.built = built;
            return this;
        }

        public Builder built(String built) {
            return built(Output.of(built));
        }

        /**
         * @param deprecated Whether or not this Kernel is deprecated.
         * 
         * @return builder
         * 
         */
        public Builder deprecated(Output<Boolean> deprecated) {
            $.deprecated = deprecated;
            return this;
        }

        /**
         * @param deprecated Whether or not this Kernel is deprecated.
         * 
         * @return builder
         * 
         */
        public Builder deprecated(Boolean deprecated) {
            return deprecated(Output.of(deprecated));
        }

        /**
         * @param id The unique ID of this Kernel.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique ID of this Kernel.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param kvm If this Kernel is suitable for KVM Linodes.
         * 
         * @return builder
         * 
         */
        public Builder kvm(Output<Boolean> kvm) {
            $.kvm = kvm;
            return this;
        }

        /**
         * @param kvm If this Kernel is suitable for KVM Linodes.
         * 
         * @return builder
         * 
         */
        public Builder kvm(Boolean kvm) {
            return kvm(Output.of(kvm));
        }

        /**
         * @param label The friendly name of this Kernel.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The friendly name of this Kernel.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param pvops If this Kernel is suitable for paravirtualized operations.
         * 
         * @return builder
         * 
         */
        public Builder pvops(Output<Boolean> pvops) {
            $.pvops = pvops;
            return this;
        }

        /**
         * @param pvops If this Kernel is suitable for paravirtualized operations.
         * 
         * @return builder
         * 
         */
        public Builder pvops(Boolean pvops) {
            return pvops(Output.of(pvops));
        }

        /**
         * @param version Linux Kernel version
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Linux Kernel version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        /**
         * @param xen If this Kernel is suitable for Xen Linodes.
         * 
         * @return builder
         * 
         */
        public Builder xen(Output<Boolean> xen) {
            $.xen = xen;
            return this;
        }

        /**
         * @param xen If this Kernel is suitable for Xen Linodes.
         * 
         * @return builder
         * 
         */
        public Builder xen(Boolean xen) {
            return xen(Output.of(xen));
        }

        public GetKernelsKernelArgs build() {
            if ($.architecture == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "architecture");
            }
            if ($.built == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "built");
            }
            if ($.deprecated == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "deprecated");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "id");
            }
            if ($.kvm == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "kvm");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "label");
            }
            if ($.pvops == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "pvops");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "version");
            }
            if ($.xen == null) {
                throw new MissingRequiredPropertyException("GetKernelsKernelArgs", "xen");
            }
            return $;
        }
    }

}
