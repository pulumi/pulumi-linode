// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterfaceVlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterfaceVlanArgs Empty = new InterfaceVlanArgs();

    /**
     * The VLAN interface&#39;s private IPv4 address in CIDR notation.
     * 
     */
    @Import(name="ipamAddress")
    private @Nullable Output<String> ipamAddress;

    /**
     * @return The VLAN interface&#39;s private IPv4 address in CIDR notation.
     * 
     */
    public Optional<Output<String>> ipamAddress() {
        return Optional.ofNullable(this.ipamAddress);
    }

    /**
     * The VLAN&#39;s unique label. Must be between 1 and 64 characters.
     * 
     */
    @Import(name="vlanLabel", required=true)
    private Output<String> vlanLabel;

    /**
     * @return The VLAN&#39;s unique label. Must be between 1 and 64 characters.
     * 
     */
    public Output<String> vlanLabel() {
        return this.vlanLabel;
    }

    private InterfaceVlanArgs() {}

    private InterfaceVlanArgs(InterfaceVlanArgs $) {
        this.ipamAddress = $.ipamAddress;
        this.vlanLabel = $.vlanLabel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterfaceVlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterfaceVlanArgs $;

        public Builder() {
            $ = new InterfaceVlanArgs();
        }

        public Builder(InterfaceVlanArgs defaults) {
            $ = new InterfaceVlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipamAddress The VLAN interface&#39;s private IPv4 address in CIDR notation.
         * 
         * @return builder
         * 
         */
        public Builder ipamAddress(@Nullable Output<String> ipamAddress) {
            $.ipamAddress = ipamAddress;
            return this;
        }

        /**
         * @param ipamAddress The VLAN interface&#39;s private IPv4 address in CIDR notation.
         * 
         * @return builder
         * 
         */
        public Builder ipamAddress(String ipamAddress) {
            return ipamAddress(Output.of(ipamAddress));
        }

        /**
         * @param vlanLabel The VLAN&#39;s unique label. Must be between 1 and 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder vlanLabel(Output<String> vlanLabel) {
            $.vlanLabel = vlanLabel;
            return this;
        }

        /**
         * @param vlanLabel The VLAN&#39;s unique label. Must be between 1 and 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder vlanLabel(String vlanLabel) {
            return vlanLabel(Output.of(vlanLabel));
        }

        public InterfaceVlanArgs build() {
            if ($.vlanLabel == null) {
                throw new MissingRequiredPropertyException("InterfaceVlanArgs", "vlanLabel");
            }
            return $;
        }
    }

}
