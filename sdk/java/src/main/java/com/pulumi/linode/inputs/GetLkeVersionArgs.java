// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLkeVersionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLkeVersionArgs Empty = new GetLkeVersionArgs();

    /**
     * The unique ID of this Linode LKE Version.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique ID of this Linode LKE Version.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The tier (`standard` or `enterprise`) of Linode LKE Version to fetch.
     * 
     */
    @Import(name="tier")
    private @Nullable Output<String> tier;

    /**
     * @return The tier (`standard` or `enterprise`) of Linode LKE Version to fetch.
     * 
     */
    public Optional<Output<String>> tier() {
        return Optional.ofNullable(this.tier);
    }

    private GetLkeVersionArgs() {}

    private GetLkeVersionArgs(GetLkeVersionArgs $) {
        this.id = $.id;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeVersionArgs $;

        public Builder() {
            $ = new GetLkeVersionArgs();
        }

        public Builder(GetLkeVersionArgs defaults) {
            $ = new GetLkeVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The unique ID of this Linode LKE Version.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique ID of this Linode LKE Version.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param tier The tier (`standard` or `enterprise`) of Linode LKE Version to fetch.
         * 
         * @return builder
         * 
         */
        public Builder tier(@Nullable Output<String> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier The tier (`standard` or `enterprise`) of Linode LKE Version to fetch.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        public GetLkeVersionArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetLkeVersionArgs", "id");
            }
            return $;
        }
    }

}
