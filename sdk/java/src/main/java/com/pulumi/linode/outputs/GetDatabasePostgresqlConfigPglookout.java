// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetDatabasePostgresqlConfigPglookoutMaxFailoverReplicationTimeLag;
import java.util.Objects;

@CustomType
public final class GetDatabasePostgresqlConfigPglookout {
    private GetDatabasePostgresqlConfigPglookoutMaxFailoverReplicationTimeLag maxFailoverReplicationTimeLag;

    private GetDatabasePostgresqlConfigPglookout() {}
    public GetDatabasePostgresqlConfigPglookoutMaxFailoverReplicationTimeLag maxFailoverReplicationTimeLag() {
        return this.maxFailoverReplicationTimeLag;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabasePostgresqlConfigPglookout defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetDatabasePostgresqlConfigPglookoutMaxFailoverReplicationTimeLag maxFailoverReplicationTimeLag;
        public Builder() {}
        public Builder(GetDatabasePostgresqlConfigPglookout defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxFailoverReplicationTimeLag = defaults.maxFailoverReplicationTimeLag;
        }

        @CustomType.Setter
        public Builder maxFailoverReplicationTimeLag(GetDatabasePostgresqlConfigPglookoutMaxFailoverReplicationTimeLag maxFailoverReplicationTimeLag) {
            if (maxFailoverReplicationTimeLag == null) {
              throw new MissingRequiredPropertyException("GetDatabasePostgresqlConfigPglookout", "maxFailoverReplicationTimeLag");
            }
            this.maxFailoverReplicationTimeLag = maxFailoverReplicationTimeLag;
            return this;
        }
        public GetDatabasePostgresqlConfigPglookout build() {
            final var _resultValue = new GetDatabasePostgresqlConfigPglookout();
            _resultValue.maxFailoverReplicationTimeLag = maxFailoverReplicationTimeLag;
            return _resultValue;
        }
    }
}
