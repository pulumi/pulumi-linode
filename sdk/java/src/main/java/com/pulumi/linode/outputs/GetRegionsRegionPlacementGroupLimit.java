// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetRegionsRegionPlacementGroupLimit {
    /**
     * @return The maximum number of Linodes allowed to be assigned to a placement group in this region.
     * 
     */
    private Integer maximumLinodesPerPg;
    /**
     * @return The maximum number of placement groups allowed for the current user in this region.
     * 
     */
    private Integer maximumPgsPerCustomer;

    private GetRegionsRegionPlacementGroupLimit() {}
    /**
     * @return The maximum number of Linodes allowed to be assigned to a placement group in this region.
     * 
     */
    public Integer maximumLinodesPerPg() {
        return this.maximumLinodesPerPg;
    }
    /**
     * @return The maximum number of placement groups allowed for the current user in this region.
     * 
     */
    public Integer maximumPgsPerCustomer() {
        return this.maximumPgsPerCustomer;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionsRegionPlacementGroupLimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maximumLinodesPerPg;
        private Integer maximumPgsPerCustomer;
        public Builder() {}
        public Builder(GetRegionsRegionPlacementGroupLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumLinodesPerPg = defaults.maximumLinodesPerPg;
    	      this.maximumPgsPerCustomer = defaults.maximumPgsPerCustomer;
        }

        @CustomType.Setter
        public Builder maximumLinodesPerPg(Integer maximumLinodesPerPg) {
            if (maximumLinodesPerPg == null) {
              throw new MissingRequiredPropertyException("GetRegionsRegionPlacementGroupLimit", "maximumLinodesPerPg");
            }
            this.maximumLinodesPerPg = maximumLinodesPerPg;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPgsPerCustomer(Integer maximumPgsPerCustomer) {
            if (maximumPgsPerCustomer == null) {
              throw new MissingRequiredPropertyException("GetRegionsRegionPlacementGroupLimit", "maximumPgsPerCustomer");
            }
            this.maximumPgsPerCustomer = maximumPgsPerCustomer;
            return this;
        }
        public GetRegionsRegionPlacementGroupLimit build() {
            final var _resultValue = new GetRegionsRegionPlacementGroupLimit();
            _resultValue.maximumLinodesPerPg = maximumLinodesPerPg;
            _resultValue.maximumPgsPerCustomer = maximumPgsPerCustomer;
            return _resultValue;
        }
    }
}
