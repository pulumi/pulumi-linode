// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetDatabaseMysqlConfigBinlogRetentionPeriod;
import com.pulumi.linode.outputs.GetDatabaseMysqlConfigMysql;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDatabaseMysqlConfigResult {
    private List<GetDatabaseMysqlConfigBinlogRetentionPeriod> binlogRetentionPeriods;
    private String id;
    private List<GetDatabaseMysqlConfigMysql> mysqls;

    private GetDatabaseMysqlConfigResult() {}
    public List<GetDatabaseMysqlConfigBinlogRetentionPeriod> binlogRetentionPeriods() {
        return this.binlogRetentionPeriods;
    }
    public String id() {
        return this.id;
    }
    public List<GetDatabaseMysqlConfigMysql> mysqls() {
        return this.mysqls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseMysqlConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDatabaseMysqlConfigBinlogRetentionPeriod> binlogRetentionPeriods;
        private String id;
        private List<GetDatabaseMysqlConfigMysql> mysqls;
        public Builder() {}
        public Builder(GetDatabaseMysqlConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.binlogRetentionPeriods = defaults.binlogRetentionPeriods;
    	      this.id = defaults.id;
    	      this.mysqls = defaults.mysqls;
        }

        @CustomType.Setter
        public Builder binlogRetentionPeriods(List<GetDatabaseMysqlConfigBinlogRetentionPeriod> binlogRetentionPeriods) {
            if (binlogRetentionPeriods == null) {
              throw new MissingRequiredPropertyException("GetDatabaseMysqlConfigResult", "binlogRetentionPeriods");
            }
            this.binlogRetentionPeriods = binlogRetentionPeriods;
            return this;
        }
        public Builder binlogRetentionPeriods(GetDatabaseMysqlConfigBinlogRetentionPeriod... binlogRetentionPeriods) {
            return binlogRetentionPeriods(List.of(binlogRetentionPeriods));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatabaseMysqlConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mysqls(List<GetDatabaseMysqlConfigMysql> mysqls) {
            if (mysqls == null) {
              throw new MissingRequiredPropertyException("GetDatabaseMysqlConfigResult", "mysqls");
            }
            this.mysqls = mysqls;
            return this;
        }
        public Builder mysqls(GetDatabaseMysqlConfigMysql... mysqls) {
            return mysqls(List.of(mysqls));
        }
        public GetDatabaseMysqlConfigResult build() {
            final var _resultValue = new GetDatabaseMysqlConfigResult();
            _resultValue.binlogRetentionPeriods = binlogRetentionPeriods;
            _resultValue.id = id;
            _resultValue.mysqls = mysqls;
            return _resultValue;
        }
    }
}
