// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.linode.inputs.GetVpcIpsFilterArgs;
import com.pulumi.linode.inputs.GetVpcIpsVpcIpArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVpcIpsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcIpsArgs Empty = new GetVpcIpsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetVpcIpsFilterArgs>> filters;

    public Optional<Output<List<GetVpcIpsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The id of the parent VPC for the list of VPC IPs.
     * 
     * * `filter` - (Optional) A set of filters used to select Linode VPC IPs that meet certain requirements.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<Integer> vpcId;

    /**
     * @return The id of the parent VPC for the list of VPC IPs.
     * 
     * * `filter` - (Optional) A set of filters used to select Linode VPC IPs that meet certain requirements.
     * 
     */
    public Optional<Output<Integer>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    @Import(name="vpcIps")
    private @Nullable Output<List<GetVpcIpsVpcIpArgs>> vpcIps;

    public Optional<Output<List<GetVpcIpsVpcIpArgs>>> vpcIps() {
        return Optional.ofNullable(this.vpcIps);
    }

    private GetVpcIpsArgs() {}

    private GetVpcIpsArgs(GetVpcIpsArgs $) {
        this.filters = $.filters;
        this.vpcId = $.vpcId;
        this.vpcIps = $.vpcIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcIpsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcIpsArgs $;

        public Builder() {
            $ = new GetVpcIpsArgs();
        }

        public Builder(GetVpcIpsArgs defaults) {
            $ = new GetVpcIpsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetVpcIpsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetVpcIpsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetVpcIpsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param vpcId The id of the parent VPC for the list of VPC IPs.
         * 
         * * `filter` - (Optional) A set of filters used to select Linode VPC IPs that meet certain requirements.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<Integer> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The id of the parent VPC for the list of VPC IPs.
         * 
         * * `filter` - (Optional) A set of filters used to select Linode VPC IPs that meet certain requirements.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Integer vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public Builder vpcIps(@Nullable Output<List<GetVpcIpsVpcIpArgs>> vpcIps) {
            $.vpcIps = vpcIps;
            return this;
        }

        public Builder vpcIps(List<GetVpcIpsVpcIpArgs> vpcIps) {
            return vpcIps(Output.of(vpcIps));
        }

        public Builder vpcIps(GetVpcIpsVpcIpArgs... vpcIps) {
            return vpcIps(List.of(vpcIps));
        }

        public GetVpcIpsArgs build() {
            return $;
        }
    }

}
