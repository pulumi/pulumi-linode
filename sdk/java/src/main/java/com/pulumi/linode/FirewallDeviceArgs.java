// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallDeviceArgs Empty = new FirewallDeviceArgs();

    /**
     * The unique ID of the entity to attach.
     * 
     */
    @Import(name="entityId", required=true)
    private Output<Integer> entityId;

    /**
     * @return The unique ID of the entity to attach.
     * 
     */
    public Output<Integer> entityId() {
        return this.entityId;
    }

    /**
     * The type of the entity to attach. (default: `linode`)
     * 
     */
    @Import(name="entityType")
    private @Nullable Output<String> entityType;

    /**
     * @return The type of the entity to attach. (default: `linode`)
     * 
     */
    public Optional<Output<String>> entityType() {
        return Optional.ofNullable(this.entityType);
    }

    /**
     * The unique ID of the target Firewall.
     * 
     */
    @Import(name="firewallId", required=true)
    private Output<Integer> firewallId;

    /**
     * @return The unique ID of the target Firewall.
     * 
     */
    public Output<Integer> firewallId() {
        return this.firewallId;
    }

    private FirewallDeviceArgs() {}

    private FirewallDeviceArgs(FirewallDeviceArgs $) {
        this.entityId = $.entityId;
        this.entityType = $.entityType;
        this.firewallId = $.firewallId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallDeviceArgs $;

        public Builder() {
            $ = new FirewallDeviceArgs();
        }

        public Builder(FirewallDeviceArgs defaults) {
            $ = new FirewallDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param entityId The unique ID of the entity to attach.
         * 
         * @return builder
         * 
         */
        public Builder entityId(Output<Integer> entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityId The unique ID of the entity to attach.
         * 
         * @return builder
         * 
         */
        public Builder entityId(Integer entityId) {
            return entityId(Output.of(entityId));
        }

        /**
         * @param entityType The type of the entity to attach. (default: `linode`)
         * 
         * @return builder
         * 
         */
        public Builder entityType(@Nullable Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        /**
         * @param entityType The type of the entity to attach. (default: `linode`)
         * 
         * @return builder
         * 
         */
        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        /**
         * @param firewallId The unique ID of the target Firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallId(Output<Integer> firewallId) {
            $.firewallId = firewallId;
            return this;
        }

        /**
         * @param firewallId The unique ID of the target Firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallId(Integer firewallId) {
            return firewallId(Output.of(firewallId));
        }

        public FirewallDeviceArgs build() {
            if ($.entityId == null) {
                throw new MissingRequiredPropertyException("FirewallDeviceArgs", "entityId");
            }
            if ($.firewallId == null) {
                throw new MissingRequiredPropertyException("FirewallDeviceArgs", "firewallId");
            }
            return $;
        }
    }

}
