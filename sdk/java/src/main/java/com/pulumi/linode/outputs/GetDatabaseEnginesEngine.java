// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseEnginesEngine {
    /**
     * @return The Managed Database engine type.
     * 
     */
    private String engine;
    /**
     * @return The Managed Database engine ID in engine/version format.
     * 
     */
    private String id;
    /**
     * @return The Managed Database engine version.
     * 
     */
    private String version;

    private GetDatabaseEnginesEngine() {}
    /**
     * @return The Managed Database engine type.
     * 
     */
    public String engine() {
        return this.engine;
    }
    /**
     * @return The Managed Database engine ID in engine/version format.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Managed Database engine version.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseEnginesEngine defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String engine;
        private String id;
        private String version;
        public Builder() {}
        public Builder(GetDatabaseEnginesEngine defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.engine = defaults.engine;
    	      this.id = defaults.id;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder engine(String engine) {
            if (engine == null) {
              throw new MissingRequiredPropertyException("GetDatabaseEnginesEngine", "engine");
            }
            this.engine = engine;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatabaseEnginesEngine", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetDatabaseEnginesEngine", "version");
            }
            this.version = version;
            return this;
        }
        public GetDatabaseEnginesEngine build() {
            final var _resultValue = new GetDatabaseEnginesEngine();
            _resultValue.engine = engine;
            _resultValue.id = id;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
