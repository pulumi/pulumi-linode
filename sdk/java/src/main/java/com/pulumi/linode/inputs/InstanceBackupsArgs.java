// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.linode.inputs.InstanceBackupsScheduleArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceBackupsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceBackupsArgs Empty = new InstanceBackupsArgs();

    /**
     * Whether this Backup is available for restoration.
     * 
     */
    @Import(name="available")
    private @Nullable Output<Boolean> available;

    /**
     * @return Whether this Backup is available for restoration.
     * 
     */
    public Optional<Output<Boolean>> available() {
        return Optional.ofNullable(this.available);
    }

    /**
     * If this Linode has the Backup service enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If this Linode has the Backup service enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="schedule")
    private @Nullable Output<InstanceBackupsScheduleArgs> schedule;

    public Optional<Output<InstanceBackupsScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private InstanceBackupsArgs() {}

    private InstanceBackupsArgs(InstanceBackupsArgs $) {
        this.available = $.available;
        this.enabled = $.enabled;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceBackupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceBackupsArgs $;

        public Builder() {
            $ = new InstanceBackupsArgs();
        }

        public Builder(InstanceBackupsArgs defaults) {
            $ = new InstanceBackupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param available Whether this Backup is available for restoration.
         * 
         * @return builder
         * 
         */
        public Builder available(@Nullable Output<Boolean> available) {
            $.available = available;
            return this;
        }

        /**
         * @param available Whether this Backup is available for restoration.
         * 
         * @return builder
         * 
         */
        public Builder available(Boolean available) {
            return available(Output.of(available));
        }

        /**
         * @param enabled If this Linode has the Backup service enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If this Linode has the Backup service enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder schedule(@Nullable Output<InstanceBackupsScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(InstanceBackupsScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public InstanceBackupsArgs build() {
            return $;
        }
    }

}
