// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSshkeysSshkey extends com.pulumi.resources.InvokeArgs {

    public static final GetSshkeysSshkey Empty = new GetSshkeysSshkey();

    /**
     * The date this key was added.
     * 
     */
    @Import(name="created", required=true)
    private String created;

    /**
     * @return The date this key was added.
     * 
     */
    public String created() {
        return this.created;
    }

    /**
     * The ID of the SSH Key.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the SSH Key.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The label of the SSH Key.
     * 
     */
    @Import(name="label", required=true)
    private String label;

    /**
     * @return The label of the SSH Key.
     * 
     */
    public String label() {
        return this.label;
    }

    /**
     * The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.
     * 
     */
    @Import(name="sshKey", required=true)
    private String sshKey;

    /**
     * @return The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.
     * 
     */
    public String sshKey() {
        return this.sshKey;
    }

    private GetSshkeysSshkey() {}

    private GetSshkeysSshkey(GetSshkeysSshkey $) {
        this.created = $.created;
        this.id = $.id;
        this.label = $.label;
        this.sshKey = $.sshKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSshkeysSshkey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSshkeysSshkey $;

        public Builder() {
            $ = new GetSshkeysSshkey();
        }

        public Builder(GetSshkeysSshkey defaults) {
            $ = new GetSshkeysSshkey(Objects.requireNonNull(defaults));
        }

        /**
         * @param created The date this key was added.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            $.created = created;
            return this;
        }

        /**
         * @param id The ID of the SSH Key.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param label The label of the SSH Key.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            $.label = label;
            return this;
        }

        /**
         * @param sshKey The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.
         * 
         * @return builder
         * 
         */
        public Builder sshKey(String sshKey) {
            $.sshKey = sshKey;
            return this;
        }

        public GetSshkeysSshkey build() {
            if ($.created == null) {
                throw new MissingRequiredPropertyException("GetSshkeysSshkey", "created");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("GetSshkeysSshkey", "label");
            }
            if ($.sshKey == null) {
                throw new MissingRequiredPropertyException("GetSshkeysSshkey", "sshKey");
            }
            return $;
        }
    }

}
