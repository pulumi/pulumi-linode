// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetDatabaseBackupsBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetDatabaseBackupsBackupArgs Empty = new GetDatabaseBackupsBackupArgs();

    /**
     * A time value given in a combined date and time format that represents when the database backup was created.
     * 
     */
    @Import(name="created", required=true)
    private Output<String> created;

    /**
     * @return A time value given in a combined date and time format that represents when the database backup was created.
     * 
     */
    public Output<String> created() {
        return this.created;
    }

    /**
     * The ID of the database backup object.
     * 
     */
    @Import(name="id", required=true)
    private Output<Integer> id;

    /**
     * @return The ID of the database backup object.
     * 
     */
    public Output<Integer> id() {
        return this.id;
    }

    /**
     * The database backup’s label, for display purposes only.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return The database backup’s label, for display purposes only.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * The type of database backup, determined by how the backup was created.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of database backup, determined by how the backup was created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetDatabaseBackupsBackupArgs() {}

    private GetDatabaseBackupsBackupArgs(GetDatabaseBackupsBackupArgs $) {
        this.created = $.created;
        this.id = $.id;
        this.label = $.label;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseBackupsBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseBackupsBackupArgs $;

        public Builder() {
            $ = new GetDatabaseBackupsBackupArgs();
        }

        public Builder(GetDatabaseBackupsBackupArgs defaults) {
            $ = new GetDatabaseBackupsBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param created A time value given in a combined date and time format that represents when the database backup was created.
         * 
         * @return builder
         * 
         */
        public Builder created(Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created A time value given in a combined date and time format that represents when the database backup was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param id The ID of the database backup object.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the database backup object.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        /**
         * @param label The database backup’s label, for display purposes only.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The database backup’s label, for display purposes only.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param type The type of database backup, determined by how the backup was created.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of database backup, determined by how the backup was created.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetDatabaseBackupsBackupArgs build() {
            if ($.created == null) {
                throw new MissingRequiredPropertyException("GetDatabaseBackupsBackupArgs", "created");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetDatabaseBackupsBackupArgs", "id");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("GetDatabaseBackupsBackupArgs", "label");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetDatabaseBackupsBackupArgs", "type");
            }
            return $;
        }
    }

}
