// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetMaintenancePoliciesMaintenancePolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetMaintenancePoliciesMaintenancePolicy Empty = new GetMaintenancePoliciesMaintenancePolicy();

    /**
     * Description of this policy
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Description of this policy
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * Whether this is the default policy for the account.
     * 
     */
    @Import(name="isDefault", required=true)
    private Boolean isDefault;

    /**
     * @return Whether this is the default policy for the account.
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }

    /**
     * The label for this policy.
     * 
     */
    @Import(name="label", required=true)
    private String label;

    /**
     * @return The label for this policy.
     * 
     */
    public String label() {
        return this.label;
    }

    /**
     * The notification lead time in seconds.
     * 
     */
    @Import(name="notificationPeriodSec", required=true)
    private Integer notificationPeriodSec;

    /**
     * @return The notification lead time in seconds.
     * 
     */
    public Integer notificationPeriodSec() {
        return this.notificationPeriodSec;
    }

    /**
     * Unique identifier for this policy
     * 
     */
    @Import(name="slug", required=true)
    private String slug;

    /**
     * @return Unique identifier for this policy
     * 
     */
    public String slug() {
        return this.slug;
    }

    /**
     * The type of action taken during maintenance.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of action taken during maintenance.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetMaintenancePoliciesMaintenancePolicy() {}

    private GetMaintenancePoliciesMaintenancePolicy(GetMaintenancePoliciesMaintenancePolicy $) {
        this.description = $.description;
        this.isDefault = $.isDefault;
        this.label = $.label;
        this.notificationPeriodSec = $.notificationPeriodSec;
        this.slug = $.slug;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMaintenancePoliciesMaintenancePolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMaintenancePoliciesMaintenancePolicy $;

        public Builder() {
            $ = new GetMaintenancePoliciesMaintenancePolicy();
        }

        public Builder(GetMaintenancePoliciesMaintenancePolicy defaults) {
            $ = new GetMaintenancePoliciesMaintenancePolicy(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of this policy
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param isDefault Whether this is the default policy for the account.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param label The label for this policy.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            $.label = label;
            return this;
        }

        /**
         * @param notificationPeriodSec The notification lead time in seconds.
         * 
         * @return builder
         * 
         */
        public Builder notificationPeriodSec(Integer notificationPeriodSec) {
            $.notificationPeriodSec = notificationPeriodSec;
            return this;
        }

        /**
         * @param slug Unique identifier for this policy
         * 
         * @return builder
         * 
         */
        public Builder slug(String slug) {
            $.slug = slug;
            return this;
        }

        /**
         * @param type The type of action taken during maintenance.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetMaintenancePoliciesMaintenancePolicy build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("GetMaintenancePoliciesMaintenancePolicy", "description");
            }
            if ($.isDefault == null) {
                throw new MissingRequiredPropertyException("GetMaintenancePoliciesMaintenancePolicy", "isDefault");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("GetMaintenancePoliciesMaintenancePolicy", "label");
            }
            if ($.notificationPeriodSec == null) {
                throw new MissingRequiredPropertyException("GetMaintenancePoliciesMaintenancePolicy", "notificationPeriodSec");
            }
            if ($.slug == null) {
                throw new MissingRequiredPropertyException("GetMaintenancePoliciesMaintenancePolicy", "slug");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetMaintenancePoliciesMaintenancePolicy", "type");
            }
            return $;
        }
    }

}
