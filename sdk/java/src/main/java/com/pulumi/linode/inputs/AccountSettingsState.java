// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final AccountSettingsState Empty = new AccountSettingsState();

    /**
     * The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
     * 
     */
    @Import(name="backupsEnabled")
    private @Nullable Output<Boolean> backupsEnabled;

    /**
     * @return The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
     * 
     */
    public Optional<Output<Boolean>> backupsEnabled() {
        return Optional.ofNullable(this.backupsEnabled);
    }

    /**
     * The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://www.linode.com/docs/api/longview/#longview-subscriptions-list) ID or null for Longview Free.
     * 
     */
    @Import(name="longviewSubscription")
    private @Nullable Output<String> longviewSubscription;

    /**
     * @return The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://www.linode.com/docs/api/longview/#longview-subscriptions-list) ID or null for Longview Free.
     * 
     */
    public Optional<Output<String>> longviewSubscription() {
        return Optional.ofNullable(this.longviewSubscription);
    }

    /**
     * Enables monitoring for connectivity, response, and total request time.
     * 
     */
    @Import(name="managed")
    private @Nullable Output<Boolean> managed;

    /**
     * @return Enables monitoring for connectivity, response, and total request time.
     * 
     */
    public Optional<Output<Boolean>> managed() {
        return Optional.ofNullable(this.managed);
    }

    /**
     * Enables network helper across all users by default for new Linodes and Linode Configs.
     * 
     */
    @Import(name="networkHelper")
    private @Nullable Output<Boolean> networkHelper;

    /**
     * @return Enables network helper across all users by default for new Linodes and Linode Configs.
     * 
     */
    public Optional<Output<Boolean>> networkHelper() {
        return Optional.ofNullable(this.networkHelper);
    }

    /**
     * A string describing the status of this account&#39;s Object Storage service enrollment.
     * 
     */
    @Import(name="objectStorage")
    private @Nullable Output<String> objectStorage;

    /**
     * @return A string describing the status of this account&#39;s Object Storage service enrollment.
     * 
     */
    public Optional<Output<String>> objectStorage() {
        return Optional.ofNullable(this.objectStorage);
    }

    private AccountSettingsState() {}

    private AccountSettingsState(AccountSettingsState $) {
        this.backupsEnabled = $.backupsEnabled;
        this.longviewSubscription = $.longviewSubscription;
        this.managed = $.managed;
        this.networkHelper = $.networkHelper;
        this.objectStorage = $.objectStorage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountSettingsState $;

        public Builder() {
            $ = new AccountSettingsState();
        }

        public Builder(AccountSettingsState defaults) {
            $ = new AccountSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupsEnabled The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
         * 
         * @return builder
         * 
         */
        public Builder backupsEnabled(@Nullable Output<Boolean> backupsEnabled) {
            $.backupsEnabled = backupsEnabled;
            return this;
        }

        /**
         * @param backupsEnabled The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
         * 
         * @return builder
         * 
         */
        public Builder backupsEnabled(Boolean backupsEnabled) {
            return backupsEnabled(Output.of(backupsEnabled));
        }

        /**
         * @param longviewSubscription The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://www.linode.com/docs/api/longview/#longview-subscriptions-list) ID or null for Longview Free.
         * 
         * @return builder
         * 
         */
        public Builder longviewSubscription(@Nullable Output<String> longviewSubscription) {
            $.longviewSubscription = longviewSubscription;
            return this;
        }

        /**
         * @param longviewSubscription The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://www.linode.com/docs/api/longview/#longview-subscriptions-list) ID or null for Longview Free.
         * 
         * @return builder
         * 
         */
        public Builder longviewSubscription(String longviewSubscription) {
            return longviewSubscription(Output.of(longviewSubscription));
        }

        /**
         * @param managed Enables monitoring for connectivity, response, and total request time.
         * 
         * @return builder
         * 
         */
        public Builder managed(@Nullable Output<Boolean> managed) {
            $.managed = managed;
            return this;
        }

        /**
         * @param managed Enables monitoring for connectivity, response, and total request time.
         * 
         * @return builder
         * 
         */
        public Builder managed(Boolean managed) {
            return managed(Output.of(managed));
        }

        /**
         * @param networkHelper Enables network helper across all users by default for new Linodes and Linode Configs.
         * 
         * @return builder
         * 
         */
        public Builder networkHelper(@Nullable Output<Boolean> networkHelper) {
            $.networkHelper = networkHelper;
            return this;
        }

        /**
         * @param networkHelper Enables network helper across all users by default for new Linodes and Linode Configs.
         * 
         * @return builder
         * 
         */
        public Builder networkHelper(Boolean networkHelper) {
            return networkHelper(Output.of(networkHelper));
        }

        /**
         * @param objectStorage A string describing the status of this account&#39;s Object Storage service enrollment.
         * 
         * @return builder
         * 
         */
        public Builder objectStorage(@Nullable Output<String> objectStorage) {
            $.objectStorage = objectStorage;
            return this;
        }

        /**
         * @param objectStorage A string describing the status of this account&#39;s Object Storage service enrollment.
         * 
         * @return builder
         * 
         */
        public Builder objectStorage(String objectStorage) {
            return objectStorage(Output.of(objectStorage));
        }

        public AccountSettingsState build() {
            return $;
        }
    }

}
