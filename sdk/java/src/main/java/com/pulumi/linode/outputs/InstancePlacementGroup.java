// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstancePlacementGroup {
    /**
     * @return The affinity policy enforced by the Placement Group.
     * 
     */
    private @Nullable String affinityType;
    private @Nullable Boolean compliantOnly;
    /**
     * @return The ID of the Placement Group.
     * 
     */
    private Integer id;
    /**
     * @return Whether the Placement Group enforces strict compliance.
     * 
     */
    private @Nullable Boolean isStrict;
    /**
     * @return The Linode&#39;s label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
     * 
     */
    private @Nullable String label;

    private InstancePlacementGroup() {}
    /**
     * @return The affinity policy enforced by the Placement Group.
     * 
     */
    public Optional<String> affinityType() {
        return Optional.ofNullable(this.affinityType);
    }
    public Optional<Boolean> compliantOnly() {
        return Optional.ofNullable(this.compliantOnly);
    }
    /**
     * @return The ID of the Placement Group.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return Whether the Placement Group enforces strict compliance.
     * 
     */
    public Optional<Boolean> isStrict() {
        return Optional.ofNullable(this.isStrict);
    }
    /**
     * @return The Linode&#39;s label is for display purposes only. If no label is provided for a Linode, a default will be assigned.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePlacementGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String affinityType;
        private @Nullable Boolean compliantOnly;
        private Integer id;
        private @Nullable Boolean isStrict;
        private @Nullable String label;
        public Builder() {}
        public Builder(InstancePlacementGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affinityType = defaults.affinityType;
    	      this.compliantOnly = defaults.compliantOnly;
    	      this.id = defaults.id;
    	      this.isStrict = defaults.isStrict;
    	      this.label = defaults.label;
        }

        @CustomType.Setter
        public Builder affinityType(@Nullable String affinityType) {

            this.affinityType = affinityType;
            return this;
        }
        @CustomType.Setter
        public Builder compliantOnly(@Nullable Boolean compliantOnly) {

            this.compliantOnly = compliantOnly;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("InstancePlacementGroup", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isStrict(@Nullable Boolean isStrict) {

            this.isStrict = isStrict;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        public InstancePlacementGroup build() {
            final var _resultValue = new InstancePlacementGroup();
            _resultValue.affinityType = affinityType;
            _resultValue.compliantOnly = compliantOnly;
            _resultValue.id = id;
            _resultValue.isStrict = isStrict;
            _resultValue.label = label;
            return _resultValue;
        }
    }
}
