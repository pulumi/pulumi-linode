// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetIpv6RangesRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetIpv6RangesRangeArgs Empty = new GetIpv6RangesRangeArgs();

    /**
     * The prefix length of the address, denoting how many addresses can be assigned from this range.
     * 
     */
    @Import(name="prefix", required=true)
    private Output<Integer> prefix;

    /**
     * @return The prefix length of the address, denoting how many addresses can be assigned from this range.
     * 
     */
    public Output<Integer> prefix() {
        return this.prefix;
    }

    /**
     * The IPv6 address of this range.
     * 
     */
    @Import(name="range", required=true)
    private Output<String> range;

    /**
     * @return The IPv6 address of this range.
     * 
     */
    public Output<String> range() {
        return this.range;
    }

    /**
     * The region for this range of IPv6 addresses.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region for this range of IPv6 addresses.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * The IPv6 SLAAC address.
     * 
     */
    @Import(name="routeTarget", required=true)
    private Output<String> routeTarget;

    /**
     * @return The IPv6 SLAAC address.
     * 
     */
    public Output<String> routeTarget() {
        return this.routeTarget;
    }

    private GetIpv6RangesRangeArgs() {}

    private GetIpv6RangesRangeArgs(GetIpv6RangesRangeArgs $) {
        this.prefix = $.prefix;
        this.range = $.range;
        this.region = $.region;
        this.routeTarget = $.routeTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpv6RangesRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpv6RangesRangeArgs $;

        public Builder() {
            $ = new GetIpv6RangesRangeArgs();
        }

        public Builder(GetIpv6RangesRangeArgs defaults) {
            $ = new GetIpv6RangesRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix The prefix length of the address, denoting how many addresses can be assigned from this range.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<Integer> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix The prefix length of the address, denoting how many addresses can be assigned from this range.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Integer prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param range The IPv6 address of this range.
         * 
         * @return builder
         * 
         */
        public Builder range(Output<String> range) {
            $.range = range;
            return this;
        }

        /**
         * @param range The IPv6 address of this range.
         * 
         * @return builder
         * 
         */
        public Builder range(String range) {
            return range(Output.of(range));
        }

        /**
         * @param region The region for this range of IPv6 addresses.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region for this range of IPv6 addresses.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param routeTarget The IPv6 SLAAC address.
         * 
         * @return builder
         * 
         */
        public Builder routeTarget(Output<String> routeTarget) {
            $.routeTarget = routeTarget;
            return this;
        }

        /**
         * @param routeTarget The IPv6 SLAAC address.
         * 
         * @return builder
         * 
         */
        public Builder routeTarget(String routeTarget) {
            return routeTarget(Output.of(routeTarget));
        }

        public GetIpv6RangesRangeArgs build() {
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("GetIpv6RangesRangeArgs", "prefix");
            }
            if ($.range == null) {
                throw new MissingRequiredPropertyException("GetIpv6RangesRangeArgs", "range");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetIpv6RangesRangeArgs", "region");
            }
            if ($.routeTarget == null) {
                throw new MissingRequiredPropertyException("GetIpv6RangesRangeArgs", "routeTarget");
            }
            return $;
        }
    }

}
