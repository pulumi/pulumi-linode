// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.linode.NetworkingIpArgs;
import com.pulumi.linode.Utilities;
import com.pulumi.linode.inputs.NetworkingIpState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="linode:index/networkingIp:NetworkingIp")
public class NetworkingIp extends com.pulumi.resources.CustomResource {
    /**
     * The allocated IPv4 address.
     * 
     */
    @Export(name="address", refs={String.class}, tree="[0]")
    private Output<String> address;

    /**
     * @return The allocated IPv4 address.
     * 
     */
    public Output<String> address() {
        return this.address;
    }
    /**
     * The ID of the Linode to allocate an IPv4 address for. Required when reserved is false or not set.
     * 
     */
    @Export(name="linodeId", refs={Integer.class}, tree="[0]")
    private Output<Integer> linodeId;

    /**
     * @return The ID of the Linode to allocate an IPv4 address for. Required when reserved is false or not set.
     * 
     */
    public Output<Integer> linodeId() {
        return this.linodeId;
    }
    /**
     * Whether the IPv4 address is public or private.
     * 
     */
    @Export(name="public", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> public_;

    /**
     * @return Whether the IPv4 address is public or private.
     * 
     */
    public Output<Boolean> public_() {
        return this.public_;
    }
    /**
     * The region for the reserved IPv4 address. Required when reserved is true and linode_id is not set.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region for the reserved IPv4 address. Required when reserved is true and linode_id is not set.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Whether the IPv4 address should be reserved.
     * 
     */
    @Export(name="reserved", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reserved;

    /**
     * @return Whether the IPv4 address should be reserved.
     * 
     */
    public Output<Boolean> reserved() {
        return this.reserved;
    }
    /**
     * The type of IP address (ipv4).
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of IP address (ipv4).
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkingIp(java.lang.String name) {
        this(name, NetworkingIpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkingIp(java.lang.String name, @Nullable NetworkingIpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkingIp(java.lang.String name, @Nullable NetworkingIpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/networkingIp:NetworkingIp", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetworkingIp(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkingIpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/networkingIp:NetworkingIp", name, state, makeResourceOptions(options, id), false);
    }

    private static NetworkingIpArgs makeArgs(@Nullable NetworkingIpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkingIpArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkingIp get(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkingIpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkingIp(name, id, state, options);
    }
}
