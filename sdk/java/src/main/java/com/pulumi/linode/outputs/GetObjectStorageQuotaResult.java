// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetObjectStorageQuotaQuotaUsage;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetObjectStorageQuotaResult {
    /**
     * @return The description of the Object Storage quota.
     * 
     */
    private String description;
    /**
     * @return The type of the S3 endpoint of the Object Storage.
     * 
     */
    private String endpointType;
    /**
     * @return The unique ID of the Object Storage quota data source.
     * 
     */
    private String id;
    private String quotaId;
    /**
     * @return The maximum quantity allowed by the quota.
     * 
     */
    private Integer quotaLimit;
    /**
     * @return The name of the Object Storage quota.
     * 
     */
    private String quotaName;
    /**
     * @return The usage data for a specific Object Storage related quota on your account. For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-quota-usage).
     * 
     */
    private GetObjectStorageQuotaQuotaUsage quotaUsage;
    /**
     * @return The specific Object Storage resource for the quota.
     * 
     */
    private String resourceMetric;
    /**
     * @return The S3 endpoint URL of the Object Storage, based on the `endpoint_type` and `region`.
     * 
     */
    private String s3Endpoint;

    private GetObjectStorageQuotaResult() {}
    /**
     * @return The description of the Object Storage quota.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The type of the S3 endpoint of the Object Storage.
     * 
     */
    public String endpointType() {
        return this.endpointType;
    }
    /**
     * @return The unique ID of the Object Storage quota data source.
     * 
     */
    public String id() {
        return this.id;
    }
    public String quotaId() {
        return this.quotaId;
    }
    /**
     * @return The maximum quantity allowed by the quota.
     * 
     */
    public Integer quotaLimit() {
        return this.quotaLimit;
    }
    /**
     * @return The name of the Object Storage quota.
     * 
     */
    public String quotaName() {
        return this.quotaName;
    }
    /**
     * @return The usage data for a specific Object Storage related quota on your account. For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-object-storage-quota-usage).
     * 
     */
    public GetObjectStorageQuotaQuotaUsage quotaUsage() {
        return this.quotaUsage;
    }
    /**
     * @return The specific Object Storage resource for the quota.
     * 
     */
    public String resourceMetric() {
        return this.resourceMetric;
    }
    /**
     * @return The S3 endpoint URL of the Object Storage, based on the `endpoint_type` and `region`.
     * 
     */
    public String s3Endpoint() {
        return this.s3Endpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetObjectStorageQuotaResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String endpointType;
        private String id;
        private String quotaId;
        private Integer quotaLimit;
        private String quotaName;
        private GetObjectStorageQuotaQuotaUsage quotaUsage;
        private String resourceMetric;
        private String s3Endpoint;
        public Builder() {}
        public Builder(GetObjectStorageQuotaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.endpointType = defaults.endpointType;
    	      this.id = defaults.id;
    	      this.quotaId = defaults.quotaId;
    	      this.quotaLimit = defaults.quotaLimit;
    	      this.quotaName = defaults.quotaName;
    	      this.quotaUsage = defaults.quotaUsage;
    	      this.resourceMetric = defaults.resourceMetric;
    	      this.s3Endpoint = defaults.s3Endpoint;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endpointType(String endpointType) {
            if (endpointType == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "endpointType");
            }
            this.endpointType = endpointType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder quotaId(String quotaId) {
            if (quotaId == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "quotaId");
            }
            this.quotaId = quotaId;
            return this;
        }
        @CustomType.Setter
        public Builder quotaLimit(Integer quotaLimit) {
            if (quotaLimit == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "quotaLimit");
            }
            this.quotaLimit = quotaLimit;
            return this;
        }
        @CustomType.Setter
        public Builder quotaName(String quotaName) {
            if (quotaName == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "quotaName");
            }
            this.quotaName = quotaName;
            return this;
        }
        @CustomType.Setter
        public Builder quotaUsage(GetObjectStorageQuotaQuotaUsage quotaUsage) {
            if (quotaUsage == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "quotaUsage");
            }
            this.quotaUsage = quotaUsage;
            return this;
        }
        @CustomType.Setter
        public Builder resourceMetric(String resourceMetric) {
            if (resourceMetric == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "resourceMetric");
            }
            this.resourceMetric = resourceMetric;
            return this;
        }
        @CustomType.Setter
        public Builder s3Endpoint(String s3Endpoint) {
            if (s3Endpoint == null) {
              throw new MissingRequiredPropertyException("GetObjectStorageQuotaResult", "s3Endpoint");
            }
            this.s3Endpoint = s3Endpoint;
            return this;
        }
        public GetObjectStorageQuotaResult build() {
            final var _resultValue = new GetObjectStorageQuotaResult();
            _resultValue.description = description;
            _resultValue.endpointType = endpointType;
            _resultValue.id = id;
            _resultValue.quotaId = quotaId;
            _resultValue.quotaLimit = quotaLimit;
            _resultValue.quotaName = quotaName;
            _resultValue.quotaUsage = quotaUsage;
            _resultValue.resourceMetric = resourceMetric;
            _resultValue.s3Endpoint = s3Endpoint;
            return _resultValue;
        }
    }
}
