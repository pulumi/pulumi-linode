// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceConfigDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConfigDeviceArgs Empty = new InstanceConfigDeviceArgs();

    /**
     * The Disk ID to map to this disk slot
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    /**
     * @return The Disk ID to map to this disk slot
     * 
     */
    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * The Disk ID to map to this disk slot
     * 
     */
    @Import(name="diskId")
    private @Nullable Output<Integer> diskId;

    /**
     * @return The Disk ID to map to this disk slot
     * 
     */
    public Optional<Output<Integer>> diskId() {
        return Optional.ofNullable(this.diskId);
    }

    /**
     * The Block Storage volume ID to map to this disk slot
     * 
     */
    @Import(name="volumeId")
    private @Nullable Output<Integer> volumeId;

    /**
     * @return The Block Storage volume ID to map to this disk slot
     * 
     */
    public Optional<Output<Integer>> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    private InstanceConfigDeviceArgs() {}

    private InstanceConfigDeviceArgs(InstanceConfigDeviceArgs $) {
        this.deviceName = $.deviceName;
        this.diskId = $.diskId;
        this.volumeId = $.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConfigDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConfigDeviceArgs $;

        public Builder() {
            $ = new InstanceConfigDeviceArgs();
        }

        public Builder(InstanceConfigDeviceArgs defaults) {
            $ = new InstanceConfigDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceName The Disk ID to map to this disk slot
         * 
         * @return builder
         * 
         */
        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        /**
         * @param deviceName The Disk ID to map to this disk slot
         * 
         * @return builder
         * 
         */
        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        /**
         * @param diskId The Disk ID to map to this disk slot
         * 
         * @return builder
         * 
         */
        public Builder diskId(@Nullable Output<Integer> diskId) {
            $.diskId = diskId;
            return this;
        }

        /**
         * @param diskId The Disk ID to map to this disk slot
         * 
         * @return builder
         * 
         */
        public Builder diskId(Integer diskId) {
            return diskId(Output.of(diskId));
        }

        /**
         * @param volumeId The Block Storage volume ID to map to this disk slot
         * 
         * @return builder
         * 
         */
        public Builder volumeId(@Nullable Output<Integer> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        /**
         * @param volumeId The Block Storage volume ID to map to this disk slot
         * 
         * @return builder
         * 
         */
        public Builder volumeId(Integer volumeId) {
            return volumeId(Output.of(volumeId));
        }

        public InstanceConfigDeviceArgs build() {
            if ($.deviceName == null) {
                throw new MissingRequiredPropertyException("InstanceConfigDeviceArgs", "deviceName");
            }
            return $;
        }
    }

}
