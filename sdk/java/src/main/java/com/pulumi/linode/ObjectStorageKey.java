// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.linode.ObjectStorageKeyArgs;
import com.pulumi.linode.Utilities;
import com.pulumi.linode.inputs.ObjectStorageKeyState;
import com.pulumi.linode.outputs.ObjectStorageKeyBucketAccess;
import com.pulumi.linode.outputs.ObjectStorageKeyRegionsDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Linode Object Storage Key resource. This can be used to create, modify, and delete Linodes Object Storage Keys.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/post-object-storage-keys).
 * 
 * ## Example Usage
 * 
 * The following example shows how one might use this resource to create an Object Storage Key.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.ObjectStorageKey;
 * import com.pulumi.linode.ObjectStorageKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new ObjectStorageKey("foo", ObjectStorageKeyArgs.builder()
 *             .label("image-access")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * The following example shows a key with limited access.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.ObjectStorageKey;
 * import com.pulumi.linode.ObjectStorageKeyArgs;
 * import com.pulumi.linode.inputs.ObjectStorageKeyBucketAccessArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foobar = new ObjectStorageKey("foobar", ObjectStorageKeyArgs.builder()
 *             .label("my-key")
 *             .bucketAccesses(ObjectStorageKeyBucketAccessArgs.builder()
 *                 .bucketName("my-bucket-name")
 *                 .region("us-mia")
 *                 .permissions("read_write")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * The following example shows how to grant a key the explicit access to multiple buckets.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.ObjectStorageKey;
 * import com.pulumi.linode.ObjectStorageKeyArgs;
 * import com.pulumi.linode.inputs.ObjectStorageKeyBucketAccessArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new ObjectStorageKey("foo", ObjectStorageKeyArgs.builder()
 *             .label("image-access")
 *             .bucketAccesses(            
 *                 ObjectStorageKeyBucketAccessArgs.builder()
 *                     .bucketName("foobar1")
 *                     .region("us-mia")
 *                     .permissions("read_write")
 *                     .build(),
 *                 ObjectStorageKeyBucketAccessArgs.builder()
 *                     .bucketName("foobar2")
 *                     .region("gb-lon")
 *                     .permissions("read_write")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="linode:index/objectStorageKey:ObjectStorageKey")
public class ObjectStorageKey extends com.pulumi.resources.CustomResource {
    /**
     * This keypair&#39;s access key. This is not secret.
     * 
     */
    @Export(name="accessKey", refs={String.class}, tree="[0]")
    private Output<String> accessKey;

    /**
     * @return This keypair&#39;s access key. This is not secret.
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }
    /**
     * Defines this key as a Limited Access Key. Limited Access Keys restrict this Object Storage key’s access to only the bucket(s) declared in this array and define their bucket-level permissions. Not providing this block will not limit this Object Storage Key.
     * 
     */
    @Export(name="bucketAccesses", refs={List.class,ObjectStorageKeyBucketAccess.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ObjectStorageKeyBucketAccess>> bucketAccesses;

    /**
     * @return Defines this key as a Limited Access Key. Limited Access Keys restrict this Object Storage key’s access to only the bucket(s) declared in this array and define their bucket-level permissions. Not providing this block will not limit this Object Storage Key.
     * 
     */
    public Output<Optional<List<ObjectStorageKeyBucketAccess>>> bucketAccesses() {
        return Codegen.optional(this.bucketAccesses);
    }
    /**
     * The label given to this key. For display purposes only.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return The label given to this key. For display purposes only.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * Whether or not this key is a limited access key.
     * 
     */
    @Export(name="limited", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> limited;

    /**
     * @return Whether or not this key is a limited access key.
     * 
     */
    public Output<Boolean> limited() {
        return this.limited;
    }
    /**
     * A set of regions where the key will grant access to create buckets.
     * 
     * ***
     * 
     */
    @Export(name="regions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> regions;

    /**
     * @return A set of regions where the key will grant access to create buckets.
     * 
     * ***
     * 
     */
    public Output<List<String>> regions() {
        return this.regions;
    }
    /**
     * A set of objects containing the detailed info of the regions where this key can access.
     * 
     */
    @Export(name="regionsDetails", refs={List.class,ObjectStorageKeyRegionsDetail.class}, tree="[0,1]")
    private Output<List<ObjectStorageKeyRegionsDetail>> regionsDetails;

    /**
     * @return A set of objects containing the detailed info of the regions where this key can access.
     * 
     */
    public Output<List<ObjectStorageKeyRegionsDetail>> regionsDetails() {
        return this.regionsDetails;
    }
    /**
     * This keypair&#39;s secret key.
     * 
     */
    @Export(name="secretKey", refs={String.class}, tree="[0]")
    private Output<String> secretKey;

    /**
     * @return This keypair&#39;s secret key.
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ObjectStorageKey(java.lang.String name) {
        this(name, ObjectStorageKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ObjectStorageKey(java.lang.String name, ObjectStorageKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ObjectStorageKey(java.lang.String name, ObjectStorageKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/objectStorageKey:ObjectStorageKey", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ObjectStorageKey(java.lang.String name, Output<java.lang.String> id, @Nullable ObjectStorageKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/objectStorageKey:ObjectStorageKey", name, state, makeResourceOptions(options, id), false);
    }

    private static ObjectStorageKeyArgs makeArgs(ObjectStorageKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ObjectStorageKeyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secretKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ObjectStorageKey get(java.lang.String name, Output<java.lang.String> id, @Nullable ObjectStorageKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ObjectStorageKey(name, id, state, options);
    }
}
