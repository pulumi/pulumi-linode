// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class GetDomainZonefileArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainZonefileArgs Empty = new GetDomainZonefileArgs();

    /**
     * The associated domain&#39;s unique ID.
     * 
     */
    @Import(name="domainId", required=true)
    private Output<Integer> domainId;

    /**
     * @return The associated domain&#39;s unique ID.
     * 
     */
    public Output<Integer> domainId() {
        return this.domainId;
    }

    private GetDomainZonefileArgs() {}

    private GetDomainZonefileArgs(GetDomainZonefileArgs $) {
        this.domainId = $.domainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainZonefileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainZonefileArgs $;

        public Builder() {
            $ = new GetDomainZonefileArgs();
        }

        public Builder(GetDomainZonefileArgs defaults) {
            $ = new GetDomainZonefileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainId The associated domain&#39;s unique ID.
         * 
         * @return builder
         * 
         */
        public Builder domainId(Output<Integer> domainId) {
            $.domainId = domainId;
            return this;
        }

        /**
         * @param domainId The associated domain&#39;s unique ID.
         * 
         * @return builder
         * 
         */
        public Builder domainId(Integer domainId) {
            return domainId(Output.of(domainId));
        }

        public GetDomainZonefileArgs build() {
            if ($.domainId == null) {
                throw new MissingRequiredPropertyException("GetDomainZonefileArgs", "domainId");
            }
            return $;
        }
    }

}
