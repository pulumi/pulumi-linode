// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcIpv6Args extends com.pulumi.resources.ResourceArgs {

    public static final VpcIpv6Args Empty = new VpcIpv6Args();

    /**
     * The IPv6 range assigned to this VPC.
     * 
     */
    @Import(name="allocatedRange")
    private @Nullable Output<String> allocatedRange;

    /**
     * @return The IPv6 range assigned to this VPC.
     * 
     */
    public Optional<Output<String>> allocatedRange() {
        return Optional.ofNullable(this.allocatedRange);
    }

    /**
     * **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
     * The labeled IPv6 Inventory that the VPC Prefix should be allocated from.
     * 
     */
    @Import(name="allocationClass")
    private @Nullable Output<String> allocationClass;

    /**
     * @return **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
     * The labeled IPv6 Inventory that the VPC Prefix should be allocated from.
     * 
     */
    public Optional<Output<String>> allocationClass() {
        return Optional.ofNullable(this.allocationClass);
    }

    /**
     * The IPv6 range assigned to this VPC.
     * 
     */
    @Import(name="range")
    private @Nullable Output<String> range;

    /**
     * @return The IPv6 range assigned to this VPC.
     * 
     */
    public Optional<Output<String>> range() {
        return Optional.ofNullable(this.range);
    }

    private VpcIpv6Args() {}

    private VpcIpv6Args(VpcIpv6Args $) {
        this.allocatedRange = $.allocatedRange;
        this.allocationClass = $.allocationClass;
        this.range = $.range;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcIpv6Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcIpv6Args $;

        public Builder() {
            $ = new VpcIpv6Args();
        }

        public Builder(VpcIpv6Args defaults) {
            $ = new VpcIpv6Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocatedRange The IPv6 range assigned to this VPC.
         * 
         * @return builder
         * 
         */
        public Builder allocatedRange(@Nullable Output<String> allocatedRange) {
            $.allocatedRange = allocatedRange;
            return this;
        }

        /**
         * @param allocatedRange The IPv6 range assigned to this VPC.
         * 
         * @return builder
         * 
         */
        public Builder allocatedRange(String allocatedRange) {
            return allocatedRange(Output.of(allocatedRange));
        }

        /**
         * @param allocationClass **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
         * The labeled IPv6 Inventory that the VPC Prefix should be allocated from.
         * 
         * @return builder
         * 
         */
        public Builder allocationClass(@Nullable Output<String> allocationClass) {
            $.allocationClass = allocationClass;
            return this;
        }

        /**
         * @param allocationClass **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
         * The labeled IPv6 Inventory that the VPC Prefix should be allocated from.
         * 
         * @return builder
         * 
         */
        public Builder allocationClass(String allocationClass) {
            return allocationClass(Output.of(allocationClass));
        }

        /**
         * @param range The IPv6 range assigned to this VPC.
         * 
         * @return builder
         * 
         */
        public Builder range(@Nullable Output<String> range) {
            $.range = range;
            return this;
        }

        /**
         * @param range The IPv6 range assigned to this VPC.
         * 
         * @return builder
         * 
         */
        public Builder range(String range) {
            return range(Output.of(range));
        }

        public VpcIpv6Args build() {
            return $;
        }
    }

}
