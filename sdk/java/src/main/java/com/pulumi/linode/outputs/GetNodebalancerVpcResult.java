// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNodebalancerVpcResult {
    private Integer id;
    /**
     * @return A CIDR range for the VPC&#39;s IPv4 addresses. The NodeBalancer sources IP addresses from this range when routing traffic to the backend VPC nodes.
     * 
     */
    private String ipv4Range;
    private Integer nodebalancerId;
    /**
     * @return The ID of this configuration&#39;s VPC subnet.
     * 
     */
    private Integer subnetId;
    /**
     * @return The ID of this configuration&#39;s VPC.
     * 
     */
    private Integer vpcId;

    private GetNodebalancerVpcResult() {}
    public Integer id() {
        return this.id;
    }
    /**
     * @return A CIDR range for the VPC&#39;s IPv4 addresses. The NodeBalancer sources IP addresses from this range when routing traffic to the backend VPC nodes.
     * 
     */
    public String ipv4Range() {
        return this.ipv4Range;
    }
    public Integer nodebalancerId() {
        return this.nodebalancerId;
    }
    /**
     * @return The ID of this configuration&#39;s VPC subnet.
     * 
     */
    public Integer subnetId() {
        return this.subnetId;
    }
    /**
     * @return The ID of this configuration&#39;s VPC.
     * 
     */
    public Integer vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodebalancerVpcResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer id;
        private String ipv4Range;
        private Integer nodebalancerId;
        private Integer subnetId;
        private Integer vpcId;
        public Builder() {}
        public Builder(GetNodebalancerVpcResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ipv4Range = defaults.ipv4Range;
    	      this.nodebalancerId = defaults.nodebalancerId;
    	      this.subnetId = defaults.subnetId;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNodebalancerVpcResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Range(String ipv4Range) {
            if (ipv4Range == null) {
              throw new MissingRequiredPropertyException("GetNodebalancerVpcResult", "ipv4Range");
            }
            this.ipv4Range = ipv4Range;
            return this;
        }
        @CustomType.Setter
        public Builder nodebalancerId(Integer nodebalancerId) {
            if (nodebalancerId == null) {
              throw new MissingRequiredPropertyException("GetNodebalancerVpcResult", "nodebalancerId");
            }
            this.nodebalancerId = nodebalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(Integer subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetNodebalancerVpcResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(Integer vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetNodebalancerVpcResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        public GetNodebalancerVpcResult build() {
            final var _resultValue = new GetNodebalancerVpcResult();
            _resultValue.id = id;
            _resultValue.ipv4Range = ipv4Range;
            _resultValue.nodebalancerId = nodebalancerId;
            _resultValue.subnetId = subnetId;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
