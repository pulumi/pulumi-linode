// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetLkeClusterControlPlaneAclAddress extends com.pulumi.resources.InvokeArgs {

    public static final GetLkeClusterControlPlaneAclAddress Empty = new GetLkeClusterControlPlaneAclAddress();

    /**
     * A set of individual ipv4 addresses or CIDRs to ALLOW.
     * 
     */
    @Import(name="ipv4s", required=true)
    private List<String> ipv4s;

    /**
     * @return A set of individual ipv4 addresses or CIDRs to ALLOW.
     * 
     */
    public List<String> ipv4s() {
        return this.ipv4s;
    }

    /**
     * A set of individual ipv6 addresses or CIDRs to ALLOW.
     * 
     */
    @Import(name="ipv6s", required=true)
    private List<String> ipv6s;

    /**
     * @return A set of individual ipv6 addresses or CIDRs to ALLOW.
     * 
     */
    public List<String> ipv6s() {
        return this.ipv6s;
    }

    private GetLkeClusterControlPlaneAclAddress() {}

    private GetLkeClusterControlPlaneAclAddress(GetLkeClusterControlPlaneAclAddress $) {
        this.ipv4s = $.ipv4s;
        this.ipv6s = $.ipv6s;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeClusterControlPlaneAclAddress defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeClusterControlPlaneAclAddress $;

        public Builder() {
            $ = new GetLkeClusterControlPlaneAclAddress();
        }

        public Builder(GetLkeClusterControlPlaneAclAddress defaults) {
            $ = new GetLkeClusterControlPlaneAclAddress(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv4s A set of individual ipv4 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv4s(List<String> ipv4s) {
            $.ipv4s = ipv4s;
            return this;
        }

        /**
         * @param ipv4s A set of individual ipv4 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv4s(String... ipv4s) {
            return ipv4s(List.of(ipv4s));
        }

        /**
         * @param ipv6s A set of individual ipv6 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(List<String> ipv6s) {
            $.ipv6s = ipv6s;
            return this;
        }

        /**
         * @param ipv6s A set of individual ipv6 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(String... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }

        public GetLkeClusterControlPlaneAclAddress build() {
            if ($.ipv4s == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterControlPlaneAclAddress", "ipv4s");
            }
            if ($.ipv6s == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterControlPlaneAclAddress", "ipv6s");
            }
            return $;
        }
    }

}
