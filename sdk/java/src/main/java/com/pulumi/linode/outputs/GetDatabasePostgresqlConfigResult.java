// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetDatabasePostgresqlConfigPgStatMonitorEnable;
import com.pulumi.linode.outputs.GetDatabasePostgresqlConfigPglookout;
import com.pulumi.linode.outputs.GetDatabasePostgresqlConfigSharedBuffersPercentage;
import com.pulumi.linode.outputs.GetDatabasePostgresqlConfigWorkMem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDatabasePostgresqlConfigResult {
    private String id;
    private List<GetDatabasePostgresqlConfigPgStatMonitorEnable> pgStatMonitorEnables;
    private List<GetDatabasePostgresqlConfigPglookout> pglookouts;
    private List<GetDatabasePostgresqlConfigSharedBuffersPercentage> sharedBuffersPercentages;
    private List<GetDatabasePostgresqlConfigWorkMem> workMems;

    private GetDatabasePostgresqlConfigResult() {}
    public String id() {
        return this.id;
    }
    public List<GetDatabasePostgresqlConfigPgStatMonitorEnable> pgStatMonitorEnables() {
        return this.pgStatMonitorEnables;
    }
    public List<GetDatabasePostgresqlConfigPglookout> pglookouts() {
        return this.pglookouts;
    }
    public List<GetDatabasePostgresqlConfigSharedBuffersPercentage> sharedBuffersPercentages() {
        return this.sharedBuffersPercentages;
    }
    public List<GetDatabasePostgresqlConfigWorkMem> workMems() {
        return this.workMems;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabasePostgresqlConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetDatabasePostgresqlConfigPgStatMonitorEnable> pgStatMonitorEnables;
        private List<GetDatabasePostgresqlConfigPglookout> pglookouts;
        private List<GetDatabasePostgresqlConfigSharedBuffersPercentage> sharedBuffersPercentages;
        private List<GetDatabasePostgresqlConfigWorkMem> workMems;
        public Builder() {}
        public Builder(GetDatabasePostgresqlConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.pgStatMonitorEnables = defaults.pgStatMonitorEnables;
    	      this.pglookouts = defaults.pglookouts;
    	      this.sharedBuffersPercentages = defaults.sharedBuffersPercentages;
    	      this.workMems = defaults.workMems;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatabasePostgresqlConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pgStatMonitorEnables(List<GetDatabasePostgresqlConfigPgStatMonitorEnable> pgStatMonitorEnables) {
            if (pgStatMonitorEnables == null) {
              throw new MissingRequiredPropertyException("GetDatabasePostgresqlConfigResult", "pgStatMonitorEnables");
            }
            this.pgStatMonitorEnables = pgStatMonitorEnables;
            return this;
        }
        public Builder pgStatMonitorEnables(GetDatabasePostgresqlConfigPgStatMonitorEnable... pgStatMonitorEnables) {
            return pgStatMonitorEnables(List.of(pgStatMonitorEnables));
        }
        @CustomType.Setter
        public Builder pglookouts(List<GetDatabasePostgresqlConfigPglookout> pglookouts) {
            if (pglookouts == null) {
              throw new MissingRequiredPropertyException("GetDatabasePostgresqlConfigResult", "pglookouts");
            }
            this.pglookouts = pglookouts;
            return this;
        }
        public Builder pglookouts(GetDatabasePostgresqlConfigPglookout... pglookouts) {
            return pglookouts(List.of(pglookouts));
        }
        @CustomType.Setter
        public Builder sharedBuffersPercentages(List<GetDatabasePostgresqlConfigSharedBuffersPercentage> sharedBuffersPercentages) {
            if (sharedBuffersPercentages == null) {
              throw new MissingRequiredPropertyException("GetDatabasePostgresqlConfigResult", "sharedBuffersPercentages");
            }
            this.sharedBuffersPercentages = sharedBuffersPercentages;
            return this;
        }
        public Builder sharedBuffersPercentages(GetDatabasePostgresqlConfigSharedBuffersPercentage... sharedBuffersPercentages) {
            return sharedBuffersPercentages(List.of(sharedBuffersPercentages));
        }
        @CustomType.Setter
        public Builder workMems(List<GetDatabasePostgresqlConfigWorkMem> workMems) {
            if (workMems == null) {
              throw new MissingRequiredPropertyException("GetDatabasePostgresqlConfigResult", "workMems");
            }
            this.workMems = workMems;
            return this;
        }
        public Builder workMems(GetDatabasePostgresqlConfigWorkMem... workMems) {
            return workMems(List.of(workMems));
        }
        public GetDatabasePostgresqlConfigResult build() {
            final var _resultValue = new GetDatabasePostgresqlConfigResult();
            _resultValue.id = id;
            _resultValue.pgStatMonitorEnables = pgStatMonitorEnables;
            _resultValue.pglookouts = pglookouts;
            _resultValue.sharedBuffersPercentages = sharedBuffersPercentages;
            _resultValue.workMems = workMems;
            return _resultValue;
        }
    }
}
