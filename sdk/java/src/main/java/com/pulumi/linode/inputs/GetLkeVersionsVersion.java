// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLkeVersionsVersion extends com.pulumi.resources.InvokeArgs {

    public static final GetLkeVersionsVersion Empty = new GetLkeVersionsVersion();

    /**
     * The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The tier (`standard` or `enterprise`) of Linode LKE Versions to fetch.
     * 
     */
    @Import(name="tier", required=true)
    private String tier;

    /**
     * @return The tier (`standard` or `enterprise`) of Linode LKE Versions to fetch.
     * 
     */
    public String tier() {
        return this.tier;
    }

    private GetLkeVersionsVersion() {}

    private GetLkeVersionsVersion(GetLkeVersionsVersion $) {
        this.id = $.id;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeVersionsVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeVersionsVersion $;

        public Builder() {
            $ = new GetLkeVersionsVersion();
        }

        public Builder(GetLkeVersionsVersion defaults) {
            $ = new GetLkeVersionsVersion(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The Kubernetes version numbers available for deployment to a Kubernetes cluster in the format of [major].[minor], and the latest supported patch version.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param tier The tier (`standard` or `enterprise`) of Linode LKE Versions to fetch.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            $.tier = tier;
            return this;
        }

        public GetLkeVersionsVersion build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetLkeVersionsVersion", "id");
            }
            if ($.tier == null) {
                throw new MissingRequiredPropertyException("GetLkeVersionsVersion", "tier");
            }
            return $;
        }
    }

}
