// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LkeClusterControlPlaneAclAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final LkeClusterControlPlaneAclAddressArgs Empty = new LkeClusterControlPlaneAclAddressArgs();

    /**
     * A set of individual ipv4 addresses or CIDRs to ALLOW.
     * 
     */
    @Import(name="ipv4s")
    private @Nullable Output<List<String>> ipv4s;

    /**
     * @return A set of individual ipv4 addresses or CIDRs to ALLOW.
     * 
     */
    public Optional<Output<List<String>>> ipv4s() {
        return Optional.ofNullable(this.ipv4s);
    }

    /**
     * A set of individual ipv6 addresses or CIDRs to ALLOW.
     * 
     */
    @Import(name="ipv6s")
    private @Nullable Output<List<String>> ipv6s;

    /**
     * @return A set of individual ipv6 addresses or CIDRs to ALLOW.
     * 
     */
    public Optional<Output<List<String>>> ipv6s() {
        return Optional.ofNullable(this.ipv6s);
    }

    private LkeClusterControlPlaneAclAddressArgs() {}

    private LkeClusterControlPlaneAclAddressArgs(LkeClusterControlPlaneAclAddressArgs $) {
        this.ipv4s = $.ipv4s;
        this.ipv6s = $.ipv6s;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LkeClusterControlPlaneAclAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LkeClusterControlPlaneAclAddressArgs $;

        public Builder() {
            $ = new LkeClusterControlPlaneAclAddressArgs();
        }

        public Builder(LkeClusterControlPlaneAclAddressArgs defaults) {
            $ = new LkeClusterControlPlaneAclAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv4s A set of individual ipv4 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv4s(@Nullable Output<List<String>> ipv4s) {
            $.ipv4s = ipv4s;
            return this;
        }

        /**
         * @param ipv4s A set of individual ipv4 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv4s(List<String> ipv4s) {
            return ipv4s(Output.of(ipv4s));
        }

        /**
         * @param ipv4s A set of individual ipv4 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv4s(String... ipv4s) {
            return ipv4s(List.of(ipv4s));
        }

        /**
         * @param ipv6s A set of individual ipv6 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(@Nullable Output<List<String>> ipv6s) {
            $.ipv6s = ipv6s;
            return this;
        }

        /**
         * @param ipv6s A set of individual ipv6 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(List<String> ipv6s) {
            return ipv6s(Output.of(ipv6s));
        }

        /**
         * @param ipv6s A set of individual ipv6 addresses or CIDRs to ALLOW.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(String... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }

        public LkeClusterControlPlaneAclAddressArgs build() {
            return $;
        }
    }

}
