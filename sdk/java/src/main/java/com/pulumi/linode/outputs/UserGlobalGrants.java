// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserGlobalGrants {
    /**
     * @return The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users.
     * 
     */
    private @Nullable String accountAccess;
    /**
     * @return If true, this User may add Databases.
     * 
     */
    private @Nullable Boolean addDatabases;
    /**
     * @return If true, this User may add Domains.
     * 
     */
    private @Nullable Boolean addDomains;
    /**
     * @return If true, this User may add Firewalls.
     * 
     */
    private @Nullable Boolean addFirewalls;
    /**
     * @return If true, this User may add Images.
     * 
     */
    private @Nullable Boolean addImages;
    /**
     * @return If true, this User may create Linodes.
     * 
     */
    private @Nullable Boolean addLinodes;
    /**
     * @return If true, this User may create Longview clients and view the current plan.
     * 
     */
    private @Nullable Boolean addLongview;
    /**
     * @return If true, this User may add NodeBalancers.
     * 
     */
    private @Nullable Boolean addNodebalancers;
    /**
     * @return If true, this User may add StackScripts.
     * 
     */
    private @Nullable Boolean addStackscripts;
    /**
     * @return If true, this User may add Volumes.
     * 
     */
    private @Nullable Boolean addVolumes;
    /**
     * @return If true, this User may cancel the entire Account.
     * 
     */
    private @Nullable Boolean cancelAccount;
    /**
     * @return If true, this User may manage the Account’s Longview subscription.
     * 
     */
    private @Nullable Boolean longviewSubscription;

    private UserGlobalGrants() {}
    /**
     * @return The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users.
     * 
     */
    public Optional<String> accountAccess() {
        return Optional.ofNullable(this.accountAccess);
    }
    /**
     * @return If true, this User may add Databases.
     * 
     */
    public Optional<Boolean> addDatabases() {
        return Optional.ofNullable(this.addDatabases);
    }
    /**
     * @return If true, this User may add Domains.
     * 
     */
    public Optional<Boolean> addDomains() {
        return Optional.ofNullable(this.addDomains);
    }
    /**
     * @return If true, this User may add Firewalls.
     * 
     */
    public Optional<Boolean> addFirewalls() {
        return Optional.ofNullable(this.addFirewalls);
    }
    /**
     * @return If true, this User may add Images.
     * 
     */
    public Optional<Boolean> addImages() {
        return Optional.ofNullable(this.addImages);
    }
    /**
     * @return If true, this User may create Linodes.
     * 
     */
    public Optional<Boolean> addLinodes() {
        return Optional.ofNullable(this.addLinodes);
    }
    /**
     * @return If true, this User may create Longview clients and view the current plan.
     * 
     */
    public Optional<Boolean> addLongview() {
        return Optional.ofNullable(this.addLongview);
    }
    /**
     * @return If true, this User may add NodeBalancers.
     * 
     */
    public Optional<Boolean> addNodebalancers() {
        return Optional.ofNullable(this.addNodebalancers);
    }
    /**
     * @return If true, this User may add StackScripts.
     * 
     */
    public Optional<Boolean> addStackscripts() {
        return Optional.ofNullable(this.addStackscripts);
    }
    /**
     * @return If true, this User may add Volumes.
     * 
     */
    public Optional<Boolean> addVolumes() {
        return Optional.ofNullable(this.addVolumes);
    }
    /**
     * @return If true, this User may cancel the entire Account.
     * 
     */
    public Optional<Boolean> cancelAccount() {
        return Optional.ofNullable(this.cancelAccount);
    }
    /**
     * @return If true, this User may manage the Account’s Longview subscription.
     * 
     */
    public Optional<Boolean> longviewSubscription() {
        return Optional.ofNullable(this.longviewSubscription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserGlobalGrants defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountAccess;
        private @Nullable Boolean addDatabases;
        private @Nullable Boolean addDomains;
        private @Nullable Boolean addFirewalls;
        private @Nullable Boolean addImages;
        private @Nullable Boolean addLinodes;
        private @Nullable Boolean addLongview;
        private @Nullable Boolean addNodebalancers;
        private @Nullable Boolean addStackscripts;
        private @Nullable Boolean addVolumes;
        private @Nullable Boolean cancelAccount;
        private @Nullable Boolean longviewSubscription;
        public Builder() {}
        public Builder(UserGlobalGrants defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountAccess = defaults.accountAccess;
    	      this.addDatabases = defaults.addDatabases;
    	      this.addDomains = defaults.addDomains;
    	      this.addFirewalls = defaults.addFirewalls;
    	      this.addImages = defaults.addImages;
    	      this.addLinodes = defaults.addLinodes;
    	      this.addLongview = defaults.addLongview;
    	      this.addNodebalancers = defaults.addNodebalancers;
    	      this.addStackscripts = defaults.addStackscripts;
    	      this.addVolumes = defaults.addVolumes;
    	      this.cancelAccount = defaults.cancelAccount;
    	      this.longviewSubscription = defaults.longviewSubscription;
        }

        @CustomType.Setter
        public Builder accountAccess(@Nullable String accountAccess) {

            this.accountAccess = accountAccess;
            return this;
        }
        @CustomType.Setter
        public Builder addDatabases(@Nullable Boolean addDatabases) {

            this.addDatabases = addDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder addDomains(@Nullable Boolean addDomains) {

            this.addDomains = addDomains;
            return this;
        }
        @CustomType.Setter
        public Builder addFirewalls(@Nullable Boolean addFirewalls) {

            this.addFirewalls = addFirewalls;
            return this;
        }
        @CustomType.Setter
        public Builder addImages(@Nullable Boolean addImages) {

            this.addImages = addImages;
            return this;
        }
        @CustomType.Setter
        public Builder addLinodes(@Nullable Boolean addLinodes) {

            this.addLinodes = addLinodes;
            return this;
        }
        @CustomType.Setter
        public Builder addLongview(@Nullable Boolean addLongview) {

            this.addLongview = addLongview;
            return this;
        }
        @CustomType.Setter
        public Builder addNodebalancers(@Nullable Boolean addNodebalancers) {

            this.addNodebalancers = addNodebalancers;
            return this;
        }
        @CustomType.Setter
        public Builder addStackscripts(@Nullable Boolean addStackscripts) {

            this.addStackscripts = addStackscripts;
            return this;
        }
        @CustomType.Setter
        public Builder addVolumes(@Nullable Boolean addVolumes) {

            this.addVolumes = addVolumes;
            return this;
        }
        @CustomType.Setter
        public Builder cancelAccount(@Nullable Boolean cancelAccount) {

            this.cancelAccount = cancelAccount;
            return this;
        }
        @CustomType.Setter
        public Builder longviewSubscription(@Nullable Boolean longviewSubscription) {

            this.longviewSubscription = longviewSubscription;
            return this;
        }
        public UserGlobalGrants build() {
            final var _resultValue = new UserGlobalGrants();
            _resultValue.accountAccess = accountAccess;
            _resultValue.addDatabases = addDatabases;
            _resultValue.addDomains = addDomains;
            _resultValue.addFirewalls = addFirewalls;
            _resultValue.addImages = addImages;
            _resultValue.addLinodes = addLinodes;
            _resultValue.addLongview = addLongview;
            _resultValue.addNodebalancers = addNodebalancers;
            _resultValue.addStackscripts = addStackscripts;
            _resultValue.addVolumes = addVolumes;
            _resultValue.cancelAccount = cancelAccount;
            _resultValue.longviewSubscription = longviewSubscription;
            return _resultValue;
        }
    }
}
