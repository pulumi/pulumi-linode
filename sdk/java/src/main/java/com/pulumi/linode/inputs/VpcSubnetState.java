// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.linode.inputs.VpcSubnetIpv6Args;
import com.pulumi.linode.inputs.VpcSubnetLinodeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcSubnetState extends com.pulumi.resources.ResourceArgs {

    public static final VpcSubnetState Empty = new VpcSubnetState();

    /**
     * The date and time when the VPC was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The date and time when the VPC was created.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The IPv4 range of this subnet in CIDR format.
     * 
     * * `ipv6` - (Optional) A list of IPv6 ranges under this VPC subnet. NOTE: IPv6 VPCs may not currently be available to all users.
     * 
     */
    @Import(name="ipv4")
    private @Nullable Output<String> ipv4;

    /**
     * @return The IPv4 range of this subnet in CIDR format.
     * 
     * * `ipv6` - (Optional) A list of IPv6 ranges under this VPC subnet. NOTE: IPv6 VPCs may not currently be available to all users.
     * 
     */
    public Optional<Output<String>> ipv4() {
        return Optional.ofNullable(this.ipv4);
    }

    /**
     * The IPv6 ranges of this subnet.
     * 
     */
    @Import(name="ipv6s")
    private @Nullable Output<List<VpcSubnetIpv6Args>> ipv6s;

    /**
     * @return The IPv6 ranges of this subnet.
     * 
     */
    public Optional<Output<List<VpcSubnetIpv6Args>>> ipv6s() {
        return Optional.ofNullable(this.ipv6s);
    }

    /**
     * The label of the VPC. Only contains ASCII letters, digits and dashes.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return The label of the VPC. Only contains ASCII letters, digits and dashes.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * A list of Linode that added to this subnet.
     * 
     */
    @Import(name="linodes")
    private @Nullable Output<List<VpcSubnetLinodeArgs>> linodes;

    /**
     * @return A list of Linode that added to this subnet.
     * 
     */
    public Optional<Output<List<VpcSubnetLinodeArgs>>> linodes() {
        return Optional.ofNullable(this.linodes);
    }

    /**
     * The date and time when the VPC was last updated.
     * 
     */
    @Import(name="updated")
    private @Nullable Output<String> updated;

    /**
     * @return The date and time when the VPC was last updated.
     * 
     */
    public Optional<Output<String>> updated() {
        return Optional.ofNullable(this.updated);
    }

    /**
     * The id of the parent VPC for this VPC subnet.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<Integer> vpcId;

    /**
     * @return The id of the parent VPC for this VPC subnet.
     * 
     */
    public Optional<Output<Integer>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private VpcSubnetState() {}

    private VpcSubnetState(VpcSubnetState $) {
        this.created = $.created;
        this.ipv4 = $.ipv4;
        this.ipv6s = $.ipv6s;
        this.label = $.label;
        this.linodes = $.linodes;
        this.updated = $.updated;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcSubnetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcSubnetState $;

        public Builder() {
            $ = new VpcSubnetState();
        }

        public Builder(VpcSubnetState defaults) {
            $ = new VpcSubnetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param created The date and time when the VPC was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The date and time when the VPC was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param ipv4 The IPv4 range of this subnet in CIDR format.
         * 
         * * `ipv6` - (Optional) A list of IPv6 ranges under this VPC subnet. NOTE: IPv6 VPCs may not currently be available to all users.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(@Nullable Output<String> ipv4) {
            $.ipv4 = ipv4;
            return this;
        }

        /**
         * @param ipv4 The IPv4 range of this subnet in CIDR format.
         * 
         * * `ipv6` - (Optional) A list of IPv6 ranges under this VPC subnet. NOTE: IPv6 VPCs may not currently be available to all users.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(String ipv4) {
            return ipv4(Output.of(ipv4));
        }

        /**
         * @param ipv6s The IPv6 ranges of this subnet.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(@Nullable Output<List<VpcSubnetIpv6Args>> ipv6s) {
            $.ipv6s = ipv6s;
            return this;
        }

        /**
         * @param ipv6s The IPv6 ranges of this subnet.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(List<VpcSubnetIpv6Args> ipv6s) {
            return ipv6s(Output.of(ipv6s));
        }

        /**
         * @param ipv6s The IPv6 ranges of this subnet.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(VpcSubnetIpv6Args... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }

        /**
         * @param label The label of the VPC. Only contains ASCII letters, digits and dashes.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The label of the VPC. Only contains ASCII letters, digits and dashes.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param linodes A list of Linode that added to this subnet.
         * 
         * @return builder
         * 
         */
        public Builder linodes(@Nullable Output<List<VpcSubnetLinodeArgs>> linodes) {
            $.linodes = linodes;
            return this;
        }

        /**
         * @param linodes A list of Linode that added to this subnet.
         * 
         * @return builder
         * 
         */
        public Builder linodes(List<VpcSubnetLinodeArgs> linodes) {
            return linodes(Output.of(linodes));
        }

        /**
         * @param linodes A list of Linode that added to this subnet.
         * 
         * @return builder
         * 
         */
        public Builder linodes(VpcSubnetLinodeArgs... linodes) {
            return linodes(List.of(linodes));
        }

        /**
         * @param updated The date and time when the VPC was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updated(@Nullable Output<String> updated) {
            $.updated = updated;
            return this;
        }

        /**
         * @param updated The date and time when the VPC was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updated(String updated) {
            return updated(Output.of(updated));
        }

        /**
         * @param vpcId The id of the parent VPC for this VPC subnet.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<Integer> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The id of the parent VPC for this VPC subnet.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Integer vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public VpcSubnetState build() {
            return $;
        }
    }

}
