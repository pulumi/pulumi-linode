// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlacementGroupAssignmentState extends com.pulumi.resources.ResourceArgs {

    public static final PlacementGroupAssignmentState Empty = new PlacementGroupAssignmentState();

    @Import(name="compliantOnly")
    private @Nullable Output<Boolean> compliantOnly;

    public Optional<Output<Boolean>> compliantOnly() {
        return Optional.ofNullable(this.compliantOnly);
    }

    /**
     * The unique ID of the Linode to assign.
     * 
     */
    @Import(name="linodeId")
    private @Nullable Output<Integer> linodeId;

    /**
     * @return The unique ID of the Linode to assign.
     * 
     */
    public Optional<Output<Integer>> linodeId() {
        return Optional.ofNullable(this.linodeId);
    }

    /**
     * The unique ID of the target Placement Group.
     * 
     */
    @Import(name="placementGroupId")
    private @Nullable Output<Integer> placementGroupId;

    /**
     * @return The unique ID of the target Placement Group.
     * 
     */
    public Optional<Output<Integer>> placementGroupId() {
        return Optional.ofNullable(this.placementGroupId);
    }

    private PlacementGroupAssignmentState() {}

    private PlacementGroupAssignmentState(PlacementGroupAssignmentState $) {
        this.compliantOnly = $.compliantOnly;
        this.linodeId = $.linodeId;
        this.placementGroupId = $.placementGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlacementGroupAssignmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlacementGroupAssignmentState $;

        public Builder() {
            $ = new PlacementGroupAssignmentState();
        }

        public Builder(PlacementGroupAssignmentState defaults) {
            $ = new PlacementGroupAssignmentState(Objects.requireNonNull(defaults));
        }

        public Builder compliantOnly(@Nullable Output<Boolean> compliantOnly) {
            $.compliantOnly = compliantOnly;
            return this;
        }

        public Builder compliantOnly(Boolean compliantOnly) {
            return compliantOnly(Output.of(compliantOnly));
        }

        /**
         * @param linodeId The unique ID of the Linode to assign.
         * 
         * @return builder
         * 
         */
        public Builder linodeId(@Nullable Output<Integer> linodeId) {
            $.linodeId = linodeId;
            return this;
        }

        /**
         * @param linodeId The unique ID of the Linode to assign.
         * 
         * @return builder
         * 
         */
        public Builder linodeId(Integer linodeId) {
            return linodeId(Output.of(linodeId));
        }

        /**
         * @param placementGroupId The unique ID of the target Placement Group.
         * 
         * @return builder
         * 
         */
        public Builder placementGroupId(@Nullable Output<Integer> placementGroupId) {
            $.placementGroupId = placementGroupId;
            return this;
        }

        /**
         * @param placementGroupId The unique ID of the target Placement Group.
         * 
         * @return builder
         * 
         */
        public Builder placementGroupId(Integer placementGroupId) {
            return placementGroupId(Output.of(placementGroupId));
        }

        public PlacementGroupAssignmentState build() {
            return $;
        }
    }

}
