// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.linode.InstanceSharedIpsArgs;
import com.pulumi.linode.Utilities;
import com.pulumi.linode.inputs.InstanceSharedIpsState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages IPs shared to a Linode instance.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/post-share-ips).
 * 
 * &gt; **Beta Notice** IPv6 sharing is currently available through early access.
 * To use early access resources, the `api_version` provider argument must be set to `v4beta`.
 * To learn more, see the early access documentation.
 * 
 * &gt; **Notice** This resource should only be defined once per-instance and should not be used alongside the `shared_ipv4` field in `linode.Instance`.
 * 
 * ## Example Usage
 * 
 * Share in IPv4 address between two instances:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.Instance;
 * import com.pulumi.linode.InstanceArgs;
 * import com.pulumi.linode.InstanceIp;
 * import com.pulumi.linode.InstanceIpArgs;
 * import com.pulumi.linode.InstanceSharedIps;
 * import com.pulumi.linode.InstanceSharedIpsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a single primary node
 *         var primaryInstance = new Instance("primaryInstance", InstanceArgs.builder()
 *             .label("node-primary")
 *             .type("g6-nanode-1")
 *             .region("eu-central")
 *             .build());
 * 
 *         // Allocate an IP under the primary node
 *         var primary = new InstanceIp("primary", InstanceIpArgs.builder()
 *             .linodeId(primaryInstance.id())
 *             .build());
 * 
 *         // Create a secondary node
 *         var secondary = new Instance("secondary", InstanceArgs.builder()
 *             .label("node-secondary")
 *             .type("g6-nanode-1")
 *             .region("eu-central")
 *             .build());
 * 
 *         // Share the IP with the secondary node
 *         var share_primary = new InstanceSharedIps("share-primary", InstanceSharedIpsArgs.builder()
 *             .linodeId(secondary.id())
 *             .addresses(primary.address())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Share an IPv6 address among a primary node and its replicas:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.Instance;
 * import com.pulumi.linode.InstanceArgs;
 * import com.pulumi.linode.Ipv6Range;
 * import com.pulumi.linode.Ipv6RangeArgs;
 * import com.pulumi.linode.InstanceSharedIps;
 * import com.pulumi.linode.InstanceSharedIpsArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         // Create a single primary node
 *         var primary = new Instance("primary", InstanceArgs.builder()
 *             .label("node-primary")
 *             .type("g6-nanode-1")
 *             .region("eu-central")
 *             .build());
 * 
 *         // Allocate an IPv6 range pointing at the primary node
 *         var rangeIpv6Range = new Ipv6Range("rangeIpv6Range", Ipv6RangeArgs.builder()
 *             .prefixLength(64)
 *             .linodeId(primary.id())
 *             .build());
 * 
 *         // Share with primary node
 *         var share_primary = new InstanceSharedIps("share-primary", InstanceSharedIpsArgs.builder()
 *             .linodeId(primary.id())
 *             .addresses(rangeIpv6Range.range())
 *             .build());
 * 
 *         final var numberReplicas = config.get("numberReplicas").orElse(2);
 *         // Create two secondary nodes
 *         for (var i = 0; i < numberReplicas; i++) {
 *             new Instance("secondary-" + i, InstanceArgs.builder()
 *                 .label(String.format("node-secondary-%s", range.value()))
 *                 .type("g6-nanode-1")
 *                 .region("eu-central")
 *                 .build());
 * 
 *         
 * }
 *         // Share with secondary nodes
 *         for (var i = 0; i < numberReplicas; i++) {
 *             new InstanceSharedIps("share-secondary-" + i, InstanceSharedIpsArgs.builder()
 *                 .linodeId(secondary[range.value()].id())
 *                 .addresses(rangeIpv6Range.range())
 *                 .build(), CustomResourceOptions.builder()
 *                     .dependsOn(share_primary)
 *                     .build());
 * 
 *         
 * }
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="linode:index/instanceSharedIps:InstanceSharedIps")
public class InstanceSharedIps extends com.pulumi.resources.CustomResource {
    /**
     * The set of IPs to share with the Linode.
     * 
     */
    @Export(name="addresses", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> addresses;

    /**
     * @return The set of IPs to share with the Linode.
     * 
     */
    public Output<List<String>> addresses() {
        return this.addresses;
    }
    /**
     * The ID of the Linode to share the IPs to.
     * 
     */
    @Export(name="linodeId", refs={Integer.class}, tree="[0]")
    private Output<Integer> linodeId;

    /**
     * @return The ID of the Linode to share the IPs to.
     * 
     */
    public Output<Integer> linodeId() {
        return this.linodeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceSharedIps(java.lang.String name) {
        this(name, InstanceSharedIpsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceSharedIps(java.lang.String name, InstanceSharedIpsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceSharedIps(java.lang.String name, InstanceSharedIpsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/instanceSharedIps:InstanceSharedIps", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InstanceSharedIps(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceSharedIpsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/instanceSharedIps:InstanceSharedIps", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceSharedIpsArgs makeArgs(InstanceSharedIpsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceSharedIpsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceSharedIps get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceSharedIpsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceSharedIps(name, id, state, options);
    }
}
