// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetChildAccountsChildAccount;
import com.pulumi.linode.outputs.GetChildAccountsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetChildAccountsResult {
    private @Nullable List<GetChildAccountsChildAccount> childAccounts;
    private @Nullable List<GetChildAccountsFilter> filters;
    private String id;

    private GetChildAccountsResult() {}
    public List<GetChildAccountsChildAccount> childAccounts() {
        return this.childAccounts == null ? List.of() : this.childAccounts;
    }
    public List<GetChildAccountsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetChildAccountsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetChildAccountsChildAccount> childAccounts;
        private @Nullable List<GetChildAccountsFilter> filters;
        private String id;
        public Builder() {}
        public Builder(GetChildAccountsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childAccounts = defaults.childAccounts;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder childAccounts(@Nullable List<GetChildAccountsChildAccount> childAccounts) {

            this.childAccounts = childAccounts;
            return this;
        }
        public Builder childAccounts(GetChildAccountsChildAccount... childAccounts) {
            return childAccounts(List.of(childAccounts));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetChildAccountsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetChildAccountsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetChildAccountsResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetChildAccountsResult build() {
            final var _resultValue = new GetChildAccountsResult();
            _resultValue.childAccounts = childAccounts;
            _resultValue.filters = filters;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
