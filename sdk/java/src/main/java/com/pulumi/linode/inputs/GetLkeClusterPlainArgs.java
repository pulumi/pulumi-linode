// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.inputs.GetLkeClusterControlPlane;
import com.pulumi.linode.inputs.GetLkeClusterPool;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLkeClusterPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLkeClusterPlainArgs Empty = new GetLkeClusterPlainArgs();

    @Import(name="controlPlanes")
    private @Nullable List<GetLkeClusterControlPlane> controlPlanes;

    public Optional<List<GetLkeClusterControlPlane>> controlPlanes() {
        return Optional.ofNullable(this.controlPlanes);
    }

    /**
     * The LKE Cluster&#39;s ID.
     * 
     */
    @Import(name="id", required=true)
    private Integer id;

    /**
     * @return The LKE Cluster&#39;s ID.
     * 
     */
    public Integer id() {
        return this.id;
    }

    /**
     * Node pools associated with this cluster.
     * 
     */
    @Import(name="pools")
    private @Nullable List<GetLkeClusterPool> pools;

    /**
     * @return Node pools associated with this cluster.
     * 
     */
    public Optional<List<GetLkeClusterPool>> pools() {
        return Optional.ofNullable(this.pools);
    }

    private GetLkeClusterPlainArgs() {}

    private GetLkeClusterPlainArgs(GetLkeClusterPlainArgs $) {
        this.controlPlanes = $.controlPlanes;
        this.id = $.id;
        this.pools = $.pools;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeClusterPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeClusterPlainArgs $;

        public Builder() {
            $ = new GetLkeClusterPlainArgs();
        }

        public Builder(GetLkeClusterPlainArgs defaults) {
            $ = new GetLkeClusterPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder controlPlanes(@Nullable List<GetLkeClusterControlPlane> controlPlanes) {
            $.controlPlanes = controlPlanes;
            return this;
        }

        public Builder controlPlanes(GetLkeClusterControlPlane... controlPlanes) {
            return controlPlanes(List.of(controlPlanes));
        }

        /**
         * @param id The LKE Cluster&#39;s ID.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            $.id = id;
            return this;
        }

        /**
         * @param pools Node pools associated with this cluster.
         * 
         * @return builder
         * 
         */
        public Builder pools(@Nullable List<GetLkeClusterPool> pools) {
            $.pools = pools;
            return this;
        }

        /**
         * @param pools Node pools associated with this cluster.
         * 
         * @return builder
         * 
         */
        public Builder pools(GetLkeClusterPool... pools) {
            return pools(List.of(pools));
        }

        public GetLkeClusterPlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterPlainArgs", "id");
            }
            return $;
        }
    }

}
