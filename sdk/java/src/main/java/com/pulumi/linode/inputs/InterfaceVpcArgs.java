// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.inputs.InterfaceVpcIpv4Args;
import com.pulumi.linode.inputs.InterfaceVpcIpv6Args;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterfaceVpcArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterfaceVpcArgs Empty = new InterfaceVpcArgs();

    /**
     * IPv4 configuration for the VPC interface.
     * 
     */
    @Import(name="ipv4")
    private @Nullable Output<InterfaceVpcIpv4Args> ipv4;

    /**
     * @return IPv4 configuration for the VPC interface.
     * 
     */
    public Optional<Output<InterfaceVpcIpv4Args>> ipv4() {
        return Optional.ofNullable(this.ipv4);
    }

    /**
     * IPv6 assigned through `slaac` and `ranges`. If you create a VPC interface in a subnet with IPv6 and don’t specify `slaac` or `ranges`, a SLAAC range is added automatically. **NOTE: IPv6 VPCs may not currently be available to all users.**
     * 
     */
    @Import(name="ipv6")
    private @Nullable Output<InterfaceVpcIpv6Args> ipv6;

    /**
     * @return IPv6 assigned through `slaac` and `ranges`. If you create a VPC interface in a subnet with IPv6 and don’t specify `slaac` or `ranges`, a SLAAC range is added automatically. **NOTE: IPv6 VPCs may not currently be available to all users.**
     * 
     */
    public Optional<Output<InterfaceVpcIpv6Args>> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }

    /**
     * The VPC subnet identifier for this interface.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<Integer> subnetId;

    /**
     * @return The VPC subnet identifier for this interface.
     * 
     */
    public Output<Integer> subnetId() {
        return this.subnetId;
    }

    private InterfaceVpcArgs() {}

    private InterfaceVpcArgs(InterfaceVpcArgs $) {
        this.ipv4 = $.ipv4;
        this.ipv6 = $.ipv6;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterfaceVpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterfaceVpcArgs $;

        public Builder() {
            $ = new InterfaceVpcArgs();
        }

        public Builder(InterfaceVpcArgs defaults) {
            $ = new InterfaceVpcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv4 IPv4 configuration for the VPC interface.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(@Nullable Output<InterfaceVpcIpv4Args> ipv4) {
            $.ipv4 = ipv4;
            return this;
        }

        /**
         * @param ipv4 IPv4 configuration for the VPC interface.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(InterfaceVpcIpv4Args ipv4) {
            return ipv4(Output.of(ipv4));
        }

        /**
         * @param ipv6 IPv6 assigned through `slaac` and `ranges`. If you create a VPC interface in a subnet with IPv6 and don’t specify `slaac` or `ranges`, a SLAAC range is added automatically. **NOTE: IPv6 VPCs may not currently be available to all users.**
         * 
         * @return builder
         * 
         */
        public Builder ipv6(@Nullable Output<InterfaceVpcIpv6Args> ipv6) {
            $.ipv6 = ipv6;
            return this;
        }

        /**
         * @param ipv6 IPv6 assigned through `slaac` and `ranges`. If you create a VPC interface in a subnet with IPv6 and don’t specify `slaac` or `ranges`, a SLAAC range is added automatically. **NOTE: IPv6 VPCs may not currently be available to all users.**
         * 
         * @return builder
         * 
         */
        public Builder ipv6(InterfaceVpcIpv6Args ipv6) {
            return ipv6(Output.of(ipv6));
        }

        /**
         * @param subnetId The VPC subnet identifier for this interface.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<Integer> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The VPC subnet identifier for this interface.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Integer subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public InterfaceVpcArgs build() {
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("InterfaceVpcArgs", "subnetId");
            }
            return $;
        }
    }

}
