// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.linode.outputs.InterfaceVpcIpv6AssignedRange;
import com.pulumi.linode.outputs.InterfaceVpcIpv6AssignedSlaac;
import com.pulumi.linode.outputs.InterfaceVpcIpv6Range;
import com.pulumi.linode.outputs.InterfaceVpcIpv6Slaac;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InterfaceVpcIpv6 {
    /**
     * @return Assigned additional IPv6 ranges to use in the VPC subnet, calculated from `ranges` input.
     * 
     */
    private @Nullable List<InterfaceVpcIpv6AssignedRange> assignedRanges;
    /**
     * @return Assigned IPv6 SLAAC address ranges to use in the VPC subnet, calculated from `slaac` input.
     * 
     */
    private @Nullable List<InterfaceVpcIpv6AssignedSlaac> assignedSlaacs;
    /**
     * @return Indicates whether the IPv6 configuration profile interface is public. (Default `false`)
     * 
     */
    private @Nullable Boolean isPublic;
    /**
     * @return Defines additional IPv6 network ranges.
     * 
     */
    private @Nullable List<InterfaceVpcIpv6Range> ranges;
    /**
     * @return Defines IPv6 SLAAC address ranges. An address is automatically generated from the assigned /64 prefix using the Linode’s MAC address, just like on public IPv6 interfaces. Router advertisements (RA) are sent to the Linode, so standard SLAAC configuration works without any changes.
     * 
     */
    private @Nullable List<InterfaceVpcIpv6Slaac> slaacs;

    private InterfaceVpcIpv6() {}
    /**
     * @return Assigned additional IPv6 ranges to use in the VPC subnet, calculated from `ranges` input.
     * 
     */
    public List<InterfaceVpcIpv6AssignedRange> assignedRanges() {
        return this.assignedRanges == null ? List.of() : this.assignedRanges;
    }
    /**
     * @return Assigned IPv6 SLAAC address ranges to use in the VPC subnet, calculated from `slaac` input.
     * 
     */
    public List<InterfaceVpcIpv6AssignedSlaac> assignedSlaacs() {
        return this.assignedSlaacs == null ? List.of() : this.assignedSlaacs;
    }
    /**
     * @return Indicates whether the IPv6 configuration profile interface is public. (Default `false`)
     * 
     */
    public Optional<Boolean> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }
    /**
     * @return Defines additional IPv6 network ranges.
     * 
     */
    public List<InterfaceVpcIpv6Range> ranges() {
        return this.ranges == null ? List.of() : this.ranges;
    }
    /**
     * @return Defines IPv6 SLAAC address ranges. An address is automatically generated from the assigned /64 prefix using the Linode’s MAC address, just like on public IPv6 interfaces. Router advertisements (RA) are sent to the Linode, so standard SLAAC configuration works without any changes.
     * 
     */
    public List<InterfaceVpcIpv6Slaac> slaacs() {
        return this.slaacs == null ? List.of() : this.slaacs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterfaceVpcIpv6 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<InterfaceVpcIpv6AssignedRange> assignedRanges;
        private @Nullable List<InterfaceVpcIpv6AssignedSlaac> assignedSlaacs;
        private @Nullable Boolean isPublic;
        private @Nullable List<InterfaceVpcIpv6Range> ranges;
        private @Nullable List<InterfaceVpcIpv6Slaac> slaacs;
        public Builder() {}
        public Builder(InterfaceVpcIpv6 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedRanges = defaults.assignedRanges;
    	      this.assignedSlaacs = defaults.assignedSlaacs;
    	      this.isPublic = defaults.isPublic;
    	      this.ranges = defaults.ranges;
    	      this.slaacs = defaults.slaacs;
        }

        @CustomType.Setter
        public Builder assignedRanges(@Nullable List<InterfaceVpcIpv6AssignedRange> assignedRanges) {

            this.assignedRanges = assignedRanges;
            return this;
        }
        public Builder assignedRanges(InterfaceVpcIpv6AssignedRange... assignedRanges) {
            return assignedRanges(List.of(assignedRanges));
        }
        @CustomType.Setter
        public Builder assignedSlaacs(@Nullable List<InterfaceVpcIpv6AssignedSlaac> assignedSlaacs) {

            this.assignedSlaacs = assignedSlaacs;
            return this;
        }
        public Builder assignedSlaacs(InterfaceVpcIpv6AssignedSlaac... assignedSlaacs) {
            return assignedSlaacs(List.of(assignedSlaacs));
        }
        @CustomType.Setter
        public Builder isPublic(@Nullable Boolean isPublic) {

            this.isPublic = isPublic;
            return this;
        }
        @CustomType.Setter
        public Builder ranges(@Nullable List<InterfaceVpcIpv6Range> ranges) {

            this.ranges = ranges;
            return this;
        }
        public Builder ranges(InterfaceVpcIpv6Range... ranges) {
            return ranges(List.of(ranges));
        }
        @CustomType.Setter
        public Builder slaacs(@Nullable List<InterfaceVpcIpv6Slaac> slaacs) {

            this.slaacs = slaacs;
            return this;
        }
        public Builder slaacs(InterfaceVpcIpv6Slaac... slaacs) {
            return slaacs(List.of(slaacs));
        }
        public InterfaceVpcIpv6 build() {
            final var _resultValue = new InterfaceVpcIpv6();
            _resultValue.assignedRanges = assignedRanges;
            _resultValue.assignedSlaacs = assignedSlaacs;
            _resultValue.isPublic = isPublic;
            _resultValue.ranges = ranges;
            _resultValue.slaacs = slaacs;
            return _resultValue;
        }
    }
}
