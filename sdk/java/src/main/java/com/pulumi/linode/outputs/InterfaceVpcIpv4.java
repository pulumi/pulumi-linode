// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.linode.outputs.InterfaceVpcIpv4Address;
import com.pulumi.linode.outputs.InterfaceVpcIpv4AssignedAddress;
import com.pulumi.linode.outputs.InterfaceVpcIpv4AssignedRange;
import com.pulumi.linode.outputs.InterfaceVpcIpv4Range;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class InterfaceVpcIpv4 {
    /**
     * @return Specifies the IPv4 addresses to use in the VPC subnet. Each object in this list supports:
     * 
     */
    private @Nullable List<InterfaceVpcIpv4Address> addresses;
    /**
     * @return (Computed) The IPv4 addresses assigned for use in the VPC subnet, calculated from the `addresses` input. Each object in this set supports:
     * 
     */
    private @Nullable List<InterfaceVpcIpv4AssignedAddress> assignedAddresses;
    /**
     * @return Assigned additional IPv6 ranges to use in the VPC subnet, calculated from `ranges` input.
     * 
     */
    private @Nullable List<InterfaceVpcIpv4AssignedRange> assignedRanges;
    /**
     * @return IPv4 ranges in CIDR notation (1.2.3.4/24) or prefix-only format (/24). Each object in this list supports:
     * 
     */
    private @Nullable List<InterfaceVpcIpv4Range> ranges;

    private InterfaceVpcIpv4() {}
    /**
     * @return Specifies the IPv4 addresses to use in the VPC subnet. Each object in this list supports:
     * 
     */
    public List<InterfaceVpcIpv4Address> addresses() {
        return this.addresses == null ? List.of() : this.addresses;
    }
    /**
     * @return (Computed) The IPv4 addresses assigned for use in the VPC subnet, calculated from the `addresses` input. Each object in this set supports:
     * 
     */
    public List<InterfaceVpcIpv4AssignedAddress> assignedAddresses() {
        return this.assignedAddresses == null ? List.of() : this.assignedAddresses;
    }
    /**
     * @return Assigned additional IPv6 ranges to use in the VPC subnet, calculated from `ranges` input.
     * 
     */
    public List<InterfaceVpcIpv4AssignedRange> assignedRanges() {
        return this.assignedRanges == null ? List.of() : this.assignedRanges;
    }
    /**
     * @return IPv4 ranges in CIDR notation (1.2.3.4/24) or prefix-only format (/24). Each object in this list supports:
     * 
     */
    public List<InterfaceVpcIpv4Range> ranges() {
        return this.ranges == null ? List.of() : this.ranges;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterfaceVpcIpv4 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<InterfaceVpcIpv4Address> addresses;
        private @Nullable List<InterfaceVpcIpv4AssignedAddress> assignedAddresses;
        private @Nullable List<InterfaceVpcIpv4AssignedRange> assignedRanges;
        private @Nullable List<InterfaceVpcIpv4Range> ranges;
        public Builder() {}
        public Builder(InterfaceVpcIpv4 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.assignedAddresses = defaults.assignedAddresses;
    	      this.assignedRanges = defaults.assignedRanges;
    	      this.ranges = defaults.ranges;
        }

        @CustomType.Setter
        public Builder addresses(@Nullable List<InterfaceVpcIpv4Address> addresses) {

            this.addresses = addresses;
            return this;
        }
        public Builder addresses(InterfaceVpcIpv4Address... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter
        public Builder assignedAddresses(@Nullable List<InterfaceVpcIpv4AssignedAddress> assignedAddresses) {

            this.assignedAddresses = assignedAddresses;
            return this;
        }
        public Builder assignedAddresses(InterfaceVpcIpv4AssignedAddress... assignedAddresses) {
            return assignedAddresses(List.of(assignedAddresses));
        }
        @CustomType.Setter
        public Builder assignedRanges(@Nullable List<InterfaceVpcIpv4AssignedRange> assignedRanges) {

            this.assignedRanges = assignedRanges;
            return this;
        }
        public Builder assignedRanges(InterfaceVpcIpv4AssignedRange... assignedRanges) {
            return assignedRanges(List.of(assignedRanges));
        }
        @CustomType.Setter
        public Builder ranges(@Nullable List<InterfaceVpcIpv4Range> ranges) {

            this.ranges = ranges;
            return this;
        }
        public Builder ranges(InterfaceVpcIpv4Range... ranges) {
            return ranges(List.of(ranges));
        }
        public InterfaceVpcIpv4 build() {
            final var _resultValue = new InterfaceVpcIpv4();
            _resultValue.addresses = addresses;
            _resultValue.assignedAddresses = assignedAddresses;
            _resultValue.assignedRanges = assignedRanges;
            _resultValue.ranges = ranges;
            return _resultValue;
        }
    }
}
