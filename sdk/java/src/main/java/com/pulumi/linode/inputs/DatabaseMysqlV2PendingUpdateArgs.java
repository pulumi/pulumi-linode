// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DatabaseMysqlV2PendingUpdateArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseMysqlV2PendingUpdateArgs Empty = new DatabaseMysqlV2PendingUpdateArgs();

    @Import(name="deadline", required=true)
    private Output<String> deadline;

    public Output<String> deadline() {
        return this.deadline;
    }

    @Import(name="description", required=true)
    private Output<String> description;

    public Output<String> description() {
        return this.description;
    }

    @Import(name="plannedFor", required=true)
    private Output<String> plannedFor;

    public Output<String> plannedFor() {
        return this.plannedFor;
    }

    private DatabaseMysqlV2PendingUpdateArgs() {}

    private DatabaseMysqlV2PendingUpdateArgs(DatabaseMysqlV2PendingUpdateArgs $) {
        this.deadline = $.deadline;
        this.description = $.description;
        this.plannedFor = $.plannedFor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseMysqlV2PendingUpdateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseMysqlV2PendingUpdateArgs $;

        public Builder() {
            $ = new DatabaseMysqlV2PendingUpdateArgs();
        }

        public Builder(DatabaseMysqlV2PendingUpdateArgs defaults) {
            $ = new DatabaseMysqlV2PendingUpdateArgs(Objects.requireNonNull(defaults));
        }

        public Builder deadline(Output<String> deadline) {
            $.deadline = deadline;
            return this;
        }

        public Builder deadline(String deadline) {
            return deadline(Output.of(deadline));
        }

        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder plannedFor(Output<String> plannedFor) {
            $.plannedFor = plannedFor;
            return this;
        }

        public Builder plannedFor(String plannedFor) {
            return plannedFor(Output.of(plannedFor));
        }

        public DatabaseMysqlV2PendingUpdateArgs build() {
            if ($.deadline == null) {
                throw new MissingRequiredPropertyException("DatabaseMysqlV2PendingUpdateArgs", "deadline");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("DatabaseMysqlV2PendingUpdateArgs", "description");
            }
            if ($.plannedFor == null) {
                throw new MissingRequiredPropertyException("DatabaseMysqlV2PendingUpdateArgs", "plannedFor");
            }
            return $;
        }
    }

}
