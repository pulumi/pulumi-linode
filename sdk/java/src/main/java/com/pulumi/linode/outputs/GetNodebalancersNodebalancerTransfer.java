// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetNodebalancersNodebalancerTransfer {
    /**
     * @return The total transfer, in MB, used by this NodeBalancer for the current month
     * 
     */
    private Double in;
    /**
     * @return The total inbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    private Double out;
    /**
     * @return The total outbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    private Double total;

    private GetNodebalancersNodebalancerTransfer() {}
    /**
     * @return The total transfer, in MB, used by this NodeBalancer for the current month
     * 
     */
    public Double in() {
        return this.in;
    }
    /**
     * @return The total inbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    public Double out() {
        return this.out;
    }
    /**
     * @return The total outbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    public Double total() {
        return this.total;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodebalancersNodebalancerTransfer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double in;
        private Double out;
        private Double total;
        public Builder() {}
        public Builder(GetNodebalancersNodebalancerTransfer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.in = defaults.in;
    	      this.out = defaults.out;
    	      this.total = defaults.total;
        }

        @CustomType.Setter
        public Builder in(Double in) {
            if (in == null) {
              throw new MissingRequiredPropertyException("GetNodebalancersNodebalancerTransfer", "in");
            }
            this.in = in;
            return this;
        }
        @CustomType.Setter
        public Builder out(Double out) {
            if (out == null) {
              throw new MissingRequiredPropertyException("GetNodebalancersNodebalancerTransfer", "out");
            }
            this.out = out;
            return this;
        }
        @CustomType.Setter
        public Builder total(Double total) {
            if (total == null) {
              throw new MissingRequiredPropertyException("GetNodebalancersNodebalancerTransfer", "total");
            }
            this.total = total;
            return this;
        }
        public GetNodebalancersNodebalancerTransfer build() {
            final var _resultValue = new GetNodebalancersNodebalancerTransfer();
            _resultValue.in = in;
            _resultValue.out = out;
            _resultValue.total = total;
            return _resultValue;
        }
    }
}
