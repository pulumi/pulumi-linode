// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.inputs.VpcIpv6Args;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcArgs Empty = new VpcArgs();

    /**
     * The user-defined description of this VPC.
     * 
     * * `ipv6` - (Optional) A list of IPv6 allocations under this VPC.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The user-defined description of this VPC.
     * 
     * * `ipv6` - (Optional) A list of IPv6 allocations under this VPC.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The IPv6 configuration of this VPC.
     * 
     */
    @Import(name="ipv6s")
    private @Nullable Output<List<VpcIpv6Args>> ipv6s;

    /**
     * @return The IPv6 configuration of this VPC.
     * 
     */
    public Optional<Output<List<VpcIpv6Args>>> ipv6s() {
        return Optional.ofNullable(this.ipv6s);
    }

    /**
     * The label of the VPC. This field can only contain ASCII letters, digits and dashes.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return The label of the VPC. This field can only contain ASCII letters, digits and dashes.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * The region of the VPC.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region of the VPC.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private VpcArgs() {}

    private VpcArgs(VpcArgs $) {
        this.description = $.description;
        this.ipv6s = $.ipv6s;
        this.label = $.label;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcArgs $;

        public Builder() {
            $ = new VpcArgs();
        }

        public Builder(VpcArgs defaults) {
            $ = new VpcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The user-defined description of this VPC.
         * 
         * * `ipv6` - (Optional) A list of IPv6 allocations under this VPC.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The user-defined description of this VPC.
         * 
         * * `ipv6` - (Optional) A list of IPv6 allocations under this VPC.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipv6s The IPv6 configuration of this VPC.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(@Nullable Output<List<VpcIpv6Args>> ipv6s) {
            $.ipv6s = ipv6s;
            return this;
        }

        /**
         * @param ipv6s The IPv6 configuration of this VPC.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(List<VpcIpv6Args> ipv6s) {
            return ipv6s(Output.of(ipv6s));
        }

        /**
         * @param ipv6s The IPv6 configuration of this VPC.
         * 
         * @return builder
         * 
         */
        public Builder ipv6s(VpcIpv6Args... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }

        /**
         * @param label The label of the VPC. This field can only contain ASCII letters, digits and dashes.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The label of the VPC. This field can only contain ASCII letters, digits and dashes.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param region The region of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public VpcArgs build() {
            if ($.label == null) {
                throw new MissingRequiredPropertyException("VpcArgs", "label");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("VpcArgs", "region");
            }
            return $;
        }
    }

}
