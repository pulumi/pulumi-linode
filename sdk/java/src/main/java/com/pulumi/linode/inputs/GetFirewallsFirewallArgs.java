// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.inputs.GetFirewallsFirewallDeviceArgs;
import com.pulumi.linode.inputs.GetFirewallsFirewallInboundArgs;
import com.pulumi.linode.inputs.GetFirewallsFirewallOutboundArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFirewallsFirewallArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetFirewallsFirewallArgs Empty = new GetFirewallsFirewallArgs();

    /**
     * When this firewall was created.
     * 
     */
    @Import(name="created", required=true)
    private Output<String> created;

    /**
     * @return When this firewall was created.
     * 
     */
    public Output<String> created() {
        return this.created;
    }

    /**
     * The devices associated with this firewall.
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<GetFirewallsFirewallDeviceArgs>> devices;

    /**
     * @return The devices associated with this firewall.
     * 
     */
    public Optional<Output<List<GetFirewallsFirewallDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * If true, the Firewall is inactive.
     * 
     */
    @Import(name="disabled", required=true)
    private Output<Boolean> disabled;

    /**
     * @return If true, the Firewall is inactive.
     * 
     */
    public Output<Boolean> disabled() {
        return this.disabled;
    }

    /**
     * The unique ID assigned to this Firewall.
     * 
     */
    @Import(name="id", required=true)
    private Output<Integer> id;

    /**
     * @return The unique ID assigned to this Firewall.
     * 
     */
    public Output<Integer> id() {
        return this.id;
    }

    /**
     * The default behavior for inbound traffic.
     * 
     */
    @Import(name="inboundPolicy", required=true)
    private Output<String> inboundPolicy;

    /**
     * @return The default behavior for inbound traffic.
     * 
     */
    public Output<String> inboundPolicy() {
        return this.inboundPolicy;
    }

    /**
     * A set of firewall rules that specify what inbound network traffic is allowed.
     * 
     */
    @Import(name="inbounds")
    private @Nullable Output<List<GetFirewallsFirewallInboundArgs>> inbounds;

    /**
     * @return A set of firewall rules that specify what inbound network traffic is allowed.
     * 
     */
    public Optional<Output<List<GetFirewallsFirewallInboundArgs>>> inbounds() {
        return Optional.ofNullable(this.inbounds);
    }

    /**
     * The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * The IDs of Linodes this firewall is applied to.
     * 
     */
    @Import(name="linodes", required=true)
    private Output<List<Integer>> linodes;

    /**
     * @return The IDs of Linodes this firewall is applied to.
     * 
     */
    public Output<List<Integer>> linodes() {
        return this.linodes;
    }

    /**
     * The IDs of NodeBalancers assigned to this Firewall..
     * 
     */
    @Import(name="nodebalancers", required=true)
    private Output<List<Integer>> nodebalancers;

    /**
     * @return The IDs of NodeBalancers assigned to this Firewall..
     * 
     */
    public Output<List<Integer>> nodebalancers() {
        return this.nodebalancers;
    }

    /**
     * The default behavior for outbound traffic.
     * 
     */
    @Import(name="outboundPolicy", required=true)
    private Output<String> outboundPolicy;

    /**
     * @return The default behavior for outbound traffic.
     * 
     */
    public Output<String> outboundPolicy() {
        return this.outboundPolicy;
    }

    /**
     * A set of firewall rules that specify what outbound network traffic is allowed.
     * 
     */
    @Import(name="outbounds")
    private @Nullable Output<List<GetFirewallsFirewallOutboundArgs>> outbounds;

    /**
     * @return A set of firewall rules that specify what outbound network traffic is allowed.
     * 
     */
    public Optional<Output<List<GetFirewallsFirewallOutboundArgs>>> outbounds() {
        return Optional.ofNullable(this.outbounds);
    }

    /**
     * The status of the firewall.
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return The status of the firewall.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     * 
     */
    @Import(name="tags", required=true)
    private Output<List<String>> tags;

    /**
     * @return An array of tags applied to this object. Tags are for organizational purposes only.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }

    /**
     * When this firewall was last updated.
     * 
     */
    @Import(name="updated", required=true)
    private Output<String> updated;

    /**
     * @return When this firewall was last updated.
     * 
     */
    public Output<String> updated() {
        return this.updated;
    }

    private GetFirewallsFirewallArgs() {}

    private GetFirewallsFirewallArgs(GetFirewallsFirewallArgs $) {
        this.created = $.created;
        this.devices = $.devices;
        this.disabled = $.disabled;
        this.id = $.id;
        this.inboundPolicy = $.inboundPolicy;
        this.inbounds = $.inbounds;
        this.label = $.label;
        this.linodes = $.linodes;
        this.nodebalancers = $.nodebalancers;
        this.outboundPolicy = $.outboundPolicy;
        this.outbounds = $.outbounds;
        this.status = $.status;
        this.tags = $.tags;
        this.updated = $.updated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFirewallsFirewallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFirewallsFirewallArgs $;

        public Builder() {
            $ = new GetFirewallsFirewallArgs();
        }

        public Builder(GetFirewallsFirewallArgs defaults) {
            $ = new GetFirewallsFirewallArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param created When this firewall was created.
         * 
         * @return builder
         * 
         */
        public Builder created(Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created When this firewall was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param devices The devices associated with this firewall.
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<GetFirewallsFirewallDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices The devices associated with this firewall.
         * 
         * @return builder
         * 
         */
        public Builder devices(List<GetFirewallsFirewallDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices The devices associated with this firewall.
         * 
         * @return builder
         * 
         */
        public Builder devices(GetFirewallsFirewallDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param disabled If true, the Firewall is inactive.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled If true, the Firewall is inactive.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param id The unique ID assigned to this Firewall.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique ID assigned to this Firewall.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        /**
         * @param inboundPolicy The default behavior for inbound traffic.
         * 
         * @return builder
         * 
         */
        public Builder inboundPolicy(Output<String> inboundPolicy) {
            $.inboundPolicy = inboundPolicy;
            return this;
        }

        /**
         * @param inboundPolicy The default behavior for inbound traffic.
         * 
         * @return builder
         * 
         */
        public Builder inboundPolicy(String inboundPolicy) {
            return inboundPolicy(Output.of(inboundPolicy));
        }

        /**
         * @param inbounds A set of firewall rules that specify what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inbounds(@Nullable Output<List<GetFirewallsFirewallInboundArgs>> inbounds) {
            $.inbounds = inbounds;
            return this;
        }

        /**
         * @param inbounds A set of firewall rules that specify what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inbounds(List<GetFirewallsFirewallInboundArgs> inbounds) {
            return inbounds(Output.of(inbounds));
        }

        /**
         * @param inbounds A set of firewall rules that specify what inbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder inbounds(GetFirewallsFirewallInboundArgs... inbounds) {
            return inbounds(List.of(inbounds));
        }

        /**
         * @param label The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param linodes The IDs of Linodes this firewall is applied to.
         * 
         * @return builder
         * 
         */
        public Builder linodes(Output<List<Integer>> linodes) {
            $.linodes = linodes;
            return this;
        }

        /**
         * @param linodes The IDs of Linodes this firewall is applied to.
         * 
         * @return builder
         * 
         */
        public Builder linodes(List<Integer> linodes) {
            return linodes(Output.of(linodes));
        }

        /**
         * @param linodes The IDs of Linodes this firewall is applied to.
         * 
         * @return builder
         * 
         */
        public Builder linodes(Integer... linodes) {
            return linodes(List.of(linodes));
        }

        /**
         * @param nodebalancers The IDs of NodeBalancers assigned to this Firewall..
         * 
         * @return builder
         * 
         */
        public Builder nodebalancers(Output<List<Integer>> nodebalancers) {
            $.nodebalancers = nodebalancers;
            return this;
        }

        /**
         * @param nodebalancers The IDs of NodeBalancers assigned to this Firewall..
         * 
         * @return builder
         * 
         */
        public Builder nodebalancers(List<Integer> nodebalancers) {
            return nodebalancers(Output.of(nodebalancers));
        }

        /**
         * @param nodebalancers The IDs of NodeBalancers assigned to this Firewall..
         * 
         * @return builder
         * 
         */
        public Builder nodebalancers(Integer... nodebalancers) {
            return nodebalancers(List.of(nodebalancers));
        }

        /**
         * @param outboundPolicy The default behavior for outbound traffic.
         * 
         * @return builder
         * 
         */
        public Builder outboundPolicy(Output<String> outboundPolicy) {
            $.outboundPolicy = outboundPolicy;
            return this;
        }

        /**
         * @param outboundPolicy The default behavior for outbound traffic.
         * 
         * @return builder
         * 
         */
        public Builder outboundPolicy(String outboundPolicy) {
            return outboundPolicy(Output.of(outboundPolicy));
        }

        /**
         * @param outbounds A set of firewall rules that specify what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder outbounds(@Nullable Output<List<GetFirewallsFirewallOutboundArgs>> outbounds) {
            $.outbounds = outbounds;
            return this;
        }

        /**
         * @param outbounds A set of firewall rules that specify what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder outbounds(List<GetFirewallsFirewallOutboundArgs> outbounds) {
            return outbounds(Output.of(outbounds));
        }

        /**
         * @param outbounds A set of firewall rules that specify what outbound network traffic is allowed.
         * 
         * @return builder
         * 
         */
        public Builder outbounds(GetFirewallsFirewallOutboundArgs... outbounds) {
            return outbounds(List.of(outbounds));
        }

        /**
         * @param status The status of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags An array of tags applied to this object. Tags are for organizational purposes only.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of tags applied to this object. Tags are for organizational purposes only.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of tags applied to this object. Tags are for organizational purposes only.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updated When this firewall was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updated(Output<String> updated) {
            $.updated = updated;
            return this;
        }

        /**
         * @param updated When this firewall was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updated(String updated) {
            return updated(Output.of(updated));
        }

        public GetFirewallsFirewallArgs build() {
            if ($.created == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "created");
            }
            if ($.disabled == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "disabled");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "id");
            }
            if ($.inboundPolicy == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "inboundPolicy");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "label");
            }
            if ($.linodes == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "linodes");
            }
            if ($.nodebalancers == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "nodebalancers");
            }
            if ($.outboundPolicy == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "outboundPolicy");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "status");
            }
            if ($.tags == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "tags");
            }
            if ($.updated == null) {
                throw new MissingRequiredPropertyException("GetFirewallsFirewallArgs", "updated");
            }
            return $;
        }
    }

}
