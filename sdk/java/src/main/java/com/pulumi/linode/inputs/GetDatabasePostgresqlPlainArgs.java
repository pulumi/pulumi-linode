// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabasePostgresqlPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabasePostgresqlPlainArgs Empty = new GetDatabasePostgresqlPlainArgs();

    /**
     * The ID of the PostgreSQL database. Deprecated: Use id instead.
     * 
     */
    @Import(name="databaseId")
    private @Nullable Integer databaseId;

    /**
     * @return The ID of the PostgreSQL database. Deprecated: Use id instead.
     * 
     */
    public Optional<Integer> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * The ID of the PostgreSQL database. Mutually exclusive with `database_id`.
     * 
     */
    @Import(name="id")
    private @Nullable Integer id;

    /**
     * @return The ID of the PostgreSQL database. Mutually exclusive with `database_id`.
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }

    private GetDatabasePostgresqlPlainArgs() {}

    private GetDatabasePostgresqlPlainArgs(GetDatabasePostgresqlPlainArgs $) {
        this.databaseId = $.databaseId;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabasePostgresqlPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabasePostgresqlPlainArgs $;

        public Builder() {
            $ = new GetDatabasePostgresqlPlainArgs();
        }

        public Builder(GetDatabasePostgresqlPlainArgs defaults) {
            $ = new GetDatabasePostgresqlPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseId The ID of the PostgreSQL database. Deprecated: Use id instead.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable Integer databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param id The ID of the PostgreSQL database. Mutually exclusive with `database_id`.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Integer id) {
            $.id = id;
            return this;
        }

        public GetDatabasePostgresqlPlainArgs build() {
            return $;
        }
    }

}
