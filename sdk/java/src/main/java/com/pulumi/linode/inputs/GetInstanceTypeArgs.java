// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceTypeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceTypeArgs Empty = new GetInstanceTypeArgs();

    /**
     * Label used to identify instance type
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Label used to identify instance type
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The Linode Type&#39;s label is for display purposes only
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return The Linode Type&#39;s label is for display purposes only
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    private GetInstanceTypeArgs() {}

    private GetInstanceTypeArgs(GetInstanceTypeArgs $) {
        this.id = $.id;
        this.label = $.label;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceTypeArgs $;

        public Builder() {
            $ = new GetInstanceTypeArgs();
        }

        public Builder(GetInstanceTypeArgs defaults) {
            $ = new GetInstanceTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Label used to identify instance type
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Label used to identify instance type
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param label The Linode Type&#39;s label is for display purposes only
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The Linode Type&#39;s label is for display purposes only
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        public GetInstanceTypeArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetInstanceTypeArgs", "id");
            }
            return $;
        }
    }

}
