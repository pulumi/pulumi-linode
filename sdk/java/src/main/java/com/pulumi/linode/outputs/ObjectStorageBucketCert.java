// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ObjectStorageBucketCert {
    /**
     * @return The Base64 encoded and PEM formatted SSL certificate.
     * 
     */
    private String certificate;
    /**
     * @return The private key associated with the TLS/SSL certificate.
     * 
     */
    private String privateKey;

    private ObjectStorageBucketCert() {}
    /**
     * @return The Base64 encoded and PEM formatted SSL certificate.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return The private key associated with the TLS/SSL certificate.
     * 
     */
    public String privateKey() {
        return this.privateKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectStorageBucketCert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificate;
        private String privateKey;
        public Builder() {}
        public Builder(ObjectStorageBucketCert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.privateKey = defaults.privateKey;
        }

        @CustomType.Setter
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        @CustomType.Setter
        public Builder privateKey(String privateKey) {
            this.privateKey = Objects.requireNonNull(privateKey);
            return this;
        }
        public ObjectStorageBucketCert build() {
            final var _resultValue = new ObjectStorageBucketCert();
            _resultValue.certificate = certificate;
            _resultValue.privateKey = privateKey;
            return _resultValue;
        }
    }
}
