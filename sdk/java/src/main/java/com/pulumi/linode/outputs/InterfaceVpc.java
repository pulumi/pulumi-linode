// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.InterfaceVpcIpv4;
import com.pulumi.linode.outputs.InterfaceVpcIpv6;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InterfaceVpc {
    /**
     * @return IPv4 configuration for the VPC interface.
     * 
     */
    private @Nullable InterfaceVpcIpv4 ipv4;
    /**
     * @return IPv6 assigned through `slaac` and `ranges`. If you create a VPC interface in a subnet with IPv6 and don’t specify `slaac` or `ranges`, a SLAAC range is added automatically. **NOTE: IPv6 VPCs may not currently be available to all users.**
     * 
     */
    private @Nullable InterfaceVpcIpv6 ipv6;
    /**
     * @return The VPC subnet identifier for this interface.
     * 
     */
    private Integer subnetId;

    private InterfaceVpc() {}
    /**
     * @return IPv4 configuration for the VPC interface.
     * 
     */
    public Optional<InterfaceVpcIpv4> ipv4() {
        return Optional.ofNullable(this.ipv4);
    }
    /**
     * @return IPv6 assigned through `slaac` and `ranges`. If you create a VPC interface in a subnet with IPv6 and don’t specify `slaac` or `ranges`, a SLAAC range is added automatically. **NOTE: IPv6 VPCs may not currently be available to all users.**
     * 
     */
    public Optional<InterfaceVpcIpv6> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }
    /**
     * @return The VPC subnet identifier for this interface.
     * 
     */
    public Integer subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterfaceVpc defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable InterfaceVpcIpv4 ipv4;
        private @Nullable InterfaceVpcIpv6 ipv6;
        private Integer subnetId;
        public Builder() {}
        public Builder(InterfaceVpc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipv4 = defaults.ipv4;
    	      this.ipv6 = defaults.ipv6;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder ipv4(@Nullable InterfaceVpcIpv4 ipv4) {

            this.ipv4 = ipv4;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6(@Nullable InterfaceVpcIpv6 ipv6) {

            this.ipv6 = ipv6;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(Integer subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("InterfaceVpc", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public InterfaceVpc build() {
            final var _resultValue = new InterfaceVpc();
            _resultValue.ipv4 = ipv4;
            _resultValue.ipv6 = ipv6;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
