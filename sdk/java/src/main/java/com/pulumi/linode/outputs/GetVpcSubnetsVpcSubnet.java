// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetVpcSubnetsVpcSubnetIpv6;
import com.pulumi.linode.outputs.GetVpcSubnetsVpcSubnetLinode;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVpcSubnetsVpcSubnet {
    /**
     * @return The date and time when the VPC Subnet was created.
     * 
     */
    private String created;
    /**
     * @return ID of the interface.
     * 
     */
    private Integer id;
    /**
     * @return The IPv4 range of this subnet in CIDR format.
     * 
     */
    private String ipv4;
    /**
     * @return The IPv6 ranges of this subnet.
     * 
     */
    private List<GetVpcSubnetsVpcSubnetIpv6> ipv6s;
    /**
     * @return The label of the VPC subnet.
     * 
     */
    private String label;
    /**
     * @return A list of Linodes added to this subnet.
     * 
     */
    private List<GetVpcSubnetsVpcSubnetLinode> linodes;
    /**
     * @return The date and time when the VPC Subnet was last updated.
     * 
     */
    private String updated;

    private GetVpcSubnetsVpcSubnet() {}
    /**
     * @return The date and time when the VPC Subnet was created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return ID of the interface.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The IPv4 range of this subnet in CIDR format.
     * 
     */
    public String ipv4() {
        return this.ipv4;
    }
    /**
     * @return The IPv6 ranges of this subnet.
     * 
     */
    public List<GetVpcSubnetsVpcSubnetIpv6> ipv6s() {
        return this.ipv6s;
    }
    /**
     * @return The label of the VPC subnet.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return A list of Linodes added to this subnet.
     * 
     */
    public List<GetVpcSubnetsVpcSubnetLinode> linodes() {
        return this.linodes;
    }
    /**
     * @return The date and time when the VPC Subnet was last updated.
     * 
     */
    public String updated() {
        return this.updated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcSubnetsVpcSubnet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String created;
        private Integer id;
        private String ipv4;
        private List<GetVpcSubnetsVpcSubnetIpv6> ipv6s;
        private String label;
        private List<GetVpcSubnetsVpcSubnetLinode> linodes;
        private String updated;
        public Builder() {}
        public Builder(GetVpcSubnetsVpcSubnet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.id = defaults.id;
    	      this.ipv4 = defaults.ipv4;
    	      this.ipv6s = defaults.ipv6s;
    	      this.label = defaults.label;
    	      this.linodes = defaults.linodes;
    	      this.updated = defaults.updated;
        }

        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4(String ipv4) {
            if (ipv4 == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "ipv4");
            }
            this.ipv4 = ipv4;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6s(List<GetVpcSubnetsVpcSubnetIpv6> ipv6s) {
            if (ipv6s == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "ipv6s");
            }
            this.ipv6s = ipv6s;
            return this;
        }
        public Builder ipv6s(GetVpcSubnetsVpcSubnetIpv6... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder linodes(List<GetVpcSubnetsVpcSubnetLinode> linodes) {
            if (linodes == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "linodes");
            }
            this.linodes = linodes;
            return this;
        }
        public Builder linodes(GetVpcSubnetsVpcSubnetLinode... linodes) {
            return linodes(List.of(linodes));
        }
        @CustomType.Setter
        public Builder updated(String updated) {
            if (updated == null) {
              throw new MissingRequiredPropertyException("GetVpcSubnetsVpcSubnet", "updated");
            }
            this.updated = updated;
            return this;
        }
        public GetVpcSubnetsVpcSubnet build() {
            final var _resultValue = new GetVpcSubnetsVpcSubnet();
            _resultValue.created = created;
            _resultValue.id = id;
            _resultValue.ipv4 = ipv4;
            _resultValue.ipv6s = ipv6s;
            _resultValue.label = label;
            _resultValue.linodes = linodes;
            _resultValue.updated = updated;
            return _resultValue;
        }
    }
}
