// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.linode.DomainRecordArgs;
import com.pulumi.linode.Utilities;
import com.pulumi.linode.inputs.DomainRecordState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Linode Domain Record resource.  This can be used to create, modify, and delete Linodes Domain Records.
 * For more information, see [DNS Manager](https://www.linode.com/docs/platform/manager/dns-manager/) and the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/post-domain-record).
 * 
 * ## Example Usage
 * 
 * The following example shows how one might use this resource to configure a Domain Record attached to a Linode Domain.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.Domain;
 * import com.pulumi.linode.DomainArgs;
 * import com.pulumi.linode.DomainRecord;
 * import com.pulumi.linode.DomainRecordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foobar = new Domain("foobar", DomainArgs.builder()
 *             .type("master")
 *             .domain("foobar.example")
 *             .soaEmail("example{@literal @}foobar.example")
 *             .build());
 * 
 *         var foobarDomainRecord = new DomainRecord("foobarDomainRecord", DomainRecordArgs.builder()
 *             .domainId(foobar.id())
 *             .name("www")
 *             .recordType("CNAME")
 *             .target("foobar.example")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Linodes Domain Records can be imported using the Linode Domain `id` followed by the Domain Record `id` separated by a comma, e.g.
 * 
 * ```sh
 * $ pulumi import linode:index/domainRecord:DomainRecord www-foobar 1234567,7654321
 * ```
 * 
 */
@ResourceType(type="linode:index/domainRecord:DomainRecord")
public class DomainRecord extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Domain to access.  *Changing `domain_id` forces the creation of a new Linode Domain Record.*.
     * 
     */
    @Export(name="domainId", refs={Integer.class}, tree="[0]")
    private Output<Integer> domainId;

    /**
     * @return The ID of the Domain to access.  *Changing `domain_id` forces the creation of a new Linode Domain Record.*.
     * 
     */
    public Output<Integer> domainId() {
        return this.domainId;
    }
    /**
     * The name of this Record. Setting this is invalid for `SRV` records as it is generated by the API. This field&#39;s actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of this Record. Setting this is invalid for `SRV` records as it is generated by the API. This field&#39;s actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The port this Record points to.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> port;

    /**
     * @return The port this Record points to.
     * 
     */
    public Output<Optional<Integer>> port() {
        return Codegen.optional(this.port);
    }
    /**
     * The priority of the target host. Lower values are preferred.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> priority;

    /**
     * @return The priority of the target host. Lower values are preferred.
     * 
     */
    public Output<Optional<Integer>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * The protocol this Record&#39;s service communicates with. Only valid for SRV records.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protocol;

    /**
     * @return The protocol this Record&#39;s service communicates with. Only valid for SRV records.
     * 
     */
    public Output<Optional<String>> protocol() {
        return Codegen.optional(this.protocol);
    }
    /**
     * The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address. See all supported record types [here](https://techdocs.akamai.com/linode-api/reference/post-domain-record). *Changing `record_type` forces the creation of a new Linode Domain Record.*.
     * 
     */
    @Export(name="recordType", refs={String.class}, tree="[0]")
    private Output<String> recordType;

    /**
     * @return The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address. See all supported record types [here](https://techdocs.akamai.com/linode-api/reference/post-domain-record). *Changing `record_type` forces the creation of a new Linode Domain Record.*.
     * 
     */
    public Output<String> recordType() {
        return this.recordType;
    }
    /**
     * The service this Record identified. Only valid for SRV records.
     * 
     */
    @Export(name="service", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> service;

    /**
     * @return The service this Record identified. Only valid for SRV records.
     * 
     */
    public Output<Optional<String>> service() {
        return Codegen.optional(this.service);
    }
    /**
     * The tag portion of a CAA record. It is invalid to set this on other record types.
     * 
     */
    @Export(name="tag", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tag;

    /**
     * @return The tag portion of a CAA record. It is invalid to set this on other record types.
     * 
     */
    public Output<Optional<String>> tag() {
        return Codegen.optional(this.tag);
    }
    /**
     * The target for this Record. This field&#39;s actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.
     * 
     * ***
     * 
     */
    @Export(name="target", refs={String.class}, tree="[0]")
    private Output<String> target;

    /**
     * @return The target for this Record. This field&#39;s actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.
     * 
     * ***
     * 
     */
    public Output<String> target() {
        return this.target;
    }
    /**
     * &#39;Time to Live&#39; - the amount of time in seconds that this Domain&#39;s records may be cached by resolvers or other domain servers. Valid values are 30, 120, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.
     * 
     */
    @Export(name="ttlSec", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ttlSec;

    /**
     * @return &#39;Time to Live&#39; - the amount of time in seconds that this Domain&#39;s records may be cached by resolvers or other domain servers. Valid values are 30, 120, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.
     * 
     */
    public Output<Optional<Integer>> ttlSec() {
        return Codegen.optional(this.ttlSec);
    }
    /**
     * The relative weight of this Record. Higher values are preferred.
     * 
     */
    @Export(name="weight", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> weight;

    /**
     * @return The relative weight of this Record. Higher values are preferred.
     * 
     */
    public Output<Optional<Integer>> weight() {
        return Codegen.optional(this.weight);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainRecord(String name) {
        this(name, DomainRecordArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainRecord(String name, DomainRecordArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainRecord(String name, DomainRecordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/domainRecord:DomainRecord", name, args == null ? DomainRecordArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DomainRecord(String name, Output<String> id, @Nullable DomainRecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/domainRecord:DomainRecord", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainRecord get(String name, Output<String> id, @Nullable DomainRecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DomainRecord(name, id, state, options);
    }
}
