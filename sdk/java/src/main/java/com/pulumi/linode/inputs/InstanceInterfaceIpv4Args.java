// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceInterfaceIpv4Args extends com.pulumi.resources.ResourceArgs {

    public static final InstanceInterfaceIpv4Args Empty = new InstanceInterfaceIpv4Args();

    /**
     * The public IP that will be used for the one-to-one NAT purpose. If this is `any`, the public IPv4 address assigned to this Linode is used on this interface and will be 1:1 NATted with the VPC IPv4 address.
     * 
     */
    @Import(name="nat11")
    private @Nullable Output<String> nat11;

    /**
     * @return The public IP that will be used for the one-to-one NAT purpose. If this is `any`, the public IPv4 address assigned to this Linode is used on this interface and will be 1:1 NATted with the VPC IPv4 address.
     * 
     */
    public Optional<Output<String>> nat11() {
        return Optional.ofNullable(this.nat11);
    }

    /**
     * The IP from the VPC subnet to use for this interface. A random address will be assigned if this is not specified in a VPC interface.
     * 
     */
    @Import(name="vpc")
    private @Nullable Output<String> vpc;

    /**
     * @return The IP from the VPC subnet to use for this interface. A random address will be assigned if this is not specified in a VPC interface.
     * 
     */
    public Optional<Output<String>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    private InstanceInterfaceIpv4Args() {}

    private InstanceInterfaceIpv4Args(InstanceInterfaceIpv4Args $) {
        this.nat11 = $.nat11;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceInterfaceIpv4Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceInterfaceIpv4Args $;

        public Builder() {
            $ = new InstanceInterfaceIpv4Args();
        }

        public Builder(InstanceInterfaceIpv4Args defaults) {
            $ = new InstanceInterfaceIpv4Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param nat11 The public IP that will be used for the one-to-one NAT purpose. If this is `any`, the public IPv4 address assigned to this Linode is used on this interface and will be 1:1 NATted with the VPC IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder nat11(@Nullable Output<String> nat11) {
            $.nat11 = nat11;
            return this;
        }

        /**
         * @param nat11 The public IP that will be used for the one-to-one NAT purpose. If this is `any`, the public IPv4 address assigned to this Linode is used on this interface and will be 1:1 NATted with the VPC IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder nat11(String nat11) {
            return nat11(Output.of(nat11));
        }

        /**
         * @param vpc The IP from the VPC subnet to use for this interface. A random address will be assigned if this is not specified in a VPC interface.
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Output<String> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc The IP from the VPC subnet to use for this interface. A random address will be assigned if this is not specified in a VPC interface.
         * 
         * @return builder
         * 
         */
        public Builder vpc(String vpc) {
            return vpc(Output.of(vpc));
        }

        public InstanceInterfaceIpv4Args build() {
            return $;
        }
    }

}
