// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class InstanceIpVpcNat11Args extends com.pulumi.resources.ResourceArgs {

    public static final InstanceIpVpcNat11Args Empty = new InstanceIpVpcNat11Args();

    /**
     * The resulting IPv4 address.
     * 
     */
    @Import(name="address", required=true)
    private Output<String> address;

    /**
     * @return The resulting IPv4 address.
     * 
     */
    public Output<String> address() {
        return this.address;
    }

    @Import(name="subnetId", required=true)
    private Output<Integer> subnetId;

    public Output<Integer> subnetId() {
        return this.subnetId;
    }

    @Import(name="vpcId", required=true)
    private Output<Integer> vpcId;

    public Output<Integer> vpcId() {
        return this.vpcId;
    }

    private InstanceIpVpcNat11Args() {}

    private InstanceIpVpcNat11Args(InstanceIpVpcNat11Args $) {
        this.address = $.address;
        this.subnetId = $.subnetId;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceIpVpcNat11Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceIpVpcNat11Args $;

        public Builder() {
            $ = new InstanceIpVpcNat11Args();
        }

        public Builder(InstanceIpVpcNat11Args defaults) {
            $ = new InstanceIpVpcNat11Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The resulting IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder address(Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The resulting IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        public Builder subnetId(Output<Integer> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(Integer subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder vpcId(Output<Integer> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(Integer vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public InstanceIpVpcNat11Args build() {
            if ($.address == null) {
                throw new MissingRequiredPropertyException("InstanceIpVpcNat11Args", "address");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("InstanceIpVpcNat11Args", "subnetId");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("InstanceIpVpcNat11Args", "vpcId");
            }
            return $;
        }
    }

}
