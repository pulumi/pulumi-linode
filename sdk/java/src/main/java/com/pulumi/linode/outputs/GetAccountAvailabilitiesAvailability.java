// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountAvailabilitiesAvailability {
    /**
     * @return The region this availability entry refers to.
     * 
     */
    private String region;
    /**
     * @return A set of services that are unavailable for the given region.
     * 
     */
    private List<String> unavailables;

    private GetAccountAvailabilitiesAvailability() {}
    /**
     * @return The region this availability entry refers to.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return A set of services that are unavailable for the given region.
     * 
     */
    public List<String> unavailables() {
        return this.unavailables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountAvailabilitiesAvailability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String region;
        private List<String> unavailables;
        public Builder() {}
        public Builder(GetAccountAvailabilitiesAvailability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.region = defaults.region;
    	      this.unavailables = defaults.unavailables;
        }

        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder unavailables(List<String> unavailables) {
            this.unavailables = Objects.requireNonNull(unavailables);
            return this;
        }
        public Builder unavailables(String... unavailables) {
            return unavailables(List.of(unavailables));
        }
        public GetAccountAvailabilitiesAvailability build() {
            final var _resultValue = new GetAccountAvailabilitiesAvailability();
            _resultValue.region = region;
            _resultValue.unavailables = unavailables;
            return _resultValue;
        }
    }
}
