// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.inputs.GetLkeClusterControlPlaneAclArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLkeClusterControlPlaneArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetLkeClusterControlPlaneArgs Empty = new GetLkeClusterControlPlaneArgs();

    /**
     * The ACL configuration for an LKE cluster&#39;s control plane.
     * 
     */
    @Import(name="acls")
    private @Nullable Output<List<GetLkeClusterControlPlaneAclArgs>> acls;

    /**
     * @return The ACL configuration for an LKE cluster&#39;s control plane.
     * 
     */
    public Optional<Output<List<GetLkeClusterControlPlaneAclArgs>>> acls() {
        return Optional.ofNullable(this.acls);
    }

    /**
     * Whether High Availability is enabled for the cluster Control Plane.
     * 
     */
    @Import(name="highAvailability", required=true)
    private Output<Boolean> highAvailability;

    /**
     * @return Whether High Availability is enabled for the cluster Control Plane.
     * 
     */
    public Output<Boolean> highAvailability() {
        return this.highAvailability;
    }

    private GetLkeClusterControlPlaneArgs() {}

    private GetLkeClusterControlPlaneArgs(GetLkeClusterControlPlaneArgs $) {
        this.acls = $.acls;
        this.highAvailability = $.highAvailability;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeClusterControlPlaneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeClusterControlPlaneArgs $;

        public Builder() {
            $ = new GetLkeClusterControlPlaneArgs();
        }

        public Builder(GetLkeClusterControlPlaneArgs defaults) {
            $ = new GetLkeClusterControlPlaneArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acls The ACL configuration for an LKE cluster&#39;s control plane.
         * 
         * @return builder
         * 
         */
        public Builder acls(@Nullable Output<List<GetLkeClusterControlPlaneAclArgs>> acls) {
            $.acls = acls;
            return this;
        }

        /**
         * @param acls The ACL configuration for an LKE cluster&#39;s control plane.
         * 
         * @return builder
         * 
         */
        public Builder acls(List<GetLkeClusterControlPlaneAclArgs> acls) {
            return acls(Output.of(acls));
        }

        /**
         * @param acls The ACL configuration for an LKE cluster&#39;s control plane.
         * 
         * @return builder
         * 
         */
        public Builder acls(GetLkeClusterControlPlaneAclArgs... acls) {
            return acls(List.of(acls));
        }

        /**
         * @param highAvailability Whether High Availability is enabled for the cluster Control Plane.
         * 
         * @return builder
         * 
         */
        public Builder highAvailability(Output<Boolean> highAvailability) {
            $.highAvailability = highAvailability;
            return this;
        }

        /**
         * @param highAvailability Whether High Availability is enabled for the cluster Control Plane.
         * 
         * @return builder
         * 
         */
        public Builder highAvailability(Boolean highAvailability) {
            return highAvailability(Output.of(highAvailability));
        }

        public GetLkeClusterControlPlaneArgs build() {
            if ($.highAvailability == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterControlPlaneArgs", "highAvailability");
            }
            return $;
        }
    }

}
