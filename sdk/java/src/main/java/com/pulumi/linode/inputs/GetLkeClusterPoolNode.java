// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetLkeClusterPoolNode extends com.pulumi.resources.InvokeArgs {

    public static final GetLkeClusterPoolNode Empty = new GetLkeClusterPoolNode();

    /**
     * The LKE Cluster&#39;s ID.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The LKE Cluster&#39;s ID.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The ID of the underlying Linode instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private Integer instanceId;

    /**
     * @return The ID of the underlying Linode instance.
     * 
     */
    public Integer instanceId() {
        return this.instanceId;
    }

    /**
     * The status of the node. (`ready`, `not_ready`)
     * 
     */
    @Import(name="status", required=true)
    private String status;

    /**
     * @return The status of the node. (`ready`, `not_ready`)
     * 
     */
    public String status() {
        return this.status;
    }

    private GetLkeClusterPoolNode() {}

    private GetLkeClusterPoolNode(GetLkeClusterPoolNode $) {
        this.id = $.id;
        this.instanceId = $.instanceId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLkeClusterPoolNode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLkeClusterPoolNode $;

        public Builder() {
            $ = new GetLkeClusterPoolNode();
        }

        public Builder(GetLkeClusterPoolNode defaults) {
            $ = new GetLkeClusterPoolNode(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The LKE Cluster&#39;s ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param instanceId The ID of the underlying Linode instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Integer instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param status The status of the node. (`ready`, `not_ready`)
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            $.status = status;
            return this;
        }

        public GetLkeClusterPoolNode build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterPoolNode", "id");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterPoolNode", "instanceId");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("GetLkeClusterPoolNode", "status");
            }
            return $;
        }
    }

}
