// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainZonefileResult {
    /**
     * @return The associated domain&#39;s unique ID.
     * 
     */
    private Integer domainId;
    private String id;
    /**
     * @return Array of strings representing the Domain Zonefile.
     * 
     */
    private List<String> zoneFiles;

    private GetDomainZonefileResult() {}
    /**
     * @return The associated domain&#39;s unique ID.
     * 
     */
    public Integer domainId() {
        return this.domainId;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Array of strings representing the Domain Zonefile.
     * 
     */
    public List<String> zoneFiles() {
        return this.zoneFiles;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainZonefileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer domainId;
        private String id;
        private List<String> zoneFiles;
        public Builder() {}
        public Builder(GetDomainZonefileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainId = defaults.domainId;
    	      this.id = defaults.id;
    	      this.zoneFiles = defaults.zoneFiles;
        }

        @CustomType.Setter
        public Builder domainId(Integer domainId) {
            if (domainId == null) {
              throw new MissingRequiredPropertyException("GetDomainZonefileResult", "domainId");
            }
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainZonefileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder zoneFiles(List<String> zoneFiles) {
            if (zoneFiles == null) {
              throw new MissingRequiredPropertyException("GetDomainZonefileResult", "zoneFiles");
            }
            this.zoneFiles = zoneFiles;
            return this;
        }
        public Builder zoneFiles(String... zoneFiles) {
            return zoneFiles(List.of(zoneFiles));
        }
        public GetDomainZonefileResult build() {
            final var _resultValue = new GetDomainZonefileResult();
            _resultValue.domainId = domainId;
            _resultValue.id = id;
            _resultValue.zoneFiles = zoneFiles;
            return _resultValue;
        }
    }
}
