// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class GetNodebalancerConfigsNodebalancerConfigNodeStatus extends com.pulumi.resources.InvokeArgs {

    public static final GetNodebalancerConfigsNodebalancerConfigNodeStatus Empty = new GetNodebalancerConfigsNodebalancerConfigNodeStatus();

    /**
     * The number of backends considered to be &#39;DOWN&#39; and unhealthy. These are not in rotation, and not serving requests.
     * 
     */
    @Import(name="down", required=true)
    private Integer down;

    /**
     * @return The number of backends considered to be &#39;DOWN&#39; and unhealthy. These are not in rotation, and not serving requests.
     * 
     */
    public Integer down() {
        return this.down;
    }

    /**
     * The number of backends considered to be &#39;UP&#39; and healthy, and that are serving requests.
     * 
     */
    @Import(name="up", required=true)
    private Integer up;

    /**
     * @return The number of backends considered to be &#39;UP&#39; and healthy, and that are serving requests.
     * 
     */
    public Integer up() {
        return this.up;
    }

    private GetNodebalancerConfigsNodebalancerConfigNodeStatus() {}

    private GetNodebalancerConfigsNodebalancerConfigNodeStatus(GetNodebalancerConfigsNodebalancerConfigNodeStatus $) {
        this.down = $.down;
        this.up = $.up;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNodebalancerConfigsNodebalancerConfigNodeStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNodebalancerConfigsNodebalancerConfigNodeStatus $;

        public Builder() {
            $ = new GetNodebalancerConfigsNodebalancerConfigNodeStatus();
        }

        public Builder(GetNodebalancerConfigsNodebalancerConfigNodeStatus defaults) {
            $ = new GetNodebalancerConfigsNodebalancerConfigNodeStatus(Objects.requireNonNull(defaults));
        }

        /**
         * @param down The number of backends considered to be &#39;DOWN&#39; and unhealthy. These are not in rotation, and not serving requests.
         * 
         * @return builder
         * 
         */
        public Builder down(Integer down) {
            $.down = down;
            return this;
        }

        /**
         * @param up The number of backends considered to be &#39;UP&#39; and healthy, and that are serving requests.
         * 
         * @return builder
         * 
         */
        public Builder up(Integer up) {
            $.up = up;
            return this;
        }

        public GetNodebalancerConfigsNodebalancerConfigNodeStatus build() {
            if ($.down == null) {
                throw new MissingRequiredPropertyException("GetNodebalancerConfigsNodebalancerConfigNodeStatus", "down");
            }
            if ($.up == null) {
                throw new MissingRequiredPropertyException("GetNodebalancerConfigsNodebalancerConfigNodeStatus", "up");
            }
            return $;
        }
    }

}
