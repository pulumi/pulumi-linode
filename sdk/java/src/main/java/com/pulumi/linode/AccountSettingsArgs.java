// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountSettingsArgs Empty = new AccountSettingsArgs();

    /**
     * The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
     * 
     */
    @Import(name="backupsEnabled")
    private @Nullable Output<Boolean> backupsEnabled;

    /**
     * @return The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
     * 
     */
    public Optional<Output<Boolean>> backupsEnabled() {
        return Optional.ofNullable(this.backupsEnabled);
    }

    /**
     * Type of interfaces for new Linode instances. Available values are `&#34;legacyConfigOnly&#34;`, `&#34;legacyConfigDefaultButLinodeAllowed&#34;`, `&#34;linodeDefaultButLegacyConfigAllowed&#34;`, and `&#34;linodeOnly&#34;`.
     * 
     */
    @Import(name="interfacesForNewLinodes")
    private @Nullable Output<String> interfacesForNewLinodes;

    /**
     * @return Type of interfaces for new Linode instances. Available values are `&#34;legacyConfigOnly&#34;`, `&#34;legacyConfigDefaultButLinodeAllowed&#34;`, `&#34;linodeDefaultButLegacyConfigAllowed&#34;`, and `&#34;linodeOnly&#34;`.
     * 
     */
    public Optional<Output<String>> interfacesForNewLinodes() {
        return Optional.ofNullable(this.interfacesForNewLinodes);
    }

    /**
     * The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://techdocs.akamai.com/linode-api/reference/get-longview-subscriptions) ID or null for Longview Free.
     * 
     */
    @Import(name="longviewSubscription")
    private @Nullable Output<String> longviewSubscription;

    /**
     * @return The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://techdocs.akamai.com/linode-api/reference/get-longview-subscriptions) ID or null for Longview Free.
     * 
     */
    public Optional<Output<String>> longviewSubscription() {
        return Optional.ofNullable(this.longviewSubscription);
    }

    /**
     * The default maintenance policy for this account. Examples are `&#34;linode/migrate&#34;` and `&#34;linode/power_off_on&#34;`. Defaults to `&#34;linode/migrate&#34;`. (**Note: v4beta only.**)
     * 
     */
    @Import(name="maintenancePolicy")
    private @Nullable Output<String> maintenancePolicy;

    /**
     * @return The default maintenance policy for this account. Examples are `&#34;linode/migrate&#34;` and `&#34;linode/power_off_on&#34;`. Defaults to `&#34;linode/migrate&#34;`. (**Note: v4beta only.**)
     * 
     */
    public Optional<Output<String>> maintenancePolicy() {
        return Optional.ofNullable(this.maintenancePolicy);
    }

    /**
     * Enables network helper across all users by default for new Linodes and Linode Configs.
     * 
     */
    @Import(name="networkHelper")
    private @Nullable Output<Boolean> networkHelper;

    /**
     * @return Enables network helper across all users by default for new Linodes and Linode Configs.
     * 
     */
    public Optional<Output<Boolean>> networkHelper() {
        return Optional.ofNullable(this.networkHelper);
    }

    private AccountSettingsArgs() {}

    private AccountSettingsArgs(AccountSettingsArgs $) {
        this.backupsEnabled = $.backupsEnabled;
        this.interfacesForNewLinodes = $.interfacesForNewLinodes;
        this.longviewSubscription = $.longviewSubscription;
        this.maintenancePolicy = $.maintenancePolicy;
        this.networkHelper = $.networkHelper;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountSettingsArgs $;

        public Builder() {
            $ = new AccountSettingsArgs();
        }

        public Builder(AccountSettingsArgs defaults) {
            $ = new AccountSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupsEnabled The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
         * 
         * @return builder
         * 
         */
        public Builder backupsEnabled(@Nullable Output<Boolean> backupsEnabled) {
            $.backupsEnabled = backupsEnabled;
            return this;
        }

        /**
         * @param backupsEnabled The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
         * 
         * @return builder
         * 
         */
        public Builder backupsEnabled(Boolean backupsEnabled) {
            return backupsEnabled(Output.of(backupsEnabled));
        }

        /**
         * @param interfacesForNewLinodes Type of interfaces for new Linode instances. Available values are `&#34;legacyConfigOnly&#34;`, `&#34;legacyConfigDefaultButLinodeAllowed&#34;`, `&#34;linodeDefaultButLegacyConfigAllowed&#34;`, and `&#34;linodeOnly&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder interfacesForNewLinodes(@Nullable Output<String> interfacesForNewLinodes) {
            $.interfacesForNewLinodes = interfacesForNewLinodes;
            return this;
        }

        /**
         * @param interfacesForNewLinodes Type of interfaces for new Linode instances. Available values are `&#34;legacyConfigOnly&#34;`, `&#34;legacyConfigDefaultButLinodeAllowed&#34;`, `&#34;linodeDefaultButLegacyConfigAllowed&#34;`, and `&#34;linodeOnly&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder interfacesForNewLinodes(String interfacesForNewLinodes) {
            return interfacesForNewLinodes(Output.of(interfacesForNewLinodes));
        }

        /**
         * @param longviewSubscription The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://techdocs.akamai.com/linode-api/reference/get-longview-subscriptions) ID or null for Longview Free.
         * 
         * @return builder
         * 
         */
        public Builder longviewSubscription(@Nullable Output<String> longviewSubscription) {
            $.longviewSubscription = longviewSubscription;
            return this;
        }

        /**
         * @param longviewSubscription The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](https://techdocs.akamai.com/linode-api/reference/get-longview-subscriptions) ID or null for Longview Free.
         * 
         * @return builder
         * 
         */
        public Builder longviewSubscription(String longviewSubscription) {
            return longviewSubscription(Output.of(longviewSubscription));
        }

        /**
         * @param maintenancePolicy The default maintenance policy for this account. Examples are `&#34;linode/migrate&#34;` and `&#34;linode/power_off_on&#34;`. Defaults to `&#34;linode/migrate&#34;`. (**Note: v4beta only.**)
         * 
         * @return builder
         * 
         */
        public Builder maintenancePolicy(@Nullable Output<String> maintenancePolicy) {
            $.maintenancePolicy = maintenancePolicy;
            return this;
        }

        /**
         * @param maintenancePolicy The default maintenance policy for this account. Examples are `&#34;linode/migrate&#34;` and `&#34;linode/power_off_on&#34;`. Defaults to `&#34;linode/migrate&#34;`. (**Note: v4beta only.**)
         * 
         * @return builder
         * 
         */
        public Builder maintenancePolicy(String maintenancePolicy) {
            return maintenancePolicy(Output.of(maintenancePolicy));
        }

        /**
         * @param networkHelper Enables network helper across all users by default for new Linodes and Linode Configs.
         * 
         * @return builder
         * 
         */
        public Builder networkHelper(@Nullable Output<Boolean> networkHelper) {
            $.networkHelper = networkHelper;
            return this;
        }

        /**
         * @param networkHelper Enables network helper across all users by default for new Linodes and Linode Configs.
         * 
         * @return builder
         * 
         */
        public Builder networkHelper(Boolean networkHelper) {
            return networkHelper(Output.of(networkHelper));
        }

        public AccountSettingsArgs build() {
            return $;
        }
    }

}
