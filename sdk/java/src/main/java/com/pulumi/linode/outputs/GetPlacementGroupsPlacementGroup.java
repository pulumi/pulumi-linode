// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.linode.outputs.GetPlacementGroupsPlacementGroupMember;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetPlacementGroupsPlacementGroup {
    /**
     * @return The affinity policy to use when placing Linodes in this group.
     * 
     */
    private String affinityType;
    /**
     * @return The ID of the placement group.
     * 
     */
    private Integer id;
    /**
     * @return Whether this Linode is currently compliant with the group&#39;s affinity policy.
     * 
     */
    private Boolean isCompliant;
    /**
     * @return Whether Linodes must be able to become compliant during assignment. (Default `true`)
     * 
     */
    private Boolean isStrict;
    /**
     * @return The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
     * 
     */
    private String label;
    /**
     * @return A set of Linodes currently assigned to this Placement Group.
     * 
     */
    private @Nullable List<GetPlacementGroupsPlacementGroupMember> members;
    /**
     * @return The region of the Placement Group.
     * 
     */
    private String region;

    private GetPlacementGroupsPlacementGroup() {}
    /**
     * @return The affinity policy to use when placing Linodes in this group.
     * 
     */
    public String affinityType() {
        return this.affinityType;
    }
    /**
     * @return The ID of the placement group.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return Whether this Linode is currently compliant with the group&#39;s affinity policy.
     * 
     */
    public Boolean isCompliant() {
        return this.isCompliant;
    }
    /**
     * @return Whether Linodes must be able to become compliant during assignment. (Default `true`)
     * 
     */
    public Boolean isStrict() {
        return this.isStrict;
    }
    /**
     * @return The label of the Placement Group. This field can only contain ASCII letters, digits and dashes.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return A set of Linodes currently assigned to this Placement Group.
     * 
     */
    public List<GetPlacementGroupsPlacementGroupMember> members() {
        return this.members == null ? List.of() : this.members;
    }
    /**
     * @return The region of the Placement Group.
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPlacementGroupsPlacementGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String affinityType;
        private Integer id;
        private Boolean isCompliant;
        private Boolean isStrict;
        private String label;
        private @Nullable List<GetPlacementGroupsPlacementGroupMember> members;
        private String region;
        public Builder() {}
        public Builder(GetPlacementGroupsPlacementGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affinityType = defaults.affinityType;
    	      this.id = defaults.id;
    	      this.isCompliant = defaults.isCompliant;
    	      this.isStrict = defaults.isStrict;
    	      this.label = defaults.label;
    	      this.members = defaults.members;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder affinityType(String affinityType) {
            if (affinityType == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupsPlacementGroup", "affinityType");
            }
            this.affinityType = affinityType;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupsPlacementGroup", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCompliant(Boolean isCompliant) {
            if (isCompliant == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupsPlacementGroup", "isCompliant");
            }
            this.isCompliant = isCompliant;
            return this;
        }
        @CustomType.Setter
        public Builder isStrict(Boolean isStrict) {
            if (isStrict == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupsPlacementGroup", "isStrict");
            }
            this.isStrict = isStrict;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupsPlacementGroup", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder members(@Nullable List<GetPlacementGroupsPlacementGroupMember> members) {

            this.members = members;
            return this;
        }
        public Builder members(GetPlacementGroupsPlacementGroupMember... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupsPlacementGroup", "region");
            }
            this.region = region;
            return this;
        }
        public GetPlacementGroupsPlacementGroup build() {
            final var _resultValue = new GetPlacementGroupsPlacementGroup();
            _resultValue.affinityType = affinityType;
            _resultValue.id = id;
            _resultValue.isCompliant = isCompliant;
            _resultValue.isStrict = isStrict;
            _resultValue.label = label;
            _resultValue.members = members;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
