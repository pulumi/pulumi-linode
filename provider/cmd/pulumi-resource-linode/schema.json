{
    "name": "linode",
    "description": "A Pulumi package for creating and managing linode cloud resources.",
    "keywords": [
        "pulumi",
        "linode"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`linode` Terraform Provider](https://github.com/terraform-providers/terraform-provider-linode).",
    "repository": "https://github.com/pulumi/pulumi-linode",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiVersion": {
                "type": "string",
                "description": "An HTTP User-Agent Prefix to prepend in API requests.\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_API_VERSION"
                    ]
                }
            },
            "token": {
                "type": "string",
                "description": "The token that allows you access to your Linode account\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_TOKEN",
                        "LINODE_API_TOKEN"
                    ]
                }
            },
            "uaPrefix": {
                "type": "string",
                "description": "An HTTP User-Agent Prefix to prepend in API requests.\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_UA_PREFIX"
                    ]
                }
            },
            "url": {
                "type": "string",
                "description": "The HTTP(S) API address of the Linode API to use.\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_URL"
                    ]
                }
            }
        },
        "defaults": [
            "token"
        ]
    },
    "types": {
        "linode:/FirewallDevice:FirewallDevice": {
            "properties": {
                "entityId": {
                    "type": "integer",
                    "description": "The ID of the underlying entity this device references (i.e. the Linode's ID).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the Firewall Device.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "This Firewall's unique label.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of Firewall Device.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/FirewallInbound:FirewallInbound": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP addresses, CIDR blocks, or `0.0.0.0/0` (to whitelist all) this rule applies to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports and/or port ranges (i.e. \"443\" or \"80-90\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The network protocol this rule controls.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "ports",
                "protocol"
            ]
        },
        "linode:/FirewallOutbound:FirewallOutbound": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP addresses, CIDR blocks, or `0.0.0.0/0` (to whitelist all) this rule applies to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports and/or port ranges (i.e. \"443\" or \"80-90\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The network protocol this rule controls.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "ports",
                "protocol"
            ]
        },
        "linode:/InstanceAlerts:InstanceAlerts": {
            "properties": {
                "cpu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "io": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkIn": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkOut": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transferQuota": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceBackups:InstanceBackups": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schedule": {
                    "$ref": "#/types/linode:/InstanceBackupsSchedule:InstanceBackupsSchedule",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceBackupsSchedule:InstanceBackupsSchedule": {
            "properties": {
                "day": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "window": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfig:InstanceConfig": {
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "- Arbitrary user comments about this `config`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devices": {
                    "$ref": "#/types/linode:/InstanceConfigDevices:InstanceConfigDevices",
                    "description": "A list of `disk` or `volume` attachments for this `config`.  If the `boot_config_label` omits a `devices` block, the Linode will not be booted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "helpers": {
                    "$ref": "#/types/linode:/InstanceConfigHelpers:InstanceConfigHelpers",
                    "description": "Helpers enabled when booting to this Linode Config.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kernel": {
                    "type": "string",
                    "description": "- A Kernel ID to boot a Linode with. Default is based on image choice. Examples are `linode/latest-64bit`, `linode/grub2`, `linode/direct-disk`, etc. See all kernels [here](https://api.linode.com/v4/linode/kernels).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The Config's label for display purposes.  Also used by `boot_config_label`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryLimit": {
                    "type": "integer",
                    "description": "- Defaults to the total RAM of the Linode\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootDevice": {
                    "type": "string",
                    "description": "- The root device to boot. The corresponding disk must be attached to a `device` slot.  Example: `\"/dev/sda\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runLevel": {
                    "type": "string",
                    "description": "- Defines the state of your Linode after booting. Defaults to `\"default\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "virtMode": {
                    "type": "string",
                    "description": "- Controls the virtualization mode. Defaults to `\"paravirt\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label"
            ]
        },
        "linode:/InstanceConfigDevices:InstanceConfigDevices": {
            "properties": {
                "sda": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSda:InstanceConfigDevicesSda",
                    "description": "... `sdh` - (Optional) The SDA-SDH slots, represent the Linux block device nodes for the first 8 disks attached to the Linode.  Each device must be suplied sequentially.  The device can be either a Disk or a Volume identified by `disk_label` or `volume_id`. Only one disk identifier is permitted per slot. Devices mapped from `sde` through `sdh` are unavailable in `\"fullvirt\"` `virt_mode`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sdb": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSdb:InstanceConfigDevicesSdb",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sdc": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSdc:InstanceConfigDevicesSdc",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sdd": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSdd:InstanceConfigDevicesSdd",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sde": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSde:InstanceConfigDevicesSde",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sdf": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSdf:InstanceConfigDevicesSdf",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sdg": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSdg:InstanceConfigDevicesSdg",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sdh": {
                    "$ref": "#/types/linode:/InstanceConfigDevicesSdh:InstanceConfigDevicesSdh",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSda:InstanceConfigDevicesSda": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSdb:InstanceConfigDevicesSdb": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSdc:InstanceConfigDevicesSdc": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSdd:InstanceConfigDevicesSdd": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSde:InstanceConfigDevicesSde": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSdf:InstanceConfigDevicesSdf": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSdg:InstanceConfigDevicesSdg": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigDevicesSdh:InstanceConfigDevicesSdh": {
            "properties": {
                "diskId": {
                    "type": "integer",
                    "description": "The Disk ID of the associated `disk_label`, if used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskLabel": {
                    "type": "string",
                    "description": "The `label` of the `disk` to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "integer",
                    "description": "The Volume ID to map to this `device` slot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceConfigHelpers:InstanceConfigHelpers": {
            "properties": {
                "devtmpfsAutomount": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distro": {
                    "type": "boolean",
                    "description": "Controls the behavior of the Linode Config's Distribution Helper setting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modulesDep": {
                    "type": "boolean",
                    "description": "Creates a modules dependency file for the Kernel you run.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "boolean",
                    "description": "Controls the behavior of the Linode Config's Network Helper setting, used to automatically configure additional IP addresses assigned to this instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedbDisabled": {
                    "type": "boolean",
                    "description": "Disables updatedb cron job to avoid disk thrashing.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/InstanceDisk:InstanceDisk": {
            "properties": {
                "authorizedKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorized_keys` forces the creation of a new Linode Instance.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorized_users` forces the creation of a new Linode Instance.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filesystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the disk in the Linode API.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "description": "An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The Config's label for display purposes.  Also used by `boot_config_label`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rootPass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the Disk in MB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stackscriptData": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscript_data` forces the creation of a new Linode Instance.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stackscriptId": {
                    "type": "integer",
                    "description": "The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscript_id` forces the creation of a new Linode Instance.*\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "size"
            ]
        },
        "linode:/InstanceSpecs:InstanceSpecs": {
            "properties": {
                "disk": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memory": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transfer": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vcpus": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/LkeClusterPool:LkeClusterPool": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of nodes in the Node Pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/LkeClusterPoolNode:LkeClusterPoolNode"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "A Linode Type for all of the nodes in the Node Pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "count",
                "type"
            ]
        },
        "linode:/LkeClusterPoolNode:LkeClusterPoolNode": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The ID of the underlying Linode instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/NodeBalancerConfigNodeStatus:NodeBalancerConfigNodeStatus": {
            "properties": {
                "statusDown": {
                    "type": "integer"
                },
                "statusUp": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "linode:/NodeBalancerTransfer:NodeBalancerTransfer": {
            "properties": {
                "in": {
                    "type": "number"
                },
                "out": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "linode:/StackScriptUserDefinedField:StackScriptUserDefinedField": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "example": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The StackScript's label is for display purposes only.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manyOf": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oneOf": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "linode:/getInstanceTypeAddons:getInstanceTypeAddons": {
            "properties": {
                "backups": {
                    "$ref": "#/types/linode:/getInstanceTypeAddonsBackups:getInstanceTypeAddonsBackups",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backups"
            ]
        },
        "linode:/getInstanceTypeAddonsBackups:getInstanceTypeAddonsBackups": {
            "properties": {
                "price": {
                    "$ref": "#/types/linode:/getInstanceTypeAddonsBackupsPrice:getInstanceTypeAddonsBackupsPrice",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "price"
            ]
        },
        "linode:/getInstanceTypeAddonsBackupsPrice:getInstanceTypeAddonsBackupsPrice": {
            "properties": {
                "hourly": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hourly",
                "monthly"
            ]
        },
        "linode:/getInstanceTypePrice:getInstanceTypePrice": {
            "properties": {
                "hourly": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monthly": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hourly",
                "monthly"
            ]
        },
        "linode:/getProfileReferrals:getProfileReferrals": {
            "properties": {
                "code": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "completed": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "credit": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pending": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "total": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "completed",
                "credit",
                "pending",
                "total",
                "url"
            ]
        },
        "linode:/getStackScriptUserDefinedField:getStackScriptUserDefinedField": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "example": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manyOf": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oneOf": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "default",
                "example",
                "label",
                "manyOf",
                "name",
                "oneOf"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the linode package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiVersion": {
                "type": "string",
                "description": "An HTTP User-Agent Prefix to prepend in API requests.\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_API_VERSION"
                    ]
                }
            },
            "token": {
                "type": "string",
                "description": "The token that allows you access to your Linode account\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_TOKEN",
                        "LINODE_API_TOKEN"
                    ]
                }
            },
            "uaPrefix": {
                "type": "string",
                "description": "An HTTP User-Agent Prefix to prepend in API requests.\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_UA_PREFIX"
                    ]
                }
            },
            "url": {
                "type": "string",
                "description": "The HTTP(S) API address of the Linode API to use.\n",
                "defaultInfo": {
                    "environment": [
                        "LINODE_URL"
                    ]
                }
            }
        }
    },
    "resources": {
        "linode:index/domain:Domain": {
            "properties": {
                "axfrIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IPs that may perform a zone transfer for this Domain. This is potentially dangerous, and should be set to an empty list unless you intend to use it.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this Domain. This is for display purposes only.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain.\n",
                    "language": {
                        "csharp": {
                            "name": "DomainName"
                        }
                    }
                },
                "expireSec": {
                    "type": "integer",
                    "description": "The amount of time in seconds that may pass before this Domain is no longer authoritative. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The group this Domain belongs to. This is for display purposes only.\n"
                },
                "masterIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IP addresses representing the master DNS for this Domain.\n"
                },
                "refreshSec": {
                    "type": "integer",
                    "description": "The amount of time in seconds before this Domain should be refreshed. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "retrySec": {
                    "type": "integer",
                    "description": "The interval, in seconds, at which a failed refresh should be retried. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "soaEmail": {
                    "type": "string",
                    "description": "Start of Authority email address. This is required for master Domains.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Used to control whether this Domain is currently being rendered (defaults to \"active\").\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                },
                "ttlSec": {
                    "type": "integer",
                    "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave).\n"
                }
            },
            "required": [
                "domain",
                "status",
                "type"
            ],
            "inputProperties": {
                "axfrIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IPs that may perform a zone transfer for this Domain. This is potentially dangerous, and should be set to an empty list unless you intend to use it.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this Domain. This is for display purposes only.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain.\n",
                    "language": {
                        "csharp": {
                            "name": "DomainName"
                        }
                    }
                },
                "expireSec": {
                    "type": "integer",
                    "description": "The amount of time in seconds that may pass before this Domain is no longer authoritative. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The group this Domain belongs to. This is for display purposes only.\n"
                },
                "masterIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IP addresses representing the master DNS for this Domain.\n"
                },
                "refreshSec": {
                    "type": "integer",
                    "description": "The amount of time in seconds before this Domain should be refreshed. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "retrySec": {
                    "type": "integer",
                    "description": "The interval, in seconds, at which a failed refresh should be retried. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "soaEmail": {
                    "type": "string",
                    "description": "Start of Authority email address. This is required for master Domains.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Used to control whether this Domain is currently being rendered (defaults to \"active\").\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                },
                "ttlSec": {
                    "type": "integer",
                    "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave).\n"
                }
            },
            "requiredInputs": [
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "axfrIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPs that may perform a zone transfer for this Domain. This is potentially dangerous, and should be set to an empty list unless you intend to use it.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this Domain. This is for display purposes only.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain.\n",
                        "language": {
                            "csharp": {
                                "name": "DomainName"
                            }
                        }
                    },
                    "expireSec": {
                        "type": "integer",
                        "description": "The amount of time in seconds that may pass before this Domain is no longer authoritative. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "The group this Domain belongs to. This is for display purposes only.\n"
                    },
                    "masterIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IP addresses representing the master DNS for this Domain.\n"
                    },
                    "refreshSec": {
                        "type": "integer",
                        "description": "The amount of time in seconds before this Domain should be refreshed. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                    },
                    "retrySec": {
                        "type": "integer",
                        "description": "The interval, in seconds, at which a failed refresh should be retried. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                    },
                    "soaEmail": {
                        "type": "string",
                        "description": "Start of Authority email address. This is required for master Domains.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Used to control whether this Domain is currently being rendered (defaults to \"active\").\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                    },
                    "ttlSec": {
                        "type": "integer",
                        "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave).\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/domainRecord:DomainRecord": {
            "description": "Provides a Linode Domain Record resource.  This can be used to create, modify, and delete Linodes Domain Records.\nFor more information, see [DNS Manager](https://www.linode.com/docs/platform/manager/dns-manager/) and the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/createDomainRecord).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this resource to configure a Domain Record attached to a Linode Domain.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foobarDomain = new linode.Domain(\"foobar\", {\n    domain: \"foobar.example\",\n    soaEmail: \"example@foobar.example\",\n    type: \"master\",\n});\nconst foobarDomainRecord = new linode.DomainRecord(\"foobar\", {\n    domainId: foobarDomain.id,\n    name: \"www\",\n    recordType: \"CNAME\",\n    target: \"foobar.example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoobar_domain = linode.Domain(\"foobarDomain\",\n    domain=\"foobar.example\",\n    soa_email=\"example@foobar.example\",\n    type=\"master\")\nfoobar_domain_record = linode.DomainRecord(\"foobarDomainRecord\",\n    domain_id=foobar_domain.id,\n    name=\"www\",\n    record_type=\"CNAME\",\n    target=\"foobar.example\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foobarDomain = new Linode.Domain(\"foobarDomain\", new Linode.DomainArgs\n        {\n            Domain = \"foobar.example\",\n            SoaEmail = \"example@foobar.example\",\n            Type = \"master\",\n        });\n        var foobarDomainRecord = new Linode.DomainRecord(\"foobarDomainRecord\", new Linode.DomainRecordArgs\n        {\n            DomainId = foobarDomain.Id,\n            Name = \"www\",\n            RecordType = \"CNAME\",\n            Target = \"foobar.example\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThis resource exports no additional attributes.\n",
            "properties": {
                "domainId": {
                    "type": "integer",
                    "description": "The ID of the Domain to access.  *Changing `domain_id` forces the creation of a new Linode Domain Record.*.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Record. Setting this is invalid for `SRV` records as it is generated by the API. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port this Record points to.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the target host. Lower values are preferred.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol this Record's service communicates with. Only valid for SRV records.\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address. *Changing `record_type` forces the creation of a new Linode Domain Record.*.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service this Record identified. Only valid for SRV records.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag portion of a CAA record. It is invalid to set this on other record types.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.\n"
                },
                "ttlSec": {
                    "type": "integer",
                    "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The relative weight of this Record. Higher values are preferred.\n"
                }
            },
            "required": [
                "domainId",
                "name",
                "recordType",
                "target"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "integer",
                    "description": "The ID of the Domain to access.  *Changing `domain_id` forces the creation of a new Linode Domain Record.*.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Record. Setting this is invalid for `SRV` records as it is generated by the API. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port this Record points to.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the target host. Lower values are preferred.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol this Record's service communicates with. Only valid for SRV records.\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address. *Changing `record_type` forces the creation of a new Linode Domain Record.*.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service this Record identified. Only valid for SRV records.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag portion of a CAA record. It is invalid to set this on other record types.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.\n"
                },
                "ttlSec": {
                    "type": "integer",
                    "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The relative weight of this Record. Higher values are preferred.\n"
                }
            },
            "requiredInputs": [
                "domainId",
                "recordType",
                "target"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainRecord resources.\n",
                "properties": {
                    "domainId": {
                        "type": "integer",
                        "description": "The ID of the Domain to access.  *Changing `domain_id` forces the creation of a new Linode Domain Record.*.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this Record. Setting this is invalid for `SRV` records as it is generated by the API. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port this Record points to.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the target host. Lower values are preferred.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol this Record's service communicates with. Only valid for SRV records.\n"
                    },
                    "recordType": {
                        "type": "string",
                        "description": "The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address. *Changing `record_type` forces the creation of a new Linode Domain Record.*.\n"
                    },
                    "service": {
                        "type": "string",
                        "description": "The service this Record identified. Only valid for SRV records.\n"
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag portion of a CAA record. It is invalid to set this on other record types.\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.\n"
                    },
                    "ttlSec": {
                        "type": "integer",
                        "description": "'Time to Live' - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "The relative weight of this Record. Higher values are preferred.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/firewall:Firewall": {
            "description": "Manages a Linode Firewall.\n\n{{% examples %}}\n{{% /examples %}}\n",
            "properties": {
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/FirewallDevice:FirewallDevice"
                    },
                    "description": "The devices associated with this firewall.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "If `true`, the Firewall's rules are not enforced (defaults to `false`).\n"
                },
                "inbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/FirewallInbound:FirewallInbound"
                    },
                    "description": "A firewall rule that specifies what inbound network traffic is allowed.\n"
                },
                "label": {
                    "type": "string",
                    "description": "This Firewall's unique label.\n"
                },
                "linodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of IDs of Linodes this Firewall should govern it's network traffic for.\n"
                },
                "outbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/FirewallOutbound:FirewallOutbound"
                    },
                    "description": "A firewall rule that specifies what outbound network traffic is allowed.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Firewall.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n"
                }
            },
            "required": [
                "devices",
                "label",
                "linodes",
                "status"
            ],
            "inputProperties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If `true`, the Firewall's rules are not enforced (defaults to `false`).\n"
                },
                "inbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/FirewallInbound:FirewallInbound"
                    },
                    "description": "A firewall rule that specifies what inbound network traffic is allowed.\n"
                },
                "label": {
                    "type": "string",
                    "description": "This Firewall's unique label.\n"
                },
                "linodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of IDs of Linodes this Firewall should govern it's network traffic for.\n"
                },
                "outbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/FirewallOutbound:FirewallOutbound"
                    },
                    "description": "A firewall rule that specifies what outbound network traffic is allowed.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n"
                }
            },
            "requiredInputs": [
                "linodes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Firewall resources.\n",
                "properties": {
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/FirewallDevice:FirewallDevice"
                        },
                        "description": "The devices associated with this firewall.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "If `true`, the Firewall's rules are not enforced (defaults to `false`).\n"
                    },
                    "inbounds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/FirewallInbound:FirewallInbound"
                        },
                        "description": "A firewall rule that specifies what inbound network traffic is allowed.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "This Firewall's unique label.\n"
                    },
                    "linodes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of IDs of Linodes this Firewall should govern it's network traffic for.\n"
                    },
                    "outbounds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/FirewallOutbound:FirewallOutbound"
                        },
                        "description": "A firewall rule that specifies what outbound network traffic is allowed.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Firewall.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/image:Image": {
            "description": "Provides a Linode Image resource.  This can be used to create, modify, and delete Linodes Images.  Linode Images are snapshots of a Linode Instance Disk which can then be used to provision more Linode Instances.  Images can be used across regions.\n\nFor more information, see [Linode's documentation on Images](https://www.linode.com/docs/platform/disk-images/linode-images/) and the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/createImage).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this resource to create an Image from a Linode Instance Disk and then deploy a new Linode Instance in another region using that Image.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = new linode.Instance(\"foo\", {\n    region: \"us-central\",\n    type: \"g6-nanode-1\",\n});\nconst bar = new linode.Image(\"bar\", {\n    description: \"Image taken from foo\",\n    diskId: foo.disks.apply(disks =\u003e disks[0].id),\n    label: \"foo-sda-image\",\n    linodeId: foo.id,\n});\nconst barBased = new linode.Instance(\"bar_based\", {\n    image: bar.id,\n    region: \"eu-west\",\n    type: foo.type,\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.Instance(\"foo\",\n    region=\"us-central\",\n    type=\"g6-nanode-1\")\nbar = linode.Image(\"bar\",\n    description=\"Image taken from foo\",\n    disk_id=foo.disks[0][\"id\"],\n    label=\"foo-sda-image\",\n    linode_id=foo.id)\nbar_based = linode.Instance(\"barBased\",\n    image=bar.id,\n    region=\"eu-west\",\n    type=foo.type)\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Linode.Instance(\"foo\", new Linode.InstanceArgs\n        {\n            Region = \"us-central\",\n            Type = \"g6-nanode-1\",\n        });\n        var bar = new Linode.Image(\"bar\", new Linode.ImageArgs\n        {\n            Description = \"Image taken from foo\",\n            DiskId = foo.Disks.Apply(disks =\u003e disks[0].Id),\n            Label = \"foo-sda-image\",\n            LinodeId = foo.Id,\n        });\n        var barBased = new Linode.Instance(\"barBased\", new Linode.InstanceArgs\n        {\n            Image = bar.Id,\n            Region = \"eu-west\",\n            Type = foo.Type,\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThis resource exports the following attributes:\n\n* `id` - The unique ID of this Image.  The ID of private images begin with `private/` followed by the numeric identifier of the private image, for example `private/12345`.\n\n* `created` - When this Image was created.\n\n* `created_by` - The name of the User who created this Image.\n\n* `deprecated` - Whether or not this Image is deprecated. Will only be True for deprecated public Images.\n\n* `is_public` - True if the Image is public.\n\n* `size` - The minimum size this Image needs to deploy. Size is in MB.\n\n* `type` - How the Image was created. 'Manual' Images can be created at any time. 'Automatic' images are created automatically from a deleted Linode.\n\n* `expiry` - Only Images created automatically (from a deleted Linode; type=automatic) will expire.\n\n* `vendor` - The upstream distribution vendor. Nil for private Images.\n",
            "properties": {
                "created": {
                    "type": "string",
                    "description": "When this Image was created.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The name of the User who created this Image.\n"
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "Whether or not this Image is deprecated. Will only be True for deprecated public Images.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A detailed description of this Image.\n"
                },
                "diskId": {
                    "type": "integer",
                    "description": "The ID of the Linode Disk that this Image will be created from.\n"
                },
                "expiry": {
                    "type": "string",
                    "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.\n"
                },
                "isPublic": {
                    "type": "boolean",
                    "description": "True if the Image is public.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A short description of the Image. Labels cannot contain special characters.\n"
                },
                "linodeId": {
                    "type": "integer",
                    "description": "The ID of the Linode that this Image will be created from.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The minimum size this Image needs to deploy. Size is in MB.\n"
                },
                "type": {
                    "type": "string",
                    "description": "How the Image was created. 'Manual' Images can be created at any time. 'Automatic' images are created automatically from\na deleted Linode.\n"
                },
                "vendor": {
                    "type": "string",
                    "description": "The upstream distribution vendor. Nil for private Images.\n"
                }
            },
            "required": [
                "created",
                "createdBy",
                "deprecated",
                "diskId",
                "expiry",
                "isPublic",
                "label",
                "linodeId",
                "size",
                "type",
                "vendor"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A detailed description of this Image.\n"
                },
                "diskId": {
                    "type": "integer",
                    "description": "The ID of the Linode Disk that this Image will be created from.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A short description of the Image. Labels cannot contain special characters.\n"
                },
                "linodeId": {
                    "type": "integer",
                    "description": "The ID of the Linode that this Image will be created from.\n"
                }
            },
            "requiredInputs": [
                "diskId",
                "label",
                "linodeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Image resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "When this Image was created.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The name of the User who created this Image.\n"
                    },
                    "deprecated": {
                        "type": "boolean",
                        "description": "Whether or not this Image is deprecated. Will only be True for deprecated public Images.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of this Image.\n"
                    },
                    "diskId": {
                        "type": "integer",
                        "description": "The ID of the Linode Disk that this Image will be created from.\n"
                    },
                    "expiry": {
                        "type": "string",
                        "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.\n"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "True if the Image is public.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "A short description of the Image. Labels cannot contain special characters.\n"
                    },
                    "linodeId": {
                        "type": "integer",
                        "description": "The ID of the Linode that this Image will be created from.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The minimum size this Image needs to deploy. Size is in MB.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "How the Image was created. 'Manual' Images can be created at any time. 'Automatic' images are created automatically from\na deleted Linode.\n"
                    },
                    "vendor": {
                        "type": "string",
                        "description": "The upstream distribution vendor. Nil for private Images.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/instance:Instance": {
            "properties": {
                "alerts": {
                    "$ref": "#/types/linode:/InstanceAlerts:InstanceAlerts"
                },
                "authorizedKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorized_keys` forces the creation of a new Linode Instance.*\n"
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorized_users` forces the creation of a new Linode Instance.*\n"
                },
                "backupId": {
                    "type": "integer",
                    "description": "A Backup ID from another Linode's available backups. Your User must have read_write access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backup_id` forces the creation of a new Linode Instance.*\n"
                },
                "backups": {
                    "$ref": "#/types/linode:/InstanceBackups:InstanceBackups",
                    "description": "Information about this Linode's backups status.\n"
                },
                "backupsEnabled": {
                    "type": "boolean",
                    "description": "If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.\n"
                },
                "bootConfigLabel": {
                    "type": "string",
                    "description": "The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `boot_config_label`. *This value can not be imported.*\n"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/InstanceConfig:InstanceConfig"
                    },
                    "description": "Configuration profiles define the VM settings and boot behavior of the Linode Instance.\n"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/InstanceDisk:InstanceDisk"
                    }
                },
                "group": {
                    "type": "string",
                    "description": "The display group of the Linode instance.\n"
                },
                "image": {
                    "type": "string",
                    "description": "An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address\nwill be used for this field.\n"
                },
                "ipv4s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single\nprivate IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Config's label for display purposes.  Also used by `boot_config_label`.\n"
                },
                "privateIp": {
                    "type": "boolean",
                    "description": "If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.\n"
                },
                "privateIpAddress": {
                    "type": "string",
                    "description": "This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode\nInstances in a region.\n"
                },
                "region": {
                    "type": "string",
                    "description": "This is the location where the Linode is deployed. Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc. See all regions [here](https://api.linode.com/v4/regions). *Changing `region` forces the creation of a new Linode Instance.*.\n"
                },
                "rootPass": {
                    "type": "string",
                    "description": "The password that will be initialially assigned to the 'root' user account.\n"
                },
                "specs": {
                    "$ref": "#/types/linode:/InstanceSpecs:InstanceSpecs"
                },
                "stackscriptData": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscript_data` forces the creation of a new Linode Instance.*\n"
                },
                "stackscriptId": {
                    "type": "integer",
                    "description": "The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscript_id` forces the creation of a new Linode Instance.*\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the instance, indicating the current readiness state.\n"
                },
                "swapSize": {
                    "type": "integer",
                    "description": "When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `\"g6-nanode-1\"`, `\"g6-standard-2\"`, `\"g6-highmem-16\"`, `\"g6-dedicated-16\"`, etc. See all types [here](https://api.linode.com/v4/linode/types).\n"
                },
                "watchdogEnabled": {
                    "type": "boolean",
                    "description": "The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.\n"
                }
            },
            "required": [
                "alerts",
                "backups",
                "backupsEnabled",
                "bootConfigLabel",
                "ipAddress",
                "ipv4s",
                "ipv6",
                "label",
                "privateIpAddress",
                "region",
                "specs",
                "status",
                "swapSize"
            ],
            "inputProperties": {
                "alerts": {
                    "$ref": "#/types/linode:/InstanceAlerts:InstanceAlerts"
                },
                "authorizedKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorized_keys` forces the creation of a new Linode Instance.*\n"
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorized_users` forces the creation of a new Linode Instance.*\n"
                },
                "backupId": {
                    "type": "integer",
                    "description": "A Backup ID from another Linode's available backups. Your User must have read_write access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backup_id` forces the creation of a new Linode Instance.*\n"
                },
                "backupsEnabled": {
                    "type": "boolean",
                    "description": "If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.\n"
                },
                "bootConfigLabel": {
                    "type": "string",
                    "description": "The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `boot_config_label`. *This value can not be imported.*\n"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/InstanceConfig:InstanceConfig"
                    },
                    "description": "Configuration profiles define the VM settings and boot behavior of the Linode Instance.\n"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/InstanceDisk:InstanceDisk"
                    }
                },
                "group": {
                    "type": "string",
                    "description": "The display group of the Linode instance.\n"
                },
                "image": {
                    "type": "string",
                    "description": "An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*\n"
                },
                "label": {
                    "type": "string",
                    "description": "The Config's label for display purposes.  Also used by `boot_config_label`.\n"
                },
                "privateIp": {
                    "type": "boolean",
                    "description": "If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.\n"
                },
                "region": {
                    "type": "string",
                    "description": "This is the location where the Linode is deployed. Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc. See all regions [here](https://api.linode.com/v4/regions). *Changing `region` forces the creation of a new Linode Instance.*.\n"
                },
                "rootPass": {
                    "type": "string",
                    "description": "The password that will be initialially assigned to the 'root' user account.\n"
                },
                "stackscriptData": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscript_data` forces the creation of a new Linode Instance.*\n"
                },
                "stackscriptId": {
                    "type": "integer",
                    "description": "The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscript_id` forces the creation of a new Linode Instance.*\n"
                },
                "swapSize": {
                    "type": "integer",
                    "description": "When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `\"g6-nanode-1\"`, `\"g6-standard-2\"`, `\"g6-highmem-16\"`, `\"g6-dedicated-16\"`, etc. See all types [here](https://api.linode.com/v4/linode/types).\n"
                },
                "watchdogEnabled": {
                    "type": "boolean",
                    "description": "The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.\n"
                }
            },
            "requiredInputs": [
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "alerts": {
                        "$ref": "#/types/linode:/InstanceAlerts:InstanceAlerts"
                    },
                    "authorizedKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorized_keys` forces the creation of a new Linode Instance.*\n"
                    },
                    "authorizedUsers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorized_users` forces the creation of a new Linode Instance.*\n"
                    },
                    "backupId": {
                        "type": "integer",
                        "description": "A Backup ID from another Linode's available backups. Your User must have read_write access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backup_id` forces the creation of a new Linode Instance.*\n"
                    },
                    "backups": {
                        "$ref": "#/types/linode:/InstanceBackups:InstanceBackups",
                        "description": "Information about this Linode's backups status.\n"
                    },
                    "backupsEnabled": {
                        "type": "boolean",
                        "description": "If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.\n"
                    },
                    "bootConfigLabel": {
                        "type": "string",
                        "description": "The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `boot_config_label`. *This value can not be imported.*\n"
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/InstanceConfig:InstanceConfig"
                        },
                        "description": "Configuration profiles define the VM settings and boot behavior of the Linode Instance.\n"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/InstanceDisk:InstanceDisk"
                        }
                    },
                    "group": {
                        "type": "string",
                        "description": "The display group of the Linode instance.\n"
                    },
                    "image": {
                        "type": "string",
                        "description": "An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/linode/kernels). *Changing `image` forces the creation of a new Linode Instance.*\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address\nwill be used for this field.\n"
                    },
                    "ipv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single\nprivate IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The Config's label for display purposes.  Also used by `boot_config_label`.\n"
                    },
                    "privateIp": {
                        "type": "boolean",
                        "description": "If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode's region. It can be enabled on an existing Linode but it can't be disabled.\n"
                    },
                    "privateIpAddress": {
                        "type": "string",
                        "description": "This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode\nInstances in a region.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "This is the location where the Linode is deployed. Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc. See all regions [here](https://api.linode.com/v4/regions). *Changing `region` forces the creation of a new Linode Instance.*.\n"
                    },
                    "rootPass": {
                        "type": "string",
                        "description": "The password that will be initialially assigned to the 'root' user account.\n"
                    },
                    "specs": {
                        "$ref": "#/types/linode:/InstanceSpecs:InstanceSpecs"
                    },
                    "stackscriptData": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscript_data` forces the creation of a new Linode Instance.*\n"
                    },
                    "stackscriptId": {
                        "type": "integer",
                        "description": "The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscript_id` forces the creation of a new Linode Instance.*\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the instance, indicating the current readiness state.\n"
                    },
                    "swapSize": {
                        "type": "integer",
                        "description": "When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `\"g6-nanode-1\"`, `\"g6-standard-2\"`, `\"g6-highmem-16\"`, `\"g6-dedicated-16\"`, etc. See all types [here](https://api.linode.com/v4/linode/types).\n"
                    },
                    "watchdogEnabled": {
                        "type": "boolean",
                        "description": "The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/lkeCluster:LkeCluster": {
            "description": "Manages an LKE cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst my_cluster = new linode.LkeCluster(\"my-cluster\", {\n    k8sVersion: \"1.17\",\n    label: \"my-cluster\",\n    pools: [{\n        count: 3,\n        type: \"g6-standard-2\",\n    }],\n    region: \"us-central\",\n    tags: [\"prod\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nmy_cluster = linode.LkeCluster(\"my-cluster\",\n    k8s_version=\"1.17\",\n    label=\"my-cluster\",\n    pools=[{\n        \"count\": 3,\n        \"type\": \"g6-standard-2\",\n    }],\n    region=\"us-central\",\n    tags=[\"prod\"])\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_cluster = new Linode.LkeCluster(\"my-cluster\", new Linode.LkeClusterArgs\n        {\n            K8sVersion = \"1.17\",\n            Label = \"my-cluster\",\n            Pools = \n            {\n                new Linode.Inputs.LkeClusterPoolArgs\n                {\n                    Count = 3,\n                    Type = \"g6-standard-2\",\n                },\n            },\n            Region = \"us-central\",\n            Tags = \n            {\n                \"prod\",\n            },\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "apiEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The endpoints for the Kubernetes API server.\n"
                },
                "k8sVersion": {
                    "type": "string",
                    "description": "The desired Kubernetes version for this Kubernetes cluster in the format of `major.minor` (e.g. `1.17`), and the latest supported patch version will be deployed.\n"
                },
                "kubeconfig": {
                    "type": "string",
                    "description": "The base64 encoded kubeconfig for the Kubernetes cluster.\n"
                },
                "label": {
                    "type": "string",
                    "description": "This Kubernetes cluster's unique label.\n"
                },
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/LkeClusterPool:LkeClusterPool"
                    },
                    "description": "Additional nested attributes:\n"
                },
                "region": {
                    "type": "string",
                    "description": "This Kubernetes cluster's location.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the node.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n"
                }
            },
            "required": [
                "apiEndpoints",
                "k8sVersion",
                "kubeconfig",
                "label",
                "pools",
                "region",
                "status"
            ],
            "inputProperties": {
                "k8sVersion": {
                    "type": "string",
                    "description": "The desired Kubernetes version for this Kubernetes cluster in the format of `major.minor` (e.g. `1.17`), and the latest supported patch version will be deployed.\n"
                },
                "label": {
                    "type": "string",
                    "description": "This Kubernetes cluster's unique label.\n"
                },
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/LkeClusterPool:LkeClusterPool"
                    },
                    "description": "Additional nested attributes:\n"
                },
                "region": {
                    "type": "string",
                    "description": "This Kubernetes cluster's location.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n"
                }
            },
            "requiredInputs": [
                "k8sVersion",
                "label",
                "pools",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LkeCluster resources.\n",
                "properties": {
                    "apiEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The endpoints for the Kubernetes API server.\n"
                    },
                    "k8sVersion": {
                        "type": "string",
                        "description": "The desired Kubernetes version for this Kubernetes cluster in the format of `major.minor` (e.g. `1.17`), and the latest supported patch version will be deployed.\n"
                    },
                    "kubeconfig": {
                        "type": "string",
                        "description": "The base64 encoded kubeconfig for the Kubernetes cluster.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "This Kubernetes cluster's unique label.\n"
                    },
                    "pools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/LkeClusterPool:LkeClusterPool"
                        },
                        "description": "Additional nested attributes:\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "This Kubernetes cluster's location.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the node.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/nodeBalancer:NodeBalancer": {
            "properties": {
                "clientConnThrottle": {
                    "type": "integer",
                    "description": "Throttle connections per second (0-20). Set to 0 (default) to disable throttling.\n"
                },
                "created": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string",
                    "description": "This NodeBalancer's hostname, ending with .nodebalancer.linode.com\n"
                },
                "ipv4": {
                    "type": "string",
                    "description": "The Public IPv4 Address of this NodeBalancer\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The Public IPv6 Address of this NodeBalancer\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode NodeBalancer\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where this NodeBalancer will be deployed.  Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                },
                "transfer": {
                    "$ref": "#/types/linode:/NodeBalancerTransfer:NodeBalancerTransfer"
                },
                "updated": {
                    "type": "string"
                }
            },
            "required": [
                "created",
                "hostname",
                "ipv4",
                "ipv6",
                "region",
                "transfer",
                "updated"
            ],
            "inputProperties": {
                "clientConnThrottle": {
                    "type": "integer",
                    "description": "Throttle connections per second (0-20). Set to 0 (default) to disable throttling.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode NodeBalancer\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where this NodeBalancer will be deployed.  Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                }
            },
            "requiredInputs": [
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodeBalancer resources.\n",
                "properties": {
                    "clientConnThrottle": {
                        "type": "integer",
                        "description": "Throttle connections per second (0-20). Set to 0 (default) to disable throttling.\n"
                    },
                    "created": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "This NodeBalancer's hostname, ending with .nodebalancer.linode.com\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The Public IPv4 Address of this NodeBalancer\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The Public IPv6 Address of this NodeBalancer\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the Linode NodeBalancer\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where this NodeBalancer will be deployed.  Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc.  *Changing `region` forces the creation of a new Linode NodeBalancer.*.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                    },
                    "transfer": {
                        "$ref": "#/types/linode:/NodeBalancerTransfer:NodeBalancerTransfer"
                    },
                    "updated": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/nodeBalancerConfig:NodeBalancerConfig": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "What algorithm this NodeBalancer should use for routing traffic to backends: roundrobin, leastconn, source\n"
                },
                "check": {
                    "type": "string",
                    "description": "The type of check to perform against backends to ensure they are serving requests. This is used to determine if backends are up or down. If none no check is performed. connection requires only a connection to the backend to succeed. http and http_body rely on the backend serving HTTP, and that the response returned matches what is expected.\n"
                },
                "checkAttempts": {
                    "type": "integer",
                    "description": "How many times to attempt a check before considering a backend to be down. (1-30)\n"
                },
                "checkBody": {
                    "type": "string",
                    "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in\nthe response body of a check request, the backend is considered to be down\n"
                },
                "checkInterval": {
                    "type": "integer",
                    "description": "How often, in seconds, to check that backends are up and serving requests.\n"
                },
                "checkPassive": {
                    "type": "boolean",
                    "description": "If true, any response from this backend with a 5xx status code will be enough for it to be considered unhealthy and taken out of rotation.\n"
                },
                "checkPath": {
                    "type": "string",
                    "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.\n"
                },
                "checkTimeout": {
                    "type": "integer",
                    "description": "How long, in seconds, to wait for a check attempt before considering it failed. (1-30)\n"
                },
                "cipherSuite": {
                    "type": "string",
                    "description": "What ciphers to use for SSL connections served by this NodeBalancer. `legacy` is considered insecure and should only be used if necessary.\n"
                },
                "nodeStatus": {
                    "$ref": "#/types/linode:/NodeBalancerConfigNodeStatus:NodeBalancerConfigNodeStatus"
                },
                "nodebalancerId": {
                    "type": "integer",
                    "description": "The ID of the NodeBalancer to access.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The TCP port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example). While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443. (Defaults to 80)\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol this port is configured to serve. If this is set to https you must include an ssl_cert and an ssl_key. (Defaults to \"http\")\n"
                },
                "sslCert": {
                    "type": "string",
                    "description": "The certificate this port is serving. This is not returned. If set, this field will come back as `\u003cREDACTED\u003e`. Please use the ssl_commonname and ssl_fingerprint to identify the certificate.\n"
                },
                "sslCommonname": {
                    "type": "string",
                    "description": "The common name for the SSL certification this port is serving if this port is not configured to use SSL.\n"
                },
                "sslFingerprint": {
                    "type": "string",
                    "description": "The fingerprint for the SSL certification this port is serving if this port is not configured to use SSL.\n"
                },
                "sslKey": {
                    "type": "string",
                    "description": "The private key corresponding to this port's certificate. This is not returned. If set, this field will come back as `\u003cREDACTED\u003e`. Please use the ssl_commonname and ssl_fingerprint to identify the certificate.\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Controls how session stickiness is handled on this port: 'none', 'table', 'http_cookie'\n"
                }
            },
            "required": [
                "algorithm",
                "check",
                "checkAttempts",
                "checkBody",
                "checkInterval",
                "checkPassive",
                "checkPath",
                "checkTimeout",
                "cipherSuite",
                "nodeStatus",
                "nodebalancerId",
                "sslCommonname",
                "sslFingerprint",
                "stickiness"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "description": "What algorithm this NodeBalancer should use for routing traffic to backends: roundrobin, leastconn, source\n"
                },
                "check": {
                    "type": "string",
                    "description": "The type of check to perform against backends to ensure they are serving requests. This is used to determine if backends are up or down. If none no check is performed. connection requires only a connection to the backend to succeed. http and http_body rely on the backend serving HTTP, and that the response returned matches what is expected.\n"
                },
                "checkAttempts": {
                    "type": "integer",
                    "description": "How many times to attempt a check before considering a backend to be down. (1-30)\n"
                },
                "checkBody": {
                    "type": "string",
                    "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in\nthe response body of a check request, the backend is considered to be down\n"
                },
                "checkInterval": {
                    "type": "integer",
                    "description": "How often, in seconds, to check that backends are up and serving requests.\n"
                },
                "checkPassive": {
                    "type": "boolean",
                    "description": "If true, any response from this backend with a 5xx status code will be enough for it to be considered unhealthy and taken out of rotation.\n"
                },
                "checkPath": {
                    "type": "string",
                    "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.\n"
                },
                "checkTimeout": {
                    "type": "integer",
                    "description": "How long, in seconds, to wait for a check attempt before considering it failed. (1-30)\n"
                },
                "cipherSuite": {
                    "type": "string",
                    "description": "What ciphers to use for SSL connections served by this NodeBalancer. `legacy` is considered insecure and should only be used if necessary.\n"
                },
                "nodebalancerId": {
                    "type": "integer",
                    "description": "The ID of the NodeBalancer to access.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The TCP port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example). While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443. (Defaults to 80)\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol this port is configured to serve. If this is set to https you must include an ssl_cert and an ssl_key. (Defaults to \"http\")\n"
                },
                "sslCert": {
                    "type": "string",
                    "description": "The certificate this port is serving. This is not returned. If set, this field will come back as `\u003cREDACTED\u003e`. Please use the ssl_commonname and ssl_fingerprint to identify the certificate.\n"
                },
                "sslKey": {
                    "type": "string",
                    "description": "The private key corresponding to this port's certificate. This is not returned. If set, this field will come back as `\u003cREDACTED\u003e`. Please use the ssl_commonname and ssl_fingerprint to identify the certificate.\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Controls how session stickiness is handled on this port: 'none', 'table', 'http_cookie'\n"
                }
            },
            "requiredInputs": [
                "nodebalancerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodeBalancerConfig resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "What algorithm this NodeBalancer should use for routing traffic to backends: roundrobin, leastconn, source\n"
                    },
                    "check": {
                        "type": "string",
                        "description": "The type of check to perform against backends to ensure they are serving requests. This is used to determine if backends are up or down. If none no check is performed. connection requires only a connection to the backend to succeed. http and http_body rely on the backend serving HTTP, and that the response returned matches what is expected.\n"
                    },
                    "checkAttempts": {
                        "type": "integer",
                        "description": "How many times to attempt a check before considering a backend to be down. (1-30)\n"
                    },
                    "checkBody": {
                        "type": "string",
                        "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in\nthe response body of a check request, the backend is considered to be down\n"
                    },
                    "checkInterval": {
                        "type": "integer",
                        "description": "How often, in seconds, to check that backends are up and serving requests.\n"
                    },
                    "checkPassive": {
                        "type": "boolean",
                        "description": "If true, any response from this backend with a 5xx status code will be enough for it to be considered unhealthy and taken out of rotation.\n"
                    },
                    "checkPath": {
                        "type": "string",
                        "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.\n"
                    },
                    "checkTimeout": {
                        "type": "integer",
                        "description": "How long, in seconds, to wait for a check attempt before considering it failed. (1-30)\n"
                    },
                    "cipherSuite": {
                        "type": "string",
                        "description": "What ciphers to use for SSL connections served by this NodeBalancer. `legacy` is considered insecure and should only be used if necessary.\n"
                    },
                    "nodeStatus": {
                        "$ref": "#/types/linode:/NodeBalancerConfigNodeStatus:NodeBalancerConfigNodeStatus"
                    },
                    "nodebalancerId": {
                        "type": "integer",
                        "description": "The ID of the NodeBalancer to access.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The TCP port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example). While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443. (Defaults to 80)\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol this port is configured to serve. If this is set to https you must include an ssl_cert and an ssl_key. (Defaults to \"http\")\n"
                    },
                    "sslCert": {
                        "type": "string",
                        "description": "The certificate this port is serving. This is not returned. If set, this field will come back as `\u003cREDACTED\u003e`. Please use the ssl_commonname and ssl_fingerprint to identify the certificate.\n"
                    },
                    "sslCommonname": {
                        "type": "string",
                        "description": "The common name for the SSL certification this port is serving if this port is not configured to use SSL.\n"
                    },
                    "sslFingerprint": {
                        "type": "string",
                        "description": "The fingerprint for the SSL certification this port is serving if this port is not configured to use SSL.\n"
                    },
                    "sslKey": {
                        "type": "string",
                        "description": "The private key corresponding to this port's certificate. This is not returned. If set, this field will come back as `\u003cREDACTED\u003e`. Please use the ssl_commonname and ssl_fingerprint to identify the certificate.\n"
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Controls how session stickiness is handled on this port: 'none', 'table', 'http_cookie'\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/nodeBalancerNode:NodeBalancerNode": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The private IP Address where this backend can be reached. This must be a private IP address.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the NodeBalancerConfig to access.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode NodeBalancer Node. This is for display purposes only.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode this NodeBalancer should use when sending traffic to this backend. If set to `accept` this backend is accepting traffic. If set to `reject` this backend will not receive traffic. If set to `drain` this backend will not receive new traffic, but connections already pinned to it will continue to be routed to it\n"
                },
                "nodebalancerId": {
                    "type": "integer",
                    "description": "The ID of the NodeBalancer to access.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of this node, based on the configured checks of its NodeBalancer Config. (unknown, UP, DOWN)\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Used when picking a backend to serve a request and is not pinned to a single backend yet. Nodes with a higher weight will receive more traffic. (1-255).\n"
                }
            },
            "required": [
                "address",
                "configId",
                "label",
                "mode",
                "nodebalancerId",
                "status",
                "weight"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The private IP Address where this backend can be reached. This must be a private IP address.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the NodeBalancerConfig to access.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode NodeBalancer Node. This is for display purposes only.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode this NodeBalancer should use when sending traffic to this backend. If set to `accept` this backend is accepting traffic. If set to `reject` this backend will not receive traffic. If set to `drain` this backend will not receive new traffic, but connections already pinned to it will continue to be routed to it\n"
                },
                "nodebalancerId": {
                    "type": "integer",
                    "description": "The ID of the NodeBalancer to access.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Used when picking a backend to serve a request and is not pinned to a single backend yet. Nodes with a higher weight will receive more traffic. (1-255).\n"
                }
            },
            "requiredInputs": [
                "address",
                "configId",
                "label",
                "nodebalancerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodeBalancerNode resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The private IP Address where this backend can be reached. This must be a private IP address.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the NodeBalancerConfig to access.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the Linode NodeBalancer Node. This is for display purposes only.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The mode this NodeBalancer should use when sending traffic to this backend. If set to `accept` this backend is accepting traffic. If set to `reject` this backend will not receive traffic. If set to `drain` this backend will not receive new traffic, but connections already pinned to it will continue to be routed to it\n"
                    },
                    "nodebalancerId": {
                        "type": "integer",
                        "description": "The ID of the NodeBalancer to access.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of this node, based on the configured checks of its NodeBalancer Config. (unknown, UP, DOWN)\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Used when picking a backend to serve a request and is not pinned to a single backend yet. Nodes with a higher weight will receive more traffic. (1-255).\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/objectStorageBucket:ObjectStorageBucket": {
            "description": "Provides a Linode Object Storage Bucket resource. This can be used to create, modify, and delete Linodes Object Storage Buckets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this resource to create an Object Storage Bucket.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst primary = linode.getObjectStorageCluster({\n    id: \"us-east-1\",\n});\nconst foobar = new linode.ObjectStorageBucket(\"foobar\", {\n    cluster: primary.then(primary =\u003e primary.id),\n    label: `%s`,\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nprimary = linode.get_object_storage_cluster(id=\"us-east-1\")\nfoobar = linode.ObjectStorageBucket(\"foobar\",\n    cluster=primary.id,\n    label=\"%s\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var primary = Output.Create(Linode.GetObjectStorageCluster.InvokeAsync(new Linode.GetObjectStorageClusterArgs\n        {\n            Id = \"us-east-1\",\n        }));\n        var foobar = new Linode.ObjectStorageBucket(\"foobar\", new Linode.ObjectStorageBucketArgs\n        {\n            Cluster = primary.Apply(primary =\u003e primary.Id),\n            Label = \"%s\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "cluster": {
                    "type": "string",
                    "description": "The cluster of the Linode Object Storage Bucket.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode Object Storage Bucket.\n"
                }
            },
            "required": [
                "cluster",
                "label"
            ],
            "inputProperties": {
                "cluster": {
                    "type": "string",
                    "description": "The cluster of the Linode Object Storage Bucket.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode Object Storage Bucket.\n"
                }
            },
            "requiredInputs": [
                "cluster",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObjectStorageBucket resources.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "The cluster of the Linode Object Storage Bucket.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the Linode Object Storage Bucket.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/objectStorageKey:ObjectStorageKey": {
            "description": "Provides a Linode Object Storage Key resource. This can be used to create, modify, and delete Linodes Object Storage Keys.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this resource to create an Object Storage Key.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = new linode.ObjectStorageKey(\"foo\", {\n    label: \"image-access\",\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.ObjectStorageKey(\"foo\", label=\"image-access\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Linode.ObjectStorageKey(\"foo\", new Linode.ObjectStorageKeyArgs\n        {\n            Label = \"image-access\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThis resource exports the following attributes:\n\n* `access_key` - This keypair's access key. This is not secret.\n\n* `secret_key` - This keypair's secret key.\n",
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "This keypair's access key. This is not secret.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label given to this key. For display purposes only.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "This keypair's secret key.\n"
                }
            },
            "required": [
                "accessKey",
                "label",
                "secretKey"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "The label given to this key. For display purposes only.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObjectStorageKey resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "This keypair's access key. This is not secret.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label given to this key. For display purposes only.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "This keypair's secret key.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/rdns:Rdns": {
            "description": "Provides a Linode RDNS resource.  This can be used to create and modify RDNS records.\n\nLinode RDNS names must have a matching address value in an A or AAAA record.  This A or AAAA name must be resolvable at the time the RDNS resource is being associated.\n\nFor more information, see the [Linode APIv4 docs](https://developers.linode.com/api/docs/v4#operation/updateIP) and the [Configure your Linode for Reverse DNS](https://www.linode.com/docs/networking/dns/configure-your-linode-for-reverse-dns-classic-manager/) guide.\n\n{{% examples %}}\n{{% /examples %}}\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The Public IPv4 or IPv6 address that will receive the `PTR` record.  A matching `A` or `AAAA` record must exist.\n"
                },
                "rdns": {
                    "type": "string",
                    "description": "The name of the RDNS address.\n",
                    "language": {
                        "csharp": {
                            "name": "RdnsName"
                        }
                    }
                }
            },
            "required": [
                "address",
                "rdns"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The Public IPv4 or IPv6 address that will receive the `PTR` record.  A matching `A` or `AAAA` record must exist.\n"
                },
                "rdns": {
                    "type": "string",
                    "description": "The name of the RDNS address.\n",
                    "language": {
                        "csharp": {
                            "name": "RdnsName"
                        }
                    }
                }
            },
            "requiredInputs": [
                "address",
                "rdns"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rdns resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The Public IPv4 or IPv6 address that will receive the `PTR` record.  A matching `A` or `AAAA` record must exist.\n"
                    },
                    "rdns": {
                        "type": "string",
                        "description": "The name of the RDNS address.\n",
                        "language": {
                            "csharp": {
                                "name": "RdnsName"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "linode:index/sshKey:SshKey": {
            "description": "Provides a Linode SSH Key resource.  This can be used to create, modify, and delete Linodes SSH Keys.  Managed SSH Keys allow instances to be created with a list of Linode usernames, whose SSH keys will be automatically applied to the root account's `~/.ssh/authorized_keys` file.\nFor more information, see the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/getSSHKeys).\n\n{{% examples %}}\n{{% /examples %}}\n## Attributes\n\nThis resource exports the following attributes:\n\n* `created` - The date this SSH Key was created.\n",
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The date this key was added.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label for the SSH Key.\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.\n",
                    "language": {
                        "csharp": {
                            "name": "SshKeyName"
                        }
                    }
                }
            },
            "required": [
                "created",
                "label",
                "sshKey"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "A label for the SSH Key.\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.\n",
                    "language": {
                        "csharp": {
                            "name": "SshKeyName"
                        }
                    }
                }
            },
            "requiredInputs": [
                "label",
                "sshKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshKey resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The date this key was added.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "A label for the SSH Key.\n"
                    },
                    "sshKey": {
                        "type": "string",
                        "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.\n",
                        "language": {
                            "csharp": {
                                "name": "SshKeyName"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "linode:index/stackScript:StackScript": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The date this StackScript was created.\n"
                },
                "deploymentsActive": {
                    "type": "integer",
                    "description": "Count of currently active, deployed Linodes created from this StackScript.\n"
                },
                "deploymentsTotal": {
                    "type": "integer",
                    "description": "The total number of times this StackScript has been deployed.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the StackScript.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Image IDs representing the Images that this StackScript is compatible for deploying with.\n"
                },
                "isPublic": {
                    "type": "boolean",
                    "description": "This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private. *Changing `is_public` forces the creation of a new StackScript*\n"
                },
                "label": {
                    "type": "string",
                    "description": "The StackScript's label is for display purposes only.\n"
                },
                "revNote": {
                    "type": "string",
                    "description": "This field allows you to add notes for the set of revisions made to this StackScript.\n"
                },
                "script": {
                    "type": "string",
                    "description": "The script to execute when provisioning a new Linode with this StackScript.\n"
                },
                "updated": {
                    "type": "string",
                    "description": "The date this StackScript was updated.\n"
                },
                "userDefinedFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/StackScriptUserDefinedField:StackScriptUserDefinedField"
                    },
                    "description": "This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized\nparameters during deployment.\n"
                },
                "userGravatarId": {
                    "type": "string",
                    "description": "The Gravatar ID for the User who created the StackScript.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The User who created the StackScript.\n"
                }
            },
            "required": [
                "created",
                "deploymentsActive",
                "deploymentsTotal",
                "description",
                "images",
                "label",
                "script",
                "updated",
                "userDefinedFields",
                "userGravatarId",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description for the StackScript.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Image IDs representing the Images that this StackScript is compatible for deploying with.\n"
                },
                "isPublic": {
                    "type": "boolean",
                    "description": "This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private. *Changing `is_public` forces the creation of a new StackScript*\n"
                },
                "label": {
                    "type": "string",
                    "description": "The StackScript's label is for display purposes only.\n"
                },
                "revNote": {
                    "type": "string",
                    "description": "This field allows you to add notes for the set of revisions made to this StackScript.\n"
                },
                "script": {
                    "type": "string",
                    "description": "The script to execute when provisioning a new Linode with this StackScript.\n"
                },
                "userDefinedFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/linode:/StackScriptUserDefinedField:StackScriptUserDefinedField"
                    },
                    "description": "This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized\nparameters during deployment.\n"
                }
            },
            "requiredInputs": [
                "description",
                "images",
                "label",
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StackScript resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The date this StackScript was created.\n"
                    },
                    "deploymentsActive": {
                        "type": "integer",
                        "description": "Count of currently active, deployed Linodes created from this StackScript.\n"
                    },
                    "deploymentsTotal": {
                        "type": "integer",
                        "description": "The total number of times this StackScript has been deployed.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for the StackScript.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of Image IDs representing the Images that this StackScript is compatible for deploying with.\n"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private. *Changing `is_public` forces the creation of a new StackScript*\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The StackScript's label is for display purposes only.\n"
                    },
                    "revNote": {
                        "type": "string",
                        "description": "This field allows you to add notes for the set of revisions made to this StackScript.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "The script to execute when provisioning a new Linode with this StackScript.\n"
                    },
                    "updated": {
                        "type": "string",
                        "description": "The date this StackScript was updated.\n"
                    },
                    "userDefinedFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/StackScriptUserDefinedField:StackScriptUserDefinedField"
                        },
                        "description": "This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized\nparameters during deployment.\n"
                    },
                    "userGravatarId": {
                        "type": "string",
                        "description": "The Gravatar ID for the User who created the StackScript.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The User who created the StackScript.\n"
                    }
                },
                "type": "object"
            }
        },
        "linode:index/token:Token": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The date and time this token was created.\n"
                },
                "expiry": {
                    "type": "string",
                    "description": "When this token will expire. Personal Access Tokens cannot be renewed, so after this time the token will be completely unusable and a new token will need to be generated. Tokens may be created with 'null' as their expiry and will never expire unless revoked.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label for the Token.\n"
                },
                "scopes": {
                    "type": "string",
                    "description": "The scopes this token was created with. These define what parts of the Account the token can be used to access. Many command-line tools, such as the Linode CLI, require tokens with access to *. Tokens with more restrictive scopes are generally more secure.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token used to access the API.\n",
                    "language": {
                        "csharp": {
                            "name": "TokenName"
                        }
                    }
                }
            },
            "required": [
                "created",
                "scopes",
                "token"
            ],
            "inputProperties": {
                "expiry": {
                    "type": "string",
                    "description": "When this token will expire. Personal Access Tokens cannot be renewed, so after this time the token will be completely unusable and a new token will need to be generated. Tokens may be created with 'null' as their expiry and will never expire unless revoked.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label for the Token.\n"
                },
                "scopes": {
                    "type": "string",
                    "description": "The scopes this token was created with. These define what parts of the Account the token can be used to access. Many command-line tools, such as the Linode CLI, require tokens with access to *. Tokens with more restrictive scopes are generally more secure.\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Token resources.\n",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The date and time this token was created.\n"
                    },
                    "expiry": {
                        "type": "string",
                        "description": "When this token will expire. Personal Access Tokens cannot be renewed, so after this time the token will be completely unusable and a new token will need to be generated. Tokens may be created with 'null' as their expiry and will never expire unless revoked.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "A label for the Token.\n"
                    },
                    "scopes": {
                        "type": "string",
                        "description": "The scopes this token was created with. These define what parts of the Account the token can be used to access. Many command-line tools, such as the Linode CLI, require tokens with access to *. Tokens with more restrictive scopes are generally more secure.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The token used to access the API.\n",
                        "language": {
                            "csharp": {
                                "name": "TokenName"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "linode:index/volume:Volume": {
            "description": "Provides a Linode Volume resource.  This can be used to create, modify, and delete Linodes Block Storage Volumes.  Block Storage Volumes are removable storage disks that persist outside the life-cycle of Linode Instances. These volumes can be attached to and detached from Linode instances throughout a region.\n\nFor more information, see [How to Use Block Storage with Your Linode](https://www.linode.com/docs/platform/block-storage/how-to-use-block-storage-with-your-linode/) and the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/createVolume).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this resource to configure a Block Storage Volume attached to a Linode Instance.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foobaz = new linode.Instance(\"foobaz\", {\n    region: \"us-west\",\n    rootPass: \"3X4mp13\",\n    tags: [\"foobaz\"],\n    type: \"g6-nanode-1\",\n});\nconst foobar = new linode.Volume(\"foobar\", {\n    label: \"foo-volume\",\n    linodeId: foobaz.id,\n    region: foobaz.region,\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoobaz = linode.Instance(\"foobaz\",\n    region=\"us-west\",\n    root_pass=\"3X4mp13\",\n    tags=[\"foobaz\"],\n    type=\"g6-nanode-1\")\nfoobar = linode.Volume(\"foobar\",\n    label=\"foo-volume\",\n    linode_id=foobaz.id,\n    region=foobaz.region)\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foobaz = new Linode.Instance(\"foobaz\", new Linode.InstanceArgs\n        {\n            Region = \"us-west\",\n            RootPass = \"3X4mp13\",\n            Tags = \n            {\n                \"foobaz\",\n            },\n            Type = \"g6-nanode-1\",\n        });\n        var foobar = new Linode.Volume(\"foobar\", new Linode.VolumeArgs\n        {\n            Label = \"foo-volume\",\n            LinodeId = foobaz.Id,\n            Region = foobaz.Region,\n        });\n    }\n\n}\n```\n\nVolumes can also be attached using the Linode Instance config device map.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = new linode.Instance(\"foo\", {\n    configs: [{\n        devices: {\n            sda: {\n                volumeId: 123,\n            },\n        },\n        kernel: \"linode/latest-64bit\",\n        label: \"boot-existing-volume\",\n    }],\n    region: \"us-east\",\n    type: \"g6-nanode-1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.Instance(\"foo\",\n    configs=[{\n        \"devices\": {\n            \"sda\": {\n                \"volumeId\": \"123\",\n            },\n        },\n        \"kernel\": \"linode/latest-64bit\",\n        \"label\": \"boot-existing-volume\",\n    }],\n    region=\"us-east\",\n    type=\"g6-nanode-1\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = new Linode.Instance(\"foo\", new Linode.InstanceArgs\n        {\n            Configs = \n            {\n                new Linode.Inputs.InstanceConfigArgs\n                {\n                    Devices = new Linode.Inputs.InstanceConfigDevicesArgs\n                    {\n                        Sda = new Linode.Inputs.InstanceConfigDevicesSdaArgs\n                        {\n                            VolumeId = \"123\",\n                        },\n                    },\n                    Kernel = \"linode/latest-64bit\",\n                    Label = \"boot-existing-volume\",\n                },\n            },\n            Region = \"us-east\",\n            Type = \"g6-nanode-1\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThis resource exports the following attributes:\n\n* `status` - The label of the Linode Volume.\n\n* `filesystem_path` - The full filesystem path for the Volume based on the Volume's label. The path is \"/dev/disk/by-id/scsi-0Linode_Volume_\" + the Volume label\n",
            "properties": {
                "filesystemPath": {
                    "type": "string",
                    "description": "The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ +\nVolume label.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Linode Volume\n"
                },
                "linodeId": {
                    "type": "integer",
                    "description": "The ID of a Linode Instance where the the Volume should be attached.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where this volume will be deployed.  Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc.  *Changing `region` forces the creation of a new Linode Volume.*.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the Volume in GB.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the volume, indicating the current readiness state.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                }
            },
            "required": [
                "filesystemPath",
                "label",
                "linodeId",
                "region",
                "size",
                "status"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "The label of the Linode Volume\n"
                },
                "linodeId": {
                    "type": "integer",
                    "description": "The ID of a Linode Instance where the the Volume should be attached.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where this volume will be deployed.  Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc.  *Changing `region` forces the creation of a new Linode Volume.*.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the Volume in GB.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                }
            },
            "requiredInputs": [
                "label",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Volume resources.\n",
                "properties": {
                    "filesystemPath": {
                        "type": "string",
                        "description": "The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ +\nVolume label.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the Linode Volume\n"
                    },
                    "linodeId": {
                        "type": "integer",
                        "description": "The ID of a Linode Instance where the the Volume should be attached.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where this volume will be deployed.  Examples are `\"us-east\"`, `\"us-west\"`, `\"ap-south\"`, etc.  *Changing `region` forces the creation of a new Linode Volume.*.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the Volume in GB.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the volume, indicating the current readiness state.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags applied to this object. Tags are for organizational purposes only.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "linode:index/getAccount:getAccount": {
            "description": "Provides information about a Linode account.\n\nThis data source should not be used in conjuction with the `LINODE_DEBUG` option.  See the [debugging notes](https://www.terraform.io/docs/providers/linode/index.html#debugging) for more details.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access account details.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst account = pulumi.output(linode.getAccount({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\naccount = linode.get_account()\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var account = Output.Create(Linode.GetAccount.InvokeAsync());\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Account resource exports the following attributes:\n\n* `email` - The email address for this Account, for account management communications, and may be used for other communications as configured.\n\n* `first_name` - The first name of the person associated with this Account.\n\n* `last_name` - The last name of the person associated with this Account.\n\n* `company` - The company name associated with this Account.\n\n* `address_1` - First line of this Account's billing address.\n\n* `address_2` - Second line of this Account's billing address.\n\n* `phone` - The phone number associated with this Account.\n\n* `city` - The city for this Account's billing address.\n\n* `state` - If billing address is in the United States, this is the State portion of the Account's billing address. If the address is outside the US, this is the Province associated with the Account's billing address.\n\n* `country` - The two-letter country code of this Account's billing address.\n\n* `zip` - The zip code of this Account's billing address.\n\n* `balance` - This Account's balance, in US dollars.\n",
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address1",
                    "address2",
                    "balance",
                    "city",
                    "company",
                    "country",
                    "email",
                    "firstName",
                    "lastName",
                    "phone",
                    "state",
                    "zip",
                    "id"
                ]
            }
        },
        "linode:index/getDomain:getDomain": {
            "description": "Provides information about a Linode domain.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode domain.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = pulumi.output(linode.getDomain({\n    id: \"1234567\",\n}, { async: true }));\nconst bar = pulumi.output(linode.getDomain({\n    domain: \"bar.example.com\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.get_domain(id=\"1234567\")\nbar = linode.get_domain(domain=\"bar.example.com\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Linode.GetDomain.InvokeAsync(new Linode.GetDomainArgs\n        {\n            Id = \"1234567\",\n        }));\n        var bar = Output.Create(Linode.GetDomain.InvokeAsync(new Linode.GetDomainArgs\n        {\n            Domain = \"bar.example.com\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Domain resource exports the following attributes:\n\n* `id` - The unique ID of this Domain.\n\n* `domain` - The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain\n\n* `type` - If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave)\n\n* `group` - The group this Domain belongs to.\n\n* `status` - Used to control whether this Domain is currently being rendered.\n\n* `description` - A description for this Domain.\n\n* `master_ips` - The IP addresses representing the master DNS for this Domain.\n\n* `axfr_ips` - The list of IPs that may perform a zone transfer for this Domain.\n\n* `ttl_sec` - 'Time to Live'-the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.\n\n* `retry_sec` - The interval, in seconds, at which a failed refresh should be retried.\n\n* `expire_sec` - The amount of time in seconds that may pass before this Domain is no longer authoritative.\n\n* `refresh_sec` - The amount of time in seconds before this Domain should be refreshed.\n\n* `soa_email` - Start of Authority email address.\n\n* `tags` - An array of tags applied to this object.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDomain.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The unique domain name of the Domain record to query.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique numeric ID of the Domain record to query.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomain.\n",
                "properties": {
                    "axfrIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "expireSec": {
                        "type": "integer"
                    },
                    "group": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "masterIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "refreshSec": {
                        "type": "integer"
                    },
                    "retrySec": {
                        "type": "integer"
                    },
                    "soaEmail": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttlSec": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "axfrIps",
                    "description",
                    "expireSec",
                    "group",
                    "masterIps",
                    "refreshSec",
                    "retrySec",
                    "soaEmail",
                    "status",
                    "tags",
                    "ttlSec",
                    "type"
                ]
            }
        },
        "linode:index/getDomainRecord:getDomainRecord": {
            "description": "Provides information about a Linode Domain Record.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode Domain Record.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst myRecord = pulumi.output(linode.getDomainRecord({\n    domainId: 3150401,\n    id: 14950401,\n}, { async: true }));\nconst myWwwRecord = pulumi.output(linode.getDomainRecord({\n    domainId: 3150401,\n    name: \"www\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nmy_record = linode.get_domain_record(domain_id=\"3150401\",\n    id=\"14950401\")\nmy_www_record = linode.get_domain_record(domain_id=\"3150401\",\n    name=\"www\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myRecord = Output.Create(Linode.GetDomainRecord.InvokeAsync(new Linode.GetDomainRecordArgs\n        {\n            DomainId = \"3150401\",\n            Id = \"14950401\",\n        }));\n        var myWwwRecord = Output.Create(Linode.GetDomainRecord.InvokeAsync(new Linode.GetDomainRecordArgs\n        {\n            DomainId = \"3150401\",\n            Name = \"www\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Volume resource exports the following attributes:\n\n- `id` - The unique ID of the Domain Record.\n\n- `name` - The name of the Record.\n\n- `domain_id` - The associated domain's unique ID.\n\n- `type` - The type of Record this is in the DNS system.\n\n- `ttl_sec` - The amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.\n\n- `target` - The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.\n\n- `priority` - The priority of the target host. Lower values are preferred.\n\n- `weight` - The relative weight of this Record. Higher values are preferred.\n\n- `port` - The port this Record points to.\n\n- `protocol` - The protocol this Record's service communicates with. Only valid for SRV records.\n\n- `service` - The service this Record identified. Only valid for SRV records.\n\n- `tag` - The tag portion of a CAA record.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDomainRecord.\n",
                "properties": {
                    "domainId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domainId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomainRecord.\n",
                "properties": {
                    "domainId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "ttlSec": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "domainId",
                    "port",
                    "priority",
                    "protocol",
                    "service",
                    "tag",
                    "target",
                    "ttlSec",
                    "type",
                    "weight"
                ]
            }
        },
        "linode:index/getImage:getImage": {
            "description": "Provides information about a Linode image\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode image.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst k8Master = pulumi.output(linode.getImage({\n    id: \"linode/debian8\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nk8_master = linode.get_image(id=\"linode/debian8\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var k8Master = Output.Create(Linode.GetImage.InvokeAsync(new Linode.GetImageArgs\n        {\n            Id = \"linode/debian8\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Image resource exports the following attributes:\n\n* `label` - A short description of the Image.\n\n* `created` - When this Image was created.\n\n* `created_by` - The name of the User who created this Image, or \"linode\" for official Images.\n\n* `deprecated` - Whether or not this Image is deprecated. Will only be true for deprecated public Images.\n\n* `description` - A detailed description of this Image.\n\n* `is_public` - True if the Image is public.\n\n* `size` - The minimum size this Image needs to deploy. Size is in MB. example: 2500\n\n* `type` - How the Image was created. Manual Images can be created at any time. image\"Automatic\" Images are created automatically from a deleted Linode.\n\n* `vendor` - The upstream distribution vendor. `None` for private Images.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique ID of this Image.  The ID of private images begin with `private/` followed by the numeric identifier of the private image, for example `private/12345`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "createdBy",
                    "deprecated",
                    "description",
                    "expiry",
                    "id",
                    "isPublic",
                    "label",
                    "size",
                    "type",
                    "vendor"
                ]
            }
        },
        "linode:index/getInstanceType:getInstanceType": {
            "description": "Provides information about a Linode instance type\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode Instance type.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst defaultInstanceType = pulumi.output(linode.getInstanceType({\n    id: \"g6-standard-2\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\ndefault = linode.get_instance_type(id=\"g6-standard-2\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @default = Output.Create(Linode.GetInstanceType.InvokeAsync(new Linode.GetInstanceTypeArgs\n        {\n            Id = \"g6-standard-2\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Instance Type resource exports the following attributes:\n\n* `id` - The ID representing the Linode Type\n\n* `label` - The Linode Type's label is for display purposes only\n\n* `class` - The class of the Linode Type\n\n* `disk` - The Disk size, in MB, of the Linode Type\n\n* `price.0.hourly` -  Cost (in US dollars) per hour.\n\n* `price.0.monthly` - Cost (in US dollars) per month.\n\n* `addons.0.backups.0.price.0.hourly` - The cost (in US dollars) per hour to add Backups service.\n\n* `addons.0.backups.0.price.0.monthly` - The cost (in US dollars) per month to add Backups service.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceType.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Label used to identify instance type\n"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceType.\n",
                "properties": {
                    "addons": {
                        "$ref": "#/types/linode:/getInstanceTypeAddons:getInstanceTypeAddons"
                    },
                    "class": {
                        "type": "string"
                    },
                    "disk": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "networkOut": {
                        "type": "integer"
                    },
                    "price": {
                        "$ref": "#/types/linode:/getInstanceTypePrice:getInstanceTypePrice"
                    },
                    "transfer": {
                        "type": "integer"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "addons",
                    "class",
                    "disk",
                    "id",
                    "label",
                    "memory",
                    "networkOut",
                    "price",
                    "transfer",
                    "vcpus"
                ]
            }
        },
        "linode:index/getNetworkingIp:getNetworkingIp": {
            "description": "Provides information about a Linode Networking IP Address\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode Networking IP Address.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst ns1LinodeCom = pulumi.output(linode.getNetworkingIp({\n    address: \"162.159.27.72\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nns1_linode_com = linode.get_networking_ip(address=\"162.159.27.72\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ns1LinodeCom = Output.Create(Linode.GetNetworkingIp.InvokeAsync(new Linode.GetNetworkingIpArgs\n        {\n            Address = \"162.159.27.72\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Network IP Address resource exports the following attributes:\n\n* `address` - The IP address.\n\n* `gateway` - The default gateway for this address.\n\n* `subnet_mask` - The mask that separates host bits from network bits for this address.\n\n* `prefix` - The number of bits set in the subnet mask.\n\n* `type` - The type of address this is (ipv4, ipv6, ipv6/pool, ipv6/range).\n\n* `public` - Whether this is a public or private IP address.\n\n* `rdns` - The reverse DNS assigned to this address. For public IPv4 addresses, this will be set to a default value provided by Linode if not explicitly set.\n\n* `linode_id` - The ID of the Linode this address currently belongs to.\n\n* `region` - The Region this IP address resides in.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkingIp.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IP Address to access.  The address must be associated with the account and a resource that the user has access to view.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkingIp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "gateway": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "linodeId": {
                        "type": "integer"
                    },
                    "prefix": {
                        "type": "integer"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "rdns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subnetMask": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "gateway",
                    "linodeId",
                    "prefix",
                    "public",
                    "rdns",
                    "region",
                    "subnetMask",
                    "type",
                    "id"
                ]
            }
        },
        "linode:index/getObjectStorageCluster:getObjectStorageCluster": {
            "description": "Provides information about a Linode Object Storage Cluster\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode Object Storage Cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst primary = pulumi.output(linode.getObjectStorageCluster({\n    id: \"us-east-1\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nprimary = linode.get_object_storage_cluster(id=\"us-east-1\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var primary = Output.Create(Linode.GetObjectStorageCluster.InvokeAsync(new Linode.GetObjectStorageClusterArgs\n        {\n            Id = \"us-east-1\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Object Storage Cluster resource exports the following attributes:\n\n* `domain` - The base URL for this cluster.\n\n* `status` - This cluster's status.\n\n* `region` - The region this cluster is located in.\n\n* `static_site_domain` - The base URL for this cluster used when hosting static sites.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getObjectStorageCluster.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID of this cluster.\n"
                    },
                    "region": {
                        "type": "string"
                    },
                    "staticSiteDomain": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getObjectStorageCluster.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "staticSiteDomain": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "id",
                    "region",
                    "staticSiteDomain",
                    "status"
                ]
            }
        },
        "linode:index/getProfile:getProfile": {
            "description": "Provides information about a Linode profile.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access profile details.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst profile = pulumi.output(linode.getProfile({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nprofile = linode.get_profile()\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var profile = Output.Create(Linode.GetProfile.InvokeAsync());\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Profile resource exports the following attributes:\n\n* `email` - The profile email address. This address will be used for communication with Linode as necessary.\n\n* `timezone` - The profile's preferred timezone. This is not used by the API, and is for the benefit of clients only. All times the API returns are in UTC.\n\n* `email_notifications` - If true, email notifications will be sent about account activity. If false, when false business-critical communications may still be sent through email.\n\n* `username` - The username for logging in to Linode services.\n\n* `ip_whitelist_enabled` - If true, logins for the user will only be allowed from whitelisted IPs. This setting is currently deprecated, and cannot be enabled.\n\n* `lish_auth_method` - The methods of authentication allowed when connecting via Lish. 'keys_only' is the most secure with the intent to use Lish, and 'disabled' is recommended for users that will not use Lish at all.\n\n* `authorized_keys` - The list of SSH Keys authorized to use Lish for this user. This value is ignored if lish_auth_method is 'disabled'.\n\n* `two_factor_auth` - If true, logins from untrusted computers will require Two Factor Authentication.\n\n* `restricted` - If true, the user has restrictions on what can be accessed on the Account.\n\n* `referrals` - Credit Card information associated with this Account.\n\n* `referrals.0.total` - The number of users who have signed up with the referral code.\n\n* `referrals.0.credit` - The amount of account credit in US Dollars issued to the account through the referral program.\n\n* `referrals.0.completed` - The number of completed signups with the referral code.\n\n* `referrals.0.pending` - The number of pending signups for the referral code. To receive credit the signups must be completed.\n\n* `referrals.0.code` - The Profile referral code.  If new accounts use this when signing up for Linode, referring account will receive credit.\n\n* `referrals.0.url` - The referral URL.\n",
            "outputs": {
                "description": "A collection of values returned by getProfile.\n",
                "properties": {
                    "authorizedKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "emailNotifications": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipWhitelistEnabled": {
                        "type": "boolean"
                    },
                    "lishAuthMethod": {
                        "type": "string"
                    },
                    "referrals": {
                        "$ref": "#/types/linode:/getProfileReferrals:getProfileReferrals"
                    },
                    "restricted": {
                        "type": "boolean"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "twoFactorAuth": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authorizedKeys",
                    "email",
                    "emailNotifications",
                    "ipWhitelistEnabled",
                    "lishAuthMethod",
                    "referrals",
                    "restricted",
                    "timezone",
                    "twoFactorAuth",
                    "username",
                    "id"
                ]
            }
        },
        "linode:index/getRegion:getRegion": {
            "description": "`linode..getRegion` provides details about a specific Linode region. See all regions [here](https://api.linode.com/v4/regions).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how the resource might be used to obtain additional information about a Linode region.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst region = pulumi.output(linode.getRegion({\n    id: \"us-east\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nregion = linode.get_region(id=\"us-east\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var region = Output.Create(Linode.GetRegion.InvokeAsync(new Linode.GetRegionArgs\n        {\n            Id = \"us-east\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRegion.\n",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegion.\n",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "country",
                    "id"
                ]
            }
        },
        "linode:index/getSshKey:getSshKey": {
            "description": "`linode..SshKey` provides access to a specifically labeled SSH Key in the Profile of the User identified by the access token.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how the resource might be used to obtain the name of the SSH Key configured on the Linode user profile.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = pulumi.output(linode.getSshKey({\n    label: \"foo\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.get_ssh_key(label=\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Linode.GetSshKey.InvokeAsync(new Linode.GetSshKeyArgs\n        {\n            Label = \"foo\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSshKey.\n",
                "properties": {
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSshKey.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string"
                    },
                    "sshKey": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "label",
                    "sshKey",
                    "id"
                ]
            }
        },
        "linode:index/getStackScript:getStackScript": {
            "description": "Provides details about a specific Linode StackScript.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode StackScript.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThis resource exports the following attributes:\n\n* `label` - The StackScript's label is for display purposes only.\n\n* `script` - The script to execute when provisioning a new Linode with this StackScript.\n\n* `description` - A description for the StackScript.\n\n* `rev_note` - This field allows you to add notes for the set of revisions made to this StackScript.\n\n* `is_public` - This determines whether other users can use your StackScript. Once a StackScript is made public, it cannot be made private.\n\n* `images` - An array of Image IDs representing the Images that this StackScript is compatible for deploying with.\n\n* `deployments_active` - Count of currently active, deployed Linodes created from this StackScript.\n\n* `user_gravatar_id` - The Gravatar ID for the User who created the StackScript.\n\n* `deployments_total` - The total number of times this StackScript has been deployed.\n\n* `username` - The User who created the StackScript.\n\n* `created` - The date this StackScript was created.\n\n* `updated` - The date this StackScript was updated.\n\n* `user_defined_fields` - This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment.\n\n  * `label` - A human-readable label for the field that will serve as the input prompt for entering the value during deployment.\n\n  * `name` - The name of the field.\n\n  * `example` - An example value for the field.\n\n  * `one_of` - A list of acceptable single values for the field.\n\n  * `many_of` - A list of acceptable values for the field in any quantity, combination or order.\n\n  * `default` - The default value. If not specified, this value will be used.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getStackScript.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the StackScript to query.\n"
                    },
                    "userDefinedFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/getStackScriptUserDefinedField:getStackScriptUserDefinedField"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStackScript.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "deploymentsActive": {
                        "type": "integer"
                    },
                    "deploymentsTotal": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "revNote": {
                        "type": "string"
                    },
                    "script": {
                        "type": "string"
                    },
                    "updated": {
                        "type": "string"
                    },
                    "userDefinedFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/linode:/getStackScriptUserDefinedField:getStackScriptUserDefinedField"
                        }
                    },
                    "userGravatarId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "deploymentsActive",
                    "deploymentsTotal",
                    "description",
                    "id",
                    "images",
                    "isPublic",
                    "label",
                    "revNote",
                    "script",
                    "updated",
                    "userDefinedFields",
                    "userGravatarId",
                    "username"
                ]
            }
        },
        "linode:index/getUser:getUser": {
            "description": "Provides information about a Linode user\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode user.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = pulumi.output(linode.getUser({\n    username: \"foo\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.get_user(username=\"foo\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Linode.GetUser.InvokeAsync(new Linode.GetUserArgs\n        {\n            Username = \"foo\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode User resource exports the following attributes:\n\n* `ssh_keys` - A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the authorized_users field of a create Linode, rebuild Linode, or create Disk request.\n\n* `email` - The email address for this User, for account management communications, and may be used for other communications as configured.\n\n* `restricted` - If true, this User must be granted access to perform actions or access entities on this Account.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The unique username of this User.\n"
                    }
                },
                "type": "object",
                "required": [
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "restricted": {
                        "type": "boolean"
                    },
                    "sshKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "restricted",
                    "sshKeys",
                    "username",
                    "id"
                ]
            }
        },
        "linode:index/getVolume:getVolume": {
            "description": "Provides information about a Linode Volume.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how one might use this data source to access information about a Linode Volume.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as linode from \"@pulumi/linode\";\n\nconst foo = pulumi.output(linode.getVolume({\n    id: 1234567,\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_linode as linode\n\nfoo = linode.get_volume(id=\"1234567\")\n```\n```csharp\nusing Pulumi;\nusing Linode = Pulumi.Linode;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(Linode.GetVolume.InvokeAsync(new Linode.GetVolumeArgs\n        {\n            Id = \"1234567\",\n        }));\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Attributes\n\nThe Linode Volume resource exports the following attributes:\n\n- `id` - The unique ID of this Volume.\n\n- `created` - When this Volume was created.\n\n- `status` - The current status of the Volume. Can be one of \"creating\", \"active\", \"resizing\", or \"contact_support\".\n\n- `label` - This Volume's label is for display purposes only.\n\n- `tags` - An array of tags applied to this object.\n\n- `size` - The Volume's size, in GiB.\n\n- `region` - The datacenter in which this Volume is located.\n\n- `updated` - When this Volume was last updated.\n\n- `linode_id` - If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here. If the Volume is unattached, this value will be null.\n\n- `filesystem_path` - The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0LinodeVolume + Volume label.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVolume.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolume.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "filesystemPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    },
                    "linodeId": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updated": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "created",
                    "filesystemPath",
                    "id",
                    "label",
                    "linodeId",
                    "region",
                    "size",
                    "status",
                    "tags",
                    "updated"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "linode": "Linode"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^8.0.25"
            },
            "packageDescription": "A Pulumi package for creating and managing linode cloud resources.",
            "packageName": "",
            "typescriptVersion": ""
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=2.0.0,\u003c3.0.0"
            }
        }
    }
}